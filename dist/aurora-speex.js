var libspeex = (function () {
// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// TODO: " u s e   s t r i c t ";


// *** Environment setup code ***
var arguments_ = [];

var ENVIRONMENT_IS_NODE = typeof process === 'object';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  print = function(x) {
    process['stdout'].write(x + '\n');
  };
  printErr = function(x) {
    process['stderr'].write(x + '\n');
  };

  var nodeFS = require('fs');

  read = function(filename) {
    var ret = nodeFS['readFileSync'](filename).toString();
    if (!ret && filename[0] != '/') {
      filename = __dirname.split('/').slice(0, -1).join('/') + '/src/' + filename;
      ret = nodeFS['readFileSync'](filename).toString();
    }
    return ret;
  };

  arguments_ = process['argv'].slice(2);

} else if (ENVIRONMENT_IS_SHELL) {
  // Polyfill over SpiderMonkey/V8 differences
  if (!this['read']) {
    read = function(f) { snarf(f) };
  }

  if (!this['arguments']) {
    arguments_ = scriptArgs;
  } else {
    arguments_ = arguments;
  }

} else if (ENVIRONMENT_IS_WEB) {
  print = printErr = function(x) {
    console.log(x);
  };

  read = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  if (this['arguments']) {
    arguments_ = arguments;
  }
} else if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...

  load = importScripts;

} else {
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}

if (typeof load == 'undefined' && typeof read != 'undefined') {
  load = function(f) {
    globalEval(read(f));
  };
}

if (typeof printErr === 'undefined') {
  printErr = function(){};
}

if (typeof print === 'undefined') {
  print = printErr;
}
// *** Environment setup code ***


try {
  this['Module'] = Module;
} catch(e) {
  this['Module'] = Module = {};
}
if (!Module.arguments) {
  Module.arguments = arguments_;
}
if (Module.print) {
  print = Module.print;
}

  
// Warning: .ll contains i64 or double values. These 64-bit values are dangerous in USE_TYPED_ARRAYS == 2. We store i64 as i32, and double as float. This can cause serious problems!
// === Auto-generated preamble library stuff ===

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (/^\[\d+\ x\ (.*)\]/.test(type)) return true; // [15 x ?] blocks. Like structs
  if (/<?{ [^}]* }>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  bitshift64: function (low, high, op, bits) {
    var ander = Math.pow(2, bits)-1;
    if (bits < 32) {
      switch (op) {
        case 'shl':
          return [low << bits, (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits))];
        case 'ashr':
          return [(((low >>> bits ) | ((high&ander) << (32 - bits))) >> 0) >>> 0, (high >> bits) >>> 0];
        case 'lshr':
          return [((low >>> bits) | ((high&ander) << (32 - bits))) >>> 0, high >>> bits];
      }
    } else if (bits == 32) {
      switch (op) {
        case 'shl':
          return [0, low];
        case 'ashr':
          return [high, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high, 0];
      }
    } else { // bits > 32
      switch (op) {
        case 'shl':
          return [0, low << (bits - 32)];
        case 'ashr':
          return [(high >> (bits - 32)) >>> 0, (high|0) < 0 ? ander : 0];
        case 'lshr':
          return [high >>>  (bits - 32) , 0];
      }
    }
    abort('unknown bitshift64 op: ' + [value, op, bits]);
  },
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type[type.length-1] == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = size;
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Types.types[field].alignSize;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      alignSize = type.packed ? 1 : Math.min(alignSize, Runtime.QUANTUM_SIZE);
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      assert(type.fields.length === struct.length, 'Number of named fields must match the type for ' + typeName);
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  stackAlloc: function stackAlloc(size) { var ret = STACKTOP;STACKTOP += size;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"); return ret; },
  staticAlloc: function staticAlloc(size) { var ret = STATICTOP;STATICTOP += size;STATICTOP = ((((STATICTOP)+3)>>2)<<2); if (STATICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function alignMemory(size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 4))*(quantum ? quantum : 4); return ret; },
  makeBigInt: function makeBigInt(low,high,unsigned) { var ret = (unsigned ? (((low)>>>0)+(((high)>>>0)*4294967296)) : (((low)>>>0)+(((high)|0)*4294967296))); return ret; },
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



var CorrectionsMonitor = {
  MAX_ALLOWED: 0, // XXX
  corrections: 0,
  sigs: {},

  note: function(type, succeed, sig) {
    if (!succeed) {
      this.corrections++;
      if (this.corrections >= this.MAX_ALLOWED) abort('\n\nToo many corrections!');
    }
  },

  print: function() {
  }
};





//========================================
// Runtime essentials
//========================================

var __THREW__ = false; // Used in checking for thrown exceptions.

var ABORT = false;

var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;

function abort(text) {
  print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Adding
//
//         __attribute__((used))
//
//       to the function definition will prevent that.
//
// Note: Closure optimizations will minify function names, making
//       functions no longer callable. If you run closure (on by default
//       in -O2 and above), you should export the functions you will call
//       by calling emcc with something like
//
//         -s EXPORTED_FUNCTIONS='["_func1","_func2"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number' or 'string' (use 'number' for any C pointer).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType.
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  function toC(value, type) {
    if (type == 'string') {
      var ret = STACKTOP;
      Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    return value;
  }
  try {
    var func = eval('_' + ident);
  } catch(e) {
    try {
      func = globalScope['Module']['_' + ident]; // closure exported function
    } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  return fromC(func.apply(null, cArgs), returnType);
}
Module["ccall"] = ccall;

// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  // TODO: optimize this, eval the whole function once instead of going through ccall each time
  return function() {
    return ccall(ident, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}

// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': HEAP32[((ptr)>>2)]=value; break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': (tempDoubleF64[0]=value,HEAP32[((ptr)>>2)]=tempDoubleI32[0],HEAP32[((ptr+4)>>2)]=tempDoubleI32[1]); break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;

// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type[type.length-1] === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return (tempDoubleI32[0]=HEAP32[((ptr)>>2)],tempDoubleI32[1]=HEAP32[((ptr+4)>>2)],tempDoubleF64[0]);
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;

// Allocates memory for some data and initializes it properly.

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;

function allocate(slab, types, allocator) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));

  if (zeroinit) {
      _memset(ret, 0, size);
      return ret;
  }
  
  var i = 0, type;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);
    i += Runtime.getNativeTypeSize(type);
  }

  return ret;
}
Module['allocate'] = allocate;

function Pointer_stringify(ptr, /* optional */ length) {
  var nullTerminated = typeof(length) == "undefined";
  var ret = "";
  var i = 0;
  var t;
  var nullByte = String.fromCharCode(0);
  while (1) {
    t = String.fromCharCode(HEAPU8[(ptr+i)]);
    if (nullTerminated && t == nullByte) { break; } else {}
    ret += t;
    i += 1;
    if (!nullTerminated && i == length) { break; }
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;

function Array_stringify(array) {
  var ret = "";
  for (var i = 0; i < array.length; i++) {
    ret += String.fromCharCode(array[i]);
  }
  return ret;
}
Module['Array_stringify'] = Array_stringify;

// Memory management

var FUNCTION_TABLE; // XXX: In theory the indexes here can be equal to pointers to stacked or malloced memory. Such comparisons should
                    //      be false, but can turn out true. We should probably set the top bit to prevent such issues.

var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return Math.ceil(x/PAGE_SIZE)*PAGE_SIZE;
}

var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32;

var STACK_ROOT, STACKTOP, STACK_MAX;
var STATICTOP;
function enlargeMemory() {
  // TOTAL_MEMORY is the current size of the actual array, and STATICTOP is the new top.
  printErr('Warning: Enlarging memory arrays, this is not fast! ' + [STATICTOP, TOTAL_MEMORY]);
  assert(STATICTOP >= TOTAL_MEMORY);
  assert(TOTAL_MEMORY > 4); // So the loop below will not be infinite
  while (TOTAL_MEMORY <= STATICTOP) { // Simple heuristic. Override enlargeMemory() if your program has something more optimal for it
    TOTAL_MEMORY = alignMemoryPage(2*TOTAL_MEMORY);
  }
  var oldHEAP8 = HEAP8;
  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);
  HEAP8.set(oldHEAP8);
}

var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 10485760;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
  assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
         'Cannot fallback to non-typed array case: Code is too specialized');

  var buffer = new ArrayBuffer(TOTAL_MEMORY);
  HEAP8 = new Int8Array(buffer);
  HEAP16 = new Int16Array(buffer);
  HEAP32 = new Int32Array(buffer);
  HEAPU8 = new Uint8Array(buffer);
  HEAPU16 = new Uint16Array(buffer);
  HEAPU32 = new Uint32Array(buffer);
  HEAPF32 = new Float32Array(buffer);

  // Endianness check (note: assumes compiler arch was little-endian)
  HEAP32[0] = 255;
  assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');

var base = intArrayFromString('(null)'); // So printing %s of NULL gives '(null)'
                                         // Also this ensures we leave 0 as an invalid address, 'NULL'
STATICTOP = base.length;
for (var i = 0; i < base.length; i++) {
  HEAP8[(i)]=base[i]
}

Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;

STACK_ROOT = STACKTOP = Runtime.alignMemory(STATICTOP);
STACK_MAX = STACK_ROOT + TOTAL_STACK;

var tempDoublePtr = Runtime.alignMemory(STACK_MAX, 8);
var tempDoubleI8  = HEAP8.subarray(tempDoublePtr);
var tempDoubleI32 = HEAP32.subarray(tempDoublePtr >> 2);
var tempDoubleF32 = HEAPF32.subarray(tempDoublePtr >> 2);
var tempDoubleF64 = new Float64Array(HEAP8.buffer).subarray(tempDoublePtr >> 3);
function copyTempFloat(ptr) { // functions, because inlining this code is increases code size too much
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  tempDoubleI8[0] = HEAP8[ptr];
  tempDoubleI8[1] = HEAP8[ptr+1];
  tempDoubleI8[2] = HEAP8[ptr+2];
  tempDoubleI8[3] = HEAP8[ptr+3];
  tempDoubleI8[4] = HEAP8[ptr+4];
  tempDoubleI8[5] = HEAP8[ptr+5];
  tempDoubleI8[6] = HEAP8[ptr+6];
  tempDoubleI8[7] = HEAP8[ptr+7];
}
STACK_MAX = tempDoublePtr + 8;

STATICTOP = alignMemoryPage(STACK_MAX);

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    var func = callback.func;
    if (typeof func === 'number') {
      func = FUNCTION_TABLE[func];
    }
    func(callback.arg === undefined ? null : callback.arg);
  }
}

var __ATINIT__ = []; // functions called during startup
var __ATEXIT__ = []; // functions called during shutdown

function initRuntime() {
  callRuntimeCallbacks(__ATINIT__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);

  // Print summary of correction activity
  CorrectionsMonitor.print();
}


// Copies a list of num items on the HEAP into a
// a normal JavaScript array of numbers
function Array_copy(ptr, num) {
  return Array.prototype.slice.call(HEAP8.subarray(ptr, ptr+num)); // Make a normal array out of the typed 'view'
                                                                   // Consider making a typed array here, for speed?
  return HEAP.slice(ptr, ptr+num);
}
Module['Array_copy'] = Array_copy;

// Copies a list of num items on the HEAP into a
// JavaScript typed array.
function TypedArray_copy(ptr, num) {
  // TODO: optimize this!
  var arr = new Uint8Array(num);
  for (var i = 0; i < num; ++i) {
    arr[i] = HEAP8[(ptr+i)];
  }
  return arr.buffer;
}
Module['TypedArray_copy'] = TypedArray_copy;

function String_len(ptr) {
  var i = 0;
  while (HEAP8[(ptr+i)]) i++; // Note: should be |!= 0|, technically. But this helps catch bugs with undefineds
  return i;
}
Module['String_len'] = String_len;

// Copies a C-style string, terminated by a zero, from the HEAP into
// a normal JavaScript array of numbers
function String_copy(ptr, addZero) {
  var len = String_len(ptr);
  if (addZero) len++;
  var ret = Array_copy(ptr, len);
  if (addZero) ret[len-1] = 0;
  return ret;
}
Module['String_copy'] = String_copy;

// Tools

// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull) {
  var ret = [];
  var t;
  var i = 0;
  while (i < stringy.length) {
    var chr = stringy.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + stringy[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(chr);
    i = i + 1;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;

// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var i = 0;
  while (i < string.length) {
    var chr = string.charCodeAt(i);
    if (chr > 0xFF) {
        assert(false, 'Character code ' + chr + ' (' + string[i] + ')  at offset ' + i + ' not in 0x00-0xFF.');
      chr &= 0xFF;
    }
    HEAP8[(buffer+i)]=chr
    i = i + 1;
  }
  if (!dontAddNull) {
    HEAP8[(buffer+i)]=0
  }
}
Module['writeStringToMemory'] = writeStringToMemory;

var STRING_TABLE = [];

function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
  // TODO: clean up previous line
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}

// === Body ===




function _split_cb_search_shape_sign($target, $ak, $awk1, $awk2, $par, $p, $nsf, $exc, $r, $bits, $stack, $complexity, $update_target) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $target_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $par_addr;
      var $p_addr;
      var $nsf_addr;
      var $exc_addr;
      var $r_addr;
      var $bits_addr;
      var $stack_addr;
      var $complexity_addr;
      var $update_target_addr;
      var $i;
      var $j;
      var $k;
      var $m;
      var $n;
      var $q;
      var $resp2;
      var $ot;
      var $nt;
      var $shape_cb;
      var $shape_cb_size;
      var $subvect_size;
      var $nb_subvect;
      var $params;
      var $N;
      var $have_sign;
      var $saved_stack;
      var $x;
      var $tener;
      var $err;
      var $g;
      var $rind;
      var $sign;
      var $tmp2;
      var $rind288;
      var $sign289;
      var $saved_stack331;
      $target_addr=$target;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $par_addr=$par;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $exc_addr=$exc;
      $r_addr=$r;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $complexity_addr=$complexity;
      $update_target_addr=$update_target;
      $N=2;
      var $0=$complexity_addr;
      $N=$0;
      var $1=$N;
      var $cmp=(($1)|0) > 10;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $N=10;
      __label__ = 2; break;
    case 2: // $if_end
      var $2=$N;
      var $mul=((($2<<1))|0);
      var $div=(((($mul)|0)/3)|0);
      $N=$div;
      var $3=$N;
      var $cmp1=(($3)|0) < 1;
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then2
      $N=1;
      __label__ = 4; break;
    case 4: // $if_end3
      var $4=$N;
      var $cmp4=(($4)|0)==1;
      if ($cmp4) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then5
      var $5=$target_addr;
      var $6=$ak_addr;
      var $7=$awk1_addr;
      var $8=$awk2_addr;
      var $9=$par_addr;
      var $10=$p_addr;
      var $11=$nsf_addr;
      var $12=$exc_addr;
      var $13=$r_addr;
      var $14=$bits_addr;
      var $15=$stack_addr;
      var $16=$update_target_addr;
      _split_cb_search_shape_sign_N1($5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16);
      __label__ = 122; break;
    case 6: // $if_end6
      var $17=$N;
      var $18=_llvm_stacksave();
      $saved_stack=$18;
      var $vla=STACKTOP;STACKTOP += $17*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $19=$N;
      var $vla7=STACKTOP;STACKTOP += $19*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $20=$N;
      var $vla8=STACKTOP;STACKTOP += $20*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $21=$N;
      var $vla9=STACKTOP;STACKTOP += $21*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $22=$par_addr;
      var $23=$22;
      $params=$23;
      var $24=$params;
      var $subvect_size10=(($24)|0);
      var $25=HEAP32[(($subvect_size10)>>2)];
      $subvect_size=$25;
      var $26=$params;
      var $nb_subvect11=(($26+4)|0);
      var $27=HEAP32[(($nb_subvect11)>>2)];
      $nb_subvect=$27;
      var $28=$params;
      var $shape_bits=(($28+12)|0);
      var $29=HEAP32[(($shape_bits)>>2)];
      var $shl=1 << $29;
      $shape_cb_size=$shl;
      var $30=$params;
      var $shape_cb12=(($30+8)|0);
      var $31=HEAP32[(($shape_cb12)>>2)];
      $shape_cb=$31;
      var $32=$params;
      var $have_sign13=(($32+16)|0);
      var $33=HEAP32[(($have_sign13)>>2)];
      $have_sign=$33;
      var $34=$shape_cb_size;
      var $35=$subvect_size;
      var $mul14=(($34*$35)|0);
      var $vla15=STACKTOP;STACKTOP += $mul14*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $resp2=$vla15;
      var $36=$shape_cb_size;
      var $vla16=STACKTOP;STACKTOP += $36*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $37=$nsf_addr;
      var $vla17=STACKTOP;STACKTOP += $37*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $38=$nsf_addr;
      var $vla18=STACKTOP;STACKTOP += $38*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $39=$nb_subvect;
      var $vla19=STACKTOP;STACKTOP += $39*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $40=$N;
      var $mul20=((($40<<1))|0);
      var $41=$nsf_addr;
      var $mul21=(($mul20*$41)|0);
      var $vla22=STACKTOP;STACKTOP += $mul21*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 7; break;
    case 7: // $for_cond
      var $42=$i;
      var $43=$N;
      var $cmp23=(($42)|0) < (($43)|0);
      if ($cmp23) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: // $for_body
      var $44=$i;
      var $mul24=((($44<<1))|0);
      var $45=$nsf_addr;
      var $mul25=(($mul24*$45)|0);
      var $add_ptr=(($vla22+($mul25<<2))|0);
      var $46=$i;
      var $arrayidx=(($vla+($46<<2))|0);
      HEAP32[(($arrayidx)>>2)]=$add_ptr;
      var $47=$i;
      var $mul26=((($47<<1))|0);
      var $add=(($mul26+1)|0);
      var $48=$nsf_addr;
      var $mul27=(($add*$48)|0);
      var $add_ptr28=(($vla22+($mul27<<2))|0);
      var $49=$i;
      var $arrayidx29=(($vla7+($49<<2))|0);
      HEAP32[(($arrayidx29)>>2)]=$add_ptr28;
      __label__ = 9; break;
    case 9: // $for_inc
      var $50=$i;
      var $inc=(($50+1)|0);
      $i=$inc;
      __label__ = 7; break;
    case 10: // $for_end
      $ot=$vla;
      $nt=$vla7;
      var $51=$N;
      var $vla30=STACKTOP;STACKTOP += $51*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $52=$N;
      var $vla31=STACKTOP;STACKTOP += $52*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $53=$N;
      var $vla32=STACKTOP;STACKTOP += $53*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $54=$N;
      var $vla33=STACKTOP;STACKTOP += $54*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $55=$N;
      var $vla34=STACKTOP;STACKTOP += $55*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $56=$N;
      var $vla35=STACKTOP;STACKTOP += $56*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $57=$N;
      var $mul36=((($57<<1))|0);
      var $58=$nb_subvect;
      var $mul37=(($mul36*$58)|0);
      var $vla38=STACKTOP;STACKTOP += $mul37*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 11; break;
    case 11: // $for_cond39
      var $59=$i;
      var $60=$N;
      var $cmp40=(($59)|0) < (($60)|0);
      if ($cmp40) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body41
      var $61=$i;
      var $mul42=((($61<<1))|0);
      var $62=$nb_subvect;
      var $mul43=(($mul42*$62)|0);
      var $add_ptr44=(($vla38+($mul43<<2))|0);
      var $63=$i;
      var $arrayidx45=(($vla9+($63<<2))|0);
      HEAP32[(($arrayidx45)>>2)]=$add_ptr44;
      var $64=$i;
      var $mul46=((($64<<1))|0);
      var $add47=(($mul46+1)|0);
      var $65=$nb_subvect;
      var $mul48=(($add47*$65)|0);
      var $add_ptr49=(($vla38+($mul48<<2))|0);
      var $66=$i;
      var $arrayidx50=(($vla8+($66<<2))|0);
      HEAP32[(($arrayidx50)>>2)]=$add_ptr49;
      __label__ = 13; break;
    case 13: // $for_inc51
      var $67=$i;
      var $inc52=(($67+1)|0);
      $i=$inc52;
      __label__ = 11; break;
    case 14: // $for_end53
      var $68=$vla17;
      var $69=$target_addr;
      var $70=$69;
      var $71=$nsf_addr;
      var $mul54=((($71<<2))|0);
      var $72=$target_addr;
      var $sub_ptr_lhs_cast=$vla17;
      var $sub_ptr_rhs_cast=$72;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul55=((0)|0);
      var $add56=(($mul54+$mul55)|0);
      assert($add56 % 1 === 0, 'memcpy given ' + $add56 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($68, $70, $add56, 1);
      $j=0;
      __label__ = 15; break;
    case 15: // $for_cond57
      var $73=$j;
      var $74=$N;
      var $cmp58=(($73)|0) < (($74)|0);
      if ($cmp58) { __label__ = 16; break; } else { __label__ = 18; break; }
    case 16: // $for_body59
      var $75=$j;
      var $76=$ot;
      var $arrayidx60=(($76+($75<<2))|0);
      var $77=HEAP32[(($arrayidx60)>>2)];
      var $arrayidx61=(($77)|0);
      var $78=$arrayidx61;
      var $79=$vla17;
      var $80=$nsf_addr;
      var $mul62=((($80<<2))|0);
      var $81=$j;
      var $82=$ot;
      var $arrayidx63=(($82+($81<<2))|0);
      var $83=HEAP32[(($arrayidx63)>>2)];
      var $arrayidx64=(($83)|0);
      var $sub_ptr_lhs_cast65=$arrayidx64;
      var $sub_ptr_rhs_cast66=$vla17;
      var $sub_ptr_sub67=(($sub_ptr_lhs_cast65-$sub_ptr_rhs_cast66)|0);
      var $sub_ptr_div68=(((($sub_ptr_sub67)|0)/4)|0);
      var $mul69=((0)|0);
      var $add70=(($mul62+$mul69)|0);
      assert($add70 % 1 === 0, 'memcpy given ' + $add70 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($78, $79, $add70, 1);
      __label__ = 17; break;
    case 17: // $for_inc71
      var $84=$j;
      var $inc72=(($84+1)|0);
      $j=$inc72;
      __label__ = 15; break;
    case 18: // $for_end73
      var $85=$shape_cb;
      var $86=$r_addr;
      var $87=$resp2;
      var $88=$shape_cb_size;
      var $89=$subvect_size;
      var $90=$stack_addr;
      _compute_weighted_codebook($85, $86, $vla15, $87, $vla16, $88, $89, $90);
      $j=0;
      __label__ = 19; break;
    case 19: // $for_cond74
      var $91=$j;
      var $92=$N;
      var $cmp75=(($91)|0) < (($92)|0);
      if ($cmp75) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body76
      var $93=$j;
      var $arrayidx77=(($vla35+($93<<2))|0);
      HEAPF32[(($arrayidx77)>>2)]=0;
      __label__ = 21; break;
    case 21: // $for_inc78
      var $94=$j;
      var $inc79=(($94+1)|0);
      $j=$inc79;
      __label__ = 19; break;
    case 22: // $for_end80
      $i=0;
      __label__ = 23; break;
    case 23: // $for_cond81
      var $95=$i;
      var $96=$nb_subvect;
      var $cmp82=(($95)|0) < (($96)|0);
      if ($cmp82) { __label__ = 24; break; } else { __label__ = 93; break; }
    case 24: // $for_body83
      $j=0;
      __label__ = 25; break;
    case 25: // $for_cond84
      var $97=$j;
      var $98=$N;
      var $cmp85=(($97)|0) < (($98)|0);
      if ($cmp85) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body86
      var $99=$j;
      var $arrayidx87=(($vla34+($99<<2))|0);
      HEAPF32[(($arrayidx87)>>2)]=999999986991104;
      __label__ = 27; break;
    case 27: // $for_inc88
      var $100=$j;
      var $inc89=(($100+1)|0);
      $j=$inc89;
      __label__ = 25; break;
    case 28: // $for_end90
      $j=0;
      __label__ = 29; break;
    case 29: // $for_cond91
      var $101=$j;
      var $102=$N;
      var $cmp92=(($101)|0) < (($102)|0);
      if ($cmp92) { __label__ = 30; break; } else { __label__ = 32; break; }
    case 30: // $for_body93
      var $103=$j;
      var $arrayidx94=(($vla33+($103<<2))|0);
      HEAP32[(($arrayidx94)>>2)]=0;
      var $104=$j;
      var $arrayidx95=(($vla32+($104<<2))|0);
      HEAP32[(($arrayidx95)>>2)]=0;
      __label__ = 31; break;
    case 31: // $for_inc96
      var $105=$j;
      var $inc97=(($105+1)|0);
      $j=$inc97;
      __label__ = 29; break;
    case 32: // $for_end98
      $j=0;
      __label__ = 33; break;
    case 33: // $for_cond99
      var $106=$j;
      var $107=$N;
      var $cmp100=(($106)|0) < (($107)|0);
      if ($cmp100) { __label__ = 34; break; } else { __label__ = 61; break; }
    case 34: // $for_body101
      var $108=$j;
      var $109=$ot;
      var $arrayidx102=(($109+($108<<2))|0);
      var $110=HEAP32[(($arrayidx102)>>2)];
      var $111=$subvect_size;
      var $112=$i;
      var $mul103=(($111*$112)|0);
      var $add_ptr104=(($110+($mul103<<2))|0);
      $x=$add_ptr104;
      $tener=0;
      $m=0;
      __label__ = 35; break;
    case 35: // $for_cond105
      var $113=$m;
      var $114=$subvect_size;
      var $cmp106=(($113)|0) < (($114)|0);
      if ($cmp106) { __label__ = 36; break; } else { __label__ = 38; break; }
    case 36: // $for_body107
      var $115=$tener;
      var $116=$m;
      var $117=$x;
      var $arrayidx108=(($117+($116<<2))|0);
      var $118=HEAPF32[(($arrayidx108)>>2)];
      var $119=$m;
      var $120=$x;
      var $arrayidx109=(($120+($119<<2))|0);
      var $121=HEAPF32[(($arrayidx109)>>2)];
      var $mul110=$118*$121;
      var $add111=$115+$mul110;
      $tener=$add111;
      __label__ = 37; break;
    case 37: // $for_inc112
      var $122=$m;
      var $inc113=(($122+1)|0);
      $m=$inc113;
      __label__ = 35; break;
    case 38: // $for_end114
      var $123=$tener;
      var $conv=$123;
      var $mul115=$conv*0.5;
      var $conv116=$mul115;
      $tener=$conv116;
      var $124=$have_sign;
      var $tobool=(($124)|0)!=0;
      if ($tobool) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: // $if_then117
      var $125=$x;
      var $126=$resp2;
      var $127=$subvect_size;
      var $128=$shape_cb_size;
      var $129=$N;
      var $130=$stack_addr;
      _vq_nbest_sign($125, $126, $127, $128, $vla16, $129, $vla30, $vla31, $130);
      __label__ = 41; break;
    case 40: // $if_else
      var $131=$x;
      var $132=$resp2;
      var $133=$subvect_size;
      var $134=$shape_cb_size;
      var $135=$N;
      var $136=$stack_addr;
      _vq_nbest($131, $132, $133, $134, $vla16, $135, $vla30, $vla31, $136);
      __label__ = 41; break;
    case 41: // $if_end118
      $k=0;
      __label__ = 42; break;
    case 42: // $for_cond119
      var $137=$k;
      var $138=$N;
      var $cmp120=(($137)|0) < (($138)|0);
      if ($cmp120) { __label__ = 43; break; } else { __label__ = 57; break; }
    case 43: // $for_body122
      var $139=$j;
      var $arrayidx123=(($vla35+($139<<2))|0);
      var $140=HEAPF32[(($arrayidx123)>>2)];
      var $141=$k;
      var $arrayidx124=(($vla31+($141<<2))|0);
      var $142=HEAPF32[(($arrayidx124)>>2)];
      var $add125=$140+$142;
      var $143=$tener;
      var $add126=$add125+$143;
      $err=$add126;
      var $144=$err;
      var $145=$N;
      var $sub=(($145-1)|0);
      var $arrayidx127=(($vla34+($sub<<2))|0);
      var $146=HEAPF32[(($arrayidx127)>>2)];
      var $cmp128=$144 < $146;
      if ($cmp128) { __label__ = 44; break; } else { __label__ = 55; break; }
    case 44: // $if_then130
      $m=0;
      __label__ = 45; break;
    case 45: // $for_cond131
      var $147=$m;
      var $148=$N;
      var $cmp132=(($147)|0) < (($148)|0);
      if ($cmp132) { __label__ = 46; break; } else { __label__ = 54; break; }
    case 46: // $for_body134
      var $149=$err;
      var $150=$m;
      var $arrayidx135=(($vla34+($150<<2))|0);
      var $151=HEAPF32[(($arrayidx135)>>2)];
      var $cmp136=$149 < $151;
      if ($cmp136) { __label__ = 47; break; } else { __label__ = 52; break; }
    case 47: // $if_then138
      var $152=$N;
      var $sub139=(($152-1)|0);
      $n=$sub139;
      __label__ = 48; break;
    case 48: // $for_cond140
      var $153=$n;
      var $154=$m;
      var $cmp141=(($153)|0) > (($154)|0);
      if ($cmp141) { __label__ = 49; break; } else { __label__ = 51; break; }
    case 49: // $for_body143
      var $155=$n;
      var $sub144=(($155-1)|0);
      var $arrayidx145=(($vla34+($sub144<<2))|0);
      var $156=HEAPF32[(($arrayidx145)>>2)];
      var $157=$n;
      var $arrayidx146=(($vla34+($157<<2))|0);
      HEAPF32[(($arrayidx146)>>2)]=$156;
      var $158=$n;
      var $sub147=(($158-1)|0);
      var $arrayidx148=(($vla32+($sub147<<2))|0);
      var $159=HEAP32[(($arrayidx148)>>2)];
      var $160=$n;
      var $arrayidx149=(($vla32+($160<<2))|0);
      HEAP32[(($arrayidx149)>>2)]=$159;
      var $161=$n;
      var $sub150=(($161-1)|0);
      var $arrayidx151=(($vla33+($sub150<<2))|0);
      var $162=HEAP32[(($arrayidx151)>>2)];
      var $163=$n;
      var $arrayidx152=(($vla33+($163<<2))|0);
      HEAP32[(($arrayidx152)>>2)]=$162;
      __label__ = 50; break;
    case 50: // $for_inc153
      var $164=$n;
      var $dec=(($164-1)|0);
      $n=$dec;
      __label__ = 48; break;
    case 51: // $for_end154
      var $165=$err;
      var $166=$m;
      var $arrayidx155=(($vla34+($166<<2))|0);
      HEAPF32[(($arrayidx155)>>2)]=$165;
      var $167=$k;
      var $arrayidx156=(($vla30+($167<<2))|0);
      var $168=HEAP32[(($arrayidx156)>>2)];
      var $169=$n;
      var $arrayidx157=(($vla32+($169<<2))|0);
      HEAP32[(($arrayidx157)>>2)]=$168;
      var $170=$j;
      var $171=$n;
      var $arrayidx158=(($vla33+($171<<2))|0);
      HEAP32[(($arrayidx158)>>2)]=$170;
      __label__ = 54; break;
    case 52: // $if_end159
      __label__ = 53; break;
    case 53: // $for_inc160
      var $172=$m;
      var $inc161=(($172+1)|0);
      $m=$inc161;
      __label__ = 45; break;
    case 54: // $for_end162
      __label__ = 55; break;
    case 55: // $if_end163
      __label__ = 56; break;
    case 56: // $for_inc164
      var $173=$k;
      var $inc165=(($173+1)|0);
      $k=$inc165;
      __label__ = 42; break;
    case 57: // $for_end166
      var $174=$i;
      var $cmp167=(($174)|0)==0;
      if ($cmp167) { __label__ = 58; break; } else { __label__ = 59; break; }
    case 58: // $if_then169
      __label__ = 61; break;
    case 59: // $if_end170
      __label__ = 60; break;
    case 60: // $for_inc171
      var $175=$j;
      var $inc172=(($175+1)|0);
      $j=$inc172;
      __label__ = 33; break;
    case 61: // $for_end173
      $j=0;
      __label__ = 62; break;
    case 62: // $for_cond174
      var $176=$j;
      var $177=$N;
      var $cmp175=(($176)|0) < (($177)|0);
      if ($cmp175) { __label__ = 63; break; } else { __label__ = 79; break; }
    case 63: // $for_body177
      var $178=$i;
      var $add178=(($178+1)|0);
      var $179=$subvect_size;
      var $mul179=(($add178*$179)|0);
      $m=$mul179;
      __label__ = 64; break;
    case 64: // $for_cond180
      var $180=$m;
      var $181=$nsf_addr;
      var $cmp181=(($180)|0) < (($181)|0);
      if ($cmp181) { __label__ = 65; break; } else { __label__ = 67; break; }
    case 65: // $for_body183
      var $182=$m;
      var $183=$j;
      var $arrayidx184=(($vla33+($183<<2))|0);
      var $184=HEAP32[(($arrayidx184)>>2)];
      var $185=$ot;
      var $arrayidx185=(($185+($184<<2))|0);
      var $186=HEAP32[(($arrayidx185)>>2)];
      var $arrayidx186=(($186+($182<<2))|0);
      var $187=HEAPF32[(($arrayidx186)>>2)];
      var $188=$m;
      var $189=$j;
      var $190=$nt;
      var $arrayidx187=(($190+($189<<2))|0);
      var $191=HEAP32[(($arrayidx187)>>2)];
      var $arrayidx188=(($191+($188<<2))|0);
      HEAPF32[(($arrayidx188)>>2)]=$187;
      __label__ = 66; break;
    case 66: // $for_inc189
      var $192=$m;
      var $inc190=(($192+1)|0);
      $m=$inc190;
      __label__ = 64; break;
    case 67: // $for_end191
      $m=0;
      __label__ = 68; break;
    case 68: // $for_cond192
      var $193=$m;
      var $194=$subvect_size;
      var $cmp193=(($193)|0) < (($194)|0);
      if ($cmp193) { __label__ = 69; break; } else { __label__ = 73; break; }
    case 69: // $for_body195
      $sign=1;
      var $195=$j;
      var $arrayidx196=(($vla32+($195<<2))|0);
      var $196=HEAP32[(($arrayidx196)>>2)];
      $rind=$196;
      var $197=$rind;
      var $198=$shape_cb_size;
      var $cmp197=(($197)|0) >= (($198)|0);
      if ($cmp197) { __label__ = 70; break; } else { __label__ = 71; break; }
    case 70: // $if_then199
      $sign=-1;
      var $199=$shape_cb_size;
      var $200=$rind;
      var $sub200=(($200-$199)|0);
      $rind=$sub200;
      __label__ = 71; break;
    case 71: // $if_end201
      var $201=$subvect_size;
      var $202=$m;
      var $sub202=(($201-$202)|0);
      $q=$sub202;
      var $203=$sign;
      var $conv203=$203;
      var $mul204=$conv203*0.03125;
      var $204=$rind;
      var $205=$subvect_size;
      var $mul205=(($204*$205)|0);
      var $206=$m;
      var $add206=(($mul205+$206)|0);
      var $207=$shape_cb;
      var $arrayidx207=(($207+$add206)|0);
      var $208=HEAP8[($arrayidx207)];
      var $conv208=(($208 << 24) >> 24);
      var $conv209=(($conv208)|0);
      var $mul210=$mul204*$conv209;
      var $conv211=$mul210;
      $g=$conv211;
      var $209=$j;
      var $210=$nt;
      var $arrayidx212=(($210+($209<<2))|0);
      var $211=HEAP32[(($arrayidx212)>>2)];
      var $212=$subvect_size;
      var $213=$i;
      var $add213=(($213+1)|0);
      var $mul214=(($212*$add213)|0);
      var $add_ptr215=(($211+($mul214<<2))|0);
      var $214=$g;
      var $215=$r_addr;
      var $216=$q;
      var $add_ptr216=(($215+($216<<2))|0);
      var $217=$nsf_addr;
      var $218=$subvect_size;
      var $219=$i;
      var $add217=(($219+1)|0);
      var $mul218=(($218*$add217)|0);
      var $sub219=(($217-$mul218)|0);
      _target_update($add_ptr215, $214, $add_ptr216, $sub219);
      __label__ = 72; break;
    case 72: // $for_inc220
      var $220=$m;
      var $inc221=(($220+1)|0);
      $m=$inc221;
      __label__ = 68; break;
    case 73: // $for_end222
      $q=0;
      __label__ = 74; break;
    case 74: // $for_cond223
      var $221=$q;
      var $222=$nb_subvect;
      var $cmp224=(($221)|0) < (($222)|0);
      if ($cmp224) { __label__ = 75; break; } else { __label__ = 77; break; }
    case 75: // $for_body226
      var $223=$q;
      var $224=$j;
      var $arrayidx227=(($vla33+($224<<2))|0);
      var $225=HEAP32[(($arrayidx227)>>2)];
      var $arrayidx228=(($vla8+($225<<2))|0);
      var $226=HEAP32[(($arrayidx228)>>2)];
      var $arrayidx229=(($226+($223<<2))|0);
      var $227=HEAP32[(($arrayidx229)>>2)];
      var $228=$q;
      var $229=$j;
      var $arrayidx230=(($vla9+($229<<2))|0);
      var $230=HEAP32[(($arrayidx230)>>2)];
      var $arrayidx231=(($230+($228<<2))|0);
      HEAP32[(($arrayidx231)>>2)]=$227;
      __label__ = 76; break;
    case 76: // $for_inc232
      var $231=$q;
      var $inc233=(($231+1)|0);
      $q=$inc233;
      __label__ = 74; break;
    case 77: // $for_end234
      var $232=$j;
      var $arrayidx235=(($vla32+($232<<2))|0);
      var $233=HEAP32[(($arrayidx235)>>2)];
      var $234=$i;
      var $235=$j;
      var $arrayidx236=(($vla9+($235<<2))|0);
      var $236=HEAP32[(($arrayidx236)>>2)];
      var $arrayidx237=(($236+($234<<2))|0);
      HEAP32[(($arrayidx237)>>2)]=$233;
      __label__ = 78; break;
    case 78: // $for_inc238
      var $237=$j;
      var $inc239=(($237+1)|0);
      $j=$inc239;
      __label__ = 62; break;
    case 79: // $for_end240
      var $238=$ot;
      $tmp2=$238;
      var $239=$nt;
      $ot=$239;
      var $240=$tmp2;
      $nt=$240;
      $j=0;
      __label__ = 80; break;
    case 80: // $for_cond241
      var $241=$j;
      var $242=$N;
      var $cmp242=(($241)|0) < (($242)|0);
      if ($cmp242) { __label__ = 81; break; } else { __label__ = 87; break; }
    case 81: // $for_body244
      $m=0;
      __label__ = 82; break;
    case 82: // $for_cond245
      var $243=$m;
      var $244=$nb_subvect;
      var $cmp246=(($243)|0) < (($244)|0);
      if ($cmp246) { __label__ = 83; break; } else { __label__ = 85; break; }
    case 83: // $for_body248
      var $245=$m;
      var $246=$j;
      var $arrayidx249=(($vla9+($246<<2))|0);
      var $247=HEAP32[(($arrayidx249)>>2)];
      var $arrayidx250=(($247+($245<<2))|0);
      var $248=HEAP32[(($arrayidx250)>>2)];
      var $249=$m;
      var $250=$j;
      var $arrayidx251=(($vla8+($250<<2))|0);
      var $251=HEAP32[(($arrayidx251)>>2)];
      var $arrayidx252=(($251+($249<<2))|0);
      HEAP32[(($arrayidx252)>>2)]=$248;
      __label__ = 84; break;
    case 84: // $for_inc253
      var $252=$m;
      var $inc254=(($252+1)|0);
      $m=$inc254;
      __label__ = 82; break;
    case 85: // $for_end255
      __label__ = 86; break;
    case 86: // $for_inc256
      var $253=$j;
      var $inc257=(($253+1)|0);
      $j=$inc257;
      __label__ = 80; break;
    case 87: // $for_end258
      $j=0;
      __label__ = 88; break;
    case 88: // $for_cond259
      var $254=$j;
      var $255=$N;
      var $cmp260=(($254)|0) < (($255)|0);
      if ($cmp260) { __label__ = 89; break; } else { __label__ = 91; break; }
    case 89: // $for_body262
      var $256=$j;
      var $arrayidx263=(($vla34+($256<<2))|0);
      var $257=HEAPF32[(($arrayidx263)>>2)];
      var $258=$j;
      var $arrayidx264=(($vla35+($258<<2))|0);
      HEAPF32[(($arrayidx264)>>2)]=$257;
      __label__ = 90; break;
    case 90: // $for_inc265
      var $259=$j;
      var $inc266=(($259+1)|0);
      $j=$inc266;
      __label__ = 88; break;
    case 91: // $for_end267
      __label__ = 92; break;
    case 92: // $for_inc268
      var $260=$i;
      var $inc269=(($260+1)|0);
      $i=$inc269;
      __label__ = 23; break;
    case 93: // $for_end270
      $i=0;
      __label__ = 94; break;
    case 94: // $for_cond271
      var $261=$i;
      var $262=$nb_subvect;
      var $cmp272=(($261)|0) < (($262)|0);
      if ($cmp272) { __label__ = 95; break; } else { __label__ = 97; break; }
    case 95: // $for_body274
      var $263=$i;
      var $arrayidx275=(($vla9)|0);
      var $264=HEAP32[(($arrayidx275)>>2)];
      var $arrayidx276=(($264+($263<<2))|0);
      var $265=HEAP32[(($arrayidx276)>>2)];
      var $266=$i;
      var $arrayidx277=(($vla19+($266<<2))|0);
      HEAP32[(($arrayidx277)>>2)]=$265;
      var $267=$bits_addr;
      var $268=$i;
      var $arrayidx278=(($vla19+($268<<2))|0);
      var $269=HEAP32[(($arrayidx278)>>2)];
      var $270=$params;
      var $shape_bits279=(($270+12)|0);
      var $271=HEAP32[(($shape_bits279)>>2)];
      var $272=$have_sign;
      var $add280=(($271+$272)|0);
      _speex_bits_pack($267, $269, $add280);
      __label__ = 96; break;
    case 96: // $for_inc281
      var $273=$i;
      var $inc282=(($273+1)|0);
      $i=$inc282;
      __label__ = 94; break;
    case 97: // $for_end283
      $i=0;
      __label__ = 98; break;
    case 98: // $for_cond284
      var $274=$i;
      var $275=$nb_subvect;
      var $cmp285=(($274)|0) < (($275)|0);
      if ($cmp285) { __label__ = 99; break; } else { __label__ = 107; break; }
    case 99: // $for_body287
      $sign289=1;
      var $276=$i;
      var $arrayidx290=(($vla19+($276<<2))|0);
      var $277=HEAP32[(($arrayidx290)>>2)];
      $rind288=$277;
      var $278=$rind288;
      var $279=$shape_cb_size;
      var $cmp291=(($278)|0) >= (($279)|0);
      if ($cmp291) { __label__ = 100; break; } else { __label__ = 101; break; }
    case 100: // $if_then293
      $sign289=-1;
      var $280=$shape_cb_size;
      var $281=$rind288;
      var $sub294=(($281-$280)|0);
      $rind288=$sub294;
      __label__ = 101; break;
    case 101: // $if_end295
      $j=0;
      __label__ = 102; break;
    case 102: // $for_cond296
      var $282=$j;
      var $283=$subvect_size;
      var $cmp297=(($282)|0) < (($283)|0);
      if ($cmp297) { __label__ = 103; break; } else { __label__ = 105; break; }
    case 103: // $for_body299
      var $284=$sign289;
      var $conv300=$284;
      var $mul301=$conv300*0.03125;
      var $285=$rind288;
      var $286=$subvect_size;
      var $mul302=(($285*$286)|0);
      var $287=$j;
      var $add303=(($mul302+$287)|0);
      var $288=$shape_cb;
      var $arrayidx304=(($288+$add303)|0);
      var $289=HEAP8[($arrayidx304)];
      var $conv305=(($289 << 24) >> 24);
      var $conv306=(($conv305)|0);
      var $mul307=$mul301*$conv306;
      var $conv308=$mul307;
      var $290=$subvect_size;
      var $291=$i;
      var $mul309=(($290*$291)|0);
      var $292=$j;
      var $add310=(($mul309+$292)|0);
      var $arrayidx311=(($vla18+($add310<<2))|0);
      HEAPF32[(($arrayidx311)>>2)]=$conv308;
      __label__ = 104; break;
    case 104: // $for_inc312
      var $293=$j;
      var $inc313=(($293+1)|0);
      $j=$inc313;
      __label__ = 102; break;
    case 105: // $for_end314
      __label__ = 106; break;
    case 106: // $for_inc315
      var $294=$i;
      var $inc316=(($294+1)|0);
      $i=$inc316;
      __label__ = 98; break;
    case 107: // $for_end317
      $j=0;
      __label__ = 108; break;
    case 108: // $for_cond318
      var $295=$j;
      var $296=$nsf_addr;
      var $cmp319=(($295)|0) < (($296)|0);
      if ($cmp319) { __label__ = 109; break; } else { __label__ = 111; break; }
    case 109: // $for_body321
      var $297=$j;
      var $298=$exc_addr;
      var $arrayidx322=(($298+($297<<2))|0);
      var $299=HEAPF32[(($arrayidx322)>>2)];
      var $300=$j;
      var $arrayidx323=(($vla18+($300<<2))|0);
      var $301=HEAPF32[(($arrayidx323)>>2)];
      var $add324=$299+$301;
      var $302=$j;
      var $303=$exc_addr;
      var $arrayidx325=(($303+($302<<2))|0);
      HEAPF32[(($arrayidx325)>>2)]=$add324;
      __label__ = 110; break;
    case 110: // $for_inc326
      var $304=$j;
      var $inc327=(($304+1)|0);
      $j=$inc327;
      __label__ = 108; break;
    case 111: // $for_end328
      var $305=$update_target_addr;
      var $tobool329=(($305)|0)!=0;
      if ($tobool329) { __label__ = 112; break; } else { __label__ = 121; break; }
    case 112: // $if_then330
      var $306=$nsf_addr;
      var $307=_llvm_stacksave();
      $saved_stack331=$307;
      var $vla332=STACKTOP;STACKTOP += $306*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $j=0;
      __label__ = 113; break;
    case 113: // $for_cond333
      var $308=$j;
      var $309=$nsf_addr;
      var $cmp334=(($308)|0) < (($309)|0);
      if ($cmp334) { __label__ = 114; break; } else { __label__ = 116; break; }
    case 114: // $for_body336
      var $310=$j;
      var $arrayidx337=(($vla18+($310<<2))|0);
      var $311=HEAPF32[(($arrayidx337)>>2)];
      var $312=$j;
      var $arrayidx338=(($vla332+($312<<2))|0);
      HEAPF32[(($arrayidx338)>>2)]=$311;
      __label__ = 115; break;
    case 115: // $for_inc339
      var $313=$j;
      var $inc340=(($313+1)|0);
      $j=$inc340;
      __label__ = 113; break;
    case 116: // $for_end341
      var $314=$ak_addr;
      var $315=$awk1_addr;
      var $316=$awk2_addr;
      var $317=$nsf_addr;
      var $318=$p_addr;
      var $319=$stack_addr;
      _syn_percep_zero16($vla332, $314, $315, $316, $vla332, $317, $318, $319);
      $j=0;
      __label__ = 117; break;
    case 117: // $for_cond342
      var $320=$j;
      var $321=$nsf_addr;
      var $cmp343=(($320)|0) < (($321)|0);
      if ($cmp343) { __label__ = 118; break; } else { __label__ = 120; break; }
    case 118: // $for_body345
      var $322=$j;
      var $323=$target_addr;
      var $arrayidx346=(($323+($322<<2))|0);
      var $324=HEAPF32[(($arrayidx346)>>2)];
      var $325=$j;
      var $arrayidx347=(($vla332+($325<<2))|0);
      var $326=HEAPF32[(($arrayidx347)>>2)];
      var $sub348=$324-$326;
      var $327=$j;
      var $328=$target_addr;
      var $arrayidx349=(($328+($327<<2))|0);
      HEAPF32[(($arrayidx349)>>2)]=$sub348;
      __label__ = 119; break;
    case 119: // $for_inc350
      var $329=$j;
      var $inc351=(($329+1)|0);
      $j=$inc351;
      __label__ = 117; break;
    case 120: // $for_end352
      var $330=$saved_stack331;
      _llvm_stackrestore($330);
      __label__ = 121; break;
    case 121: // $if_end353
      var $331=$saved_stack;
      _llvm_stackrestore($331);
      __label__ = 122; break;
    case 122: // $return
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_split_cb_search_shape_sign["X"]=1;

function _target_update($t, $g, $r, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $t_addr;
      var $g_addr;
      var $r_addr;
      var $len_addr;
      var $n;
      $t_addr=$t;
      $g_addr=$g;
      $r_addr=$r;
      $len_addr=$len;
      $n=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$n;
      var $1=$len_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$n;
      var $3=$t_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$g_addr;
      var $6=$n;
      var $7=$r_addr;
      var $arrayidx1=(($7+($6<<2))|0);
      var $8=HEAPF32[(($arrayidx1)>>2)];
      var $mul=$5*$8;
      var $sub=$4-$mul;
      var $9=$n;
      var $10=$t_addr;
      var $arrayidx2=(($10+($9<<2))|0);
      HEAPF32[(($arrayidx2)>>2)]=$sub;
      __label__ = 3; break;
    case 3: // $for_inc
      var $11=$n;
      var $inc=(($11+1)|0);
      $n=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _split_cb_search_shape_sign_N1($target, $ak, $awk1, $awk2, $par, $p, $nsf, $exc, $r, $bits, $stack, $update_target) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $target_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $par_addr;
      var $p_addr;
      var $nsf_addr;
      var $exc_addr;
      var $r_addr;
      var $bits_addr;
      var $stack_addr;
      var $update_target_addr;
      var $i;
      var $j;
      var $m;
      var $q;
      var $resp2;
      var $shape_cb;
      var $shape_cb_size;
      var $subvect_size;
      var $nb_subvect;
      var $params;
      var $best_index=__stackBase__;
      var $best_dist=__stackBase__+4;
      var $have_sign;
      var $saved_stack;
      var $x;
      var $rind;
      var $res;
      var $sign;
      var $g;
      var $rind67;
      var $sign68;
      var $saved_stack110;
      $target_addr=$target;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $par_addr=$par;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $exc_addr=$exc;
      $r_addr=$r;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $update_target_addr=$update_target;
      var $0=$par_addr;
      var $1=$0;
      $params=$1;
      var $2=$params;
      var $subvect_size1=(($2)|0);
      var $3=HEAP32[(($subvect_size1)>>2)];
      $subvect_size=$3;
      var $4=$params;
      var $nb_subvect2=(($4+4)|0);
      var $5=HEAP32[(($nb_subvect2)>>2)];
      $nb_subvect=$5;
      var $6=$params;
      var $shape_bits=(($6+12)|0);
      var $7=HEAP32[(($shape_bits)>>2)];
      var $shl=1 << $7;
      $shape_cb_size=$shl;
      var $8=$params;
      var $shape_cb3=(($8+8)|0);
      var $9=HEAP32[(($shape_cb3)>>2)];
      $shape_cb=$9;
      var $10=$params;
      var $have_sign4=(($10+16)|0);
      var $11=HEAP32[(($have_sign4)>>2)];
      $have_sign=$11;
      var $12=$shape_cb_size;
      var $13=$subvect_size;
      var $mul=(($12*$13)|0);
      var $14=_llvm_stacksave();
      $saved_stack=$14;
      var $vla=STACKTOP;STACKTOP += $mul*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $resp2=$vla;
      var $15=$shape_cb_size;
      var $vla5=STACKTOP;STACKTOP += $15*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $16=$nsf_addr;
      var $vla6=STACKTOP;STACKTOP += $16*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $17=$nsf_addr;
      var $vla7=STACKTOP;STACKTOP += $17*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $18=$vla6;
      var $19=$target_addr;
      var $20=$19;
      var $21=$nsf_addr;
      var $mul8=((($21<<2))|0);
      var $22=$target_addr;
      var $sub_ptr_lhs_cast=$vla6;
      var $sub_ptr_rhs_cast=$22;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul9=((0)|0);
      var $add=(($mul8+$mul9)|0);
      assert($add % 1 === 0, 'memcpy given ' + $add + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($18, $20, $add, 1);
      var $23=$shape_cb;
      var $24=$r_addr;
      var $25=$resp2;
      var $26=$shape_cb_size;
      var $27=$subvect_size;
      var $28=$stack_addr;
      _compute_weighted_codebook($23, $24, $vla, $25, $vla5, $26, $27, $28);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $29=$i;
      var $30=$nb_subvect;
      var $cmp=(($29)|0) < (($30)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 30; break; }
    case 2: // $for_body
      var $31=$subvect_size;
      var $32=$i;
      var $mul10=(($31*$32)|0);
      var $add_ptr=(($vla6+($mul10<<2))|0);
      $x=$add_ptr;
      var $33=$have_sign;
      var $tobool=(($33)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $34=$x;
      var $35=$resp2;
      var $36=$subvect_size;
      var $37=$shape_cb_size;
      var $38=$stack_addr;
      _vq_nbest_sign($34, $35, $36, $37, $vla5, 1, $best_index, $best_dist, $38);
      __label__ = 5; break;
    case 4: // $if_else
      var $39=$x;
      var $40=$resp2;
      var $41=$subvect_size;
      var $42=$shape_cb_size;
      var $43=$stack_addr;
      _vq_nbest($39, $40, $41, $42, $vla5, 1, $best_index, $best_dist, $43);
      __label__ = 5; break;
    case 5: // $if_end
      var $44=$bits_addr;
      var $45=HEAP32[(($best_index)>>2)];
      var $46=$params;
      var $shape_bits11=(($46+12)|0);
      var $47=HEAP32[(($shape_bits11)>>2)];
      var $48=$have_sign;
      var $add12=(($47+$48)|0);
      _speex_bits_pack($44, $45, $add12);
      $sign=1;
      var $49=HEAP32[(($best_index)>>2)];
      $rind=$49;
      var $50=$rind;
      var $51=$shape_cb_size;
      var $cmp13=(($50)|0) >= (($51)|0);
      if ($cmp13) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then14
      $sign=-1;
      var $52=$shape_cb_size;
      var $53=$rind;
      var $sub=(($53-$52)|0);
      $rind=$sub;
      __label__ = 7; break;
    case 7: // $if_end15
      var $54=$rind;
      var $55=$subvect_size;
      var $mul16=(($54*$55)|0);
      var $add_ptr17=(($vla+($mul16<<2))|0);
      $res=$add_ptr17;
      var $56=$sign;
      var $cmp18=$56 > 0;
      if ($cmp18) { __label__ = 8; break; } else { __label__ = 13; break; }
    case 8: // $if_then19
      $m=0;
      __label__ = 9; break;
    case 9: // $for_cond20
      var $57=$m;
      var $58=$subvect_size;
      var $cmp21=(($57)|0) < (($58)|0);
      if ($cmp21) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body22
      var $59=$subvect_size;
      var $60=$i;
      var $mul23=(($59*$60)|0);
      var $61=$m;
      var $add24=(($mul23+$61)|0);
      var $arrayidx=(($vla6+($add24<<2))|0);
      var $62=HEAPF32[(($arrayidx)>>2)];
      var $63=$m;
      var $64=$res;
      var $arrayidx25=(($64+($63<<2))|0);
      var $65=HEAPF32[(($arrayidx25)>>2)];
      var $sub26=$62-$65;
      var $66=$subvect_size;
      var $67=$i;
      var $mul27=(($66*$67)|0);
      var $68=$m;
      var $add28=(($mul27+$68)|0);
      var $arrayidx29=(($vla6+($add28<<2))|0);
      HEAPF32[(($arrayidx29)>>2)]=$sub26;
      __label__ = 11; break;
    case 11: // $for_inc
      var $69=$m;
      var $inc=(($69+1)|0);
      $m=$inc;
      __label__ = 9; break;
    case 12: // $for_end
      __label__ = 18; break;
    case 13: // $if_else30
      $m=0;
      __label__ = 14; break;
    case 14: // $for_cond31
      var $70=$m;
      var $71=$subvect_size;
      var $cmp32=(($70)|0) < (($71)|0);
      if ($cmp32) { __label__ = 15; break; } else { __label__ = 17; break; }
    case 15: // $for_body33
      var $72=$subvect_size;
      var $73=$i;
      var $mul34=(($72*$73)|0);
      var $74=$m;
      var $add35=(($mul34+$74)|0);
      var $arrayidx36=(($vla6+($add35<<2))|0);
      var $75=HEAPF32[(($arrayidx36)>>2)];
      var $76=$m;
      var $77=$res;
      var $arrayidx37=(($77+($76<<2))|0);
      var $78=HEAPF32[(($arrayidx37)>>2)];
      var $add38=$75+$78;
      var $79=$subvect_size;
      var $80=$i;
      var $mul39=(($79*$80)|0);
      var $81=$m;
      var $add40=(($mul39+$81)|0);
      var $arrayidx41=(($vla6+($add40<<2))|0);
      HEAPF32[(($arrayidx41)>>2)]=$add38;
      __label__ = 16; break;
    case 16: // $for_inc42
      var $82=$m;
      var $inc43=(($82+1)|0);
      $m=$inc43;
      __label__ = 14; break;
    case 17: // $for_end44
      __label__ = 18; break;
    case 18: // $if_end45
      $j=0;
      __label__ = 19; break;
    case 19: // $for_cond46
      var $83=$j;
      var $84=$subvect_size;
      var $cmp47=(($83)|0) < (($84)|0);
      if ($cmp47) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body48
      var $85=$sign;
      var $conv=$85;
      var $mul49=$conv*0.03125;
      var $86=$rind;
      var $87=$subvect_size;
      var $mul50=(($86*$87)|0);
      var $88=$j;
      var $add51=(($mul50+$88)|0);
      var $89=$shape_cb;
      var $arrayidx52=(($89+$add51)|0);
      var $90=HEAP8[($arrayidx52)];
      var $conv53=(($90 << 24) >> 24);
      var $conv54=(($conv53)|0);
      var $mul55=$mul49*$conv54;
      var $conv56=$mul55;
      var $91=$subvect_size;
      var $92=$i;
      var $mul57=(($91*$92)|0);
      var $93=$j;
      var $add58=(($mul57+$93)|0);
      var $arrayidx59=(($vla7+($add58<<2))|0);
      HEAPF32[(($arrayidx59)>>2)]=$conv56;
      __label__ = 21; break;
    case 21: // $for_inc60
      var $94=$j;
      var $inc61=(($94+1)|0);
      $j=$inc61;
      __label__ = 19; break;
    case 22: // $for_end62
      $m=0;
      __label__ = 23; break;
    case 23: // $for_cond63
      var $95=$m;
      var $96=$subvect_size;
      var $cmp64=(($95)|0) < (($96)|0);
      if ($cmp64) { __label__ = 24; break; } else { __label__ = 28; break; }
    case 24: // $for_body66
      $sign68=1;
      var $97=HEAP32[(($best_index)>>2)];
      $rind67=$97;
      var $98=$rind67;
      var $99=$shape_cb_size;
      var $cmp69=(($98)|0) >= (($99)|0);
      if ($cmp69) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then71
      $sign68=-1;
      var $100=$shape_cb_size;
      var $101=$rind67;
      var $sub72=(($101-$100)|0);
      $rind67=$sub72;
      __label__ = 26; break;
    case 26: // $if_end73
      var $102=$subvect_size;
      var $103=$m;
      var $sub74=(($102-$103)|0);
      $q=$sub74;
      var $104=$sign68;
      var $conv75=$104;
      var $mul76=$conv75*0.03125;
      var $105=$rind67;
      var $106=$subvect_size;
      var $mul77=(($105*$106)|0);
      var $107=$m;
      var $add78=(($mul77+$107)|0);
      var $108=$shape_cb;
      var $arrayidx79=(($108+$add78)|0);
      var $109=HEAP8[($arrayidx79)];
      var $conv80=(($109 << 24) >> 24);
      var $conv81=(($conv80)|0);
      var $mul82=$mul76*$conv81;
      var $conv83=$mul82;
      $g=$conv83;
      var $110=$subvect_size;
      var $111=$i;
      var $add84=(($111+1)|0);
      var $mul85=(($110*$add84)|0);
      var $add_ptr86=(($vla6+($mul85<<2))|0);
      var $112=$g;
      var $113=$r_addr;
      var $114=$q;
      var $add_ptr87=(($113+($114<<2))|0);
      var $115=$nsf_addr;
      var $116=$subvect_size;
      var $117=$i;
      var $add88=(($117+1)|0);
      var $mul89=(($116*$add88)|0);
      var $sub90=(($115-$mul89)|0);
      _target_update($add_ptr86, $112, $add_ptr87, $sub90);
      __label__ = 27; break;
    case 27: // $for_inc91
      var $118=$m;
      var $inc92=(($118+1)|0);
      $m=$inc92;
      __label__ = 23; break;
    case 28: // $for_end93
      __label__ = 29; break;
    case 29: // $for_inc94
      var $119=$i;
      var $inc95=(($119+1)|0);
      $i=$inc95;
      __label__ = 1; break;
    case 30: // $for_end96
      $j=0;
      __label__ = 31; break;
    case 31: // $for_cond97
      var $120=$j;
      var $121=$nsf_addr;
      var $cmp98=(($120)|0) < (($121)|0);
      if ($cmp98) { __label__ = 32; break; } else { __label__ = 34; break; }
    case 32: // $for_body100
      var $122=$j;
      var $123=$exc_addr;
      var $arrayidx101=(($123+($122<<2))|0);
      var $124=HEAPF32[(($arrayidx101)>>2)];
      var $125=$j;
      var $arrayidx102=(($vla7+($125<<2))|0);
      var $126=HEAPF32[(($arrayidx102)>>2)];
      var $add103=$124+$126;
      var $127=$j;
      var $128=$exc_addr;
      var $arrayidx104=(($128+($127<<2))|0);
      HEAPF32[(($arrayidx104)>>2)]=$add103;
      __label__ = 33; break;
    case 33: // $for_inc105
      var $129=$j;
      var $inc106=(($129+1)|0);
      $j=$inc106;
      __label__ = 31; break;
    case 34: // $for_end107
      var $130=$update_target_addr;
      var $tobool108=(($130)|0)!=0;
      if ($tobool108) { __label__ = 35; break; } else { __label__ = 44; break; }
    case 35: // $if_then109
      var $131=$nsf_addr;
      var $132=_llvm_stacksave();
      $saved_stack110=$132;
      var $vla111=STACKTOP;STACKTOP += $131*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $j=0;
      __label__ = 36; break;
    case 36: // $for_cond112
      var $133=$j;
      var $134=$nsf_addr;
      var $cmp113=(($133)|0) < (($134)|0);
      if ($cmp113) { __label__ = 37; break; } else { __label__ = 39; break; }
    case 37: // $for_body115
      var $135=$j;
      var $arrayidx116=(($vla7+($135<<2))|0);
      var $136=HEAPF32[(($arrayidx116)>>2)];
      var $137=$j;
      var $arrayidx117=(($vla111+($137<<2))|0);
      HEAPF32[(($arrayidx117)>>2)]=$136;
      __label__ = 38; break;
    case 38: // $for_inc118
      var $138=$j;
      var $inc119=(($138+1)|0);
      $j=$inc119;
      __label__ = 36; break;
    case 39: // $for_end120
      var $139=$ak_addr;
      var $140=$awk1_addr;
      var $141=$awk2_addr;
      var $142=$nsf_addr;
      var $143=$p_addr;
      var $144=$stack_addr;
      _syn_percep_zero16($vla111, $139, $140, $141, $vla111, $142, $143, $144);
      $j=0;
      __label__ = 40; break;
    case 40: // $for_cond121
      var $145=$j;
      var $146=$nsf_addr;
      var $cmp122=(($145)|0) < (($146)|0);
      if ($cmp122) { __label__ = 41; break; } else { __label__ = 43; break; }
    case 41: // $for_body124
      var $147=$j;
      var $148=$target_addr;
      var $arrayidx125=(($148+($147<<2))|0);
      var $149=HEAPF32[(($arrayidx125)>>2)];
      var $150=$j;
      var $arrayidx126=(($vla111+($150<<2))|0);
      var $151=HEAPF32[(($arrayidx126)>>2)];
      var $sub127=$149-$151;
      var $152=$j;
      var $153=$target_addr;
      var $arrayidx128=(($153+($152<<2))|0);
      HEAPF32[(($arrayidx128)>>2)]=$sub127;
      __label__ = 42; break;
    case 42: // $for_inc129
      var $154=$j;
      var $inc130=(($154+1)|0);
      $j=$inc130;
      __label__ = 40; break;
    case 43: // $for_end131
      var $155=$saved_stack110;
      _llvm_stackrestore($155);
      __label__ = 44; break;
    case 44: // $if_end132
      var $156=$saved_stack;
      _llvm_stackrestore($156);
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_split_cb_search_shape_sign_N1["X"]=1;

function _compute_weighted_codebook($shape_cb, $r, $resp, $resp2, $E, $shape_cb_size, $subvect_size, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $shape_cb_addr;
      var $r_addr;
      var $resp_addr;
      var $resp2_addr;
      var $E_addr;
      var $shape_cb_size_addr;
      var $subvect_size_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $k;
      var $saved_stack;
      var $res;
      var $resj;
      var $res16;
      $shape_cb_addr=$shape_cb;
      $r_addr=$r;
      $resp_addr=$resp;
      $resp2_addr=$resp2;
      $E_addr=$E;
      $shape_cb_size_addr=$shape_cb_size;
      $subvect_size_addr=$subvect_size;
      $stack_addr=$stack;
      var $0=$subvect_size_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=$shape_cb_size_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 16; break; }
    case 2: // $for_body
      var $4=$resp_addr;
      var $5=$i;
      var $6=$subvect_size_addr;
      var $mul=(($5*$6)|0);
      var $add_ptr=(($4+($mul<<2))|0);
      $res=$add_ptr;
      $k=0;
      __label__ = 3; break;
    case 3: // $for_cond1
      var $7=$k;
      var $8=$subvect_size_addr;
      var $cmp2=(($7)|0) < (($8)|0);
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body3
      var $9=$i;
      var $10=$subvect_size_addr;
      var $mul4=(($9*$10)|0);
      var $11=$k;
      var $add=(($mul4+$11)|0);
      var $12=$shape_cb_addr;
      var $arrayidx=(($12+$add)|0);
      var $13=HEAP8[($arrayidx)];
      var $conv=(($13 << 24) >> 24);
      var $14=$k;
      var $arrayidx5=(($vla+($14<<2))|0);
      HEAPF32[(($arrayidx5)>>2)]=$conv;
      __label__ = 5; break;
    case 5: // $for_inc
      var $15=$k;
      var $inc=(($15+1)|0);
      $k=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $16=$i;
      var $17=$E_addr;
      var $arrayidx6=(($17+($16<<2))|0);
      HEAPF32[(($arrayidx6)>>2)]=0;
      $j=0;
      __label__ = 7; break;
    case 7: // $for_cond7
      var $18=$j;
      var $19=$subvect_size_addr;
      var $cmp8=(($18)|0) < (($19)|0);
      if ($cmp8) { __label__ = 8; break; } else { __label__ = 14; break; }
    case 8: // $for_body10
      $resj=0;
      $k=0;
      __label__ = 9; break;
    case 9: // $for_cond11
      var $20=$k;
      var $21=$j;
      var $cmp12=(($20)|0) <= (($21)|0);
      if ($cmp12) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body14
      var $22=$resj;
      var $23=$k;
      var $arrayidx15=(($vla+($23<<2))|0);
      var $24=HEAPF32[(($arrayidx15)>>2)];
      var $25=$j;
      var $26=$k;
      var $sub=(($25-$26)|0);
      var $27=$r_addr;
      var $arrayidx16=(($27+($sub<<2))|0);
      var $28=HEAPF32[(($arrayidx16)>>2)];
      var $mul17=$24*$28;
      var $add18=$22+$mul17;
      $resj=$add18;
      __label__ = 11; break;
    case 11: // $for_inc19
      var $29=$k;
      var $inc20=(($29+1)|0);
      $k=$inc20;
      __label__ = 9; break;
    case 12: // $for_end21
      var $30=$resj;
      var $mul22=$30*0.03125;
      $res16=$mul22;
      var $31=$i;
      var $32=$E_addr;
      var $arrayidx23=(($32+($31<<2))|0);
      var $33=HEAPF32[(($arrayidx23)>>2)];
      var $34=$res16;
      var $35=$res16;
      var $mul24=$34*$35;
      var $add25=$33+$mul24;
      var $36=$i;
      var $37=$E_addr;
      var $arrayidx26=(($37+($36<<2))|0);
      HEAPF32[(($arrayidx26)>>2)]=$add25;
      var $38=$res16;
      var $39=$j;
      var $40=$res;
      var $arrayidx27=(($40+($39<<2))|0);
      HEAPF32[(($arrayidx27)>>2)]=$38;
      __label__ = 13; break;
    case 13: // $for_inc28
      var $41=$j;
      var $inc29=(($41+1)|0);
      $j=$inc29;
      __label__ = 7; break;
    case 14: // $for_end30
      __label__ = 15; break;
    case 15: // $for_inc31
      var $42=$i;
      var $inc32=(($42+1)|0);
      $i=$inc32;
      __label__ = 1; break;
    case 16: // $for_end33
      var $43=$saved_stack;
      _llvm_stackrestore($43);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_compute_weighted_codebook["X"]=1;

function _split_cb_shape_sign_unquant($exc, $par, $nsf, $bits, $stack, $seed) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $par_addr;
      var $nsf_addr;
      var $bits_addr;
      var $stack_addr;
      var $seed_addr;
      var $i;
      var $j;
      var $shape_cb;
      var $shape_cb_size;
      var $subvect_size;
      var $nb_subvect;
      var $params;
      var $have_sign;
      var $saved_stack;
      var $s;
      $exc_addr=$exc;
      $par_addr=$par;
      $nsf_addr=$nsf;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $seed_addr=$seed;
      var $0=$par_addr;
      var $1=$0;
      $params=$1;
      var $2=$params;
      var $subvect_size1=(($2)|0);
      var $3=HEAP32[(($subvect_size1)>>2)];
      $subvect_size=$3;
      var $4=$params;
      var $nb_subvect2=(($4+4)|0);
      var $5=HEAP32[(($nb_subvect2)>>2)];
      $nb_subvect=$5;
      var $6=$params;
      var $shape_bits=(($6+12)|0);
      var $7=HEAP32[(($shape_bits)>>2)];
      var $shl=1 << $7;
      $shape_cb_size=$shl;
      var $8=$params;
      var $shape_cb3=(($8+8)|0);
      var $9=HEAP32[(($shape_cb3)>>2)];
      $shape_cb=$9;
      var $10=$params;
      var $have_sign4=(($10+16)|0);
      var $11=HEAP32[(($have_sign4)>>2)];
      $have_sign=$11;
      var $12=$nb_subvect;
      var $13=_llvm_stacksave();
      $saved_stack=$13;
      var $vla=STACKTOP;STACKTOP += $12*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $14=$nb_subvect;
      var $vla5=STACKTOP;STACKTOP += $14*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $15=$i;
      var $16=$nb_subvect;
      var $cmp=(($15)|0) < (($16)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $for_body
      var $17=$have_sign;
      var $tobool=(($17)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $18=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($18, 1);
      var $19=$i;
      var $arrayidx=(($vla5+($19<<2))|0);
      HEAP32[(($arrayidx)>>2)]=$call;
      __label__ = 5; break;
    case 4: // $if_else
      var $20=$i;
      var $arrayidx6=(($vla5+($20<<2))|0);
      HEAP32[(($arrayidx6)>>2)]=0;
      __label__ = 5; break;
    case 5: // $if_end
      var $21=$bits_addr;
      var $22=$params;
      var $shape_bits7=(($22+12)|0);
      var $23=HEAP32[(($shape_bits7)>>2)];
      var $call8=_speex_bits_unpack_unsigned($21, $23);
      var $24=$i;
      var $arrayidx9=(($vla+($24<<2))|0);
      HEAP32[(($arrayidx9)>>2)]=$call8;
      __label__ = 6; break;
    case 6: // $for_inc
      var $25=$i;
      var $inc=(($25+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 7: // $for_end
      $i=0;
      __label__ = 8; break;
    case 8: // $for_cond10
      var $26=$i;
      var $27=$nb_subvect;
      var $cmp11=(($26)|0) < (($27)|0);
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 17; break; }
    case 9: // $for_body12
      $s=1;
      var $28=$i;
      var $arrayidx13=(($vla5+($28<<2))|0);
      var $29=HEAP32[(($arrayidx13)>>2)];
      var $tobool14=(($29)|0)!=0;
      if ($tobool14) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then15
      $s=-1;
      __label__ = 11; break;
    case 11: // $if_end16
      $j=0;
      __label__ = 12; break;
    case 12: // $for_cond17
      var $30=$j;
      var $31=$subvect_size;
      var $cmp18=(($30)|0) < (($31)|0);
      if ($cmp18) { __label__ = 13; break; } else { __label__ = 15; break; }
    case 13: // $for_body19
      var $32=$s;
      var $conv=$32;
      var $mul=$conv*0.03125;
      var $33=$i;
      var $arrayidx20=(($vla+($33<<2))|0);
      var $34=HEAP32[(($arrayidx20)>>2)];
      var $35=$subvect_size;
      var $mul21=(($34*$35)|0);
      var $36=$j;
      var $add=(($mul21+$36)|0);
      var $37=$shape_cb;
      var $arrayidx22=(($37+$add)|0);
      var $38=HEAP8[($arrayidx22)];
      var $conv23=(($38 << 24) >> 24);
      var $conv24=(($conv23)|0);
      var $mul25=$mul*$conv24;
      var $39=$subvect_size;
      var $40=$i;
      var $mul26=(($39*$40)|0);
      var $41=$j;
      var $add27=(($mul26+$41)|0);
      var $42=$exc_addr;
      var $arrayidx28=(($42+($add27<<2))|0);
      var $43=HEAPF32[(($arrayidx28)>>2)];
      var $conv29=$43;
      var $add30=$conv29+$mul25;
      var $conv31=$add30;
      HEAPF32[(($arrayidx28)>>2)]=$conv31;
      __label__ = 14; break;
    case 14: // $for_inc32
      var $44=$j;
      var $inc33=(($44+1)|0);
      $j=$inc33;
      __label__ = 12; break;
    case 15: // $for_end34
      __label__ = 16; break;
    case 16: // $for_inc35
      var $45=$i;
      var $inc36=(($45+1)|0);
      $i=$inc36;
      __label__ = 8; break;
    case 17: // $for_end37
      var $46=$saved_stack;
      _llvm_stackrestore($46);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_split_cb_shape_sign_unquant["X"]=1;

function _noise_codebook_quant($target, $ak, $awk1, $awk2, $par, $p, $nsf, $exc, $r, $bits, $stack, $complexity, $update_target) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $target_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $par_addr;
      var $p_addr;
      var $nsf_addr;
      var $exc_addr;
      var $r_addr;
      var $bits_addr;
      var $stack_addr;
      var $complexity_addr;
      var $update_target_addr;
      var $i;
      var $saved_stack;
      $target_addr=$target;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $par_addr=$par;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $exc_addr=$exc;
      $r_addr=$r;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $complexity_addr=$complexity;
      $update_target_addr=$update_target;
      var $0=$nsf_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $2=$target_addr;
      var $3=$ak_addr;
      var $4=$awk1_addr;
      var $5=$awk2_addr;
      var $6=$nsf_addr;
      var $7=$p_addr;
      var $8=$stack_addr;
      _residue_percep_zero16($2, $3, $4, $5, $vla, $6, $7, $8);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $9=$i;
      var $10=$nsf_addr;
      var $cmp=(($9)|0) < (($10)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $11=$i;
      var $arrayidx=(($vla+($11<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $13=$i;
      var $14=$exc_addr;
      var $arrayidx1=(($14+($13<<2))|0);
      var $15=HEAPF32[(($arrayidx1)>>2)];
      var $add=$15+$12;
      HEAPF32[(($arrayidx1)>>2)]=$add;
      __label__ = 3; break;
    case 3: // $for_inc
      var $16=$i;
      var $inc=(($16+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $17=$target_addr;
      var $18=$17;
      var $19=$nsf_addr;
      var $mul=((($19<<2))|0);
      _memset($18, 0, $mul, 1);
      var $20=$saved_stack;
      _llvm_stackrestore($20);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_noise_codebook_quant["X"]=1;

function _speex_rand($std, $seed) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $std_addr;
  var $seed_addr;
  var $jflone;
  var $jflmsk;
  var $ran=__stackBase__;
  $std_addr=$std;
  $seed_addr=$seed;
  $jflone=1065353216;
  $jflmsk=8388607;
  var $0=$seed_addr;
  var $1=HEAP32[(($0)>>2)];
  var $mul=(($1*1664525)|0);
  var $add=(($mul+1013904223)|0);
  var $2=$seed_addr;
  HEAP32[(($2)>>2)]=$add;
  var $3=$seed_addr;
  var $4=HEAP32[(($3)>>2)];
  var $and=8388607 & $4;
  var $or=1065353216 | $and;
  var $i=$ran;
  HEAP32[(($i)>>2)]=$or;
  var $f=$ran;
  var $5=HEAPF32[(($f)>>2)];
  var $conv=$5;
  var $sub=$conv-1.5;
  var $conv1=$sub;
  HEAPF32[(($f)>>2)]=$conv1;
  var $6=$std_addr;
  var $conv2=$6;
  var $mul3=$conv2*3.4642;
  var $f4=$ran;
  var $7=HEAPF32[(($f4)>>2)];
  var $conv5=$7;
  var $mul6=$mul3*$conv5;
  var $conv7=$mul6;
  STACKTOP = __stackBase__;
  return $conv7;
}


function _bw_lpc($gamma, $lpc_in, $lpc_out, $order) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $gamma_addr;
      var $lpc_in_addr;
      var $lpc_out_addr;
      var $order_addr;
      var $i;
      var $tmp;
      $gamma_addr=$gamma;
      $lpc_in_addr=$lpc_in;
      $lpc_out_addr=$lpc_out;
      $order_addr=$order;
      var $0=$gamma_addr;
      $tmp=$0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $1=$i;
      var $2=$order_addr;
      var $cmp=(($1)|0) < (($2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $3=$tmp;
      var $4=$i;
      var $5=$lpc_in_addr;
      var $arrayidx=(($5+($4<<2))|0);
      var $6=HEAPF32[(($arrayidx)>>2)];
      var $mul=$3*$6;
      var $7=$i;
      var $8=$lpc_out_addr;
      var $arrayidx1=(($8+($7<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$mul;
      var $9=$tmp;
      var $10=$gamma_addr;
      var $mul2=$9*$10;
      $tmp=$mul2;
      __label__ = 3; break;
    case 3: // $for_inc
      var $11=$i;
      var $inc=(($11+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _sanitize_values32($vec, $min_val, $max_val, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $vec_addr;
      var $min_val_addr;
      var $max_val_addr;
      var $len_addr;
      var $i;
      $vec_addr=$vec;
      $min_val_addr=$min_val;
      $max_val_addr=$max_val;
      $len_addr=$len;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$len_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 13; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$vec_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$min_val_addr;
      var $cmp1=$4 >= $5;
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $land_lhs_true
      var $6=$i;
      var $7=$vec_addr;
      var $arrayidx2=(($7+($6<<2))|0);
      var $8=HEAPF32[(($arrayidx2)>>2)];
      var $9=$max_val_addr;
      var $cmp3=$8 <= $9;
      if ($cmp3) { __label__ = 11; break; } else { __label__ = 4; break; }
    case 4: // $if_then
      var $10=$i;
      var $11=$vec_addr;
      var $arrayidx4=(($11+($10<<2))|0);
      var $12=HEAPF32[(($arrayidx4)>>2)];
      var $13=$min_val_addr;
      var $cmp5=$12 < $13;
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then6
      var $14=$min_val_addr;
      var $15=$i;
      var $16=$vec_addr;
      var $arrayidx7=(($16+($15<<2))|0);
      HEAPF32[(($arrayidx7)>>2)]=$14;
      __label__ = 10; break;
    case 6: // $if_else
      var $17=$i;
      var $18=$vec_addr;
      var $arrayidx8=(($18+($17<<2))|0);
      var $19=HEAPF32[(($arrayidx8)>>2)];
      var $20=$max_val_addr;
      var $cmp9=$19 > $20;
      if ($cmp9) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then10
      var $21=$max_val_addr;
      var $22=$i;
      var $23=$vec_addr;
      var $arrayidx11=(($23+($22<<2))|0);
      HEAPF32[(($arrayidx11)>>2)]=$21;
      __label__ = 9; break;
    case 8: // $if_else12
      var $24=$i;
      var $25=$vec_addr;
      var $arrayidx13=(($25+($24<<2))|0);
      HEAPF32[(($arrayidx13)>>2)]=0;
      __label__ = 9; break;
    case 9: // $if_end
      __label__ = 10; break;
    case 10: // $if_end14
      __label__ = 11; break;
    case 11: // $if_end15
      __label__ = 12; break;
    case 12: // $for_inc
      var $26=$i;
      var $inc=(($26+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 13: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_sanitize_values32["X"]=1;

function _highpass($x, $y, $len, $filtID, $mem) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $y_addr;
      var $len_addr;
      var $filtID_addr;
      var $mem_addr;
      var $i;
      var $den;
      var $num;
      var $yi;
      var $vout;
      $x_addr=$x;
      $y_addr=$y;
      $len_addr=$len;
      $filtID_addr=$filtID;
      $mem_addr=$mem;
      var $0=$filtID_addr;
      var $cmp=(($0)|0) > 4;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $filtID_addr=4;
      __label__ = 2; break;
    case 2: // $if_end
      var $1=$filtID_addr;
      var $arrayidx=((_highpass_Pcoef+$1*12)|0);
      var $arraydecay=(($arrayidx)|0);
      $den=$arraydecay;
      var $2=$filtID_addr;
      var $arrayidx1=((_highpass_Zcoef+$2*12)|0);
      var $arraydecay2=(($arrayidx1)|0);
      $num=$arraydecay2;
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $3=$i;
      var $4=$len_addr;
      var $cmp3=(($3)|0) < (($4)|0);
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $5=$num;
      var $arrayidx4=(($5)|0);
      var $6=HEAPF32[(($arrayidx4)>>2)];
      var $7=$i;
      var $8=$x_addr;
      var $arrayidx5=(($8+($7<<2))|0);
      var $9=HEAPF32[(($arrayidx5)>>2)];
      var $mul=$6*$9;
      var $10=$mem_addr;
      var $arrayidx6=(($10)|0);
      var $11=HEAPF32[(($arrayidx6)>>2)];
      var $add=$mul+$11;
      $vout=$add;
      var $12=$vout;
      $yi=$12;
      var $13=$mem_addr;
      var $arrayidx7=(($13+4)|0);
      var $14=HEAPF32[(($arrayidx7)>>2)];
      var $15=$num;
      var $arrayidx8=(($15+4)|0);
      var $16=HEAPF32[(($arrayidx8)>>2)];
      var $17=$i;
      var $18=$x_addr;
      var $arrayidx9=(($18+($17<<2))|0);
      var $19=HEAPF32[(($arrayidx9)>>2)];
      var $mul10=$16*$19;
      var $add11=$14+$mul10;
      var $20=$den;
      var $arrayidx12=(($20+4)|0);
      var $21=HEAPF32[(($arrayidx12)>>2)];
      var $sub=(-$21);
      var $22=$vout;
      var $mul13=$sub*$22;
      var $add14=$add11+$mul13;
      var $23=$mem_addr;
      var $arrayidx15=(($23)|0);
      HEAPF32[(($arrayidx15)>>2)]=$add14;
      var $24=$num;
      var $arrayidx16=(($24+8)|0);
      var $25=HEAPF32[(($arrayidx16)>>2)];
      var $26=$i;
      var $27=$x_addr;
      var $arrayidx17=(($27+($26<<2))|0);
      var $28=HEAPF32[(($arrayidx17)>>2)];
      var $mul18=$25*$28;
      var $29=$den;
      var $arrayidx19=(($29+8)|0);
      var $30=HEAPF32[(($arrayidx19)>>2)];
      var $sub20=(-$30);
      var $31=$vout;
      var $mul21=$sub20*$31;
      var $add22=$mul18+$mul21;
      var $32=$mem_addr;
      var $arrayidx23=(($32+4)|0);
      HEAPF32[(($arrayidx23)>>2)]=$add22;
      var $33=$yi;
      var $34=$i;
      var $35=$y_addr;
      var $arrayidx24=(($35+($34<<2))|0);
      HEAPF32[(($arrayidx24)>>2)]=$33;
      __label__ = 5; break;
    case 5: // $for_inc
      var $36=$i;
      var $inc=(($36+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_highpass["X"]=1;

function _signal_mul($x, $y, $scale, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $y_addr;
      var $scale_addr;
      var $len_addr;
      var $i;
      $x_addr=$x;
      $y_addr=$y;
      $scale_addr=$scale;
      $len_addr=$len;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$len_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$scale_addr;
      var $3=$i;
      var $4=$x_addr;
      var $arrayidx=(($4+($3<<2))|0);
      var $5=HEAPF32[(($arrayidx)>>2)];
      var $mul=$2*$5;
      var $6=$i;
      var $7=$y_addr;
      var $arrayidx1=(($7+($6<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$mul;
      __label__ = 3; break;
    case 3: // $for_inc
      var $8=$i;
      var $inc=(($8+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _signal_div($x, $y, $scale, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $y_addr;
      var $scale_addr;
      var $len_addr;
      var $i;
      var $scale_1;
      $x_addr=$x;
      $y_addr=$y;
      $scale_addr=$scale;
      $len_addr=$len;
      var $0=$scale_addr;
      var $div=1/$0;
      $scale_1=$div;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $1=$i;
      var $2=$len_addr;
      var $cmp=(($1)|0) < (($2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $3=$scale_1;
      var $4=$i;
      var $5=$x_addr;
      var $arrayidx=(($5+($4<<2))|0);
      var $6=HEAPF32[(($arrayidx)>>2)];
      var $mul=$3*$6;
      var $7=$i;
      var $8=$y_addr;
      var $arrayidx1=(($8+($7<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$mul;
      __label__ = 3; break;
    case 3: // $for_inc
      var $9=$i;
      var $inc=(($9+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _filter_mem16($x, $num, $den, $y, $N, $ord, $mem, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $num_addr;
      var $den_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $mem_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $xi;
      var $yi;
      var $nyi;
      $x_addr=$x;
      $num_addr=$num;
      $den_addr=$den;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $mem_addr=$mem;
      $stack_addr=$stack;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$N_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$x_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      $xi=$4;
      var $5=$i;
      var $6=$x_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx1)>>2)];
      var $8=$mem_addr;
      var $arrayidx2=(($8)|0);
      var $9=HEAPF32[(($arrayidx2)>>2)];
      var $add=$7+$9;
      $yi=$add;
      var $10=$yi;
      var $sub=(-$10);
      $nyi=$sub;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond3
      var $11=$j;
      var $12=$ord_addr;
      var $sub4=(($12-1)|0);
      var $cmp5=(($11)|0) < (($sub4)|0);
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body6
      var $13=$j;
      var $add7=(($13+1)|0);
      var $14=$mem_addr;
      var $arrayidx8=(($14+($add7<<2))|0);
      var $15=HEAPF32[(($arrayidx8)>>2)];
      var $16=$j;
      var $17=$num_addr;
      var $arrayidx9=(($17+($16<<2))|0);
      var $18=HEAPF32[(($arrayidx9)>>2)];
      var $19=$xi;
      var $mul=$18*$19;
      var $add10=$15+$mul;
      var $20=$j;
      var $21=$den_addr;
      var $arrayidx11=(($21+($20<<2))|0);
      var $22=HEAPF32[(($arrayidx11)>>2)];
      var $23=$nyi;
      var $mul12=$22*$23;
      var $add13=$add10+$mul12;
      var $24=$j;
      var $25=$mem_addr;
      var $arrayidx14=(($25+($24<<2))|0);
      HEAPF32[(($arrayidx14)>>2)]=$add13;
      __label__ = 5; break;
    case 5: // $for_inc
      var $26=$j;
      var $inc=(($26+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $27=$ord_addr;
      var $sub15=(($27-1)|0);
      var $28=$num_addr;
      var $arrayidx16=(($28+($sub15<<2))|0);
      var $29=HEAPF32[(($arrayidx16)>>2)];
      var $30=$xi;
      var $mul17=$29*$30;
      var $31=$ord_addr;
      var $sub18=(($31-1)|0);
      var $32=$den_addr;
      var $arrayidx19=(($32+($sub18<<2))|0);
      var $33=HEAPF32[(($arrayidx19)>>2)];
      var $34=$nyi;
      var $mul20=$33*$34;
      var $add21=$mul17+$mul20;
      var $35=$ord_addr;
      var $sub22=(($35-1)|0);
      var $36=$mem_addr;
      var $arrayidx23=(($36+($sub22<<2))|0);
      HEAPF32[(($arrayidx23)>>2)]=$add21;
      var $37=$yi;
      var $38=$i;
      var $39=$y_addr;
      var $arrayidx24=(($39+($38<<2))|0);
      HEAPF32[(($arrayidx24)>>2)]=$37;
      __label__ = 7; break;
    case 7: // $for_inc25
      var $40=$i;
      var $inc26=(($40+1)|0);
      $i=$inc26;
      __label__ = 1; break;
    case 8: // $for_end27
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_filter_mem16["X"]=1;

function _iir_mem16($x, $den, $y, $N, $ord, $mem, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $den_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $mem_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $yi;
      var $nyi;
      $x_addr=$x;
      $den_addr=$den;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $mem_addr=$mem;
      $stack_addr=$stack;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$N_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$x_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$mem_addr;
      var $arrayidx1=(($5)|0);
      var $6=HEAPF32[(($arrayidx1)>>2)];
      var $add=$4+$6;
      $yi=$add;
      var $7=$yi;
      var $sub=(-$7);
      $nyi=$sub;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond2
      var $8=$j;
      var $9=$ord_addr;
      var $sub3=(($9-1)|0);
      var $cmp4=(($8)|0) < (($sub3)|0);
      if ($cmp4) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body5
      var $10=$j;
      var $add6=(($10+1)|0);
      var $11=$mem_addr;
      var $arrayidx7=(($11+($add6<<2))|0);
      var $12=HEAPF32[(($arrayidx7)>>2)];
      var $13=$j;
      var $14=$den_addr;
      var $arrayidx8=(($14+($13<<2))|0);
      var $15=HEAPF32[(($arrayidx8)>>2)];
      var $16=$nyi;
      var $mul=$15*$16;
      var $add9=$12+$mul;
      var $17=$j;
      var $18=$mem_addr;
      var $arrayidx10=(($18+($17<<2))|0);
      HEAPF32[(($arrayidx10)>>2)]=$add9;
      __label__ = 5; break;
    case 5: // $for_inc
      var $19=$j;
      var $inc=(($19+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $20=$ord_addr;
      var $sub11=(($20-1)|0);
      var $21=$den_addr;
      var $arrayidx12=(($21+($sub11<<2))|0);
      var $22=HEAPF32[(($arrayidx12)>>2)];
      var $23=$nyi;
      var $mul13=$22*$23;
      var $24=$ord_addr;
      var $sub14=(($24-1)|0);
      var $25=$mem_addr;
      var $arrayidx15=(($25+($sub14<<2))|0);
      HEAPF32[(($arrayidx15)>>2)]=$mul13;
      var $26=$yi;
      var $27=$i;
      var $28=$y_addr;
      var $arrayidx16=(($28+($27<<2))|0);
      HEAPF32[(($arrayidx16)>>2)]=$26;
      __label__ = 7; break;
    case 7: // $for_inc17
      var $29=$i;
      var $inc18=(($29+1)|0);
      $i=$inc18;
      __label__ = 1; break;
    case 8: // $for_end19
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_iir_mem16["X"]=1;

function _fir_mem16($x, $num, $y, $N, $ord, $mem, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $num_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $mem_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $xi;
      var $yi;
      $x_addr=$x;
      $num_addr=$num;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $mem_addr=$mem;
      $stack_addr=$stack;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$N_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 8; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$x_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      $xi=$4;
      var $5=$i;
      var $6=$x_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx1)>>2)];
      var $8=$mem_addr;
      var $arrayidx2=(($8)|0);
      var $9=HEAPF32[(($arrayidx2)>>2)];
      var $add=$7+$9;
      $yi=$add;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond3
      var $10=$j;
      var $11=$ord_addr;
      var $sub=(($11-1)|0);
      var $cmp4=(($10)|0) < (($sub)|0);
      if ($cmp4) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body5
      var $12=$j;
      var $add6=(($12+1)|0);
      var $13=$mem_addr;
      var $arrayidx7=(($13+($add6<<2))|0);
      var $14=HEAPF32[(($arrayidx7)>>2)];
      var $15=$j;
      var $16=$num_addr;
      var $arrayidx8=(($16+($15<<2))|0);
      var $17=HEAPF32[(($arrayidx8)>>2)];
      var $18=$xi;
      var $mul=$17*$18;
      var $add9=$14+$mul;
      var $19=$j;
      var $20=$mem_addr;
      var $arrayidx10=(($20+($19<<2))|0);
      HEAPF32[(($arrayidx10)>>2)]=$add9;
      __label__ = 5; break;
    case 5: // $for_inc
      var $21=$j;
      var $inc=(($21+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $22=$ord_addr;
      var $sub11=(($22-1)|0);
      var $23=$num_addr;
      var $arrayidx12=(($23+($sub11<<2))|0);
      var $24=HEAPF32[(($arrayidx12)>>2)];
      var $25=$xi;
      var $mul13=$24*$25;
      var $26=$ord_addr;
      var $sub14=(($26-1)|0);
      var $27=$mem_addr;
      var $arrayidx15=(($27+($sub14<<2))|0);
      HEAPF32[(($arrayidx15)>>2)]=$mul13;
      var $28=$yi;
      var $29=$i;
      var $30=$y_addr;
      var $arrayidx16=(($30+($29<<2))|0);
      HEAPF32[(($arrayidx16)>>2)]=$28;
      __label__ = 7; break;
    case 7: // $for_inc17
      var $31=$i;
      var $inc18=(($31+1)|0);
      $i=$inc18;
      __label__ = 1; break;
    case 8: // $for_end19
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_fir_mem16["X"]=1;

function _noise_codebook_unquant($exc, $par, $nsf, $bits, $stack, $seed) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $par_addr;
      var $nsf_addr;
      var $bits_addr;
      var $stack_addr;
      var $seed_addr;
      var $i;
      $exc_addr=$exc;
      $par_addr=$par;
      $nsf_addr=$nsf;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $seed_addr=$seed;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$nsf_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$seed_addr;
      var $call=_speex_rand(1, $2);
      var $3=$i;
      var $4=$exc_addr;
      var $arrayidx=(($4+($3<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$call;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _compute_rms($x, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $len_addr;
      var $i;
      var $sum;
      $x_addr=$x;
      $len_addr=$len;
      $sum=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$len_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$x_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $6=$x_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx1)>>2)];
      var $mul=$4*$7;
      var $8=$sum;
      var $add=$8+$mul;
      $sum=$add;
      __label__ = 3; break;
    case 3: // $for_inc
      var $9=$i;
      var $inc=(($9+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $10=$sum;
      var $11=$len_addr;
      var $conv=(($11)|0);
      var $div=$10/$conv;
      var $conv2=$div;
      var $add3=$conv2+0.1;
      var $call=_sqrt($add3);
      var $conv4=$call;
      ;
      return $conv4;
    default: assert(0, "bad label: " + __label__);
  }
}


function _compute_rms16($x, $len) {
  ;
  var __label__;

  var $x_addr;
  var $len_addr;
  $x_addr=$x;
  $len_addr=$len;
  var $0=$x_addr;
  var $1=$len_addr;
  var $call=_compute_rms($0, $1);
  ;
  return $call;
}


function _syn_percep_zero16($xx, $ak, $awk1, $awk2, $y, $N, $ord, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $xx_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $stack_addr;
      var $i;
      var $saved_stack;
      $xx_addr=$xx;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $stack_addr=$stack;
      var $0=$ord_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=$ord_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $4=$i;
      var $arrayidx=(($vla+($4<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $6=$xx_addr;
      var $7=$ak_addr;
      var $8=$y_addr;
      var $9=$N_addr;
      var $10=$ord_addr;
      var $11=$stack_addr;
      _iir_mem16($6, $7, $8, $9, $10, $vla, $11);
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond1
      var $12=$i;
      var $13=$ord_addr;
      var $cmp2=(($12)|0) < (($13)|0);
      if ($cmp2) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body3
      var $14=$i;
      var $arrayidx4=(($vla+($14<<2))|0);
      HEAPF32[(($arrayidx4)>>2)]=0;
      __label__ = 7; break;
    case 7: // $for_inc5
      var $15=$i;
      var $inc6=(($15+1)|0);
      $i=$inc6;
      __label__ = 5; break;
    case 8: // $for_end7
      var $16=$y_addr;
      var $17=$awk1_addr;
      var $18=$awk2_addr;
      var $19=$y_addr;
      var $20=$N_addr;
      var $21=$ord_addr;
      var $22=$stack_addr;
      _filter_mem16($16, $17, $18, $19, $20, $21, $vla, $22);
      var $23=$saved_stack;
      _llvm_stackrestore($23);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_syn_percep_zero16["X"]=1;

function _residue_percep_zero16($xx, $ak, $awk1, $awk2, $y, $N, $ord, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $xx_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $stack_addr;
      var $i;
      var $saved_stack;
      $xx_addr=$xx;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $stack_addr=$stack;
      var $0=$ord_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=$ord_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $4=$i;
      var $arrayidx=(($vla+($4<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $6=$xx_addr;
      var $7=$ak_addr;
      var $8=$awk1_addr;
      var $9=$y_addr;
      var $10=$N_addr;
      var $11=$ord_addr;
      var $12=$stack_addr;
      _filter_mem16($6, $7, $8, $9, $10, $11, $vla, $12);
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond1
      var $13=$i;
      var $14=$ord_addr;
      var $cmp2=(($13)|0) < (($14)|0);
      if ($cmp2) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body3
      var $15=$i;
      var $arrayidx4=(($vla+($15<<2))|0);
      HEAPF32[(($arrayidx4)>>2)]=0;
      __label__ = 7; break;
    case 7: // $for_inc5
      var $16=$i;
      var $inc6=(($16+1)|0);
      $i=$inc6;
      __label__ = 5; break;
    case 8: // $for_end7
      var $17=$y_addr;
      var $18=$awk2_addr;
      var $19=$y_addr;
      var $20=$N_addr;
      var $21=$ord_addr;
      var $22=$stack_addr;
      _fir_mem16($17, $18, $19, $20, $21, $vla, $22);
      var $23=$saved_stack;
      _llvm_stackrestore($23);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_residue_percep_zero16["X"]=1;

function _compute_impulse_response($ak, $awk1, $awk2, $y, $N, $ord, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $y_addr;
      var $N_addr;
      var $ord_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $y1;
      var $ny1i;
      var $ny2i;
      var $saved_stack;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $y_addr=$y;
      $N_addr=$N;
      $ord_addr=$ord;
      $stack_addr=$stack;
      var $0=$ord_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $2=$ord_addr;
      var $vla1=STACKTOP;STACKTOP += $2*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $3=$y_addr;
      var $arrayidx=(($3)|0);
      HEAPF32[(($arrayidx)>>2)]=1;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $4=$i;
      var $5=$ord_addr;
      var $cmp=(($4)|0) < (($5)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $6=$i;
      var $7=$awk1_addr;
      var $arrayidx2=(($7+($6<<2))|0);
      var $8=HEAPF32[(($arrayidx2)>>2)];
      var $9=$i;
      var $add=(($9+1)|0);
      var $10=$y_addr;
      var $arrayidx3=(($10+($add<<2))|0);
      HEAPF32[(($arrayidx3)>>2)]=$8;
      __label__ = 3; break;
    case 3: // $for_inc
      var $11=$i;
      var $inc=(($11+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $12=$i;
      var $inc4=(($12+1)|0);
      $i=$inc4;
      __label__ = 5; break;
    case 5: // $for_cond5
      var $13=$i;
      var $14=$N_addr;
      var $cmp6=(($13)|0) < (($14)|0);
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body7
      var $15=$i;
      var $16=$y_addr;
      var $arrayidx8=(($16+($15<<2))|0);
      HEAPF32[(($arrayidx8)>>2)]=1.0000000036274937e-15;
      __label__ = 7; break;
    case 7: // $for_inc9
      var $17=$i;
      var $inc10=(($17+1)|0);
      $i=$inc10;
      __label__ = 5; break;
    case 8: // $for_end11
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond12
      var $18=$i;
      var $19=$ord_addr;
      var $cmp13=(($18)|0) < (($19)|0);
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body14
      var $20=$i;
      var $arrayidx15=(($vla1+($20<<2))|0);
      HEAPF32[(($arrayidx15)>>2)]=0;
      var $21=$i;
      var $arrayidx16=(($vla+($21<<2))|0);
      HEAPF32[(($arrayidx16)>>2)]=0;
      __label__ = 11; break;
    case 11: // $for_inc17
      var $22=$i;
      var $inc18=(($22+1)|0);
      $i=$inc18;
      __label__ = 9; break;
    case 12: // $for_end19
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond20
      var $23=$i;
      var $24=$N_addr;
      var $cmp21=(($23)|0) < (($24)|0);
      if ($cmp21) { __label__ = 14; break; } else { __label__ = 20; break; }
    case 14: // $for_body22
      var $25=$i;
      var $26=$y_addr;
      var $arrayidx23=(($26+($25<<2))|0);
      var $27=HEAPF32[(($arrayidx23)>>2)];
      var $arrayidx24=(($vla)|0);
      var $28=HEAPF32[(($arrayidx24)>>2)];
      var $add25=$27+$28;
      $y1=$add25;
      var $29=$y1;
      var $sub=(-$29);
      $ny1i=$sub;
      var $30=$y1;
      var $arrayidx26=(($vla1)|0);
      var $31=HEAPF32[(($arrayidx26)>>2)];
      var $add27=$30+$31;
      var $32=$i;
      var $33=$y_addr;
      var $arrayidx28=(($33+($32<<2))|0);
      HEAPF32[(($arrayidx28)>>2)]=$add27;
      var $34=$i;
      var $35=$y_addr;
      var $arrayidx29=(($35+($34<<2))|0);
      var $36=HEAPF32[(($arrayidx29)>>2)];
      var $sub30=(-$36);
      $ny2i=$sub30;
      $j=0;
      __label__ = 15; break;
    case 15: // $for_cond31
      var $37=$j;
      var $38=$ord_addr;
      var $sub32=(($38-1)|0);
      var $cmp33=(($37)|0) < (($sub32)|0);
      if ($cmp33) { __label__ = 16; break; } else { __label__ = 18; break; }
    case 16: // $for_body34
      var $39=$j;
      var $add35=(($39+1)|0);
      var $arrayidx36=(($vla+($add35<<2))|0);
      var $40=HEAPF32[(($arrayidx36)>>2)];
      var $41=$j;
      var $42=$awk2_addr;
      var $arrayidx37=(($42+($41<<2))|0);
      var $43=HEAPF32[(($arrayidx37)>>2)];
      var $44=$ny1i;
      var $mul=$43*$44;
      var $add38=$40+$mul;
      var $45=$j;
      var $arrayidx39=(($vla+($45<<2))|0);
      HEAPF32[(($arrayidx39)>>2)]=$add38;
      var $46=$j;
      var $add40=(($46+1)|0);
      var $arrayidx41=(($vla1+($add40<<2))|0);
      var $47=HEAPF32[(($arrayidx41)>>2)];
      var $48=$j;
      var $49=$ak_addr;
      var $arrayidx42=(($49+($48<<2))|0);
      var $50=HEAPF32[(($arrayidx42)>>2)];
      var $51=$ny2i;
      var $mul43=$50*$51;
      var $add44=$47+$mul43;
      var $52=$j;
      var $arrayidx45=(($vla1+($52<<2))|0);
      HEAPF32[(($arrayidx45)>>2)]=$add44;
      __label__ = 17; break;
    case 17: // $for_inc46
      var $53=$j;
      var $inc47=(($53+1)|0);
      $j=$inc47;
      __label__ = 15; break;
    case 18: // $for_end48
      var $54=$ord_addr;
      var $sub49=(($54-1)|0);
      var $55=$awk2_addr;
      var $arrayidx50=(($55+($sub49<<2))|0);
      var $56=HEAPF32[(($arrayidx50)>>2)];
      var $57=$ny1i;
      var $mul51=$56*$57;
      var $58=$ord_addr;
      var $sub52=(($58-1)|0);
      var $arrayidx53=(($vla+($sub52<<2))|0);
      HEAPF32[(($arrayidx53)>>2)]=$mul51;
      var $59=$ord_addr;
      var $sub54=(($59-1)|0);
      var $60=$ak_addr;
      var $arrayidx55=(($60+($sub54<<2))|0);
      var $61=HEAPF32[(($arrayidx55)>>2)];
      var $62=$ny2i;
      var $mul56=$61*$62;
      var $63=$ord_addr;
      var $sub57=(($63-1)|0);
      var $arrayidx58=(($vla1+($sub57<<2))|0);
      HEAPF32[(($arrayidx58)>>2)]=$mul56;
      __label__ = 19; break;
    case 19: // $for_inc59
      var $64=$i;
      var $inc60=(($64+1)|0);
      $i=$inc60;
      __label__ = 13; break;
    case 20: // $for_end61
      var $65=$saved_stack;
      _llvm_stackrestore($65);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_compute_impulse_response["X"]=1;

function _qmf_decomp($xx, $aa, $y1, $y2, $N, $M, $mem, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $xx_addr;
      var $aa_addr;
      var $y1_addr;
      var $y2_addr;
      var $N_addr;
      var $M_addr;
      var $mem_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $k;
      var $M2;
      var $x2;
      var $saved_stack;
      var $y1k;
      var $y2k;
      $xx_addr=$xx;
      $aa_addr=$aa;
      $y1_addr=$y1;
      $y2_addr=$y2;
      $N_addr=$N;
      $M_addr=$M;
      $mem_addr=$mem;
      $stack_addr=$stack;
      var $0=$M_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $2=$N_addr;
      var $3=$M_addr;
      var $add=(($2+$3)|0);
      var $sub=(($add-1)|0);
      var $vla1=STACKTOP;STACKTOP += $sub*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $4=$M_addr;
      var $add_ptr=(($vla1+($4<<2))|0);
      var $add_ptr2=(($add_ptr-4)|0);
      $x2=$add_ptr2;
      var $5=$M_addr;
      var $shr=$5 >> 1;
      $M2=$shr;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $6=$i;
      var $7=$M_addr;
      var $cmp=(($6)|0) < (($7)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $8=$i;
      var $9=$aa_addr;
      var $arrayidx=(($9+($8<<2))|0);
      var $10=HEAPF32[(($arrayidx)>>2)];
      var $11=$M_addr;
      var $12=$i;
      var $sub3=(($11-$12)|0);
      var $sub4=(($sub3-1)|0);
      var $arrayidx5=(($vla+($sub4<<2))|0);
      HEAPF32[(($arrayidx5)>>2)]=$10;
      __label__ = 3; break;
    case 3: // $for_inc
      var $13=$i;
      var $inc=(($13+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond6
      var $14=$i;
      var $15=$M_addr;
      var $sub7=(($15-1)|0);
      var $cmp8=(($14)|0) < (($sub7)|0);
      if ($cmp8) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body9
      var $16=$M_addr;
      var $17=$i;
      var $sub10=(($16-$17)|0);
      var $sub11=(($sub10-2)|0);
      var $18=$mem_addr;
      var $arrayidx12=(($18+($sub11<<2))|0);
      var $19=HEAPF32[(($arrayidx12)>>2)];
      var $20=$i;
      var $arrayidx13=(($vla1+($20<<2))|0);
      HEAPF32[(($arrayidx13)>>2)]=$19;
      __label__ = 7; break;
    case 7: // $for_inc14
      var $21=$i;
      var $inc15=(($21+1)|0);
      $i=$inc15;
      __label__ = 5; break;
    case 8: // $for_end16
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond17
      var $22=$i;
      var $23=$N_addr;
      var $cmp18=(($22)|0) < (($23)|0);
      if ($cmp18) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body19
      var $24=$i;
      var $25=$xx_addr;
      var $arrayidx20=(($25+($24<<2))|0);
      var $26=HEAPF32[(($arrayidx20)>>2)];
      var $27=$i;
      var $28=$M_addr;
      var $add21=(($27+$28)|0);
      var $sub22=(($add21-1)|0);
      var $arrayidx23=(($vla1+($sub22<<2))|0);
      HEAPF32[(($arrayidx23)>>2)]=$26;
      __label__ = 11; break;
    case 11: // $for_inc24
      var $29=$i;
      var $inc25=(($29+1)|0);
      $i=$inc25;
      __label__ = 9; break;
    case 12: // $for_end26
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond27
      var $30=$i;
      var $31=$M_addr;
      var $sub28=(($31-1)|0);
      var $cmp29=(($30)|0) < (($sub28)|0);
      if ($cmp29) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body30
      var $32=$N_addr;
      var $33=$i;
      var $sub31=(($32-$33)|0);
      var $sub32=(($sub31-1)|0);
      var $34=$xx_addr;
      var $arrayidx33=(($34+($sub32<<2))|0);
      var $35=HEAPF32[(($arrayidx33)>>2)];
      var $36=$i;
      var $37=$mem_addr;
      var $arrayidx34=(($37+($36<<2))|0);
      HEAPF32[(($arrayidx34)>>2)]=$35;
      __label__ = 15; break;
    case 15: // $for_inc35
      var $38=$i;
      var $inc36=(($38+1)|0);
      $i=$inc36;
      __label__ = 13; break;
    case 16: // $for_end37
      $i=0;
      $k=0;
      __label__ = 17; break;
    case 17: // $for_cond38
      var $39=$i;
      var $40=$N_addr;
      var $cmp39=(($39)|0) < (($40)|0);
      if ($cmp39) { __label__ = 18; break; } else { __label__ = 24; break; }
    case 18: // $for_body40
      $y1k=0;
      $y2k=0;
      $j=0;
      __label__ = 19; break;
    case 19: // $for_cond41
      var $41=$j;
      var $42=$M2;
      var $cmp42=(($41)|0) < (($42)|0);
      if ($cmp42) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body43
      var $43=$y1k;
      var $44=$j;
      var $arrayidx44=(($vla+($44<<2))|0);
      var $45=HEAPF32[(($arrayidx44)>>2)];
      var $46=$i;
      var $47=$j;
      var $add45=(($46+$47)|0);
      var $arrayidx46=(($vla1+($add45<<2))|0);
      var $48=HEAPF32[(($arrayidx46)>>2)];
      var $49=$i;
      var $50=$j;
      var $sub47=(($49-$50)|0);
      var $51=$x2;
      var $arrayidx48=(($51+($sub47<<2))|0);
      var $52=HEAPF32[(($arrayidx48)>>2)];
      var $add49=$48+$52;
      var $mul=$45*$add49;
      var $add50=$43+$mul;
      $y1k=$add50;
      var $53=$y2k;
      var $54=$j;
      var $arrayidx51=(($vla+($54<<2))|0);
      var $55=HEAPF32[(($arrayidx51)>>2)];
      var $56=$i;
      var $57=$j;
      var $add52=(($56+$57)|0);
      var $arrayidx53=(($vla1+($add52<<2))|0);
      var $58=HEAPF32[(($arrayidx53)>>2)];
      var $59=$i;
      var $60=$j;
      var $sub54=(($59-$60)|0);
      var $61=$x2;
      var $arrayidx55=(($61+($sub54<<2))|0);
      var $62=HEAPF32[(($arrayidx55)>>2)];
      var $sub56=$58-$62;
      var $mul57=$55*$sub56;
      var $sub58=$53-$mul57;
      $y2k=$sub58;
      var $63=$j;
      var $inc59=(($63+1)|0);
      $j=$inc59;
      var $64=$y1k;
      var $65=$j;
      var $arrayidx60=(($vla+($65<<2))|0);
      var $66=HEAPF32[(($arrayidx60)>>2)];
      var $67=$i;
      var $68=$j;
      var $add61=(($67+$68)|0);
      var $arrayidx62=(($vla1+($add61<<2))|0);
      var $69=HEAPF32[(($arrayidx62)>>2)];
      var $70=$i;
      var $71=$j;
      var $sub63=(($70-$71)|0);
      var $72=$x2;
      var $arrayidx64=(($72+($sub63<<2))|0);
      var $73=HEAPF32[(($arrayidx64)>>2)];
      var $add65=$69+$73;
      var $mul66=$66*$add65;
      var $add67=$64+$mul66;
      $y1k=$add67;
      var $74=$y2k;
      var $75=$j;
      var $arrayidx68=(($vla+($75<<2))|0);
      var $76=HEAPF32[(($arrayidx68)>>2)];
      var $77=$i;
      var $78=$j;
      var $add69=(($77+$78)|0);
      var $arrayidx70=(($vla1+($add69<<2))|0);
      var $79=HEAPF32[(($arrayidx70)>>2)];
      var $80=$i;
      var $81=$j;
      var $sub71=(($80-$81)|0);
      var $82=$x2;
      var $arrayidx72=(($82+($sub71<<2))|0);
      var $83=HEAPF32[(($arrayidx72)>>2)];
      var $sub73=$79-$83;
      var $mul74=$76*$sub73;
      var $add75=$74+$mul74;
      $y2k=$add75;
      __label__ = 21; break;
    case 21: // $for_inc76
      var $84=$j;
      var $inc77=(($84+1)|0);
      $j=$inc77;
      __label__ = 19; break;
    case 22: // $for_end78
      var $85=$y1k;
      var $86=$k;
      var $87=$y1_addr;
      var $arrayidx79=(($87+($86<<2))|0);
      HEAPF32[(($arrayidx79)>>2)]=$85;
      var $88=$y2k;
      var $89=$k;
      var $90=$y2_addr;
      var $arrayidx80=(($90+($89<<2))|0);
      HEAPF32[(($arrayidx80)>>2)]=$88;
      __label__ = 23; break;
    case 23: // $for_inc81
      var $91=$i;
      var $add82=(($91+2)|0);
      $i=$add82;
      var $92=$k;
      var $inc83=(($92+1)|0);
      $k=$inc83;
      __label__ = 17; break;
    case 24: // $for_end84
      var $93=$saved_stack;
      _llvm_stackrestore($93);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_qmf_decomp["X"]=1;

function _qmf_synth($x1, $x2, $a, $y, $N, $M, $mem1, $mem2, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x1_addr;
      var $x2_addr;
      var $a_addr;
      var $y_addr;
      var $N_addr;
      var $M_addr;
      var $mem1_addr;
      var $mem2_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $M2;
      var $N2;
      var $saved_stack;
      var $y0;
      var $y1;
      var $y2;
      var $y3;
      var $x10;
      var $x20;
      var $x11;
      var $x21;
      var $a0;
      var $a1;
      $x1_addr=$x1;
      $x2_addr=$x2;
      $a_addr=$a;
      $y_addr=$y;
      $N_addr=$N;
      $M_addr=$M;
      $mem1_addr=$mem1;
      $mem2_addr=$mem2;
      $stack_addr=$stack;
      var $0=$M_addr;
      var $shr=$0 >> 1;
      $M2=$shr;
      var $1=$N_addr;
      var $shr1=$1 >> 1;
      $N2=$shr1;
      var $2=$M2;
      var $3=$N2;
      var $add=(($2+$3)|0);
      var $4=_llvm_stacksave();
      $saved_stack=$4;
      var $vla=STACKTOP;STACKTOP += $add*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $5=$M2;
      var $6=$N2;
      var $add2=(($5+$6)|0);
      var $vla3=STACKTOP;STACKTOP += $add2*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $7=$i;
      var $8=$N2;
      var $cmp=(($7)|0) < (($8)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $9=$N2;
      var $sub=(($9-1)|0);
      var $10=$i;
      var $sub4=(($sub-$10)|0);
      var $11=$x1_addr;
      var $arrayidx=(($11+($sub4<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $13=$i;
      var $arrayidx5=(($vla+($13<<2))|0);
      HEAPF32[(($arrayidx5)>>2)]=$12;
      __label__ = 3; break;
    case 3: // $for_inc
      var $14=$i;
      var $inc=(($14+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond6
      var $15=$i;
      var $16=$M2;
      var $cmp7=(($15)|0) < (($16)|0);
      if ($cmp7) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body8
      var $17=$i;
      var $mul=((($17<<1))|0);
      var $add9=(($mul+1)|0);
      var $18=$mem1_addr;
      var $arrayidx10=(($18+($add9<<2))|0);
      var $19=HEAPF32[(($arrayidx10)>>2)];
      var $20=$N2;
      var $21=$i;
      var $add11=(($20+$21)|0);
      var $arrayidx12=(($vla+($add11<<2))|0);
      HEAPF32[(($arrayidx12)>>2)]=$19;
      __label__ = 7; break;
    case 7: // $for_inc13
      var $22=$i;
      var $inc14=(($22+1)|0);
      $i=$inc14;
      __label__ = 5; break;
    case 8: // $for_end15
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond16
      var $23=$i;
      var $24=$N2;
      var $cmp17=(($23)|0) < (($24)|0);
      if ($cmp17) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body18
      var $25=$N2;
      var $sub19=(($25-1)|0);
      var $26=$i;
      var $sub20=(($sub19-$26)|0);
      var $27=$x2_addr;
      var $arrayidx21=(($27+($sub20<<2))|0);
      var $28=HEAPF32[(($arrayidx21)>>2)];
      var $29=$i;
      var $arrayidx22=(($vla3+($29<<2))|0);
      HEAPF32[(($arrayidx22)>>2)]=$28;
      __label__ = 11; break;
    case 11: // $for_inc23
      var $30=$i;
      var $inc24=(($30+1)|0);
      $i=$inc24;
      __label__ = 9; break;
    case 12: // $for_end25
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond26
      var $31=$i;
      var $32=$M2;
      var $cmp27=(($31)|0) < (($32)|0);
      if ($cmp27) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body28
      var $33=$i;
      var $mul29=((($33<<1))|0);
      var $add30=(($mul29+1)|0);
      var $34=$mem2_addr;
      var $arrayidx31=(($34+($add30<<2))|0);
      var $35=HEAPF32[(($arrayidx31)>>2)];
      var $36=$N2;
      var $37=$i;
      var $add32=(($36+$37)|0);
      var $arrayidx33=(($vla3+($add32<<2))|0);
      HEAPF32[(($arrayidx33)>>2)]=$35;
      __label__ = 15; break;
    case 15: // $for_inc34
      var $38=$i;
      var $inc35=(($38+1)|0);
      $i=$inc35;
      __label__ = 13; break;
    case 16: // $for_end36
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond37
      var $39=$i;
      var $40=$N2;
      var $cmp38=(($39)|0) < (($40)|0);
      if ($cmp38) { __label__ = 18; break; } else { __label__ = 24; break; }
    case 18: // $for_body39
      $y3=0;
      $y2=0;
      $y1=0;
      $y0=0;
      var $41=$N2;
      var $sub40=(($41-2)|0);
      var $42=$i;
      var $sub41=(($sub40-$42)|0);
      var $arrayidx42=(($vla+($sub41<<2))|0);
      var $43=HEAPF32[(($arrayidx42)>>2)];
      $x10=$43;
      var $44=$N2;
      var $sub43=(($44-2)|0);
      var $45=$i;
      var $sub44=(($sub43-$45)|0);
      var $arrayidx45=(($vla3+($sub44<<2))|0);
      var $46=HEAPF32[(($arrayidx45)>>2)];
      $x20=$46;
      $j=0;
      __label__ = 19; break;
    case 19: // $for_cond46
      var $47=$j;
      var $48=$M2;
      var $cmp47=(($47)|0) < (($48)|0);
      if ($cmp47) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body48
      var $49=$j;
      var $mul49=((($49<<1))|0);
      var $50=$a_addr;
      var $arrayidx50=(($50+($mul49<<2))|0);
      var $51=HEAPF32[(($arrayidx50)>>2)];
      $a0=$51;
      var $52=$j;
      var $mul51=((($52<<1))|0);
      var $add52=(($mul51+1)|0);
      var $53=$a_addr;
      var $arrayidx53=(($53+($add52<<2))|0);
      var $54=HEAPF32[(($arrayidx53)>>2)];
      $a1=$54;
      var $55=$N2;
      var $sub54=(($55-1)|0);
      var $56=$j;
      var $add55=(($sub54+$56)|0);
      var $57=$i;
      var $sub56=(($add55-$57)|0);
      var $arrayidx57=(($vla+($sub56<<2))|0);
      var $58=HEAPF32[(($arrayidx57)>>2)];
      $x11=$58;
      var $59=$N2;
      var $sub58=(($59-1)|0);
      var $60=$j;
      var $add59=(($sub58+$60)|0);
      var $61=$i;
      var $sub60=(($add59-$61)|0);
      var $arrayidx61=(($vla3+($sub60<<2))|0);
      var $62=HEAPF32[(($arrayidx61)>>2)];
      $x21=$62;
      var $63=$y0;
      var $64=$a0;
      var $65=$x11;
      var $66=$x21;
      var $sub62=$65-$66;
      var $mul63=$64*$sub62;
      var $add64=$63+$mul63;
      $y0=$add64;
      var $67=$y1;
      var $68=$a1;
      var $69=$x11;
      var $70=$x21;
      var $add65=$69+$70;
      var $mul66=$68*$add65;
      var $add67=$67+$mul66;
      $y1=$add67;
      var $71=$y2;
      var $72=$a0;
      var $73=$x10;
      var $74=$x20;
      var $sub68=$73-$74;
      var $mul69=$72*$sub68;
      var $add70=$71+$mul69;
      $y2=$add70;
      var $75=$y3;
      var $76=$a1;
      var $77=$x10;
      var $78=$x20;
      var $add71=$77+$78;
      var $mul72=$76*$add71;
      var $add73=$75+$mul72;
      $y3=$add73;
      var $79=$j;
      var $mul74=((($79<<1))|0);
      var $add75=(($mul74+2)|0);
      var $80=$a_addr;
      var $arrayidx76=(($80+($add75<<2))|0);
      var $81=HEAPF32[(($arrayidx76)>>2)];
      $a0=$81;
      var $82=$j;
      var $mul77=((($82<<1))|0);
      var $add78=(($mul77+3)|0);
      var $83=$a_addr;
      var $arrayidx79=(($83+($add78<<2))|0);
      var $84=HEAPF32[(($arrayidx79)>>2)];
      $a1=$84;
      var $85=$N2;
      var $86=$j;
      var $add80=(($85+$86)|0);
      var $87=$i;
      var $sub81=(($add80-$87)|0);
      var $arrayidx82=(($vla+($sub81<<2))|0);
      var $88=HEAPF32[(($arrayidx82)>>2)];
      $x10=$88;
      var $89=$N2;
      var $90=$j;
      var $add83=(($89+$90)|0);
      var $91=$i;
      var $sub84=(($add83-$91)|0);
      var $arrayidx85=(($vla3+($sub84<<2))|0);
      var $92=HEAPF32[(($arrayidx85)>>2)];
      $x20=$92;
      var $93=$y0;
      var $94=$a0;
      var $95=$x10;
      var $96=$x20;
      var $sub86=$95-$96;
      var $mul87=$94*$sub86;
      var $add88=$93+$mul87;
      $y0=$add88;
      var $97=$y1;
      var $98=$a1;
      var $99=$x10;
      var $100=$x20;
      var $add89=$99+$100;
      var $mul90=$98*$add89;
      var $add91=$97+$mul90;
      $y1=$add91;
      var $101=$y2;
      var $102=$a0;
      var $103=$x11;
      var $104=$x21;
      var $sub92=$103-$104;
      var $mul93=$102*$sub92;
      var $add94=$101+$mul93;
      $y2=$add94;
      var $105=$y3;
      var $106=$a1;
      var $107=$x11;
      var $108=$x21;
      var $add95=$107+$108;
      var $mul96=$106*$add95;
      var $add97=$105+$mul96;
      $y3=$add97;
      __label__ = 21; break;
    case 21: // $for_inc98
      var $109=$j;
      var $add99=(($109+2)|0);
      $j=$add99;
      __label__ = 19; break;
    case 22: // $for_end100
      var $110=$y0;
      var $mul101=$110*2;
      var $111=$i;
      var $mul102=((($111<<1))|0);
      var $112=$y_addr;
      var $arrayidx103=(($112+($mul102<<2))|0);
      HEAPF32[(($arrayidx103)>>2)]=$mul101;
      var $113=$y1;
      var $mul104=$113*2;
      var $114=$i;
      var $mul105=((($114<<1))|0);
      var $add106=(($mul105+1)|0);
      var $115=$y_addr;
      var $arrayidx107=(($115+($add106<<2))|0);
      HEAPF32[(($arrayidx107)>>2)]=$mul104;
      var $116=$y2;
      var $mul108=$116*2;
      var $117=$i;
      var $mul109=((($117<<1))|0);
      var $add110=(($mul109+2)|0);
      var $118=$y_addr;
      var $arrayidx111=(($118+($add110<<2))|0);
      HEAPF32[(($arrayidx111)>>2)]=$mul108;
      var $119=$y3;
      var $mul112=$119*2;
      var $120=$i;
      var $mul113=((($120<<1))|0);
      var $add114=(($mul113+3)|0);
      var $121=$y_addr;
      var $arrayidx115=(($121+($add114<<2))|0);
      HEAPF32[(($arrayidx115)>>2)]=$mul112;
      __label__ = 23; break;
    case 23: // $for_inc116
      var $122=$i;
      var $add117=(($122+2)|0);
      $i=$add117;
      __label__ = 17; break;
    case 24: // $for_end118
      $i=0;
      __label__ = 25; break;
    case 25: // $for_cond119
      var $123=$i;
      var $124=$M2;
      var $cmp120=(($123)|0) < (($124)|0);
      if ($cmp120) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body121
      var $125=$i;
      var $arrayidx122=(($vla+($125<<2))|0);
      var $126=HEAPF32[(($arrayidx122)>>2)];
      var $127=$i;
      var $mul123=((($127<<1))|0);
      var $add124=(($mul123+1)|0);
      var $128=$mem1_addr;
      var $arrayidx125=(($128+($add124<<2))|0);
      HEAPF32[(($arrayidx125)>>2)]=$126;
      __label__ = 27; break;
    case 27: // $for_inc126
      var $129=$i;
      var $inc127=(($129+1)|0);
      $i=$inc127;
      __label__ = 25; break;
    case 28: // $for_end128
      $i=0;
      __label__ = 29; break;
    case 29: // $for_cond129
      var $130=$i;
      var $131=$M2;
      var $cmp130=(($130)|0) < (($131)|0);
      if ($cmp130) { __label__ = 30; break; } else { __label__ = 32; break; }
    case 30: // $for_body131
      var $132=$i;
      var $arrayidx132=(($vla3+($132<<2))|0);
      var $133=HEAPF32[(($arrayidx132)>>2)];
      var $134=$i;
      var $mul133=((($134<<1))|0);
      var $add134=(($mul133+1)|0);
      var $135=$mem2_addr;
      var $arrayidx135=(($135+($add134<<2))|0);
      HEAPF32[(($arrayidx135)>>2)]=$133;
      __label__ = 31; break;
    case 31: // $for_inc136
      var $136=$i;
      var $inc137=(($136+1)|0);
      $i=$inc137;
      __label__ = 29; break;
    case 32: // $for_end138
      var $137=$saved_stack;
      _llvm_stackrestore($137);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_qmf_synth["X"]=1;

function _interp_pitch($exc, $interp, $pitch, $len) {
  var __stackBase__  = STACKTOP; STACKTOP += 112; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $interp_addr;
      var $pitch_addr;
      var $len_addr;
      var $i;
      var $j;
      var $k;
      var $corr=__stackBase__;
      var $maxcorr;
      var $maxi;
      var $maxj;
      var $i1;
      var $i2;
      var $tmp;
      var $tmp61;
      $exc_addr=$exc;
      $interp_addr=$interp;
      $pitch_addr=$pitch;
      $len_addr=$len;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $cmp=(($0)|0) < 7;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $1=$exc_addr;
      var $2=$exc_addr;
      var $3=$pitch_addr;
      var $idx_neg=(((-$3))|0);
      var $add_ptr=(($2+($idx_neg<<2))|0);
      var $add_ptr1=(($add_ptr-12)|0);
      var $4=$i;
      var $add_ptr2=(($add_ptr1+($4<<2))|0);
      var $5=$len_addr;
      var $call=_inner_prod($1, $add_ptr2, $5);
      var $6=$i;
      var $arrayidx=(($corr)|0);
      var $arrayidx3=(($arrayidx+($6<<2))|0);
      HEAPF32[(($arrayidx3)>>2)]=$call;
      __label__ = 3; break;
    case 3: // $for_inc
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond4
      var $8=$i;
      var $cmp5=(($8)|0) < 3;
      if ($cmp5) { __label__ = 6; break; } else { __label__ = 20; break; }
    case 6: // $for_body6
      $j=0;
      __label__ = 7; break;
    case 7: // $for_cond7
      var $9=$j;
      var $cmp8=(($9)|0) < 7;
      if ($cmp8) { __label__ = 8; break; } else { __label__ = 18; break; }
    case 8: // $for_body9
      $tmp=0;
      var $10=$j;
      var $sub=((3-$10)|0);
      $i1=$sub;
      var $11=$i1;
      var $cmp10=(($11)|0) < 0;
      if ($cmp10) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then
      $i1=0;
      __label__ = 10; break;
    case 10: // $if_end
      var $12=$j;
      var $sub11=((10-$12)|0);
      $i2=$sub11;
      var $13=$i2;
      var $cmp12=(($13)|0) > 7;
      if ($cmp12) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then13
      $i2=7;
      __label__ = 12; break;
    case 12: // $if_end14
      var $14=$i1;
      $k=$14;
      __label__ = 13; break;
    case 13: // $for_cond15
      var $15=$k;
      var $16=$i2;
      var $cmp16=(($15)|0) < (($16)|0);
      if ($cmp16) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body17
      var $17=$k;
      var $18=$i;
      var $arrayidx18=((_shift_filt+$18*28)|0);
      var $arrayidx19=(($arrayidx18+($17<<2))|0);
      var $19=HEAPF32[(($arrayidx19)>>2)];
      var $20=$j;
      var $21=$k;
      var $add=(($20+$21)|0);
      var $sub20=(($add-3)|0);
      var $arrayidx21=(($corr)|0);
      var $arrayidx22=(($arrayidx21+($sub20<<2))|0);
      var $22=HEAPF32[(($arrayidx22)>>2)];
      var $mul=$19*$22;
      var $23=$tmp;
      var $add23=$23+$mul;
      $tmp=$add23;
      __label__ = 15; break;
    case 15: // $for_inc24
      var $24=$k;
      var $inc25=(($24+1)|0);
      $k=$inc25;
      __label__ = 13; break;
    case 16: // $for_end26
      var $25=$tmp;
      var $26=$j;
      var $27=$i;
      var $add27=(($27+1)|0);
      var $arrayidx28=(($corr+$add27*28)|0);
      var $arrayidx29=(($arrayidx28+($26<<2))|0);
      HEAPF32[(($arrayidx29)>>2)]=$25;
      __label__ = 17; break;
    case 17: // $for_inc30
      var $28=$j;
      var $inc31=(($28+1)|0);
      $j=$inc31;
      __label__ = 7; break;
    case 18: // $for_end32
      __label__ = 19; break;
    case 19: // $for_inc33
      var $29=$i;
      var $inc34=(($29+1)|0);
      $i=$inc34;
      __label__ = 5; break;
    case 20: // $for_end35
      $maxj=0;
      $maxi=0;
      var $arrayidx36=(($corr)|0);
      var $arrayidx37=(($arrayidx36)|0);
      var $30=HEAPF32[(($arrayidx37)>>2)];
      $maxcorr=$30;
      $i=0;
      __label__ = 21; break;
    case 21: // $for_cond38
      var $31=$i;
      var $cmp39=(($31)|0) < 4;
      if ($cmp39) { __label__ = 22; break; } else { __label__ = 30; break; }
    case 22: // $for_body40
      $j=0;
      __label__ = 23; break;
    case 23: // $for_cond41
      var $32=$j;
      var $cmp42=(($32)|0) < 7;
      if ($cmp42) { __label__ = 24; break; } else { __label__ = 28; break; }
    case 24: // $for_body43
      var $33=$j;
      var $34=$i;
      var $arrayidx44=(($corr+$34*28)|0);
      var $arrayidx45=(($arrayidx44+($33<<2))|0);
      var $35=HEAPF32[(($arrayidx45)>>2)];
      var $36=$maxcorr;
      var $cmp46=$35 > $36;
      if ($cmp46) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then47
      var $37=$j;
      var $38=$i;
      var $arrayidx48=(($corr+$38*28)|0);
      var $arrayidx49=(($arrayidx48+($37<<2))|0);
      var $39=HEAPF32[(($arrayidx49)>>2)];
      $maxcorr=$39;
      var $40=$i;
      $maxi=$40;
      var $41=$j;
      $maxj=$41;
      __label__ = 26; break;
    case 26: // $if_end50
      __label__ = 27; break;
    case 27: // $for_inc51
      var $42=$j;
      var $inc52=(($42+1)|0);
      $j=$inc52;
      __label__ = 23; break;
    case 28: // $for_end53
      __label__ = 29; break;
    case 29: // $for_inc54
      var $43=$i;
      var $inc55=(($43+1)|0);
      $i=$inc55;
      __label__ = 21; break;
    case 30: // $for_end56
      $i=0;
      __label__ = 31; break;
    case 31: // $for_cond57
      var $44=$i;
      var $45=$len_addr;
      var $cmp58=(($44)|0) < (($45)|0);
      if ($cmp58) { __label__ = 32; break; } else { __label__ = 41; break; }
    case 32: // $for_body59
      $tmp61=0;
      var $46=$maxi;
      var $cmp62=(($46)|0) > 0;
      if ($cmp62) { __label__ = 33; break; } else { __label__ = 38; break; }
    case 33: // $if_then63
      $k=0;
      __label__ = 34; break;
    case 34: // $for_cond64
      var $47=$k;
      var $cmp65=(($47)|0) < 7;
      if ($cmp65) { __label__ = 35; break; } else { __label__ = 37; break; }
    case 35: // $for_body66
      var $48=$i;
      var $49=$pitch_addr;
      var $50=$maxj;
      var $sub67=(($49-$50)|0);
      var $add68=(($sub67+3)|0);
      var $sub69=(($48-$add68)|0);
      var $51=$k;
      var $add70=(($sub69+$51)|0);
      var $sub71=(($add70-3)|0);
      var $52=$exc_addr;
      var $arrayidx72=(($52+($sub71<<2))|0);
      var $53=HEAPF32[(($arrayidx72)>>2)];
      var $54=$k;
      var $55=$maxi;
      var $sub73=(($55-1)|0);
      var $arrayidx74=((_shift_filt+$sub73*28)|0);
      var $arrayidx75=(($arrayidx74+($54<<2))|0);
      var $56=HEAPF32[(($arrayidx75)>>2)];
      var $mul76=$53*$56;
      var $57=$tmp61;
      var $add77=$57+$mul76;
      $tmp61=$add77;
      __label__ = 36; break;
    case 36: // $for_inc78
      var $58=$k;
      var $inc79=(($58+1)|0);
      $k=$inc79;
      __label__ = 34; break;
    case 37: // $for_end80
      __label__ = 39; break;
    case 38: // $if_else
      var $59=$i;
      var $60=$pitch_addr;
      var $61=$maxj;
      var $sub81=(($60-$61)|0);
      var $add82=(($sub81+3)|0);
      var $sub83=(($59-$add82)|0);
      var $62=$exc_addr;
      var $arrayidx84=(($62+($sub83<<2))|0);
      var $63=HEAPF32[(($arrayidx84)>>2)];
      $tmp61=$63;
      __label__ = 39; break;
    case 39: // $if_end85
      var $64=$tmp61;
      var $65=$i;
      var $66=$interp_addr;
      var $arrayidx86=(($66+($65<<2))|0);
      HEAPF32[(($arrayidx86)>>2)]=$64;
      __label__ = 40; break;
    case 40: // $for_inc87
      var $67=$i;
      var $inc88=(($67+1)|0);
      $i=$inc88;
      __label__ = 31; break;
    case 41: // $for_end89
      var $68=$pitch_addr;
      var $69=$maxj;
      var $sub90=(($68-$69)|0);
      var $add91=(($sub90+3)|0);
      STACKTOP = __stackBase__;
      return $add91;
    default: assert(0, "bad label: " + __label__);
  }
}
_interp_pitch["X"]=1;

function _cheb_poly_eva($coef, $x, $m, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $coef_addr;
      var $x_addr;
      var $m_addr;
      var $stack_addr;
      var $k;
      var $b0;
      var $b1;
      var $tmp;
      $coef_addr=$coef;
      $x_addr=$x;
      $m_addr=$m;
      $stack_addr=$stack;
      $b0=0;
      $b1=0;
      var $0=$x_addr;
      var $mul=$0*2;
      $x_addr=$mul;
      var $1=$m_addr;
      $k=$1;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$k;
      var $cmp=(($2)|0) > 0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $3=$b0;
      $tmp=$3;
      var $4=$x_addr;
      var $5=$b0;
      var $mul1=$4*$5;
      var $6=$b1;
      var $sub=$mul1-$6;
      var $7=$m_addr;
      var $8=$k;
      var $sub2=(($7-$8)|0);
      var $9=$coef_addr;
      var $arrayidx=(($9+($sub2<<2))|0);
      var $10=HEAPF32[(($arrayidx)>>2)];
      var $add=$sub+$10;
      $b0=$add;
      var $11=$tmp;
      $b1=$11;
      __label__ = 3; break;
    case 3: // $for_inc
      var $12=$k;
      var $dec=(($12-1)|0);
      $k=$dec;
      __label__ = 1; break;
    case 4: // $for_end
      var $13=$b1;
      var $sub3=(-$13);
      var $conv=$sub3;
      var $14=$x_addr;
      var $conv4=$14;
      var $mul5=$conv4*0.5;
      var $15=$b0;
      var $conv6=$15;
      var $mul7=$mul5*$conv6;
      var $add8=$conv+$mul7;
      var $16=$m_addr;
      var $17=$coef_addr;
      var $arrayidx9=(($17+($16<<2))|0);
      var $18=HEAPF32[(($arrayidx9)>>2)];
      var $conv10=$18;
      var $add11=$add8+$conv10;
      var $conv12=$add11;
      ;
      return $conv12;
    default: assert(0, "bad label: " + __label__);
  }
}
_cheb_poly_eva["X"]=1;

function _multicomb($exc, $new_exc, $ak, $p, $nsf, $pitch, $max_pitch, $comb_gain, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $new_exc_addr;
      var $ak_addr;
      var $p_addr;
      var $nsf_addr;
      var $pitch_addr;
      var $max_pitch_addr;
      var $comb_gain_addr;
      var $stack_addr;
      var $i;
      var $old_ener;
      var $new_ener;
      var $corr_pitch;
      var $iexc0_mag;
      var $iexc1_mag;
      var $exc_mag;
      var $corr0;
      var $corr1;
      var $gain0;
      var $gain1;
      var $pgain1;
      var $pgain2;
      var $c1;
      var $c2;
      var $g1;
      var $g2;
      var $ngain;
      var $gg1;
      var $gg2;
      var $saved_stack;
      $exc_addr=$exc;
      $new_exc_addr=$new_exc;
      $ak_addr=$ak;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $pitch_addr=$pitch;
      $max_pitch_addr=$max_pitch;
      $comb_gain_addr=$comb_gain;
      $stack_addr=$stack;
      var $0=$pitch_addr;
      $corr_pitch=$0;
      var $1=$nsf_addr;
      var $mul=((($1<<1))|0);
      var $2=_llvm_stacksave();
      $saved_stack=$2;
      var $vla=STACKTOP;STACKTOP += $mul*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $3=$exc_addr;
      var $4=$corr_pitch;
      var $call=_interp_pitch($3, $vla, $4, 80);
      var $5=$corr_pitch;
      var $6=$max_pitch_addr;
      var $cmp=(($5)|0) > (($6)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $7=$exc_addr;
      var $8=$nsf_addr;
      var $add_ptr=(($vla+($8<<2))|0);
      var $9=$corr_pitch;
      var $mul1=((($9<<1))|0);
      var $call2=_interp_pitch($7, $add_ptr, $mul1, 80);
      __label__ = 3; break;
    case 2: // $if_else
      var $10=$exc_addr;
      var $11=$nsf_addr;
      var $add_ptr3=(($vla+($11<<2))|0);
      var $12=$corr_pitch;
      var $sub=(((-$12))|0);
      var $call4=_interp_pitch($10, $add_ptr3, $sub, 80);
      __label__ = 3; break;
    case 3: // $if_end
      var $13=$nsf_addr;
      var $call5=_inner_prod($vla, $vla, $13);
      var $add=$call5+1000;
      var $conv=$add;
      var $call6=_sqrt($conv);
      var $conv7=$call6;
      $iexc0_mag=$conv7;
      var $14=$nsf_addr;
      var $add_ptr8=(($vla+($14<<2))|0);
      var $15=$nsf_addr;
      var $add_ptr9=(($vla+($15<<2))|0);
      var $16=$nsf_addr;
      var $call10=_inner_prod($add_ptr8, $add_ptr9, $16);
      var $add11=$call10+1000;
      var $conv12=$add11;
      var $call13=_sqrt($conv12);
      var $conv14=$call13;
      $iexc1_mag=$conv14;
      var $17=$exc_addr;
      var $18=$exc_addr;
      var $19=$nsf_addr;
      var $call15=_inner_prod($17, $18, $19);
      var $add16=$call15+1;
      var $conv17=$add16;
      var $call18=_sqrt($conv17);
      var $conv19=$call18;
      $exc_mag=$conv19;
      var $20=$exc_addr;
      var $21=$nsf_addr;
      var $call20=_inner_prod($vla, $20, $21);
      $corr0=$call20;
      var $22=$corr0;
      var $cmp21=$22 < 0;
      if ($cmp21) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then23
      $corr0=0;
      __label__ = 5; break;
    case 5: // $if_end24
      var $23=$nsf_addr;
      var $add_ptr25=(($vla+($23<<2))|0);
      var $24=$exc_addr;
      var $25=$nsf_addr;
      var $call26=_inner_prod($add_ptr25, $24, $25);
      $corr1=$call26;
      var $26=$corr1;
      var $cmp27=$26 < 0;
      if ($cmp27) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then29
      $corr1=0;
      __label__ = 7; break;
    case 7: // $if_end30
      var $27=$corr0;
      var $28=$iexc0_mag;
      var $29=$exc_mag;
      var $mul31=$28*$29;
      var $cmp32=$27 > $mul31;
      if ($cmp32) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then34
      $pgain1=1;
      __label__ = 10; break;
    case 9: // $if_else35
      var $30=$corr0;
      var $31=$exc_mag;
      var $div=$30/$31;
      var $32=$iexc0_mag;
      var $div36=$div/$32;
      $pgain1=$div36;
      __label__ = 10; break;
    case 10: // $if_end37
      var $33=$corr1;
      var $34=$iexc1_mag;
      var $35=$exc_mag;
      var $mul38=$34*$35;
      var $cmp39=$33 > $mul38;
      if ($cmp39) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then41
      $pgain2=1;
      __label__ = 13; break;
    case 12: // $if_else42
      var $36=$corr1;
      var $37=$exc_mag;
      var $div43=$36/$37;
      var $38=$iexc1_mag;
      var $div44=$div43/$38;
      $pgain2=$div44;
      __label__ = 13; break;
    case 13: // $if_end45
      var $39=$exc_mag;
      var $40=$iexc0_mag;
      var $div46=$39/$40;
      $gg1=$div46;
      var $41=$exc_mag;
      var $42=$iexc1_mag;
      var $div47=$41/$42;
      $gg2=$div47;
      var $43=$comb_gain_addr;
      var $cmp48=$43 > 0;
      if ($cmp48) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then50
      var $44=$comb_gain_addr;
      var $conv51=$44;
      var $mul52=$conv51*0.4;
      var $add53=$mul52+0.07;
      var $conv54=$add53;
      $c1=$conv54;
      var $45=$c1;
      var $conv55=$45;
      var $sub56=$conv55-0.07;
      var $mul57=$sub56*1.72;
      var $add58=$mul57+0.5;
      var $conv59=$add58;
      $c2=$conv59;
      __label__ = 16; break;
    case 15: // $if_else60
      $c2=0;
      $c1=0;
      __label__ = 16; break;
    case 16: // $if_end61
      var $46=$c2;
      var $47=$pgain1;
      var $mul62=$46*$47;
      var $48=$pgain1;
      var $mul63=$mul62*$48;
      var $sub64=1-$mul63;
      $g1=$sub64;
      var $49=$c2;
      var $50=$pgain2;
      var $mul65=$49*$50;
      var $51=$pgain2;
      var $mul66=$mul65*$51;
      var $sub67=1-$mul66;
      $g2=$sub67;
      var $52=$g1;
      var $53=$c1;
      var $cmp68=$52 < $53;
      if ($cmp68) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then70
      var $54=$c1;
      $g1=$54;
      __label__ = 18; break;
    case 18: // $if_end71
      var $55=$g2;
      var $56=$c1;
      var $cmp72=$55 < $56;
      if ($cmp72) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $if_then74
      var $57=$c1;
      $g2=$57;
      __label__ = 20; break;
    case 20: // $if_end75
      var $58=$c1;
      var $59=$g1;
      var $div76=$58/$59;
      $g1=$div76;
      var $60=$c1;
      var $61=$g2;
      var $div77=$60/$61;
      $g2=$div77;
      var $62=$corr_pitch;
      var $63=$max_pitch_addr;
      var $cmp78=(($62)|0) > (($63)|0);
      if ($cmp78) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: // $if_then80
      var $64=$g1;
      var $65=$gg1;
      var $mul81=$64*$65;
      var $conv82=$mul81;
      var $mul83=$conv82*0.7;
      var $conv84=$mul83;
      $gain0=$conv84;
      var $66=$g2;
      var $67=$gg2;
      var $mul85=$66*$67;
      var $conv86=$mul85;
      var $mul87=$conv86*0.3;
      var $conv88=$mul87;
      $gain1=$conv88;
      __label__ = 23; break;
    case 22: // $if_else89
      var $68=$g1;
      var $69=$gg1;
      var $mul90=$68*$69;
      var $conv91=$mul90;
      var $mul92=$conv91*0.6;
      var $conv93=$mul92;
      $gain0=$conv93;
      var $70=$g2;
      var $71=$gg2;
      var $mul94=$70*$71;
      var $conv95=$mul94;
      var $mul96=$conv95*0.6;
      var $conv97=$mul96;
      $gain1=$conv97;
      __label__ = 23; break;
    case 23: // $if_end98
      $i=0;
      __label__ = 24; break;
    case 24: // $for_cond
      var $72=$i;
      var $73=$nsf_addr;
      var $cmp99=(($72)|0) < (($73)|0);
      if ($cmp99) { __label__ = 25; break; } else { __label__ = 27; break; }
    case 25: // $for_body
      var $74=$i;
      var $75=$exc_addr;
      var $arrayidx=(($75+($74<<2))|0);
      var $76=HEAPF32[(($arrayidx)>>2)];
      var $77=$gain0;
      var $78=$i;
      var $arrayidx101=(($vla+($78<<2))|0);
      var $79=HEAPF32[(($arrayidx101)>>2)];
      var $mul102=$77*$79;
      var $80=$gain1;
      var $81=$i;
      var $82=$nsf_addr;
      var $add103=(($81+$82)|0);
      var $arrayidx104=(($vla+($add103<<2))|0);
      var $83=HEAPF32[(($arrayidx104)>>2)];
      var $mul105=$80*$83;
      var $add106=$mul102+$mul105;
      var $add107=$76+$add106;
      var $84=$i;
      var $85=$new_exc_addr;
      var $arrayidx108=(($85+($84<<2))|0);
      HEAPF32[(($arrayidx108)>>2)]=$add107;
      __label__ = 26; break;
    case 26: // $for_inc
      var $86=$i;
      var $inc=(($86+1)|0);
      $i=$inc;
      __label__ = 24; break;
    case 27: // $for_end
      var $87=$new_exc_addr;
      var $88=$nsf_addr;
      var $call109=_compute_rms16($87, $88);
      $new_ener=$call109;
      var $89=$exc_addr;
      var $90=$nsf_addr;
      var $call110=_compute_rms16($89, $90);
      $old_ener=$call110;
      var $91=$old_ener;
      var $cmp111=$91 < 1;
      if ($cmp111) { __label__ = 28; break; } else { __label__ = 29; break; }
    case 28: // $if_then113
      $old_ener=1;
      __label__ = 29; break;
    case 29: // $if_end114
      var $92=$new_ener;
      var $cmp115=$92 < 1;
      if ($cmp115) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then117
      $new_ener=1;
      __label__ = 31; break;
    case 31: // $if_end118
      var $93=$old_ener;
      var $94=$new_ener;
      var $cmp119=$93 > $94;
      if ($cmp119) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: // $if_then121
      var $95=$new_ener;
      $old_ener=$95;
      __label__ = 33; break;
    case 33: // $if_end122
      var $96=$old_ener;
      var $97=$new_ener;
      var $div123=$96/$97;
      $ngain=$div123;
      $i=0;
      __label__ = 34; break;
    case 34: // $for_cond124
      var $98=$i;
      var $99=$nsf_addr;
      var $cmp125=(($98)|0) < (($99)|0);
      if ($cmp125) { __label__ = 35; break; } else { __label__ = 37; break; }
    case 35: // $for_body127
      var $100=$ngain;
      var $101=$i;
      var $102=$new_exc_addr;
      var $arrayidx128=(($102+($101<<2))|0);
      var $103=HEAPF32[(($arrayidx128)>>2)];
      var $mul129=$100*$103;
      var $104=$i;
      var $105=$new_exc_addr;
      var $arrayidx130=(($105+($104<<2))|0);
      HEAPF32[(($arrayidx130)>>2)]=$mul129;
      __label__ = 36; break;
    case 36: // $for_inc131
      var $106=$i;
      var $inc132=(($106+1)|0);
      $i=$inc132;
      __label__ = 34; break;
    case 37: // $for_end133
      var $107=$saved_stack;
      _llvm_stackrestore($107);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_multicomb["X"]=1;

function _lpc_to_lsp($a, $lpcrdr, $freq, $nb, $delta, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $a_addr;
      var $lpcrdr_addr;
      var $freq_addr;
      var $nb_addr;
      var $delta_addr;
      var $stack_addr;
      var $temp_xr;
      var $xl;
      var $xr;
      var $xm;
      var $psuml;
      var $psumr;
      var $psumm;
      var $temp_psumr;
      var $i;
      var $j;
      var $m;
      var $flag;
      var $k;
      var $px;
      var $qx;
      var $p;
      var $q;
      var $pt;
      var $roots;
      var $saved_stack;
      var $dd;
      var $cleanup_dest_slot;
      $a_addr=$a;
      $lpcrdr_addr=$lpcrdr;
      $freq_addr=$freq;
      $nb_addr=$nb;
      $delta_addr=$delta;
      $stack_addr=$stack;
      $xm=0;
      $roots=0;
      $flag=1;
      var $0=$lpcrdr_addr;
      var $div=(((($0)|0)/2)|0);
      $m=$div;
      var $1=$m;
      var $add=(($1+1)|0);
      var $2=_llvm_stacksave();
      $saved_stack=$2;
      var $vla=STACKTOP;STACKTOP += $add*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $3=$m;
      var $add1=(($3+1)|0);
      var $vla2=STACKTOP;STACKTOP += $add1*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $px=$vla2;
      $qx=$vla;
      var $4=$px;
      $p=$4;
      var $5=$qx;
      $q=$5;
      var $6=$px;
      var $incdec_ptr=(($6+4)|0);
      $px=$incdec_ptr;
      HEAPF32[(($6)>>2)]=1;
      var $7=$qx;
      var $incdec_ptr3=(($7+4)|0);
      $qx=$incdec_ptr3;
      HEAPF32[(($7)>>2)]=1;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $8=$i;
      var $9=$m;
      var $cmp=(($8)|0) < (($9)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $10=$i;
      var $11=$a_addr;
      var $arrayidx=(($11+($10<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $13=$lpcrdr_addr;
      var $sub=(($13-1)|0);
      var $14=$i;
      var $sub4=(($sub-$14)|0);
      var $15=$a_addr;
      var $arrayidx5=(($15+($sub4<<2))|0);
      var $16=HEAPF32[(($arrayidx5)>>2)];
      var $add6=$12+$16;
      var $17=$p;
      var $incdec_ptr7=(($17+4)|0);
      $p=$incdec_ptr7;
      var $18=HEAPF32[(($17)>>2)];
      var $sub8=$add6-$18;
      var $19=$px;
      var $incdec_ptr9=(($19+4)|0);
      $px=$incdec_ptr9;
      HEAPF32[(($19)>>2)]=$sub8;
      var $20=$i;
      var $21=$a_addr;
      var $arrayidx10=(($21+($20<<2))|0);
      var $22=HEAPF32[(($arrayidx10)>>2)];
      var $23=$lpcrdr_addr;
      var $sub11=(($23-1)|0);
      var $24=$i;
      var $sub12=(($sub11-$24)|0);
      var $25=$a_addr;
      var $arrayidx13=(($25+($sub12<<2))|0);
      var $26=HEAPF32[(($arrayidx13)>>2)];
      var $sub14=$22-$26;
      var $27=$q;
      var $incdec_ptr15=(($27+4)|0);
      $q=$incdec_ptr15;
      var $28=HEAPF32[(($27)>>2)];
      var $add16=$sub14+$28;
      var $29=$qx;
      var $incdec_ptr17=(($29+4)|0);
      $qx=$incdec_ptr17;
      HEAPF32[(($29)>>2)]=$add16;
      __label__ = 3; break;
    case 3: // $for_inc
      var $30=$i;
      var $inc=(($30+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $px=$vla2;
      $qx=$vla;
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond18
      var $31=$i;
      var $32=$m;
      var $cmp19=(($31)|0) < (($32)|0);
      if ($cmp19) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body20
      var $33=$px;
      var $34=HEAPF32[(($33)>>2)];
      var $mul=$34*2;
      var $35=$px;
      HEAPF32[(($35)>>2)]=$mul;
      var $36=$qx;
      var $37=HEAPF32[(($36)>>2)];
      var $mul21=$37*2;
      var $38=$qx;
      HEAPF32[(($38)>>2)]=$mul21;
      var $39=$px;
      var $incdec_ptr22=(($39+4)|0);
      $px=$incdec_ptr22;
      var $40=$qx;
      var $incdec_ptr23=(($40+4)|0);
      $qx=$incdec_ptr23;
      __label__ = 7; break;
    case 7: // $for_inc24
      var $41=$i;
      var $inc25=(($41+1)|0);
      $i=$inc25;
      __label__ = 5; break;
    case 8: // $for_end26
      $px=$vla2;
      $qx=$vla;
      var $42=$m;
      var $add27=(($42+1)|0);
      var $vla28=STACKTOP;STACKTOP += $add27*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $43=$m;
      var $add29=(($43+1)|0);
      var $vla30=STACKTOP;STACKTOP += $add29*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond31
      var $44=$i;
      var $45=$m;
      var $add32=(($45+1)|0);
      var $cmp33=(($44)|0) < (($add32)|0);
      if ($cmp33) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body34
      var $46=$i;
      var $arrayidx35=(($vla2+($46<<2))|0);
      var $47=HEAPF32[(($arrayidx35)>>2)];
      var $48=$i;
      var $arrayidx36=(($vla28+($48<<2))|0);
      HEAPF32[(($arrayidx36)>>2)]=$47;
      var $49=$i;
      var $arrayidx37=(($vla+($49<<2))|0);
      var $50=HEAPF32[(($arrayidx37)>>2)];
      var $51=$i;
      var $arrayidx38=(($vla30+($51<<2))|0);
      HEAPF32[(($arrayidx38)>>2)]=$50;
      __label__ = 11; break;
    case 11: // $for_inc39
      var $52=$i;
      var $inc40=(($52+1)|0);
      $i=$inc40;
      __label__ = 9; break;
    case 12: // $for_end41
      $xr=0;
      $xl=1;
      $j=0;
      __label__ = 13; break;
    case 13: // $for_cond42
      var $53=$j;
      var $54=$lpcrdr_addr;
      var $cmp43=(($53)|0) < (($54)|0);
      if ($cmp43) { __label__ = 14; break; } else { __label__ = 36; break; }
    case 14: // $for_body44
      var $55=$j;
      var $and=$55 & 1;
      var $tobool=(($and)|0)!=0;
      if ($tobool) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then
      $pt=$vla30;
      __label__ = 17; break;
    case 16: // $if_else
      $pt=$vla28;
      __label__ = 17; break;
    case 17: // $if_end
      var $56=$pt;
      var $57=$xl;
      var $58=$m;
      var $59=$stack_addr;
      var $call=_cheb_poly_eva($56, $57, $58, $59);
      $psuml=$call;
      $flag=1;
      __label__ = 18; break;
    case 18: // $while_cond
      var $60=$flag;
      var $tobool45=(($60)|0)!=0;
      if ($tobool45) { __label__ = 19; break; } else { var $62 = 0;__label__ = 20; break; }
    case 19: // $land_rhs
      var $61=$xr;
      var $conv=$61;
      var $cmp46=$conv >= -1;
      var $62 = $cmp46;__label__ = 20; break;
    case 20: // $land_end
      var $62;
      if ($62) { __label__ = 21; break; } else { __label__ = 34; break; }
    case 21: // $while_body
      var $63=$delta_addr;
      var $conv48=$63;
      var $64=$xl;
      var $conv49=$64;
      var $mul50=$conv49*0.9;
      var $65=$xl;
      var $conv51=$65;
      var $mul52=$mul50*$conv51;
      var $sub53=1-$mul52;
      var $mul54=$conv48*$sub53;
      var $conv55=$mul54;
      $dd=$conv55;
      var $66=$psuml;
      var $conv56=$66;
      var $call57=_fabs($conv56);
      var $cmp58=$call57 < 0.2;
      if ($cmp58) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then60
      var $67=$dd;
      var $conv61=$67;
      var $mul62=$conv61*0.5;
      var $conv63=$mul62;
      $dd=$conv63;
      __label__ = 23; break;
    case 23: // $if_end64
      var $68=$xl;
      var $69=$dd;
      var $sub65=$68-$69;
      $xr=$sub65;
      var $70=$pt;
      var $71=$xr;
      var $72=$m;
      var $73=$stack_addr;
      var $call66=_cheb_poly_eva($70, $71, $72, $73);
      $psumr=$call66;
      var $74=$psumr;
      $temp_psumr=$74;
      var $75=$xr;
      $temp_xr=$75;
      var $76=$psumr;
      var $77=$psuml;
      var $mul67=$76*$77;
      var $conv68=$mul67;
      var $cmp69=$conv68 < 0;
      if ($cmp69) { __label__ = 24; break; } else { __label__ = 32; break; }
    case 24: // $if_then71
      var $78=$roots;
      var $inc72=(($78+1)|0);
      $roots=$inc72;
      var $79=$psuml;
      $psumm=$79;
      $k=0;
      __label__ = 25; break;
    case 25: // $for_cond73
      var $80=$k;
      var $81=$nb_addr;
      var $cmp74=(($80)|0) <= (($81)|0);
      if ($cmp74) { __label__ = 26; break; } else { __label__ = 31; break; }
    case 26: // $for_body76
      var $82=$xl;
      var $83=$xr;
      var $add77=$82+$83;
      var $conv78=$add77;
      var $mul79=$conv78*0.5;
      var $conv80=$mul79;
      $xm=$conv80;
      var $84=$pt;
      var $85=$xm;
      var $86=$m;
      var $87=$stack_addr;
      var $call81=_cheb_poly_eva($84, $85, $86, $87);
      $psumm=$call81;
      var $88=$psumm;
      var $89=$psuml;
      var $mul82=$88*$89;
      var $conv83=$mul82;
      var $cmp84=$conv83 < 0;
      if ($cmp84) { __label__ = 28; break; } else { __label__ = 27; break; }
    case 27: // $if_then86
      var $90=$psumm;
      $psuml=$90;
      var $91=$xm;
      $xl=$91;
      __label__ = 29; break;
    case 28: // $if_else87
      var $92=$psumm;
      $psumr=$92;
      var $93=$xm;
      $xr=$93;
      __label__ = 29; break;
    case 29: // $if_end88
      __label__ = 30; break;
    case 30: // $for_inc89
      var $94=$k;
      var $inc90=(($94+1)|0);
      $k=$inc90;
      __label__ = 25; break;
    case 31: // $for_end91
      var $95=$xm;
      var $conv92=$95;
      var $call93=_acos($conv92);
      var $conv94=$call93;
      var $96=$j;
      var $97=$freq_addr;
      var $arrayidx95=(($97+($96<<2))|0);
      HEAPF32[(($arrayidx95)>>2)]=$conv94;
      var $98=$xm;
      $xl=$98;
      $flag=0;
      __label__ = 33; break;
    case 32: // $if_else96
      var $99=$temp_psumr;
      $psuml=$99;
      var $100=$temp_xr;
      $xl=$100;
      __label__ = 33; break;
    case 33: // $if_end97
      __label__ = 18; break;
    case 34: // $while_end
      __label__ = 35; break;
    case 35: // $for_inc98
      var $101=$j;
      var $inc99=(($101+1)|0);
      $j=$inc99;
      __label__ = 13; break;
    case 36: // $for_end100
      var $102=$roots;
      $retval=$102;
      $cleanup_dest_slot=1;
      var $103=$saved_stack;
      _llvm_stackrestore($103);
      var $104=$retval;
      ;
      return $104;
    default: assert(0, "bad label: " + __label__);
  }
}
_lpc_to_lsp["X"]=1;

function _spx_cos($x) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $x_addr;
      $x_addr=$x;
      var $0=$x_addr;
      var $conv=$0;
      var $cmp=$conv < 1.5707963268;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $1=$x_addr;
      var $2=$x_addr;
      var $mul=$2*$1;
      $x_addr=$mul;
      var $3=$x_addr;
      var $4=$x_addr;
      var $5=$x_addr;
      var $mul2=$5*-0.0012712094467133284;
      var $add=$mul2+0.04148774594068527;
      var $mul3=$4*$add;
      var $add4=$mul3-0.49991244077682495;
      var $mul5=$3*$add4;
      var $add6=$mul5+0.9999933242797852;
      $retval=$add6;
      __label__ = 3; break;
    case 2: // $if_else
      var $6=$x_addr;
      var $conv7=$6;
      var $sub=3.141592653589793-$conv7;
      var $conv8=$sub;
      $x_addr=$conv8;
      var $7=$x_addr;
      var $8=$x_addr;
      var $mul9=$8*$7;
      $x_addr=$mul9;
      var $9=$x_addr;
      var $10=$x_addr;
      var $11=$x_addr;
      var $mul10=$11*-0.0012712094467133284;
      var $add11=$mul10+0.04148774594068527;
      var $mul12=$10*$add11;
      var $add13=$mul12-0.49991244077682495;
      var $mul14=$9*$add13;
      var $add15=$mul14+0.9999933242797852;
      var $sub16=(-$add15);
      $retval=$sub16;
      __label__ = 3; break;
    case 3: // $return
      var $12=$retval;
      ;
      return $12;
    default: assert(0, "bad label: " + __label__);
  }
}


function _lsp_enforce_margin($lsp, $len, $margin) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $len_addr;
      var $margin_addr;
      var $i;
      $lsp_addr=$lsp;
      $len_addr=$len;
      $margin_addr=$margin;
      var $0=$lsp_addr;
      var $arrayidx=(($0)|0);
      var $1=HEAPF32[(($arrayidx)>>2)];
      var $2=$margin_addr;
      var $mul=$2;
      var $cmp=$1 < $mul;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $3=$margin_addr;
      var $mul1=$3;
      var $4=$lsp_addr;
      var $arrayidx2=(($4)|0);
      HEAPF32[(($arrayidx2)>>2)]=$mul1;
      __label__ = 2; break;
    case 2: // $if_end
      var $5=$len_addr;
      var $sub=(($5-1)|0);
      var $6=$lsp_addr;
      var $arrayidx3=(($6+($sub<<2))|0);
      var $7=HEAPF32[(($arrayidx3)>>2)];
      var $conv=$7;
      var $8=$margin_addr;
      var $conv4=$8;
      var $sub5=3.141592653589793-$conv4;
      var $mul6=$sub5;
      var $cmp7=$conv > $mul6;
      if ($cmp7) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then9
      var $9=$margin_addr;
      var $conv10=$9;
      var $sub11=3.141592653589793-$conv10;
      var $mul12=$sub11;
      var $conv13=$mul12;
      var $10=$len_addr;
      var $sub14=(($10-1)|0);
      var $11=$lsp_addr;
      var $arrayidx15=(($11+($sub14<<2))|0);
      HEAPF32[(($arrayidx15)>>2)]=$conv13;
      __label__ = 4; break;
    case 4: // $if_end16
      $i=1;
      __label__ = 5; break;
    case 5: // $for_cond
      var $12=$i;
      var $13=$len_addr;
      var $sub17=(($13-1)|0);
      var $cmp18=(($12)|0) < (($sub17)|0);
      if ($cmp18) { __label__ = 6; break; } else { __label__ = 12; break; }
    case 6: // $for_body
      var $14=$i;
      var $15=$lsp_addr;
      var $arrayidx20=(($15+($14<<2))|0);
      var $16=HEAPF32[(($arrayidx20)>>2)];
      var $17=$i;
      var $sub21=(($17-1)|0);
      var $18=$lsp_addr;
      var $arrayidx22=(($18+($sub21<<2))|0);
      var $19=HEAPF32[(($arrayidx22)>>2)];
      var $20=$margin_addr;
      var $mul23=$20;
      var $add=$19+$mul23;
      var $cmp24=$16 < $add;
      if ($cmp24) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then26
      var $21=$i;
      var $sub27=(($21-1)|0);
      var $22=$lsp_addr;
      var $arrayidx28=(($22+($sub27<<2))|0);
      var $23=HEAPF32[(($arrayidx28)>>2)];
      var $24=$margin_addr;
      var $mul29=$24;
      var $add30=$23+$mul29;
      var $25=$i;
      var $26=$lsp_addr;
      var $arrayidx31=(($26+($25<<2))|0);
      HEAPF32[(($arrayidx31)>>2)]=$add30;
      __label__ = 8; break;
    case 8: // $if_end32
      var $27=$i;
      var $28=$lsp_addr;
      var $arrayidx33=(($28+($27<<2))|0);
      var $29=HEAPF32[(($arrayidx33)>>2)];
      var $30=$i;
      var $add34=(($30+1)|0);
      var $31=$lsp_addr;
      var $arrayidx35=(($31+($add34<<2))|0);
      var $32=HEAPF32[(($arrayidx35)>>2)];
      var $33=$margin_addr;
      var $mul36=$33;
      var $sub37=$32-$mul36;
      var $cmp38=$29 > $sub37;
      if ($cmp38) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then40
      var $34=$i;
      var $35=$lsp_addr;
      var $arrayidx41=(($35+($34<<2))|0);
      var $36=HEAPF32[(($arrayidx41)>>2)];
      var $37=$i;
      var $add42=(($37+1)|0);
      var $38=$lsp_addr;
      var $arrayidx43=(($38+($add42<<2))|0);
      var $39=HEAPF32[(($arrayidx43)>>2)];
      var $add44=$36+$39;
      var $40=$margin_addr;
      var $mul45=$40;
      var $sub46=$add44-$mul45;
      var $mul47=$sub46*0.5;
      var $41=$i;
      var $42=$lsp_addr;
      var $arrayidx48=(($42+($41<<2))|0);
      HEAPF32[(($arrayidx48)>>2)]=$mul47;
      __label__ = 10; break;
    case 10: // $if_end49
      __label__ = 11; break;
    case 11: // $for_inc
      var $43=$i;
      var $inc=(($43+1)|0);
      $i=$inc;
      __label__ = 5; break;
    case 12: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_enforce_margin["X"]=1;

function _lsp_interpolate($old_lsp, $new_lsp, $interp_lsp, $len, $subframe, $nb_subframes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $old_lsp_addr;
      var $new_lsp_addr;
      var $interp_lsp_addr;
      var $len_addr;
      var $subframe_addr;
      var $nb_subframes_addr;
      var $i;
      var $tmp;
      $old_lsp_addr=$old_lsp;
      $new_lsp_addr=$new_lsp;
      $interp_lsp_addr=$interp_lsp;
      $len_addr=$len;
      $subframe_addr=$subframe;
      $nb_subframes_addr=$nb_subframes;
      var $0=$subframe_addr;
      var $conv=(($0)|0);
      var $add=$conv+1;
      var $1=$nb_subframes_addr;
      var $conv1=(($1)|0);
      var $div=$add/$conv1;
      $tmp=$div;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=$len_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $4=$tmp;
      var $sub=1-$4;
      var $5=$i;
      var $6=$old_lsp_addr;
      var $arrayidx=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx)>>2)];
      var $mul=$sub*$7;
      var $8=$tmp;
      var $9=$i;
      var $10=$new_lsp_addr;
      var $arrayidx3=(($10+($9<<2))|0);
      var $11=HEAPF32[(($arrayidx3)>>2)];
      var $mul4=$8*$11;
      var $add5=$mul+$mul4;
      var $12=$i;
      var $13=$interp_lsp_addr;
      var $arrayidx6=(($13+($12<<2))|0);
      HEAPF32[(($arrayidx6)>>2)]=$add5;
      __label__ = 3; break;
    case 3: // $for_inc
      var $14=$i;
      var $inc=(($14+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_interpolate["X"]=1;

function _inner_prod($x, $y, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $y_addr;
      var $len_addr;
      var $sum;
      var $part;
      $x_addr=$x;
      $y_addr=$y;
      $len_addr=$len;
      $sum=0;
      var $0=$len_addr;
      var $shr=$0 >> 2;
      $len_addr=$shr;
      __label__ = 1; break;
    case 1: // $while_cond
      var $1=$len_addr;
      var $dec=(($1-1)|0);
      $len_addr=$dec;
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $while_body
      $part=0;
      var $2=$part;
      var $3=$x_addr;
      var $incdec_ptr=(($3+4)|0);
      $x_addr=$incdec_ptr;
      var $4=HEAPF32[(($3)>>2)];
      var $5=$y_addr;
      var $incdec_ptr1=(($5+4)|0);
      $y_addr=$incdec_ptr1;
      var $6=HEAPF32[(($5)>>2)];
      var $mul=$4*$6;
      var $add=$2+$mul;
      $part=$add;
      var $7=$part;
      var $8=$x_addr;
      var $incdec_ptr2=(($8+4)|0);
      $x_addr=$incdec_ptr2;
      var $9=HEAPF32[(($8)>>2)];
      var $10=$y_addr;
      var $incdec_ptr3=(($10+4)|0);
      $y_addr=$incdec_ptr3;
      var $11=HEAPF32[(($10)>>2)];
      var $mul4=$9*$11;
      var $add5=$7+$mul4;
      $part=$add5;
      var $12=$part;
      var $13=$x_addr;
      var $incdec_ptr6=(($13+4)|0);
      $x_addr=$incdec_ptr6;
      var $14=HEAPF32[(($13)>>2)];
      var $15=$y_addr;
      var $incdec_ptr7=(($15+4)|0);
      $y_addr=$incdec_ptr7;
      var $16=HEAPF32[(($15)>>2)];
      var $mul8=$14*$16;
      var $add9=$12+$mul8;
      $part=$add9;
      var $17=$part;
      var $18=$x_addr;
      var $incdec_ptr10=(($18+4)|0);
      $x_addr=$incdec_ptr10;
      var $19=HEAPF32[(($18)>>2)];
      var $20=$y_addr;
      var $incdec_ptr11=(($20+4)|0);
      $y_addr=$incdec_ptr11;
      var $21=HEAPF32[(($20)>>2)];
      var $mul12=$19*$21;
      var $add13=$17+$mul12;
      $part=$add13;
      var $22=$sum;
      var $23=$part;
      var $add14=$22+$23;
      $sum=$add14;
      __label__ = 1; break;
    case 3: // $while_end
      var $24=$sum;
      ;
      return $24;
    default: assert(0, "bad label: " + __label__);
  }
}
_inner_prod["X"]=1;

function _lsp_to_lpc($freq, $ak, $lpcrdr, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $freq_addr;
      var $ak_addr;
      var $lpcrdr_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $xout1;
      var $xout2;
      var $xin1;
      var $xin2;
      var $pw;
      var $n1;
      var $n2;
      var $n3;
      var $n4;
      var $m;
      var $saved_stack;
      var $i2;
      $freq_addr=$freq;
      $ak_addr=$ak;
      $lpcrdr_addr=$lpcrdr;
      $stack_addr=$stack;
      $n4=0;
      var $0=$lpcrdr_addr;
      var $shr=$0 >> 1;
      $m=$shr;
      var $1=$m;
      var $mul=((($1<<2))|0);
      var $add=(($mul+2)|0);
      var $2=_llvm_stacksave();
      $saved_stack=$2;
      var $vla=STACKTOP;STACKTOP += $add*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $pw=$vla;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $3=$i;
      var $4=$m;
      var $mul1=((($4<<2))|0);
      var $add2=(($mul1+1)|0);
      var $cmp=(($3)|0) <= (($add2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $5=$pw;
      var $incdec_ptr=(($5+4)|0);
      $pw=$incdec_ptr;
      HEAPF32[(($5)>>2)]=0;
      __label__ = 3; break;
    case 3: // $for_inc
      var $6=$i;
      var $inc=(($6+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $pw=$vla;
      $xin1=1;
      $xin2=1;
      var $7=$lpcrdr_addr;
      var $vla3=STACKTOP;STACKTOP += $7*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond4
      var $8=$i;
      var $9=$lpcrdr_addr;
      var $cmp5=(($8)|0) < (($9)|0);
      if ($cmp5) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body6
      var $10=$i;
      var $11=$freq_addr;
      var $arrayidx=(($11+($10<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $call=_spx_cos($12);
      var $13=$i;
      var $arrayidx7=(($vla3+($13<<2))|0);
      HEAPF32[(($arrayidx7)>>2)]=$call;
      __label__ = 7; break;
    case 7: // $for_inc8
      var $14=$i;
      var $inc9=(($14+1)|0);
      $i=$inc9;
      __label__ = 5; break;
    case 8: // $for_end10
      $j=0;
      __label__ = 9; break;
    case 9: // $for_cond11
      var $15=$j;
      var $16=$lpcrdr_addr;
      var $cmp12=(($15)|0) <= (($16)|0);
      if ($cmp12) { __label__ = 10; break; } else { __label__ = 18; break; }
    case 10: // $for_body13
      $i2=0;
      $i=0;
      __label__ = 11; break;
    case 11: // $for_cond14
      var $17=$i;
      var $18=$m;
      var $cmp15=(($17)|0) < (($18)|0);
      if ($cmp15) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body16
      var $19=$pw;
      var $20=$i;
      var $mul17=((($20<<2))|0);
      var $add_ptr=(($19+($mul17<<2))|0);
      $n1=$add_ptr;
      var $21=$n1;
      var $add_ptr18=(($21+4)|0);
      $n2=$add_ptr18;
      var $22=$n2;
      var $add_ptr19=(($22+4)|0);
      $n3=$add_ptr19;
      var $23=$n3;
      var $add_ptr20=(($23+4)|0);
      $n4=$add_ptr20;
      var $24=$xin1;
      var $25=$i2;
      var $arrayidx21=(($vla3+($25<<2))|0);
      var $26=HEAPF32[(($arrayidx21)>>2)];
      var $mul22=$26*2;
      var $27=$n1;
      var $28=HEAPF32[(($27)>>2)];
      var $mul23=$mul22*$28;
      var $sub=$24-$mul23;
      var $29=$n2;
      var $30=HEAPF32[(($29)>>2)];
      var $add24=$sub+$30;
      $xout1=$add24;
      var $31=$xin2;
      var $32=$i2;
      var $add25=(($32+1)|0);
      var $arrayidx26=(($vla3+($add25<<2))|0);
      var $33=HEAPF32[(($arrayidx26)>>2)];
      var $mul27=$33*2;
      var $34=$n3;
      var $35=HEAPF32[(($34)>>2)];
      var $mul28=$mul27*$35;
      var $sub29=$31-$mul28;
      var $36=$n4;
      var $37=HEAPF32[(($36)>>2)];
      var $add30=$sub29+$37;
      $xout2=$add30;
      var $38=$n1;
      var $39=HEAPF32[(($38)>>2)];
      var $40=$n2;
      HEAPF32[(($40)>>2)]=$39;
      var $41=$n3;
      var $42=HEAPF32[(($41)>>2)];
      var $43=$n4;
      HEAPF32[(($43)>>2)]=$42;
      var $44=$xin1;
      var $45=$n1;
      HEAPF32[(($45)>>2)]=$44;
      var $46=$xin2;
      var $47=$n3;
      HEAPF32[(($47)>>2)]=$46;
      var $48=$xout1;
      $xin1=$48;
      var $49=$xout2;
      $xin2=$49;
      __label__ = 13; break;
    case 13: // $for_inc31
      var $50=$i;
      var $inc32=(($50+1)|0);
      $i=$inc32;
      var $51=$i2;
      var $add33=(($51+2)|0);
      $i2=$add33;
      __label__ = 11; break;
    case 14: // $for_end34
      var $52=$xin1;
      var $53=$n4;
      var $add_ptr35=(($53+4)|0);
      var $54=HEAPF32[(($add_ptr35)>>2)];
      var $add36=$52+$54;
      $xout1=$add36;
      var $55=$xin2;
      var $56=$n4;
      var $add_ptr37=(($56+8)|0);
      var $57=HEAPF32[(($add_ptr37)>>2)];
      var $sub38=$55-$57;
      $xout2=$sub38;
      var $58=$j;
      var $cmp39=(($58)|0) > 0;
      if ($cmp39) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then
      var $59=$xout1;
      var $60=$xout2;
      var $add40=$59+$60;
      var $mul41=$add40*0.5;
      var $61=$j;
      var $sub42=(($61-1)|0);
      var $62=$ak_addr;
      var $arrayidx43=(($62+($sub42<<2))|0);
      HEAPF32[(($arrayidx43)>>2)]=$mul41;
      __label__ = 16; break;
    case 16: // $if_end
      var $63=$xin1;
      var $64=$n4;
      var $add_ptr44=(($64+4)|0);
      HEAPF32[(($add_ptr44)>>2)]=$63;
      var $65=$xin2;
      var $66=$n4;
      var $add_ptr45=(($66+8)|0);
      HEAPF32[(($add_ptr45)>>2)]=$65;
      $xin1=0;
      $xin2=0;
      __label__ = 17; break;
    case 17: // $for_inc46
      var $67=$j;
      var $inc47=(($67+1)|0);
      $j=$inc47;
      __label__ = 9; break;
    case 18: // $for_end48
      var $68=$saved_stack;
      _llvm_stackrestore($68);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_to_lpc["X"]=1;

function _pitch_xcorr($_x, $_y, $corr, $len, $nb_pitch, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $_x_addr;
      var $_y_addr;
      var $corr_addr;
      var $len_addr;
      var $nb_pitch_addr;
      var $stack_addr;
      var $i;
      $_x_addr=$_x;
      $_y_addr=$_y;
      $corr_addr=$corr;
      $len_addr=$len;
      $nb_pitch_addr=$nb_pitch;
      $stack_addr=$stack;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$nb_pitch_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$_x_addr;
      var $3=$_y_addr;
      var $4=$i;
      var $add_ptr=(($3+($4<<2))|0);
      var $5=$len_addr;
      var $call=_inner_prod($2, $add_ptr, $5);
      var $6=$nb_pitch_addr;
      var $sub=(($6-1)|0);
      var $7=$i;
      var $sub1=(($sub-$7)|0);
      var $8=$corr_addr;
      var $arrayidx=(($8+($sub1<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$call;
      __label__ = 3; break;
    case 3: // $for_inc
      var $9=$i;
      var $inc=(($9+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _open_loop_nbest_pitch($sw, $start, $end, $len, $pitch, $gain, $N, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $sw_addr;
      var $start_addr;
      var $end_addr;
      var $len_addr;
      var $pitch_addr;
      var $gain_addr;
      var $N_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $k;
      var $e0;
      var $corr16;
      var $ener16;
      var $saved_stack;
      var $tmp;
      var $g;
      $sw_addr=$sw;
      $start_addr=$start;
      $end_addr=$end;
      $len_addr=$len;
      $pitch_addr=$pitch;
      $gain_addr=$gain;
      $N_addr=$N;
      $stack_addr=$stack;
      var $0=$end_addr;
      var $1=$start_addr;
      var $sub=(($0-$1)|0);
      var $add=(($sub+2)|0);
      var $2=_llvm_stacksave();
      $saved_stack=$2;
      var $vla=STACKTOP;STACKTOP += $add*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $3=$end_addr;
      var $4=$start_addr;
      var $sub1=(($3-$4)|0);
      var $add2=(($sub1+1)|0);
      var $vla3=STACKTOP;STACKTOP += $add2*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $corr16=$vla3;
      $ener16=$vla;
      var $5=$N_addr;
      var $vla4=STACKTOP;STACKTOP += $5*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $6=$N_addr;
      var $vla5=STACKTOP;STACKTOP += $6*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $7=$i;
      var $8=$N_addr;
      var $cmp=(($7)|0) < (($8)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $9=$i;
      var $arrayidx=(($vla4+($9<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=-1;
      var $10=$i;
      var $arrayidx6=(($vla5+($10<<2))|0);
      HEAPF32[(($arrayidx6)>>2)]=0;
      var $11=$start_addr;
      var $12=$i;
      var $13=$pitch_addr;
      var $arrayidx7=(($13+($12<<2))|0);
      HEAP32[(($arrayidx7)>>2)]=$11;
      __label__ = 3; break;
    case 3: // $for_inc
      var $14=$i;
      var $inc=(($14+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $15=$sw_addr;
      var $16=$start_addr;
      var $idx_neg=(((-$16))|0);
      var $add_ptr=(($15+($idx_neg<<2))|0);
      var $17=$sw_addr;
      var $18=$start_addr;
      var $idx_neg8=(((-$18))|0);
      var $add_ptr9=(($17+($idx_neg8<<2))|0);
      var $19=$len_addr;
      var $call=_inner_prod($add_ptr, $add_ptr9, $19);
      var $arrayidx10=(($vla)|0);
      HEAPF32[(($arrayidx10)>>2)]=$call;
      var $20=$sw_addr;
      var $21=$sw_addr;
      var $22=$len_addr;
      var $call11=_inner_prod($20, $21, $22);
      $e0=$call11;
      var $23=$start_addr;
      $i=$23;
      __label__ = 5; break;
    case 5: // $for_cond12
      var $24=$i;
      var $25=$end_addr;
      var $cmp13=(($24)|0) < (($25)|0);
      if ($cmp13) { __label__ = 6; break; } else { __label__ = 10; break; }
    case 6: // $for_body14
      var $26=$i;
      var $27=$start_addr;
      var $sub15=(($26-$27)|0);
      var $arrayidx16=(($vla+($sub15<<2))|0);
      var $28=HEAPF32[(($arrayidx16)>>2)];
      var $29=$i;
      var $sub17=(((-$29))|0);
      var $sub18=(($sub17-1)|0);
      var $30=$sw_addr;
      var $arrayidx19=(($30+($sub18<<2))|0);
      var $31=HEAPF32[(($arrayidx19)>>2)];
      var $32=$i;
      var $sub20=(((-$32))|0);
      var $sub21=(($sub20-1)|0);
      var $33=$sw_addr;
      var $arrayidx22=(($33+($sub21<<2))|0);
      var $34=HEAPF32[(($arrayidx22)>>2)];
      var $mul=$31*$34;
      var $add23=$28+$mul;
      var $35=$i;
      var $sub24=(((-$35))|0);
      var $36=$len_addr;
      var $add25=(($sub24+$36)|0);
      var $sub26=(($add25-1)|0);
      var $37=$sw_addr;
      var $arrayidx27=(($37+($sub26<<2))|0);
      var $38=HEAPF32[(($arrayidx27)>>2)];
      var $39=$i;
      var $sub28=(((-$39))|0);
      var $40=$len_addr;
      var $add29=(($sub28+$40)|0);
      var $sub30=(($add29-1)|0);
      var $41=$sw_addr;
      var $arrayidx31=(($41+($sub30<<2))|0);
      var $42=HEAPF32[(($arrayidx31)>>2)];
      var $mul32=$38*$42;
      var $sub33=$add23-$mul32;
      var $43=$i;
      var $44=$start_addr;
      var $sub34=(($43-$44)|0);
      var $add35=(($sub34+1)|0);
      var $arrayidx36=(($vla+($add35<<2))|0);
      HEAPF32[(($arrayidx36)>>2)]=$sub33;
      var $45=$i;
      var $46=$start_addr;
      var $sub37=(($45-$46)|0);
      var $add38=(($sub37+1)|0);
      var $arrayidx39=(($vla+($add38<<2))|0);
      var $47=HEAPF32[(($arrayidx39)>>2)];
      var $cmp40=$47 < 0;
      if ($cmp40) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      var $48=$i;
      var $49=$start_addr;
      var $sub41=(($48-$49)|0);
      var $add42=(($sub41+1)|0);
      var $arrayidx43=(($vla+($add42<<2))|0);
      HEAPF32[(($arrayidx43)>>2)]=0;
      __label__ = 8; break;
    case 8: // $if_end
      __label__ = 9; break;
    case 9: // $for_inc44
      var $50=$i;
      var $inc45=(($50+1)|0);
      $i=$inc45;
      __label__ = 5; break;
    case 10: // $for_end46
      var $51=$sw_addr;
      var $52=$sw_addr;
      var $53=$end_addr;
      var $idx_neg47=(((-$53))|0);
      var $add_ptr48=(($52+($idx_neg47<<2))|0);
      var $54=$len_addr;
      var $55=$end_addr;
      var $56=$start_addr;
      var $sub49=(($55-$56)|0);
      var $add50=(($sub49+1)|0);
      var $57=$stack_addr;
      _pitch_xcorr($51, $add_ptr48, $vla3, $54, $add50, $57);
      var $58=$start_addr;
      $i=$58;
      __label__ = 11; break;
    case 11: // $for_cond51
      var $59=$i;
      var $60=$end_addr;
      var $cmp52=(($59)|0) <= (($60)|0);
      if ($cmp52) { __label__ = 12; break; } else { __label__ = 26; break; }
    case 12: // $for_body53
      var $61=$i;
      var $62=$start_addr;
      var $sub54=(($61-$62)|0);
      var $63=$corr16;
      var $arrayidx55=(($63+($sub54<<2))|0);
      var $64=HEAPF32[(($arrayidx55)>>2)];
      var $65=$i;
      var $66=$start_addr;
      var $sub56=(($65-$66)|0);
      var $67=$corr16;
      var $arrayidx57=(($67+($sub56<<2))|0);
      var $68=HEAPF32[(($arrayidx57)>>2)];
      var $mul58=$64*$68;
      $tmp=$mul58;
      var $69=$tmp;
      var $70=$N_addr;
      var $sub59=(($70-1)|0);
      var $arrayidx60=(($vla5+($sub59<<2))|0);
      var $71=HEAPF32[(($arrayidx60)>>2)];
      var $mul61=$69*$71;
      var $72=$N_addr;
      var $sub62=(($72-1)|0);
      var $arrayidx63=(($vla4+($sub62<<2))|0);
      var $73=HEAPF32[(($arrayidx63)>>2)];
      var $74=$i;
      var $75=$start_addr;
      var $sub64=(($74-$75)|0);
      var $76=$ener16;
      var $arrayidx65=(($76+($sub64<<2))|0);
      var $77=HEAPF32[(($arrayidx65)>>2)];
      var $add66=$77+1;
      var $mul67=$73*$add66;
      var $cmp68=$mul61 > $mul67;
      if ($cmp68) { __label__ = 13; break; } else { __label__ = 24; break; }
    case 13: // $if_then69
      var $78=$tmp;
      var $79=$N_addr;
      var $sub70=(($79-1)|0);
      var $arrayidx71=(($vla4+($sub70<<2))|0);
      HEAPF32[(($arrayidx71)>>2)]=$78;
      var $80=$i;
      var $81=$start_addr;
      var $sub72=(($80-$81)|0);
      var $82=$ener16;
      var $arrayidx73=(($82+($sub72<<2))|0);
      var $83=HEAPF32[(($arrayidx73)>>2)];
      var $add74=$83+1;
      var $84=$N_addr;
      var $sub75=(($84-1)|0);
      var $arrayidx76=(($vla5+($sub75<<2))|0);
      HEAPF32[(($arrayidx76)>>2)]=$add74;
      var $85=$i;
      var $86=$N_addr;
      var $sub77=(($86-1)|0);
      var $87=$pitch_addr;
      var $arrayidx78=(($87+($sub77<<2))|0);
      HEAP32[(($arrayidx78)>>2)]=$85;
      $j=0;
      __label__ = 14; break;
    case 14: // $for_cond79
      var $88=$j;
      var $89=$N_addr;
      var $sub80=(($89-1)|0);
      var $cmp81=(($88)|0) < (($sub80)|0);
      if ($cmp81) { __label__ = 15; break; } else { __label__ = 23; break; }
    case 15: // $for_body82
      var $90=$tmp;
      var $91=$j;
      var $arrayidx83=(($vla5+($91<<2))|0);
      var $92=HEAPF32[(($arrayidx83)>>2)];
      var $mul84=$90*$92;
      var $93=$j;
      var $arrayidx85=(($vla4+($93<<2))|0);
      var $94=HEAPF32[(($arrayidx85)>>2)];
      var $95=$i;
      var $96=$start_addr;
      var $sub86=(($95-$96)|0);
      var $97=$ener16;
      var $arrayidx87=(($97+($sub86<<2))|0);
      var $98=HEAPF32[(($arrayidx87)>>2)];
      var $add88=$98+1;
      var $mul89=$94*$add88;
      var $cmp90=$mul84 > $mul89;
      if ($cmp90) { __label__ = 16; break; } else { __label__ = 21; break; }
    case 16: // $if_then91
      var $99=$N_addr;
      var $sub92=(($99-1)|0);
      $k=$sub92;
      __label__ = 17; break;
    case 17: // $for_cond93
      var $100=$k;
      var $101=$j;
      var $cmp94=(($100)|0) > (($101)|0);
      if ($cmp94) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body95
      var $102=$k;
      var $sub96=(($102-1)|0);
      var $arrayidx97=(($vla4+($sub96<<2))|0);
      var $103=HEAPF32[(($arrayidx97)>>2)];
      var $104=$k;
      var $arrayidx98=(($vla4+($104<<2))|0);
      HEAPF32[(($arrayidx98)>>2)]=$103;
      var $105=$k;
      var $sub99=(($105-1)|0);
      var $arrayidx100=(($vla5+($sub99<<2))|0);
      var $106=HEAPF32[(($arrayidx100)>>2)];
      var $107=$k;
      var $arrayidx101=(($vla5+($107<<2))|0);
      HEAPF32[(($arrayidx101)>>2)]=$106;
      var $108=$k;
      var $sub102=(($108-1)|0);
      var $109=$pitch_addr;
      var $arrayidx103=(($109+($sub102<<2))|0);
      var $110=HEAP32[(($arrayidx103)>>2)];
      var $111=$k;
      var $112=$pitch_addr;
      var $arrayidx104=(($112+($111<<2))|0);
      HEAP32[(($arrayidx104)>>2)]=$110;
      __label__ = 19; break;
    case 19: // $for_inc105
      var $113=$k;
      var $dec=(($113-1)|0);
      $k=$dec;
      __label__ = 17; break;
    case 20: // $for_end106
      var $114=$tmp;
      var $115=$j;
      var $arrayidx107=(($vla4+($115<<2))|0);
      HEAPF32[(($arrayidx107)>>2)]=$114;
      var $116=$i;
      var $117=$start_addr;
      var $sub108=(($116-$117)|0);
      var $118=$ener16;
      var $arrayidx109=(($118+($sub108<<2))|0);
      var $119=HEAPF32[(($arrayidx109)>>2)];
      var $add110=$119+1;
      var $120=$j;
      var $arrayidx111=(($vla5+($120<<2))|0);
      HEAPF32[(($arrayidx111)>>2)]=$add110;
      var $121=$i;
      var $122=$j;
      var $123=$pitch_addr;
      var $arrayidx112=(($123+($122<<2))|0);
      HEAP32[(($arrayidx112)>>2)]=$121;
      __label__ = 23; break;
    case 21: // $if_end113
      __label__ = 22; break;
    case 22: // $for_inc114
      var $124=$j;
      var $inc115=(($124+1)|0);
      $j=$inc115;
      __label__ = 14; break;
    case 23: // $for_end116
      __label__ = 24; break;
    case 24: // $if_end117
      __label__ = 25; break;
    case 25: // $for_inc118
      var $125=$i;
      var $inc119=(($125+1)|0);
      $i=$inc119;
      __label__ = 11; break;
    case 26: // $for_end120
      var $126=$gain_addr;
      var $tobool=(($126)|0)!=0;
      if ($tobool) { __label__ = 27; break; } else { __label__ = 34; break; }
    case 27: // $if_then121
      $j=0;
      __label__ = 28; break;
    case 28: // $for_cond122
      var $127=$j;
      var $128=$N_addr;
      var $cmp123=(($127)|0) < (($128)|0);
      if ($cmp123) { __label__ = 29; break; } else { __label__ = 33; break; }
    case 29: // $for_body124
      var $129=$j;
      var $130=$pitch_addr;
      var $arrayidx126=(($130+($129<<2))|0);
      var $131=HEAP32[(($arrayidx126)>>2)];
      $i=$131;
      var $132=$i;
      var $133=$start_addr;
      var $sub127=(($132-$133)|0);
      var $134=$corr16;
      var $arrayidx128=(($134+($sub127<<2))|0);
      var $135=HEAPF32[(($arrayidx128)>>2)];
      var $136=$e0;
      var $conv=$136;
      var $call129=_sqrt($conv);
      var $conv130=$call129;
      var $137=$i;
      var $138=$start_addr;
      var $sub131=(($137-$138)|0);
      var $139=$ener16;
      var $arrayidx132=(($139+($sub131<<2))|0);
      var $140=HEAPF32[(($arrayidx132)>>2)];
      var $conv133=$140;
      var $call134=_sqrt($conv133);
      var $conv135=$call134;
      var $mul136=$conv130*$conv135;
      var $add137=$mul136+10;
      var $div=$135/$add137;
      $g=$div;
      var $141=$g;
      var $cmp138=$141 < 0;
      if ($cmp138) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then140
      $g=0;
      __label__ = 31; break;
    case 31: // $if_end141
      var $142=$g;
      var $143=$j;
      var $144=$gain_addr;
      var $arrayidx142=(($144+($143<<2))|0);
      HEAPF32[(($arrayidx142)>>2)]=$142;
      __label__ = 32; break;
    case 32: // $for_inc143
      var $145=$j;
      var $inc144=(($145+1)|0);
      $j=$inc144;
      __label__ = 28; break;
    case 33: // $for_end145
      __label__ = 34; break;
    case 34: // $if_end146
      var $146=$saved_stack;
      _llvm_stackrestore($146);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_open_loop_nbest_pitch["X"]=1;

function _pitch_search_3tap($target, $sw, $ak, $awk1, $awk2, $exc, $par, $start, $end, $pitch_coef, $p, $nsf, $bits, $stack, $exc2, $r, $complexity, $cdbk_offset, $plc_tuning, $cumul_gain) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $target_addr;
      var $sw_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $exc_addr;
      var $par_addr;
      var $start_addr;
      var $end_addr;
      var $pitch_coef_addr;
      var $p_addr;
      var $nsf_addr;
      var $bits_addr;
      var $stack_addr;
      var $exc2_addr;
      var $r_addr;
      var $complexity_addr;
      var $cdbk_offset_addr;
      var $plc_tuning_addr;
      var $cumul_gain_addr;
      var $i;
      var $cdbk_index=__stackBase__;
      var $pitch;
      var $best_gain_index;
      var $best_pitch;
      var $err;
      var $best_err;
      var $N;
      var $params;
      var $gain_cdbk;
      var $gain_cdbk_size;
      var $scaledown;
      var $saved_stack;
      var $cleanup_dest_slot;
      $target_addr=$target;
      $sw_addr=$sw;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $exc_addr=$exc;
      $par_addr=$par;
      $start_addr=$start;
      $end_addr=$end;
      $pitch_coef_addr=$pitch_coef;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $exc2_addr=$exc2;
      $r_addr=$r;
      $complexity_addr=$complexity;
      $cdbk_offset_addr=$cdbk_offset;
      $plc_tuning_addr=$plc_tuning;
      $cumul_gain_addr=$cumul_gain;
      $pitch=0;
      $best_gain_index=0;
      $best_pitch=0;
      $best_err=-1;
      $scaledown=0;
      var $0=$par_addr;
      var $1=$0;
      $params=$1;
      var $2=$params;
      var $gain_bits=(($2+4)|0);
      var $3=HEAP32[(($gain_bits)>>2)];
      var $shl=1 << $3;
      $gain_cdbk_size=$shl;
      var $4=$params;
      var $gain_cdbk1=(($4)|0);
      var $5=HEAP32[(($gain_cdbk1)>>2)];
      var $6=$gain_cdbk_size;
      var $mul=((($6<<2))|0);
      var $7=$cdbk_offset_addr;
      var $mul2=(($mul*$7)|0);
      var $add_ptr=(($5+$mul2)|0);
      $gain_cdbk=$add_ptr;
      var $8=$complexity_addr;
      $N=$8;
      var $9=$N;
      var $cmp=(($9)|0) > 10;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $N=10;
      __label__ = 2; break;
    case 2: // $if_end
      var $10=$N;
      var $cmp3=(($10)|0) < 1;
      if ($cmp3) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then4
      $N=1;
      __label__ = 4; break;
    case 4: // $if_end5
      var $11=$N;
      var $12=_llvm_stacksave();
      $saved_stack=$12;
      var $vla=STACKTOP;STACKTOP += $11*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $13=$par_addr;
      var $14=$13;
      $params=$14;
      var $15=$end_addr;
      var $16=$start_addr;
      var $cmp6=(($15)|0) < (($16)|0);
      if ($cmp6) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then7
      var $17=$bits_addr;
      var $18=$params;
      var $pitch_bits=(($18+8)|0);
      var $19=HEAP32[(($pitch_bits)>>2)];
      _speex_bits_pack($17, 0, $19);
      var $20=$bits_addr;
      var $21=$params;
      var $gain_bits8=(($21+4)|0);
      var $22=HEAP32[(($gain_bits8)>>2)];
      _speex_bits_pack($20, 0, $22);
      var $23=$exc_addr;
      var $24=$23;
      var $25=$nsf_addr;
      var $mul9=((($25<<2))|0);
      _memset($24, 0, $mul9, 1);
      var $26=$start_addr;
      $retval=$26;
      $cleanup_dest_slot=1;
      __label__ = 22; break;
    case 6: // $if_end10
      var $27=$N;
      var $28=$end_addr;
      var $29=$start_addr;
      var $sub=(($28-$29)|0);
      var $add=(($sub+1)|0);
      var $cmp11=(($27)|0) > (($add)|0);
      if ($cmp11) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then12
      var $30=$end_addr;
      var $31=$start_addr;
      var $sub13=(($30-$31)|0);
      var $add14=(($sub13+1)|0);
      $N=$add14;
      __label__ = 8; break;
    case 8: // $if_end15
      var $32=$end_addr;
      var $33=$start_addr;
      var $cmp16=(($32)|0)!=(($33)|0);
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then17
      var $34=$sw_addr;
      var $35=$start_addr;
      var $36=$end_addr;
      var $37=$nsf_addr;
      var $38=$N;
      var $39=$stack_addr;
      _open_loop_nbest_pitch($34, $35, $36, $37, $vla, 0, $38, $39);
      __label__ = 11; break;
    case 10: // $if_else
      var $40=$start_addr;
      var $arrayidx=(($vla)|0);
      HEAP32[(($arrayidx)>>2)]=$40;
      __label__ = 11; break;
    case 11: // $if_end18
      var $41=$nsf_addr;
      var $vla19=STACKTOP;STACKTOP += $41*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $42=$nsf_addr;
      var $vla20=STACKTOP;STACKTOP += $42*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $43=$nsf_addr;
      var $vla21=STACKTOP;STACKTOP += $43*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 12; break;
    case 12: // $for_cond
      var $44=$i;
      var $45=$N;
      var $cmp22=(($44)|0) < (($45)|0);
      if ($cmp22) { __label__ = 13; break; } else { __label__ = 18; break; }
    case 13: // $for_body
      var $46=$i;
      var $arrayidx23=(($vla+($46<<2))|0);
      var $47=HEAP32[(($arrayidx23)>>2)];
      $pitch=$47;
      var $48=$exc_addr;
      var $49=$48;
      var $50=$nsf_addr;
      var $mul24=((($50<<2))|0);
      _memset($49, 0, $mul24, 1);
      var $51=$target_addr;
      var $52=$ak_addr;
      var $53=$awk1_addr;
      var $54=$awk2_addr;
      var $55=$exc_addr;
      var $56=$gain_cdbk;
      var $57=$gain_cdbk_size;
      var $58=$pitch;
      var $59=$p_addr;
      var $60=$nsf_addr;
      var $61=$bits_addr;
      var $62=$stack_addr;
      var $63=$exc2_addr;
      var $64=$r_addr;
      var $65=$plc_tuning_addr;
      var $66=$cumul_gain_addr;
      var $67=HEAPF32[(($66)>>2)];
      var $68=$scaledown;
      var $call=_pitch_gain_search_3tap($51, $52, $53, $54, $55, $56, $57, $58, $59, $60, $61, $62, $63, $64, $vla20, $cdbk_index, $65, $67, $68);
      $err=$call;
      var $69=$err;
      var $70=$best_err;
      var $cmp25=$69 < $70;
      if ($cmp25) { __label__ = 15; break; } else { __label__ = 14; break; }
    case 14: // $lor_lhs_false
      var $71=$best_err;
      var $cmp26=$71 < 0;
      if ($cmp26) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then27
      var $72=$vla19;
      var $73=$exc_addr;
      var $74=$73;
      var $75=$nsf_addr;
      var $mul28=((($75<<2))|0);
      var $76=$exc_addr;
      var $sub_ptr_lhs_cast=$vla19;
      var $sub_ptr_rhs_cast=$76;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul29=((0)|0);
      var $add30=(($mul28+$mul29)|0);
      assert($add30 % 1 === 0, 'memcpy given ' + $add30 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($72, $74, $add30, 1);
      var $77=$vla21;
      var $78=$vla20;
      var $79=$nsf_addr;
      var $mul31=((($79<<2))|0);
      var $sub_ptr_lhs_cast32=$vla21;
      var $sub_ptr_rhs_cast33=$vla20;
      var $sub_ptr_sub34=(($sub_ptr_lhs_cast32-$sub_ptr_rhs_cast33)|0);
      var $sub_ptr_div35=(((($sub_ptr_sub34)|0)/4)|0);
      var $mul36=((0)|0);
      var $add37=(($mul31+$mul36)|0);
      assert($add37 % 1 === 0, 'memcpy given ' + $add37 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($77, $78, $add37, 1);
      var $80=$err;
      $best_err=$80;
      var $81=$pitch;
      $best_pitch=$81;
      var $82=HEAP32[(($cdbk_index)>>2)];
      $best_gain_index=$82;
      __label__ = 16; break;
    case 16: // $if_end38
      __label__ = 17; break;
    case 17: // $for_inc
      var $83=$i;
      var $inc=(($83+1)|0);
      $i=$inc;
      __label__ = 12; break;
    case 18: // $for_end
      var $84=$bits_addr;
      var $85=$best_pitch;
      var $86=$start_addr;
      var $sub39=(($85-$86)|0);
      var $87=$params;
      var $pitch_bits40=(($87+8)|0);
      var $88=HEAP32[(($pitch_bits40)>>2)];
      _speex_bits_pack($84, $sub39, $88);
      var $89=$bits_addr;
      var $90=$best_gain_index;
      var $91=$params;
      var $gain_bits41=(($91+4)|0);
      var $92=HEAP32[(($gain_bits41)>>2)];
      _speex_bits_pack($89, $90, $92);
      var $93=$cumul_gain_addr;
      var $94=HEAPF32[(($93)>>2)];
      var $cmp42=1024 > $94;
      if ($cmp42) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $cond_true
      var $cond = 1024;__label__ = 21; break;
    case 20: // $cond_false
      var $95=$cumul_gain_addr;
      var $96=HEAPF32[(($95)>>2)];
      var $cond = $96;__label__ = 21; break;
    case 21: // $cond_end
      var $cond;
      var $conv=$cond;
      var $mul43=$conv*0.03125;
      var $97=$best_gain_index;
      var $mul44=((($97<<2))|0);
      var $add45=(($mul44+3)|0);
      var $98=$params;
      var $gain_cdbk46=(($98)|0);
      var $99=HEAP32[(($gain_cdbk46)>>2)];
      var $arrayidx47=(($99+$add45)|0);
      var $100=HEAP8[($arrayidx47)];
      var $conv48=(($100 << 24) >> 24);
      var $conv49=(($conv48)|0);
      var $mul50=$mul43*$conv49;
      var $conv51=$mul50;
      var $101=$cumul_gain_addr;
      HEAPF32[(($101)>>2)]=$conv51;
      var $102=$exc_addr;
      var $103=$102;
      var $104=$vla19;
      var $105=$nsf_addr;
      var $mul52=((($105<<2))|0);
      var $106=$exc_addr;
      var $sub_ptr_lhs_cast53=$106;
      var $sub_ptr_rhs_cast54=$vla19;
      var $sub_ptr_sub55=(($sub_ptr_lhs_cast53-$sub_ptr_rhs_cast54)|0);
      var $sub_ptr_div56=(((($sub_ptr_sub55)|0)/4)|0);
      var $mul57=((0)|0);
      var $add58=(($mul52+$mul57)|0);
      assert($add58 % 1 === 0, 'memcpy given ' + $add58 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($103, $104, $add58, 1);
      var $107=$target_addr;
      var $108=$107;
      var $109=$vla21;
      var $110=$nsf_addr;
      var $mul59=((($110<<2))|0);
      var $111=$target_addr;
      var $sub_ptr_lhs_cast60=$111;
      var $sub_ptr_rhs_cast61=$vla21;
      var $sub_ptr_sub62=(($sub_ptr_lhs_cast60-$sub_ptr_rhs_cast61)|0);
      var $sub_ptr_div63=(((($sub_ptr_sub62)|0)/4)|0);
      var $mul64=((0)|0);
      var $add65=(($mul59+$mul64)|0);
      assert($add65 % 1 === 0, 'memcpy given ' + $add65 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($108, $109, $add65, 1);
      var $112=$pitch;
      $retval=$112;
      $cleanup_dest_slot=1;
      __label__ = 22; break;
    case 22: // $cleanup
      var $113=$saved_stack;
      _llvm_stackrestore($113);
      var $114=$retval;
      STACKTOP = __stackBase__;
      return $114;
    default: assert(0, "bad label: " + __label__);
  }
}
_pitch_search_3tap["X"]=1;

function _pitch_gain_search_3tap($target, $ak, $awk1, $awk2, $exc, $gain_cdbk, $gain_cdbk_size, $pitch, $p, $nsf, $bits, $stack, $exc2, $r, $new_target, $cdbk_index, $plc_tuning, $cumul_gain, $scaledown) {
  var __stackBase__  = STACKTOP; STACKTOP += 108; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $target_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $exc_addr;
      var $gain_cdbk_addr;
      var $gain_cdbk_size_addr;
      var $pitch_addr;
      var $p_addr;
      var $nsf_addr;
      var $bits_addr;
      var $stack_addr;
      var $exc2_addr;
      var $r_addr;
      var $new_target_addr;
      var $cdbk_index_addr;
      var $plc_tuning_addr;
      var $cumul_gain_addr;
      var $scaledown_addr;
      var $i;
      var $j;
      var $x=__stackBase__;
      var $corr=__stackBase__+12;
      var $A=__stackBase__+24;
      var $gain=__stackBase__+60;
      var $err;
      var $max_gain;
      var $best_cdbk;
      var $saved_stack;
      var $pp;
      var $saved_stack9;
      var $e0;
      var $C=__stackBase__+72;
      var $C16;
      var $j199;
      var $tmp1;
      var $tmp3;
      var $pp200;
      var $tmp;
      var $cleanup_dest_slot;
      $target_addr=$target;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $exc_addr=$exc;
      $gain_cdbk_addr=$gain_cdbk;
      $gain_cdbk_size_addr=$gain_cdbk_size;
      $pitch_addr=$pitch;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $exc2_addr=$exc2;
      $r_addr=$r;
      $new_target_addr=$new_target;
      $cdbk_index_addr=$cdbk_index;
      $plc_tuning_addr=$plc_tuning;
      $cumul_gain_addr=$cumul_gain;
      $scaledown_addr=$scaledown;
      $max_gain=128;
      $best_cdbk=0;
      var $0=$nsf_addr;
      var $mul=(($0*3)|0);
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $mul*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $2=$nsf_addr;
      var $vla1=STACKTOP;STACKTOP += $2*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $3=$cumul_gain_addr;
      var $cmp=$3 > 262144;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $max_gain=31;
      __label__ = 2; break;
    case 2: // $if_end
      var $arrayidx=(($x)|0);
      HEAP32[(($arrayidx)>>2)]=$vla;
      var $4=$nsf_addr;
      var $add_ptr=(($vla+($4<<2))|0);
      var $arrayidx2=(($x+4)|0);
      HEAP32[(($arrayidx2)>>2)]=$add_ptr;
      var $5=$nsf_addr;
      var $mul3=((($5<<1))|0);
      var $add_ptr4=(($vla+($mul3<<2))|0);
      var $arrayidx5=(($x+8)|0);
      HEAP32[(($arrayidx5)>>2)]=$add_ptr4;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $6=$j;
      var $7=$nsf_addr;
      var $cmp6=(($6)|0) < (($7)|0);
      if ($cmp6) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $8=$j;
      var $9=$target_addr;
      var $arrayidx7=(($9+($8<<2))|0);
      var $10=HEAPF32[(($arrayidx7)>>2)];
      var $11=$j;
      var $12=$new_target_addr;
      var $arrayidx8=(($12+($11<<2))|0);
      HEAPF32[(($arrayidx8)>>2)]=$10;
      __label__ = 5; break;
    case 5: // $for_inc
      var $13=$j;
      var $inc=(($13+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $14=$pitch_addr;
      var $sub=(($14-1)|0);
      $pp=$sub;
      var $15=$p_addr;
      var $16=_llvm_stacksave();
      $saved_stack9=$16;
      var $vla10=STACKTOP;STACKTOP += $15*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $j=0;
      __label__ = 7; break;
    case 7: // $for_cond11
      var $17=$j;
      var $18=$nsf_addr;
      var $cmp12=(($17)|0) < (($18)|0);
      if ($cmp12) { __label__ = 8; break; } else { __label__ = 16; break; }
    case 8: // $for_body13
      var $19=$j;
      var $20=$pp;
      var $sub14=(($19-$20)|0);
      var $cmp15=(($sub14)|0) < 0;
      if ($cmp15) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then16
      var $21=$j;
      var $22=$pp;
      var $sub17=(($21-$22)|0);
      var $23=$exc2_addr;
      var $arrayidx18=(($23+($sub17<<2))|0);
      var $24=HEAPF32[(($arrayidx18)>>2)];
      var $25=$j;
      var $arrayidx19=(($vla1+($25<<2))|0);
      HEAPF32[(($arrayidx19)>>2)]=$24;
      __label__ = 14; break;
    case 10: // $if_else
      var $26=$j;
      var $27=$pp;
      var $sub20=(($26-$27)|0);
      var $28=$pitch_addr;
      var $sub21=(($sub20-$28)|0);
      var $cmp22=(($sub21)|0) < 0;
      if ($cmp22) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then23
      var $29=$j;
      var $30=$pp;
      var $sub24=(($29-$30)|0);
      var $31=$pitch_addr;
      var $sub25=(($sub24-$31)|0);
      var $32=$exc2_addr;
      var $arrayidx26=(($32+($sub25<<2))|0);
      var $33=HEAPF32[(($arrayidx26)>>2)];
      var $34=$j;
      var $arrayidx27=(($vla1+($34<<2))|0);
      HEAPF32[(($arrayidx27)>>2)]=$33;
      __label__ = 13; break;
    case 12: // $if_else28
      var $35=$j;
      var $arrayidx29=(($vla1+($35<<2))|0);
      HEAPF32[(($arrayidx29)>>2)]=0;
      __label__ = 13; break;
    case 13: // $if_end30
      __label__ = 14; break;
    case 14: // $if_end31
      __label__ = 15; break;
    case 15: // $for_inc32
      var $36=$j;
      var $inc33=(($36+1)|0);
      $j=$inc33;
      __label__ = 7; break;
    case 16: // $for_end34
      $j=0;
      __label__ = 17; break;
    case 17: // $for_cond35
      var $37=$j;
      var $38=$p_addr;
      var $cmp36=(($37)|0) < (($38)|0);
      if ($cmp36) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body37
      var $39=$j;
      var $arrayidx38=(($vla10+($39<<2))|0);
      HEAPF32[(($arrayidx38)>>2)]=0;
      __label__ = 19; break;
    case 19: // $for_inc39
      var $40=$j;
      var $inc40=(($40+1)|0);
      $j=$inc40;
      __label__ = 17; break;
    case 20: // $for_end41
      var $41=$ak_addr;
      var $42=$nsf_addr;
      var $43=$p_addr;
      var $44=$stack_addr;
      _iir_mem16($vla1, $41, $vla1, $42, $43, $vla10, $44);
      $j=0;
      __label__ = 21; break;
    case 21: // $for_cond42
      var $45=$j;
      var $46=$p_addr;
      var $cmp43=(($45)|0) < (($46)|0);
      if ($cmp43) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body44
      var $47=$j;
      var $arrayidx45=(($vla10+($47<<2))|0);
      HEAPF32[(($arrayidx45)>>2)]=0;
      __label__ = 23; break;
    case 23: // $for_inc46
      var $48=$j;
      var $inc47=(($48+1)|0);
      $j=$inc47;
      __label__ = 21; break;
    case 24: // $for_end48
      var $49=$awk1_addr;
      var $50=$awk2_addr;
      var $51=$nsf_addr;
      var $52=$p_addr;
      var $53=$stack_addr;
      _filter_mem16($vla1, $49, $50, $vla1, $51, $52, $vla10, $53);
      $j=0;
      __label__ = 25; break;
    case 25: // $for_cond49
      var $54=$j;
      var $55=$nsf_addr;
      var $cmp50=(($54)|0) < (($55)|0);
      if ($cmp50) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body51
      var $56=$j;
      var $arrayidx52=(($vla1+($56<<2))|0);
      var $57=HEAPF32[(($arrayidx52)>>2)];
      var $58=$j;
      var $arrayidx53=(($x+8)|0);
      var $59=HEAP32[(($arrayidx53)>>2)];
      var $arrayidx54=(($59+($58<<2))|0);
      HEAPF32[(($arrayidx54)>>2)]=$57;
      __label__ = 27; break;
    case 27: // $for_inc55
      var $60=$j;
      var $inc56=(($60+1)|0);
      $j=$inc56;
      __label__ = 25; break;
    case 28: // $for_end57
      var $61=$saved_stack9;
      _llvm_stackrestore($61);
      $i=1;
      __label__ = 29; break;
    case 29: // $for_cond58
      var $62=$i;
      var $cmp59=(($62)|0) >= 0;
      if ($cmp59) { __label__ = 30; break; } else { __label__ = 36; break; }
    case 30: // $for_body60
      var $63=$pitch_addr;
      var $sub61=(((-$63))|0);
      var $sub62=(($sub61-1)|0);
      var $64=$i;
      var $add=(($sub62+$64)|0);
      var $65=$exc2_addr;
      var $arrayidx63=(($65+($add<<2))|0);
      var $66=HEAPF32[(($arrayidx63)>>2)];
      $e0=$66;
      var $67=$r_addr;
      var $arrayidx64=(($67)|0);
      var $68=HEAPF32[(($arrayidx64)>>2)];
      var $69=$e0;
      var $mul65=$68*$69;
      var $70=$i;
      var $arrayidx66=(($x+($70<<2))|0);
      var $71=HEAP32[(($arrayidx66)>>2)];
      var $arrayidx67=(($71)|0);
      HEAPF32[(($arrayidx67)>>2)]=$mul65;
      $j=0;
      __label__ = 31; break;
    case 31: // $for_cond68
      var $72=$j;
      var $73=$nsf_addr;
      var $sub69=(($73-1)|0);
      var $cmp70=(($72)|0) < (($sub69)|0);
      if ($cmp70) { __label__ = 32; break; } else { __label__ = 34; break; }
    case 32: // $for_body71
      var $74=$j;
      var $75=$i;
      var $add72=(($75+1)|0);
      var $arrayidx73=(($x+($add72<<2))|0);
      var $76=HEAP32[(($arrayidx73)>>2)];
      var $arrayidx74=(($76+($74<<2))|0);
      var $77=HEAPF32[(($arrayidx74)>>2)];
      var $78=$j;
      var $add75=(($78+1)|0);
      var $79=$r_addr;
      var $arrayidx76=(($79+($add75<<2))|0);
      var $80=HEAPF32[(($arrayidx76)>>2)];
      var $81=$e0;
      var $mul77=$80*$81;
      var $add78=$77+$mul77;
      var $82=$j;
      var $add79=(($82+1)|0);
      var $83=$i;
      var $arrayidx80=(($x+($83<<2))|0);
      var $84=HEAP32[(($arrayidx80)>>2)];
      var $arrayidx81=(($84+($add79<<2))|0);
      HEAPF32[(($arrayidx81)>>2)]=$add78;
      __label__ = 33; break;
    case 33: // $for_inc82
      var $85=$j;
      var $inc83=(($85+1)|0);
      $j=$inc83;
      __label__ = 31; break;
    case 34: // $for_end84
      __label__ = 35; break;
    case 35: // $for_inc85
      var $86=$i;
      var $dec=(($86-1)|0);
      $i=$dec;
      __label__ = 29; break;
    case 36: // $for_end86
      $i=0;
      __label__ = 37; break;
    case 37: // $for_cond87
      var $87=$i;
      var $cmp88=(($87)|0) < 3;
      if ($cmp88) { __label__ = 38; break; } else { __label__ = 40; break; }
    case 38: // $for_body89
      var $88=$i;
      var $arrayidx90=(($x+($88<<2))|0);
      var $89=HEAP32[(($arrayidx90)>>2)];
      var $90=$new_target_addr;
      var $91=$nsf_addr;
      var $call=_inner_prod($89, $90, $91);
      var $92=$i;
      var $arrayidx91=(($corr+($92<<2))|0);
      HEAPF32[(($arrayidx91)>>2)]=$call;
      __label__ = 39; break;
    case 39: // $for_inc92
      var $93=$i;
      var $inc93=(($93+1)|0);
      $i=$inc93;
      __label__ = 37; break;
    case 40: // $for_end94
      $i=0;
      __label__ = 41; break;
    case 41: // $for_cond95
      var $94=$i;
      var $cmp96=(($94)|0) < 3;
      if ($cmp96) { __label__ = 42; break; } else { __label__ = 48; break; }
    case 42: // $for_body97
      $j=0;
      __label__ = 43; break;
    case 43: // $for_cond98
      var $95=$j;
      var $96=$i;
      var $cmp99=(($95)|0) <= (($96)|0);
      if ($cmp99) { __label__ = 44; break; } else { __label__ = 46; break; }
    case 44: // $for_body100
      var $97=$i;
      var $arrayidx101=(($x+($97<<2))|0);
      var $98=HEAP32[(($arrayidx101)>>2)];
      var $99=$j;
      var $arrayidx102=(($x+($99<<2))|0);
      var $100=HEAP32[(($arrayidx102)>>2)];
      var $101=$nsf_addr;
      var $call103=_inner_prod($98, $100, $101);
      var $102=$i;
      var $103=$j;
      var $arrayidx104=(($A+$103*12)|0);
      var $arrayidx105=(($arrayidx104+($102<<2))|0);
      HEAPF32[(($arrayidx105)>>2)]=$call103;
      var $104=$j;
      var $105=$i;
      var $arrayidx106=(($A+$105*12)|0);
      var $arrayidx107=(($arrayidx106+($104<<2))|0);
      HEAPF32[(($arrayidx107)>>2)]=$call103;
      __label__ = 45; break;
    case 45: // $for_inc108
      var $106=$j;
      var $inc109=(($106+1)|0);
      $j=$inc109;
      __label__ = 43; break;
    case 46: // $for_end110
      __label__ = 47; break;
    case 47: // $for_inc111
      var $107=$i;
      var $inc112=(($107+1)|0);
      $i=$inc112;
      __label__ = 41; break;
    case 48: // $for_end113
      var $arraydecay=(($C)|0);
      $C16=$arraydecay;
      var $arrayidx114=(($corr+8)|0);
      var $108=HEAPF32[(($arrayidx114)>>2)];
      var $arrayidx115=(($C)|0);
      HEAPF32[(($arrayidx115)>>2)]=$108;
      var $arrayidx116=(($corr+4)|0);
      var $109=HEAPF32[(($arrayidx116)>>2)];
      var $arrayidx117=(($C+4)|0);
      HEAPF32[(($arrayidx117)>>2)]=$109;
      var $arrayidx118=(($corr)|0);
      var $110=HEAPF32[(($arrayidx118)>>2)];
      var $arrayidx119=(($C+8)|0);
      HEAPF32[(($arrayidx119)>>2)]=$110;
      var $arrayidx120=(($A+12)|0);
      var $arrayidx121=(($arrayidx120+8)|0);
      var $111=HEAPF32[(($arrayidx121)>>2)];
      var $arrayidx122=(($C+12)|0);
      HEAPF32[(($arrayidx122)>>2)]=$111;
      var $arrayidx123=(($A)|0);
      var $arrayidx124=(($arrayidx123+4)|0);
      var $112=HEAPF32[(($arrayidx124)>>2)];
      var $arrayidx125=(($C+16)|0);
      HEAPF32[(($arrayidx125)>>2)]=$112;
      var $arrayidx126=(($A)|0);
      var $arrayidx127=(($arrayidx126+8)|0);
      var $113=HEAPF32[(($arrayidx127)>>2)];
      var $arrayidx128=(($C+20)|0);
      HEAPF32[(($arrayidx128)>>2)]=$113;
      var $arrayidx129=(($A+24)|0);
      var $arrayidx130=(($arrayidx129+8)|0);
      var $114=HEAPF32[(($arrayidx130)>>2)];
      var $arrayidx131=(($C+24)|0);
      HEAPF32[(($arrayidx131)>>2)]=$114;
      var $arrayidx132=(($A+12)|0);
      var $arrayidx133=(($arrayidx132+4)|0);
      var $115=HEAPF32[(($arrayidx133)>>2)];
      var $arrayidx134=(($C+28)|0);
      HEAPF32[(($arrayidx134)>>2)]=$115;
      var $arrayidx135=(($A)|0);
      var $arrayidx136=(($arrayidx135)|0);
      var $116=HEAPF32[(($arrayidx136)>>2)];
      var $arrayidx137=(($C+32)|0);
      HEAPF32[(($arrayidx137)>>2)]=$116;
      var $117=$plc_tuning_addr;
      var $cmp138=(($117)|0) < 2;
      if ($cmp138) { __label__ = 49; break; } else { __label__ = 50; break; }
    case 49: // $if_then139
      $plc_tuning_addr=2;
      __label__ = 50; break;
    case 50: // $if_end140
      var $118=$plc_tuning_addr;
      var $cmp141=(($118)|0) > 30;
      if ($cmp141) { __label__ = 51; break; } else { __label__ = 52; break; }
    case 51: // $if_then142
      $plc_tuning_addr=30;
      __label__ = 52; break;
    case 52: // $if_end143
      var $119=$plc_tuning_addr;
      var $conv=(($119)|0);
      var $mul144=$conv*0.02;
      var $add145=$mul144+1;
      var $mul146=$add145*0.5;
      var $arrayidx147=(($C+24)|0);
      var $120=HEAPF32[(($arrayidx147)>>2)];
      var $conv148=$120;
      var $mul149=$conv148*$mul146;
      var $conv150=$mul149;
      HEAPF32[(($arrayidx147)>>2)]=$conv150;
      var $121=$plc_tuning_addr;
      var $conv151=(($121)|0);
      var $mul152=$conv151*0.02;
      var $add153=$mul152+1;
      var $mul154=$add153*0.5;
      var $arrayidx155=(($C+28)|0);
      var $122=HEAPF32[(($arrayidx155)>>2)];
      var $conv156=$122;
      var $mul157=$conv156*$mul154;
      var $conv158=$mul157;
      HEAPF32[(($arrayidx155)>>2)]=$conv158;
      var $123=$plc_tuning_addr;
      var $conv159=(($123)|0);
      var $mul160=$conv159*0.02;
      var $add161=$mul160+1;
      var $mul162=$add161*0.5;
      var $arrayidx163=(($C+32)|0);
      var $124=HEAPF32[(($arrayidx163)>>2)];
      var $conv164=$124;
      var $mul165=$conv164*$mul162;
      var $conv166=$mul165;
      HEAPF32[(($arrayidx163)>>2)]=$conv166;
      var $125=$gain_cdbk_addr;
      var $126=$gain_cdbk_size_addr;
      var $127=$C16;
      var $128=$max_gain;
      var $call167=_pitch_gain_search_3tap_vq($125, $126, $127, $128);
      $best_cdbk=$call167;
      var $129=$best_cdbk;
      var $mul168=((($129<<2))|0);
      var $130=$gain_cdbk_addr;
      var $arrayidx169=(($130+$mul168)|0);
      var $131=HEAP8[($arrayidx169)];
      var $conv170=(($131 << 24) >> 24);
      var $conv171=(($conv170)|0);
      var $mul172=$conv171*0.015625;
      var $add173=$mul172+0.5;
      var $conv174=$add173;
      var $arrayidx175=(($gain)|0);
      HEAPF32[(($arrayidx175)>>2)]=$conv174;
      var $132=$best_cdbk;
      var $mul176=((($132<<2))|0);
      var $add177=(($mul176+1)|0);
      var $133=$gain_cdbk_addr;
      var $arrayidx178=(($133+$add177)|0);
      var $134=HEAP8[($arrayidx178)];
      var $conv179=(($134 << 24) >> 24);
      var $conv180=(($conv179)|0);
      var $mul181=$conv180*0.015625;
      var $add182=$mul181+0.5;
      var $conv183=$add182;
      var $arrayidx184=(($gain+4)|0);
      HEAPF32[(($arrayidx184)>>2)]=$conv183;
      var $135=$best_cdbk;
      var $mul185=((($135<<2))|0);
      var $add186=(($mul185+2)|0);
      var $136=$gain_cdbk_addr;
      var $arrayidx187=(($136+$add186)|0);
      var $137=HEAP8[($arrayidx187)];
      var $conv188=(($137 << 24) >> 24);
      var $conv189=(($conv188)|0);
      var $mul190=$conv189*0.015625;
      var $add191=$mul190+0.5;
      var $conv192=$add191;
      var $arrayidx193=(($gain+8)|0);
      HEAPF32[(($arrayidx193)>>2)]=$conv192;
      var $138=$best_cdbk;
      var $139=$cdbk_index_addr;
      HEAP32[(($139)>>2)]=$138;
      var $140=$exc_addr;
      var $141=$140;
      var $142=$nsf_addr;
      var $mul194=((($142<<2))|0);
      _memset($141, 0, $mul194, 1);
      $i=0;
      __label__ = 53; break;
    case 53: // $for_cond195
      var $143=$i;
      var $cmp196=(($143)|0) < 3;
      if ($cmp196) { __label__ = 54; break; } else { __label__ = 68; break; }
    case 54: // $for_body198
      var $144=$pitch_addr;
      var $add201=(($144+1)|0);
      var $145=$i;
      var $sub202=(($add201-$145)|0);
      $pp200=$sub202;
      var $146=$nsf_addr;
      $tmp1=$146;
      var $147=$tmp1;
      var $148=$pp200;
      var $cmp203=(($147)|0) > (($148)|0);
      if ($cmp203) { __label__ = 55; break; } else { __label__ = 56; break; }
    case 55: // $if_then205
      var $149=$pp200;
      $tmp1=$149;
      __label__ = 56; break;
    case 56: // $if_end206
      $j199=0;
      __label__ = 57; break;
    case 57: // $for_cond207
      var $150=$j199;
      var $151=$tmp1;
      var $cmp208=(($150)|0) < (($151)|0);
      if ($cmp208) { __label__ = 58; break; } else { __label__ = 60; break; }
    case 58: // $for_body210
      var $152=$j199;
      var $153=$exc_addr;
      var $arrayidx211=(($153+($152<<2))|0);
      var $154=HEAPF32[(($arrayidx211)>>2)];
      var $155=$i;
      var $sub212=((2-$155)|0);
      var $arrayidx213=(($gain+($sub212<<2))|0);
      var $156=HEAPF32[(($arrayidx213)>>2)];
      var $157=$j199;
      var $158=$pp200;
      var $sub214=(($157-$158)|0);
      var $159=$exc2_addr;
      var $arrayidx215=(($159+($sub214<<2))|0);
      var $160=HEAPF32[(($arrayidx215)>>2)];
      var $mul216=$156*$160;
      var $add217=$154+$mul216;
      var $161=$j199;
      var $162=$exc_addr;
      var $arrayidx218=(($162+($161<<2))|0);
      HEAPF32[(($arrayidx218)>>2)]=$add217;
      __label__ = 59; break;
    case 59: // $for_inc219
      var $163=$j199;
      var $inc220=(($163+1)|0);
      $j199=$inc220;
      __label__ = 57; break;
    case 60: // $for_end221
      var $164=$nsf_addr;
      $tmp3=$164;
      var $165=$tmp3;
      var $166=$pp200;
      var $167=$pitch_addr;
      var $add222=(($166+$167)|0);
      var $cmp223=(($165)|0) > (($add222)|0);
      if ($cmp223) { __label__ = 61; break; } else { __label__ = 62; break; }
    case 61: // $if_then225
      var $168=$pp200;
      var $169=$pitch_addr;
      var $add226=(($168+$169)|0);
      $tmp3=$add226;
      __label__ = 62; break;
    case 62: // $if_end227
      var $170=$tmp1;
      $j199=$170;
      __label__ = 63; break;
    case 63: // $for_cond228
      var $171=$j199;
      var $172=$tmp3;
      var $cmp229=(($171)|0) < (($172)|0);
      if ($cmp229) { __label__ = 64; break; } else { __label__ = 66; break; }
    case 64: // $for_body231
      var $173=$j199;
      var $174=$exc_addr;
      var $arrayidx232=(($174+($173<<2))|0);
      var $175=HEAPF32[(($arrayidx232)>>2)];
      var $176=$i;
      var $sub233=((2-$176)|0);
      var $arrayidx234=(($gain+($sub233<<2))|0);
      var $177=HEAPF32[(($arrayidx234)>>2)];
      var $178=$j199;
      var $179=$pp200;
      var $sub235=(($178-$179)|0);
      var $180=$pitch_addr;
      var $sub236=(($sub235-$180)|0);
      var $181=$exc2_addr;
      var $arrayidx237=(($181+($sub236<<2))|0);
      var $182=HEAPF32[(($arrayidx237)>>2)];
      var $mul238=$177*$182;
      var $add239=$175+$mul238;
      var $183=$j199;
      var $184=$exc_addr;
      var $arrayidx240=(($184+($183<<2))|0);
      HEAPF32[(($arrayidx240)>>2)]=$add239;
      __label__ = 65; break;
    case 65: // $for_inc241
      var $185=$j199;
      var $inc242=(($185+1)|0);
      $j199=$inc242;
      __label__ = 63; break;
    case 66: // $for_end243
      __label__ = 67; break;
    case 67: // $for_inc244
      var $186=$i;
      var $inc245=(($186+1)|0);
      $i=$inc245;
      __label__ = 53; break;
    case 68: // $for_end246
      $i=0;
      __label__ = 69; break;
    case 69: // $for_cond247
      var $187=$i;
      var $188=$nsf_addr;
      var $cmp248=(($187)|0) < (($188)|0);
      if ($cmp248) { __label__ = 70; break; } else { __label__ = 72; break; }
    case 70: // $for_body250
      var $arrayidx251=(($gain)|0);
      var $189=HEAPF32[(($arrayidx251)>>2)];
      var $190=$i;
      var $arrayidx252=(($x+8)|0);
      var $191=HEAP32[(($arrayidx252)>>2)];
      var $arrayidx253=(($191+($190<<2))|0);
      var $192=HEAPF32[(($arrayidx253)>>2)];
      var $mul254=$189*$192;
      var $arrayidx255=(($gain+4)|0);
      var $193=HEAPF32[(($arrayidx255)>>2)];
      var $194=$i;
      var $arrayidx256=(($x+4)|0);
      var $195=HEAP32[(($arrayidx256)>>2)];
      var $arrayidx257=(($195+($194<<2))|0);
      var $196=HEAPF32[(($arrayidx257)>>2)];
      var $mul258=$193*$196;
      var $add259=$mul254+$mul258;
      var $arrayidx260=(($gain+8)|0);
      var $197=HEAPF32[(($arrayidx260)>>2)];
      var $198=$i;
      var $arrayidx261=(($x)|0);
      var $199=HEAP32[(($arrayidx261)>>2)];
      var $arrayidx262=(($199+($198<<2))|0);
      var $200=HEAPF32[(($arrayidx262)>>2)];
      var $mul263=$197*$200;
      var $add264=$add259+$mul263;
      $tmp=$add264;
      var $201=$i;
      var $202=$new_target_addr;
      var $arrayidx265=(($202+($201<<2))|0);
      var $203=HEAPF32[(($arrayidx265)>>2)];
      var $204=$tmp;
      var $sub266=$203-$204;
      var $205=$i;
      var $206=$new_target_addr;
      var $arrayidx267=(($206+($205<<2))|0);
      HEAPF32[(($arrayidx267)>>2)]=$sub266;
      __label__ = 71; break;
    case 71: // $for_inc268
      var $207=$i;
      var $inc269=(($207+1)|0);
      $i=$inc269;
      __label__ = 69; break;
    case 72: // $for_end270
      var $208=$new_target_addr;
      var $209=$new_target_addr;
      var $210=$nsf_addr;
      var $call271=_inner_prod($208, $209, $210);
      $err=$call271;
      var $211=$err;
      $retval=$211;
      $cleanup_dest_slot=1;
      var $212=$saved_stack;
      _llvm_stackrestore($212);
      var $213=$retval;
      STACKTOP = __stackBase__;
      return $213;
    default: assert(0, "bad label: " + __label__);
  }
}
_pitch_gain_search_3tap["X"]=1;

function _forced_pitch_unquant($exc, $exc_out, $start, $end, $pitch_coef, $par, $nsf, $pitch_val, $gain_val, $bits, $stack, $count_lost, $subframe_offset, $last_pitch_gain, $cdbk_offset) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $exc_out_addr;
      var $start_addr;
      var $end_addr;
      var $pitch_coef_addr;
      var $par_addr;
      var $nsf_addr;
      var $pitch_val_addr;
      var $gain_val_addr;
      var $bits_addr;
      var $stack_addr;
      var $count_lost_addr;
      var $subframe_offset_addr;
      var $last_pitch_gain_addr;
      var $cdbk_offset_addr;
      var $i;
      $exc_addr=$exc;
      $exc_out_addr=$exc_out;
      $start_addr=$start;
      $end_addr=$end;
      $pitch_coef_addr=$pitch_coef;
      $par_addr=$par;
      $nsf_addr=$nsf;
      $pitch_val_addr=$pitch_val;
      $gain_val_addr=$gain_val;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $count_lost_addr=$count_lost;
      $subframe_offset_addr=$subframe_offset;
      $last_pitch_gain_addr=$last_pitch_gain;
      $cdbk_offset_addr=$cdbk_offset;
      var $0=$pitch_coef_addr;
      var $conv=$0;
      var $cmp=$conv > 0.99;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $pitch_coef_addr=0.9900000095367432;
      __label__ = 2; break;
    case 2: // $if_end
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $1=$i;
      var $2=$nsf_addr;
      var $cmp2=(($1)|0) < (($2)|0);
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $3=$i;
      var $4=$start_addr;
      var $sub=(($3-$4)|0);
      var $5=$exc_addr;
      var $arrayidx=(($5+($sub<<2))|0);
      var $6=HEAPF32[(($arrayidx)>>2)];
      var $7=$pitch_coef_addr;
      var $mul=$6*$7;
      var $8=$i;
      var $9=$exc_out_addr;
      var $arrayidx4=(($9+($8<<2))|0);
      HEAPF32[(($arrayidx4)>>2)]=$mul;
      var $10=$i;
      var $11=$exc_out_addr;
      var $arrayidx5=(($11+($10<<2))|0);
      var $12=HEAPF32[(($arrayidx5)>>2)];
      var $13=$i;
      var $14=$exc_addr;
      var $arrayidx6=(($14+($13<<2))|0);
      HEAPF32[(($arrayidx6)>>2)]=$12;
      __label__ = 5; break;
    case 5: // $for_inc
      var $15=$i;
      var $inc=(($15+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $16=$start_addr;
      var $17=$pitch_val_addr;
      HEAP32[(($17)>>2)]=$16;
      var $18=$gain_val_addr;
      var $arrayidx7=(($18+8)|0);
      HEAPF32[(($arrayidx7)>>2)]=0;
      var $19=$gain_val_addr;
      var $arrayidx8=(($19)|0);
      HEAPF32[(($arrayidx8)>>2)]=0;
      var $20=$pitch_coef_addr;
      var $21=$gain_val_addr;
      var $arrayidx9=(($21+4)|0);
      HEAPF32[(($arrayidx9)>>2)]=$20;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_forced_pitch_unquant["X"]=1;

function _compute_pitch_error($C, $g, $pitch_control) {
  ;
  var __label__;

  var $C_addr;
  var $g_addr;
  var $pitch_control_addr;
  var $sum;
  $C_addr=$C;
  $g_addr=$g;
  $pitch_control_addr=$pitch_control;
  $sum=0;
  var $0=$sum;
  var $1=$g_addr;
  var $arrayidx=(($1)|0);
  var $2=HEAPF32[(($arrayidx)>>2)];
  var $3=$pitch_control_addr;
  var $mul=$2*$3;
  var $4=$C_addr;
  var $arrayidx1=(($4)|0);
  var $5=HEAPF32[(($arrayidx1)>>2)];
  var $mul2=$mul*$5;
  var $add=$0+$mul2;
  $sum=$add;
  var $6=$sum;
  var $7=$g_addr;
  var $arrayidx3=(($7+4)|0);
  var $8=HEAPF32[(($arrayidx3)>>2)];
  var $9=$pitch_control_addr;
  var $mul4=$8*$9;
  var $10=$C_addr;
  var $arrayidx5=(($10+4)|0);
  var $11=HEAPF32[(($arrayidx5)>>2)];
  var $mul6=$mul4*$11;
  var $add7=$6+$mul6;
  $sum=$add7;
  var $12=$sum;
  var $13=$g_addr;
  var $arrayidx8=(($13+8)|0);
  var $14=HEAPF32[(($arrayidx8)>>2)];
  var $15=$pitch_control_addr;
  var $mul9=$14*$15;
  var $16=$C_addr;
  var $arrayidx10=(($16+8)|0);
  var $17=HEAPF32[(($arrayidx10)>>2)];
  var $mul11=$mul9*$17;
  var $add12=$12+$mul11;
  $sum=$add12;
  var $18=$sum;
  var $19=$g_addr;
  var $arrayidx13=(($19)|0);
  var $20=HEAPF32[(($arrayidx13)>>2)];
  var $21=$g_addr;
  var $arrayidx14=(($21+4)|0);
  var $22=HEAPF32[(($arrayidx14)>>2)];
  var $mul15=$20*$22;
  var $23=$C_addr;
  var $arrayidx16=(($23+12)|0);
  var $24=HEAPF32[(($arrayidx16)>>2)];
  var $mul17=$mul15*$24;
  var $sub=$18-$mul17;
  $sum=$sub;
  var $25=$sum;
  var $26=$g_addr;
  var $arrayidx18=(($26+8)|0);
  var $27=HEAPF32[(($arrayidx18)>>2)];
  var $28=$g_addr;
  var $arrayidx19=(($28+4)|0);
  var $29=HEAPF32[(($arrayidx19)>>2)];
  var $mul20=$27*$29;
  var $30=$C_addr;
  var $arrayidx21=(($30+16)|0);
  var $31=HEAPF32[(($arrayidx21)>>2)];
  var $mul22=$mul20*$31;
  var $sub23=$25-$mul22;
  $sum=$sub23;
  var $32=$sum;
  var $33=$g_addr;
  var $arrayidx24=(($33+8)|0);
  var $34=HEAPF32[(($arrayidx24)>>2)];
  var $35=$g_addr;
  var $arrayidx25=(($35)|0);
  var $36=HEAPF32[(($arrayidx25)>>2)];
  var $mul26=$34*$36;
  var $37=$C_addr;
  var $arrayidx27=(($37+20)|0);
  var $38=HEAPF32[(($arrayidx27)>>2)];
  var $mul28=$mul26*$38;
  var $sub29=$32-$mul28;
  $sum=$sub29;
  var $39=$sum;
  var $40=$g_addr;
  var $arrayidx30=(($40)|0);
  var $41=HEAPF32[(($arrayidx30)>>2)];
  var $42=$g_addr;
  var $arrayidx31=(($42)|0);
  var $43=HEAPF32[(($arrayidx31)>>2)];
  var $mul32=$41*$43;
  var $44=$C_addr;
  var $arrayidx33=(($44+24)|0);
  var $45=HEAPF32[(($arrayidx33)>>2)];
  var $mul34=$mul32*$45;
  var $sub35=$39-$mul34;
  $sum=$sub35;
  var $46=$sum;
  var $47=$g_addr;
  var $arrayidx36=(($47+4)|0);
  var $48=HEAPF32[(($arrayidx36)>>2)];
  var $49=$g_addr;
  var $arrayidx37=(($49+4)|0);
  var $50=HEAPF32[(($arrayidx37)>>2)];
  var $mul38=$48*$50;
  var $51=$C_addr;
  var $arrayidx39=(($51+28)|0);
  var $52=HEAPF32[(($arrayidx39)>>2)];
  var $mul40=$mul38*$52;
  var $sub41=$46-$mul40;
  $sum=$sub41;
  var $53=$sum;
  var $54=$g_addr;
  var $arrayidx42=(($54+8)|0);
  var $55=HEAPF32[(($arrayidx42)>>2)];
  var $56=$g_addr;
  var $arrayidx43=(($56+8)|0);
  var $57=HEAPF32[(($arrayidx43)>>2)];
  var $mul44=$55*$57;
  var $58=$C_addr;
  var $arrayidx45=(($58+32)|0);
  var $59=HEAPF32[(($arrayidx45)>>2)];
  var $mul46=$mul44*$59;
  var $sub47=$53-$mul46;
  $sum=$sub47;
  var $60=$sum;
  ;
  return $60;
}
_compute_pitch_error["X"]=1;

function _pitch_unquant_3tap($exc, $exc_out, $start, $end, $pitch_coef, $par, $nsf, $pitch_val, $gain_val, $bits, $stack, $count_lost, $subframe_offset, $last_pitch_gain, $cdbk_offset) {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exc_addr;
      var $exc_out_addr;
      var $start_addr;
      var $end_addr;
      var $pitch_coef_addr;
      var $par_addr;
      var $nsf_addr;
      var $pitch_val_addr;
      var $gain_val_addr;
      var $bits_addr;
      var $stack_addr;
      var $count_lost_addr;
      var $subframe_offset_addr;
      var $last_pitch_gain_addr;
      var $cdbk_offset_addr;
      var $i;
      var $pitch;
      var $gain_index;
      var $gain=__stackBase__;
      var $gain_cdbk;
      var $gain_cdbk_size;
      var $params;
      var $gain_sum;
      var $tmp;
      var $fact;
      var $j;
      var $tmp1;
      var $tmp3;
      var $pp;
      $exc_addr=$exc;
      $exc_out_addr=$exc_out;
      $start_addr=$start;
      $end_addr=$end;
      $pitch_coef_addr=$pitch_coef;
      $par_addr=$par;
      $nsf_addr=$nsf;
      $pitch_val_addr=$pitch_val;
      $gain_val_addr=$gain_val;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $count_lost_addr=$count_lost;
      $subframe_offset_addr=$subframe_offset;
      $last_pitch_gain_addr=$last_pitch_gain;
      $cdbk_offset_addr=$cdbk_offset;
      var $0=$par_addr;
      var $1=$0;
      $params=$1;
      var $2=$params;
      var $gain_bits=(($2+4)|0);
      var $3=HEAP32[(($gain_bits)>>2)];
      var $shl=1 << $3;
      $gain_cdbk_size=$shl;
      var $4=$params;
      var $gain_cdbk1=(($4)|0);
      var $5=HEAP32[(($gain_cdbk1)>>2)];
      var $6=$gain_cdbk_size;
      var $mul=((($6<<2))|0);
      var $7=$cdbk_offset_addr;
      var $mul2=(($mul*$7)|0);
      var $add_ptr=(($5+$mul2)|0);
      $gain_cdbk=$add_ptr;
      var $8=$bits_addr;
      var $9=$params;
      var $pitch_bits=(($9+8)|0);
      var $10=HEAP32[(($pitch_bits)>>2)];
      var $call=_speex_bits_unpack_unsigned($8, $10);
      $pitch=$call;
      var $11=$start_addr;
      var $12=$pitch;
      var $add=(($12+$11)|0);
      $pitch=$add;
      var $13=$bits_addr;
      var $14=$params;
      var $gain_bits3=(($14+4)|0);
      var $15=HEAP32[(($gain_bits3)>>2)];
      var $call4=_speex_bits_unpack_unsigned($13, $15);
      $gain_index=$call4;
      var $16=$gain_index;
      var $mul5=((($16<<2))|0);
      var $17=$gain_cdbk;
      var $arrayidx=(($17+$mul5)|0);
      var $18=HEAP8[($arrayidx)];
      var $conv=(($18 << 24) >> 24);
      var $conv6=(($conv)|0);
      var $mul7=$conv6*0.015625;
      var $add8=$mul7+0.5;
      var $conv9=$add8;
      var $arrayidx10=(($gain)|0);
      HEAPF32[(($arrayidx10)>>2)]=$conv9;
      var $19=$gain_index;
      var $mul11=((($19<<2))|0);
      var $add12=(($mul11+1)|0);
      var $20=$gain_cdbk;
      var $arrayidx13=(($20+$add12)|0);
      var $21=HEAP8[($arrayidx13)];
      var $conv14=(($21 << 24) >> 24);
      var $conv15=(($conv14)|0);
      var $mul16=$conv15*0.015625;
      var $add17=$mul16+0.5;
      var $conv18=$add17;
      var $arrayidx19=(($gain+4)|0);
      HEAPF32[(($arrayidx19)>>2)]=$conv18;
      var $22=$gain_index;
      var $mul20=((($22<<2))|0);
      var $add21=(($mul20+2)|0);
      var $23=$gain_cdbk;
      var $arrayidx22=(($23+$add21)|0);
      var $24=HEAP8[($arrayidx22)];
      var $conv23=(($24 << 24) >> 24);
      var $conv24=(($conv23)|0);
      var $mul25=$conv24*0.015625;
      var $add26=$mul25+0.5;
      var $conv27=$add26;
      var $arrayidx28=(($gain+8)|0);
      HEAPF32[(($arrayidx28)>>2)]=$conv27;
      var $25=$count_lost_addr;
      var $tobool=(($25)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 23; break; }
    case 1: // $land_lhs_true
      var $26=$pitch;
      var $27=$subframe_offset_addr;
      var $cmp=(($26)|0) > (($27)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 23; break; }
    case 2: // $if_then
      var $28=$count_lost_addr;
      var $cmp30=(($28)|0) < 4;
      if ($cmp30) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $cond_true
      var $29=$last_pitch_gain_addr;
      var $conv32=$29;
      var $cond = $conv32;__label__ = 5; break;
    case 4: // $cond_false
      var $30=$last_pitch_gain_addr;
      var $conv33=$30;
      var $mul34=$conv33*0.5;
      var $cond = $mul34;__label__ = 5; break;
    case 5: // $cond_end
      var $cond;
      var $conv35=$cond;
      $tmp=$conv35;
      var $31=$tmp;
      var $conv36=$31;
      var $cmp37=$conv36 > 0.95;
      if ($cmp37) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then39
      $tmp=0.949999988079071;
      __label__ = 7; break;
    case 7: // $if_end
      var $arrayidx40=(($gain+4)|0);
      var $32=HEAPF32[(($arrayidx40)>>2)];
      var $cmp41=$32 < 0;
      if ($cmp41) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $cond_true43
      var $arrayidx44=(($gain+4)|0);
      var $33=HEAPF32[(($arrayidx44)>>2)];
      var $sub=(-$33);
      var $cond48 = $sub;__label__ = 10; break;
    case 9: // $cond_false45
      var $arrayidx46=(($gain+4)|0);
      var $34=HEAPF32[(($arrayidx46)>>2)];
      var $cond48 = $34;__label__ = 10; break;
    case 10: // $cond_end47
      var $cond48;
      var $conv49=$cond48;
      var $arrayidx50=(($gain)|0);
      var $35=HEAPF32[(($arrayidx50)>>2)];
      var $cmp51=$35 > 0;
      if ($cmp51) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $cond_true53
      var $arrayidx54=(($gain)|0);
      var $36=HEAPF32[(($arrayidx54)>>2)];
      var $conv55=$36;
      var $cond61 = $conv55;__label__ = 13; break;
    case 12: // $cond_false56
      var $arrayidx57=(($gain)|0);
      var $37=HEAPF32[(($arrayidx57)>>2)];
      var $conv58=$37;
      var $mul59=$conv58*-0.5;
      var $cond61 = $mul59;__label__ = 13; break;
    case 13: // $cond_end60
      var $cond61;
      var $add62=$conv49+$cond61;
      var $arrayidx63=(($gain+8)|0);
      var $38=HEAPF32[(($arrayidx63)>>2)];
      var $cmp64=$38 > 0;
      if ($cmp64) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $cond_true66
      var $arrayidx67=(($gain+8)|0);
      var $39=HEAPF32[(($arrayidx67)>>2)];
      var $conv68=$39;
      var $cond74 = $conv68;__label__ = 16; break;
    case 15: // $cond_false69
      var $arrayidx70=(($gain+8)|0);
      var $40=HEAPF32[(($arrayidx70)>>2)];
      var $conv71=$40;
      var $mul72=$conv71*-0.5;
      var $cond74 = $mul72;__label__ = 16; break;
    case 16: // $cond_end73
      var $cond74;
      var $add75=$add62+$cond74;
      var $conv76=$add75;
      $gain_sum=$conv76;
      var $41=$gain_sum;
      var $42=$tmp;
      var $cmp77=$41 > $42;
      if ($cmp77) { __label__ = 17; break; } else { __label__ = 22; break; }
    case 17: // $if_then79
      var $43=$tmp;
      var $44=$gain_sum;
      var $div=$43/$44;
      $fact=$div;
      $i=0;
      __label__ = 18; break;
    case 18: // $for_cond
      var $45=$i;
      var $cmp81=(($45)|0) < 3;
      if ($cmp81) { __label__ = 19; break; } else { __label__ = 21; break; }
    case 19: // $for_body
      var $46=$fact;
      var $47=$i;
      var $arrayidx83=(($gain+($47<<2))|0);
      var $48=HEAPF32[(($arrayidx83)>>2)];
      var $mul84=$46*$48;
      var $49=$i;
      var $arrayidx85=(($gain+($49<<2))|0);
      HEAPF32[(($arrayidx85)>>2)]=$mul84;
      __label__ = 20; break;
    case 20: // $for_inc
      var $50=$i;
      var $inc=(($50+1)|0);
      $i=$inc;
      __label__ = 18; break;
    case 21: // $for_end
      __label__ = 22; break;
    case 22: // $if_end86
      __label__ = 23; break;
    case 23: // $if_end87
      var $51=$pitch;
      var $52=$pitch_val_addr;
      HEAP32[(($52)>>2)]=$51;
      var $arrayidx88=(($gain)|0);
      var $53=HEAPF32[(($arrayidx88)>>2)];
      var $54=$gain_val_addr;
      var $arrayidx89=(($54)|0);
      HEAPF32[(($arrayidx89)>>2)]=$53;
      var $arrayidx90=(($gain+4)|0);
      var $55=HEAPF32[(($arrayidx90)>>2)];
      var $56=$gain_val_addr;
      var $arrayidx91=(($56+4)|0);
      HEAPF32[(($arrayidx91)>>2)]=$55;
      var $arrayidx92=(($gain+8)|0);
      var $57=HEAPF32[(($arrayidx92)>>2)];
      var $58=$gain_val_addr;
      var $arrayidx93=(($58+8)|0);
      HEAPF32[(($arrayidx93)>>2)]=$57;
      var $arrayidx94=(($gain)|0);
      var $59=HEAPF32[(($arrayidx94)>>2)];
      var $arrayidx95=(($gain)|0);
      HEAPF32[(($arrayidx95)>>2)]=$59;
      var $arrayidx96=(($gain+4)|0);
      var $60=HEAPF32[(($arrayidx96)>>2)];
      var $arrayidx97=(($gain+4)|0);
      HEAPF32[(($arrayidx97)>>2)]=$60;
      var $arrayidx98=(($gain+8)|0);
      var $61=HEAPF32[(($arrayidx98)>>2)];
      var $arrayidx99=(($gain+8)|0);
      HEAPF32[(($arrayidx99)>>2)]=$61;
      var $62=$exc_out_addr;
      var $63=$62;
      var $64=$nsf_addr;
      var $mul100=((($64<<2))|0);
      _memset($63, 0, $mul100, 1);
      $i=0;
      __label__ = 24; break;
    case 24: // $for_cond101
      var $65=$i;
      var $cmp102=(($65)|0) < 3;
      if ($cmp102) { __label__ = 25; break; } else { __label__ = 39; break; }
    case 25: // $for_body104
      var $66=$pitch;
      var $add109=(($66+1)|0);
      var $67=$i;
      var $sub110=(($add109-$67)|0);
      $pp=$sub110;
      var $68=$nsf_addr;
      $tmp1=$68;
      var $69=$tmp1;
      var $70=$pp;
      var $cmp111=(($69)|0) > (($70)|0);
      if ($cmp111) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then113
      var $71=$pp;
      $tmp1=$71;
      __label__ = 27; break;
    case 27: // $if_end114
      $j=0;
      __label__ = 28; break;
    case 28: // $for_cond115
      var $72=$j;
      var $73=$tmp1;
      var $cmp116=(($72)|0) < (($73)|0);
      if ($cmp116) { __label__ = 29; break; } else { __label__ = 31; break; }
    case 29: // $for_body118
      var $74=$j;
      var $75=$exc_out_addr;
      var $arrayidx119=(($75+($74<<2))|0);
      var $76=HEAPF32[(($arrayidx119)>>2)];
      var $77=$i;
      var $sub120=((2-$77)|0);
      var $arrayidx121=(($gain+($sub120<<2))|0);
      var $78=HEAPF32[(($arrayidx121)>>2)];
      var $79=$j;
      var $80=$pp;
      var $sub122=(($79-$80)|0);
      var $81=$exc_addr;
      var $arrayidx123=(($81+($sub122<<2))|0);
      var $82=HEAPF32[(($arrayidx123)>>2)];
      var $mul124=$78*$82;
      var $add125=$76+$mul124;
      var $83=$j;
      var $84=$exc_out_addr;
      var $arrayidx126=(($84+($83<<2))|0);
      HEAPF32[(($arrayidx126)>>2)]=$add125;
      __label__ = 30; break;
    case 30: // $for_inc127
      var $85=$j;
      var $inc128=(($85+1)|0);
      $j=$inc128;
      __label__ = 28; break;
    case 31: // $for_end129
      var $86=$nsf_addr;
      $tmp3=$86;
      var $87=$tmp3;
      var $88=$pp;
      var $89=$pitch;
      var $add130=(($88+$89)|0);
      var $cmp131=(($87)|0) > (($add130)|0);
      if ($cmp131) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: // $if_then133
      var $90=$pp;
      var $91=$pitch;
      var $add134=(($90+$91)|0);
      $tmp3=$add134;
      __label__ = 33; break;
    case 33: // $if_end135
      var $92=$tmp1;
      $j=$92;
      __label__ = 34; break;
    case 34: // $for_cond136
      var $93=$j;
      var $94=$tmp3;
      var $cmp137=(($93)|0) < (($94)|0);
      if ($cmp137) { __label__ = 35; break; } else { __label__ = 37; break; }
    case 35: // $for_body139
      var $95=$j;
      var $96=$exc_out_addr;
      var $arrayidx140=(($96+($95<<2))|0);
      var $97=HEAPF32[(($arrayidx140)>>2)];
      var $98=$i;
      var $sub141=((2-$98)|0);
      var $arrayidx142=(($gain+($sub141<<2))|0);
      var $99=HEAPF32[(($arrayidx142)>>2)];
      var $100=$j;
      var $101=$pp;
      var $sub143=(($100-$101)|0);
      var $102=$pitch;
      var $sub144=(($sub143-$102)|0);
      var $103=$exc_addr;
      var $arrayidx145=(($103+($sub144<<2))|0);
      var $104=HEAPF32[(($arrayidx145)>>2)];
      var $mul146=$99*$104;
      var $add147=$97+$mul146;
      var $105=$j;
      var $106=$exc_out_addr;
      var $arrayidx148=(($106+($105<<2))|0);
      HEAPF32[(($arrayidx148)>>2)]=$add147;
      __label__ = 36; break;
    case 36: // $for_inc149
      var $107=$j;
      var $inc150=(($107+1)|0);
      $j=$inc150;
      __label__ = 34; break;
    case 37: // $for_end151
      __label__ = 38; break;
    case 38: // $for_inc152
      var $108=$i;
      var $inc153=(($108+1)|0);
      $i=$inc153;
      __label__ = 24; break;
    case 39: // $for_end154
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_pitch_unquant_3tap["X"]=1;

function _forced_pitch_quant($target, $sw, $ak, $awk1, $awk2, $exc, $par, $start, $end, $pitch_coef, $p, $nsf, $bits, $stack, $exc2, $r, $complexity, $cdbk_offset, $plc_tuning, $cumul_gain) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $target_addr;
      var $sw_addr;
      var $ak_addr;
      var $awk1_addr;
      var $awk2_addr;
      var $exc_addr;
      var $par_addr;
      var $start_addr;
      var $end_addr;
      var $pitch_coef_addr;
      var $p_addr;
      var $nsf_addr;
      var $bits_addr;
      var $stack_addr;
      var $exc2_addr;
      var $r_addr;
      var $complexity_addr;
      var $cdbk_offset_addr;
      var $plc_tuning_addr;
      var $cumul_gain_addr;
      var $i;
      var $saved_stack;
      var $cleanup_dest_slot;
      $target_addr=$target;
      $sw_addr=$sw;
      $ak_addr=$ak;
      $awk1_addr=$awk1;
      $awk2_addr=$awk2;
      $exc_addr=$exc;
      $par_addr=$par;
      $start_addr=$start;
      $end_addr=$end;
      $pitch_coef_addr=$pitch_coef;
      $p_addr=$p;
      $nsf_addr=$nsf;
      $bits_addr=$bits;
      $stack_addr=$stack;
      $exc2_addr=$exc2;
      $r_addr=$r;
      $complexity_addr=$complexity;
      $cdbk_offset_addr=$cdbk_offset;
      $plc_tuning_addr=$plc_tuning;
      $cumul_gain_addr=$cumul_gain;
      var $0=$nsf_addr;
      var $1=_llvm_stacksave();
      $saved_stack=$1;
      var $vla=STACKTOP;STACKTOP += $0*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $2=$pitch_coef_addr;
      var $conv=$2;
      var $cmp=$conv > 0.99;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $pitch_coef_addr=0.9900000095367432;
      __label__ = 2; break;
    case 2: // $if_end
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $3=$i;
      var $4=$nsf_addr;
      var $cmp2=(($3)|0) < (($4)|0);
      if ($cmp2) { __label__ = 4; break; } else { var $7 = 0;__label__ = 5; break; }
    case 4: // $land_rhs
      var $5=$i;
      var $6=$start_addr;
      var $cmp4=(($5)|0) < (($6)|0);
      var $7 = $cmp4;__label__ = 5; break;
    case 5: // $land_end
      var $7;
      if ($7) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body
      var $8=$pitch_coef_addr;
      var $9=$i;
      var $10=$start_addr;
      var $sub=(($9-$10)|0);
      var $11=$exc2_addr;
      var $arrayidx=(($11+($sub<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $mul=$8*$12;
      var $13=$i;
      var $14=$exc_addr;
      var $arrayidx6=(($14+($13<<2))|0);
      HEAPF32[(($arrayidx6)>>2)]=$mul;
      __label__ = 7; break;
    case 7: // $for_inc
      var $15=$i;
      var $inc=(($15+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 8: // $for_end
      __label__ = 9; break;
    case 9: // $for_cond7
      var $16=$i;
      var $17=$nsf_addr;
      var $cmp8=(($16)|0) < (($17)|0);
      if ($cmp8) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body10
      var $18=$pitch_coef_addr;
      var $19=$i;
      var $20=$start_addr;
      var $sub11=(($19-$20)|0);
      var $21=$exc_addr;
      var $arrayidx12=(($21+($sub11<<2))|0);
      var $22=HEAPF32[(($arrayidx12)>>2)];
      var $mul13=$18*$22;
      var $23=$i;
      var $24=$exc_addr;
      var $arrayidx14=(($24+($23<<2))|0);
      HEAPF32[(($arrayidx14)>>2)]=$mul13;
      __label__ = 11; break;
    case 11: // $for_inc15
      var $25=$i;
      var $inc16=(($25+1)|0);
      $i=$inc16;
      __label__ = 9; break;
    case 12: // $for_end17
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond18
      var $26=$i;
      var $27=$nsf_addr;
      var $cmp19=(($26)|0) < (($27)|0);
      if ($cmp19) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body21
      var $28=$i;
      var $29=$exc_addr;
      var $arrayidx22=(($29+($28<<2))|0);
      var $30=HEAPF32[(($arrayidx22)>>2)];
      var $31=$i;
      var $arrayidx23=(($vla+($31<<2))|0);
      HEAPF32[(($arrayidx23)>>2)]=$30;
      __label__ = 15; break;
    case 15: // $for_inc24
      var $32=$i;
      var $inc25=(($32+1)|0);
      $i=$inc25;
      __label__ = 13; break;
    case 16: // $for_end26
      var $33=$ak_addr;
      var $34=$awk1_addr;
      var $35=$awk2_addr;
      var $36=$nsf_addr;
      var $37=$p_addr;
      var $38=$stack_addr;
      _syn_percep_zero16($vla, $33, $34, $35, $vla, $36, $37, $38);
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond27
      var $39=$i;
      var $40=$nsf_addr;
      var $cmp28=(($39)|0) < (($40)|0);
      if ($cmp28) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body30
      var $41=$i;
      var $42=$target_addr;
      var $arrayidx31=(($42+($41<<2))|0);
      var $43=HEAPF32[(($arrayidx31)>>2)];
      var $44=$i;
      var $arrayidx32=(($vla+($44<<2))|0);
      var $45=HEAPF32[(($arrayidx32)>>2)];
      var $sub33=$43-$45;
      var $46=$i;
      var $47=$target_addr;
      var $arrayidx34=(($47+($46<<2))|0);
      HEAPF32[(($arrayidx34)>>2)]=$sub33;
      __label__ = 19; break;
    case 19: // $for_inc35
      var $48=$i;
      var $inc36=(($48+1)|0);
      $i=$inc36;
      __label__ = 17; break;
    case 20: // $for_end37
      var $49=$start_addr;
      $retval=$49;
      $cleanup_dest_slot=1;
      var $50=$saved_stack;
      _llvm_stackrestore($50);
      var $51=$retval;
      ;
      return $51;
    default: assert(0, "bad label: " + __label__);
  }
}
_forced_pitch_quant["X"]=1;

function _pitch_gain_search_3tap_vq($gain_cdbk, $gain_cdbk_size, $C16, $max_gain) {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $gain_cdbk_addr;
      var $gain_cdbk_size_addr;
      var $C16_addr;
      var $max_gain_addr;
      var $ptr;
      var $best_cdbk;
      var $best_sum;
      var $sum;
      var $g=__stackBase__;
      var $pitch_control;
      var $gain_sum;
      var $i;
      $gain_cdbk_addr=$gain_cdbk;
      $gain_cdbk_size_addr=$gain_cdbk_size;
      $C16_addr=$C16;
      $max_gain_addr=$max_gain;
      var $0=$gain_cdbk_addr;
      $ptr=$0;
      $best_cdbk=0;
      $best_sum=-999999986991104;
      $sum=0;
      $pitch_control=64;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $1=$i;
      var $2=$gain_cdbk_size_addr;
      var $cmp=(($1)|0) < (($2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $for_body
      var $3=$gain_cdbk_addr;
      var $4=$i;
      var $mul=((($4<<2))|0);
      var $add_ptr=(($3+$mul)|0);
      $ptr=$add_ptr;
      var $5=$ptr;
      var $arrayidx=(($5)|0);
      var $6=HEAP8[($arrayidx)];
      var $conv=(($6 << 24) >> 24);
      var $add=$conv+32;
      var $arrayidx1=(($g)|0);
      HEAPF32[(($arrayidx1)>>2)]=$add;
      var $7=$ptr;
      var $arrayidx2=(($7+1)|0);
      var $8=HEAP8[($arrayidx2)];
      var $conv3=(($8 << 24) >> 24);
      var $add4=$conv3+32;
      var $arrayidx5=(($g+4)|0);
      HEAPF32[(($arrayidx5)>>2)]=$add4;
      var $9=$ptr;
      var $arrayidx6=(($9+2)|0);
      var $10=HEAP8[($arrayidx6)];
      var $conv7=(($10 << 24) >> 24);
      var $add8=$conv7+32;
      var $arrayidx9=(($g+8)|0);
      HEAPF32[(($arrayidx9)>>2)]=$add8;
      var $11=$ptr;
      var $arrayidx10=(($11+3)|0);
      var $12=HEAP8[($arrayidx10)];
      var $conv11=(($12 << 24) >> 24);
      $gain_sum=$conv11;
      var $13=$C16_addr;
      var $arraydecay=(($g)|0);
      var $14=$pitch_control;
      var $call=_compute_pitch_error($13, $arraydecay, $14);
      $sum=$call;
      var $15=$sum;
      var $16=$best_sum;
      var $cmp12=$15 > $16;
      if ($cmp12) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $land_lhs_true
      var $17=$gain_sum;
      var $18=$max_gain_addr;
      var $cmp14=$17 <= $18;
      if ($cmp14) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then
      var $19=$sum;
      $best_sum=$19;
      var $20=$i;
      $best_cdbk=$20;
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 6; break;
    case 6: // $for_inc
      var $21=$i;
      var $inc=(($21+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 7: // $for_end
      var $22=$best_cdbk;
      STACKTOP = __stackBase__;
      return $22;
    default: assert(0, "bad label: " + __label__);
  }
}
_pitch_gain_search_3tap_vq["X"]=1;

function _speex_encoder_init($mode) {
  ;
  var __label__;

  var $mode_addr;
  $mode_addr=$mode;
  var $0=$mode_addr;
  var $enc_init=(($0+20)|0);
  var $enc_init1=$enc_init;
  var $1=HEAP32[(($enc_init1)>>2)];
  var $2=$mode_addr;
  var $call=FUNCTION_TABLE[$1]($2);
  ;
  return $call;
}


function _speex_decoder_init($mode) {
  ;
  var __label__;

  var $mode_addr;
  $mode_addr=$mode;
  var $0=$mode_addr;
  var $dec_init=(($0+32)|0);
  var $dec_init1=$dec_init;
  var $1=HEAP32[(($dec_init1)>>2)];
  var $2=$mode_addr;
  var $call=FUNCTION_TABLE[$1]($2);
  ;
  return $call;
}


function _speex_stereo_state_reset($_stereo) {
  ;
  var __label__;

  var $_stereo_addr;
  var $stereo;
  $_stereo_addr=$_stereo;
  var $0=$_stereo_addr;
  var $1=$0;
  $stereo=$1;
  var $2=$stereo;
  var $balance=(($2)|0);
  HEAPF32[(($balance)>>2)]=1;
  var $3=$stereo;
  var $e_ratio=(($3+4)|0);
  HEAPF32[(($e_ratio)>>2)]=0.5;
  var $4=$stereo;
  var $smooth_left=(($4+8)|0);
  HEAPF32[(($smooth_left)>>2)]=1;
  var $5=$stereo;
  var $smooth_right=(($5+12)|0);
  HEAPF32[(($smooth_right)>>2)]=1;
  var $6=$stereo;
  var $reserved1=(($6+16)|0);
  HEAP32[(($reserved1)>>2)]=0;
  var $7=$stereo;
  var $reserved2=(($7+20)|0);
  HEAP32[(($reserved2)>>2)]=0;
  ;
  return;
}


function _speex_encoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $enc_destroy=(($2+24)|0);
  var $3=HEAP32[(($enc_destroy)>>2)];
  var $4=$state_addr;
  FUNCTION_TABLE[$3]($4);
  ;
  return;
}


function _speex_decoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $dec_destroy=(($2+36)|0);
  var $3=HEAP32[(($dec_destroy)>>2)];
  var $4=$state_addr;
  FUNCTION_TABLE[$3]($4);
  ;
  return;
}


function _speex_encode_native($state, $in, $bits) {
  ;
  var __label__;

  var $state_addr;
  var $in_addr;
  var $bits_addr;
  $state_addr=$state;
  $in_addr=$in;
  $bits_addr=$bits;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $enc=(($2+28)|0);
  var $3=HEAP32[(($enc)>>2)];
  var $4=$state_addr;
  var $5=$in_addr;
  var $6=$5;
  var $7=$bits_addr;
  var $call=FUNCTION_TABLE[$3]($4, $6, $7);
  ;
  return $call;
}


function _speex_decode_native($state, $bits, $out) {
  ;
  var __label__;

  var $state_addr;
  var $bits_addr;
  var $out_addr;
  $state_addr=$state;
  $bits_addr=$bits;
  $out_addr=$out;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $dec=(($2+40)|0);
  var $3=HEAP32[(($dec)>>2)];
  var $4=$state_addr;
  var $5=$bits_addr;
  var $6=$out_addr;
  var $7=$6;
  var $call=FUNCTION_TABLE[$3]($4, $5, $7);
  ;
  return $call;
}


function _speex_encode($state, $in, $bits) {
  ;
  var __label__;

  var $state_addr;
  var $in_addr;
  var $bits_addr;
  $state_addr=$state;
  $in_addr=$in;
  $bits_addr=$bits;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $enc=(($2+28)|0);
  var $3=HEAP32[(($enc)>>2)];
  var $4=$state_addr;
  var $5=$in_addr;
  var $6=$5;
  var $7=$bits_addr;
  var $call=FUNCTION_TABLE[$3]($4, $6, $7);
  ;
  return $call;
}


function _speex_encode_int($state, $in, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 2564; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $state_addr;
      var $in_addr;
      var $bits_addr;
      var $i;
      var $N=__stackBase__;
      var $float_in=__stackBase__+4;
      $state_addr=$state;
      $in_addr=$in;
      $bits_addr=$bits;
      var $0=$state_addr;
      var $1=$N;
      var $call=_speex_encoder_ctl($0, 3, $1);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=HEAP32[(($N)>>2)];
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $4=$i;
      var $5=$in_addr;
      var $arrayidx=(($5+($4<<1))|0);
      var $6=HEAP16[(($arrayidx)>>1)];
      var $conv=(($6 << 16) >> 16);
      var $7=$i;
      var $arrayidx1=(($float_in+($7<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$conv;
      __label__ = 3; break;
    case 3: // $for_inc
      var $8=$i;
      var $inc=(($8+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $9=$state_addr;
      var $10=$9;
      var $11=HEAP32[(($10)>>2)];
      var $enc=(($11+28)|0);
      var $12=HEAP32[(($enc)>>2)];
      var $13=$state_addr;
      var $arraydecay=(($float_in)|0);
      var $14=$arraydecay;
      var $15=$bits_addr;
      var $call2=FUNCTION_TABLE[$12]($13, $14, $15);
      STACKTOP = __stackBase__;
      return $call2;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_encoder_ctl($state, $request, $ptr) {
  ;
  var __label__;

  var $state_addr;
  var $request_addr;
  var $ptr_addr;
  $state_addr=$state;
  $request_addr=$request;
  $ptr_addr=$ptr;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $enc_ctl=(($2+44)|0);
  var $3=HEAP32[(($enc_ctl)>>2)];
  var $4=$state_addr;
  var $5=$request_addr;
  var $6=$ptr_addr;
  var $call=FUNCTION_TABLE[$3]($4, $5, $6);
  ;
  return $call;
}


function _speex_decode($state, $bits, $out) {
  ;
  var __label__;

  var $state_addr;
  var $bits_addr;
  var $out_addr;
  $state_addr=$state;
  $bits_addr=$bits;
  $out_addr=$out;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $dec=(($2+40)|0);
  var $3=HEAP32[(($dec)>>2)];
  var $4=$state_addr;
  var $5=$bits_addr;
  var $6=$out_addr;
  var $7=$6;
  var $call=FUNCTION_TABLE[$3]($4, $5, $7);
  ;
  return $call;
}


function _speex_decode_int($state, $bits, $out) {
  var __stackBase__  = STACKTOP; STACKTOP += 2564; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $state_addr;
      var $bits_addr;
      var $out_addr;
      var $i;
      var $N=__stackBase__;
      var $float_out=__stackBase__+4;
      var $ret;
      $state_addr=$state;
      $bits_addr=$bits;
      $out_addr=$out;
      var $0=$state_addr;
      var $1=$N;
      var $call=_speex_decoder_ctl($0, 3, $1);
      var $2=$state_addr;
      var $3=$2;
      var $4=HEAP32[(($3)>>2)];
      var $dec=(($4+40)|0);
      var $5=HEAP32[(($dec)>>2)];
      var $6=$state_addr;
      var $7=$bits_addr;
      var $arraydecay=(($float_out)|0);
      var $8=$arraydecay;
      var $call1=FUNCTION_TABLE[$5]($6, $7, $8);
      $ret=$call1;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $9=$i;
      var $10=HEAP32[(($N)>>2)];
      var $cmp=(($9)|0) < (($10)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 10; break; }
    case 2: // $for_body
      var $11=$i;
      var $arrayidx=(($float_out+($11<<2))|0);
      var $12=HEAPF32[(($arrayidx)>>2)];
      var $cmp2=$12 > 32767;
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $13=$i;
      var $14=$out_addr;
      var $arrayidx3=(($14+($13<<1))|0);
      HEAP16[(($arrayidx3)>>1)]=32767;
      __label__ = 8; break;
    case 4: // $if_else
      var $15=$i;
      var $arrayidx4=(($float_out+($15<<2))|0);
      var $16=HEAPF32[(($arrayidx4)>>2)];
      var $cmp5=$16 < -32768;
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then6
      var $17=$i;
      var $18=$out_addr;
      var $arrayidx7=(($18+($17<<1))|0);
      HEAP16[(($arrayidx7)>>1)]=-32768;
      __label__ = 7; break;
    case 6: // $if_else8
      var $19=$i;
      var $arrayidx9=(($float_out+($19<<2))|0);
      var $20=HEAPF32[(($arrayidx9)>>2)];
      var $conv=$20;
      var $add=$conv+0.5;
      var $call10=_floor($add);
      var $conv11=(($call10)|0);
      var $21=$i;
      var $22=$out_addr;
      var $arrayidx12=(($22+($21<<1))|0);
      HEAP16[(($arrayidx12)>>1)]=$conv11;
      __label__ = 7; break;
    case 7: // $if_end
      __label__ = 8; break;
    case 8: // $if_end13
      __label__ = 9; break;
    case 9: // $for_inc
      var $23=$i;
      var $inc=(($23+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 10: // $for_end
      var $24=$ret;
      STACKTOP = __stackBase__;
      return $24;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_decode_int["X"]=1;

function _speex_decoder_ctl($state, $request, $ptr) {
  ;
  var __label__;

  var $state_addr;
  var $request_addr;
  var $ptr_addr;
  $state_addr=$state;
  $request_addr=$request;
  $ptr_addr=$ptr;
  var $0=$state_addr;
  var $1=$0;
  var $2=HEAP32[(($1)>>2)];
  var $dec_ctl=(($2+48)|0);
  var $3=HEAP32[(($dec_ctl)>>2)];
  var $4=$state_addr;
  var $5=$request_addr;
  var $6=$ptr_addr;
  var $call=FUNCTION_TABLE[$3]($4, $5, $6);
  ;
  return $call;
}


function _nb_mode_query($mode, $request, $ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $mode_addr;
      var $request_addr;
      var $ptr_addr;
      var $m;
      $mode_addr=$mode;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$mode_addr;
      var $1=$0;
      $m=$1;
      var $2=$request_addr;
      if ($2 == 0) {
        __label__ = 1; break;
      }
      else if ($2 == 1) {
        __label__ = 2; break;
      }
      else {
      __label__ = 9; break;
      }
      
    case 1: // $sw_bb
      var $3=$m;
      var $frameSize=(($3)|0);
      var $4=HEAP32[(($frameSize)>>2)];
      var $5=$ptr_addr;
      var $6=$5;
      HEAP32[(($6)>>2)]=$4;
      __label__ = 10; break;
    case 2: // $sw_bb1
      var $7=$ptr_addr;
      var $8=$7;
      var $9=HEAP32[(($8)>>2)];
      var $cmp=(($9)|0)==0;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $10=$ptr_addr;
      var $11=$10;
      HEAP32[(($11)>>2)]=5;
      __label__ = 8; break;
    case 4: // $if_else
      var $12=$ptr_addr;
      var $13=$12;
      var $14=HEAP32[(($13)>>2)];
      var $15=$m;
      var $submodes=(($15+32)|0);
      var $arrayidx=(($submodes+($14<<2))|0);
      var $16=HEAP32[(($arrayidx)>>2)];
      var $cmp2=(($16)|0)==0;
      if ($cmp2) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then3
      var $17=$ptr_addr;
      var $18=$17;
      HEAP32[(($18)>>2)]=-1;
      __label__ = 7; break;
    case 6: // $if_else4
      var $19=$ptr_addr;
      var $20=$19;
      var $21=HEAP32[(($20)>>2)];
      var $22=$m;
      var $submodes5=(($22+32)|0);
      var $arrayidx6=(($submodes5+($21<<2))|0);
      var $23=HEAP32[(($arrayidx6)>>2)];
      var $bits_per_frame=(($23+52)|0);
      var $24=HEAP32[(($bits_per_frame)>>2)];
      var $25=$ptr_addr;
      var $26=$25;
      HEAP32[(($26)>>2)]=$24;
      __label__ = 7; break;
    case 7: // $if_end
      __label__ = 8; break;
    case 8: // $if_end7
      __label__ = 10; break;
    case 9: // $sw_default
      var $27=$request_addr;
      _speex_warning_int(((STRING_TABLE.__str)|0), $27);
      $retval=-1;
      __label__ = 11; break;
    case 10: // $sw_epilog
      $retval=0;
      __label__ = 11; break;
    case 11: // $return
      var $28=$retval;
      ;
      return $28;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_mode_query["X"]=1;

function _speex_warning_int($str, $val) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  var $val_addr;
  $str_addr=$str;
  $val_addr=$val;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $3=$val_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str4)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,HEAP32[((tempInt+4)>>2)]=$3,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_lib_ctl($request, $ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $request_addr;
      var $ptr_addr;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$request_addr;
      if ($0 == 1) {
        __label__ = 1; break;
      }
      else if ($0 == 3) {
        __label__ = 2; break;
      }
      else if ($0 == 5) {
        __label__ = 3; break;
      }
      else if ($0 == 7) {
        __label__ = 4; break;
      }
      else if ($0 == 9) {
        __label__ = 5; break;
      }
      else {
      __label__ = 6; break;
      }
      
    case 1: // $sw_bb
      var $1=$ptr_addr;
      var $2=$1;
      HEAP32[(($2)>>2)]=1;
      __label__ = 7; break;
    case 2: // $sw_bb1
      var $3=$ptr_addr;
      var $4=$3;
      HEAP32[(($4)>>2)]=1;
      __label__ = 7; break;
    case 3: // $sw_bb2
      var $5=$ptr_addr;
      var $6=$5;
      HEAP32[(($6)>>2)]=16;
      __label__ = 7; break;
    case 4: // $sw_bb3
      var $7=$ptr_addr;
      var $8=$7;
      HEAP32[(($8)>>2)]=((__str1)|0);
      __label__ = 7; break;
    case 5: // $sw_bb4
      var $9=$ptr_addr;
      var $10=$9;
      HEAP32[(($10)>>2)]=((STRING_TABLE.__str2)|0);
      __label__ = 7; break;
    case 6: // $sw_default
      var $11=$request_addr;
      _speex_warning_int(((STRING_TABLE.__str3)|0), $11);
      $retval=-1;
      __label__ = 8; break;
    case 7: // $sw_epilog
      $retval=0;
      __label__ = 8; break;
    case 8: // $return
      var $12=$retval;
      ;
      return $12;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_stereo_state_init() {
  ;
  var __label__;

  var $stereo;
  var $call=_speex_alloc(24);
  var $0=$call;
  $stereo=$0;
  var $1=$stereo;
  _speex_stereo_state_reset($1);
  var $2=$stereo;
  ;
  return $2;
}


function _speex_alloc($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_calloc($0, 1);
  ;
  return $call;
}


function _speex_stereo_state_destroy($stereo) {
  ;
  var __label__;

  var $stereo_addr;
  $stereo_addr=$stereo;
  var $0=$stereo_addr;
  var $1=$0;
  _speex_free($1);
  ;
  return;
}


function _speex_free($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _free($0);
  ;
  return;
}


function _speex_encode_stereo($data, $frame_size, $bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $data_addr;
      var $frame_size_addr;
      var $bits_addr;
      var $i;
      var $tmp;
      var $e_left;
      var $e_right;
      var $e_tot;
      var $balance;
      var $e_ratio;
      $data_addr=$data;
      $frame_size_addr=$frame_size;
      $bits_addr=$bits;
      $e_left=0;
      $e_right=0;
      $e_tot=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$frame_size_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $mul=((($2<<1))|0);
      var $3=$data_addr;
      var $arrayidx=(($3+($mul<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $mul6=((($5<<1))|0);
      var $6=$data_addr;
      var $arrayidx7=(($6+($mul6<<2))|0);
      var $7=HEAPF32[(($arrayidx7)>>2)];
      var $mul8=$4*$7;
      var $8=$e_left;
      var $add=$8+$mul8;
      $e_left=$add;
      var $9=$i;
      var $mul9=((($9<<1))|0);
      var $add10=(($mul9+1)|0);
      var $10=$data_addr;
      var $arrayidx11=(($10+($add10<<2))|0);
      var $11=HEAPF32[(($arrayidx11)>>2)];
      var $12=$i;
      var $mul12=((($12<<1))|0);
      var $add13=(($mul12+1)|0);
      var $13=$data_addr;
      var $arrayidx14=(($13+($add13<<2))|0);
      var $14=HEAPF32[(($arrayidx14)>>2)];
      var $mul15=$11*$14;
      var $15=$e_right;
      var $add16=$15+$mul15;
      $e_right=$add16;
      var $16=$i;
      var $mul17=((($16<<1))|0);
      var $17=$data_addr;
      var $arrayidx18=(($17+($mul17<<2))|0);
      var $18=HEAPF32[(($arrayidx18)>>2)];
      var $19=$i;
      var $mul19=((($19<<1))|0);
      var $add20=(($mul19+1)|0);
      var $20=$data_addr;
      var $arrayidx21=(($20+($add20<<2))|0);
      var $21=HEAPF32[(($arrayidx21)>>2)];
      var $add22=$18+$21;
      var $conv=$add22;
      var $mul23=$conv*0.5;
      var $conv24=$mul23;
      var $22=$i;
      var $23=$data_addr;
      var $arrayidx25=(($23+($22<<2))|0);
      HEAPF32[(($arrayidx25)>>2)]=$conv24;
      var $24=$i;
      var $25=$data_addr;
      var $arrayidx26=(($25+($24<<2))|0);
      var $26=HEAPF32[(($arrayidx26)>>2)];
      var $27=$i;
      var $28=$data_addr;
      var $arrayidx27=(($28+($27<<2))|0);
      var $29=HEAPF32[(($arrayidx27)>>2)];
      var $mul28=$26*$29;
      var $30=$e_tot;
      var $add29=$30+$mul28;
      $e_tot=$add29;
      __label__ = 3; break;
    case 3: // $for_inc
      var $31=$i;
      var $inc=(($31+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $32=$e_left;
      var $add30=$32+1;
      var $33=$e_right;
      var $add31=$33+1;
      var $div=$add30/$add31;
      $balance=$div;
      var $34=$e_tot;
      var $35=$e_left;
      var $add32=$35+1;
      var $36=$e_right;
      var $add33=$add32+$36;
      var $div34=$34/$add33;
      $e_ratio=$div34;
      var $37=$bits_addr;
      _speex_bits_pack($37, 14, 5);
      var $38=$bits_addr;
      _speex_bits_pack($38, 9, 4);
      var $39=$balance;
      var $conv35=$39;
      var $call=_log($conv35);
      var $mul36=$call*4;
      var $conv37=$mul36;
      $balance=$conv37;
      var $40=$balance;
      var $cmp38=$40 > 0;
      if ($cmp38) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then
      var $41=$bits_addr;
      _speex_bits_pack($41, 0, 1);
      __label__ = 7; break;
    case 6: // $if_else
      var $42=$bits_addr;
      _speex_bits_pack($42, 1, 1);
      __label__ = 7; break;
    case 7: // $if_end
      var $43=$balance;
      var $conv40=$43;
      var $call41=_fabs($conv40);
      var $add42=$call41+0.5;
      var $call43=_floor($add42);
      var $conv44=$call43;
      $balance=$conv44;
      var $44=$balance;
      var $cmp45=$44 > 30;
      if ($cmp45) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then47
      $balance=31;
      __label__ = 9; break;
    case 9: // $if_end48
      var $45=$bits_addr;
      var $46=$balance;
      var $conv49=(($46)|0);
      _speex_bits_pack($45, $conv49, 5);
      var $47=$e_ratio;
      var $mul50=$47;
      var $call51=_scal_quant($mul50, ((_e_ratio_quant_bounds)|0), 4);
      $tmp=$call51;
      var $48=$bits_addr;
      var $49=$tmp;
      _speex_bits_pack($48, $49, 2);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_encode_stereo["X"]=1;

function _speex_encode_stereo_int($data, $frame_size, $bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $data_addr;
      var $frame_size_addr;
      var $bits_addr;
      var $i;
      var $tmp;
      var $e_left;
      var $e_right;
      var $e_tot;
      var $balance;
      var $e_ratio;
      var $largest;
      var $smallest;
      var $balance_id;
      $data_addr=$data;
      $frame_size_addr=$frame_size;
      $bits_addr=$bits;
      $e_left=0;
      $e_right=0;
      $e_tot=0;
      var $0=$bits_addr;
      _speex_bits_pack($0, 14, 5);
      var $1=$bits_addr;
      _speex_bits_pack($1, 9, 4);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $2=$i;
      var $3=$frame_size_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $4=$i;
      var $mul=((($4<<1))|0);
      var $5=$data_addr;
      var $arrayidx=(($5+($mul<<1))|0);
      var $6=HEAP16[(($arrayidx)>>1)];
      var $conv=(($6 << 16) >> 16);
      var $7=$i;
      var $mul9=((($7<<1))|0);
      var $8=$data_addr;
      var $arrayidx10=(($8+($mul9<<1))|0);
      var $9=HEAP16[(($arrayidx10)>>1)];
      var $conv11=(($9 << 16) >> 16);
      var $mul12=$conv*$conv11;
      var $10=$e_left;
      var $add=$10+$mul12;
      $e_left=$add;
      var $11=$i;
      var $mul13=((($11<<1))|0);
      var $add14=(($mul13+1)|0);
      var $12=$data_addr;
      var $arrayidx15=(($12+($add14<<1))|0);
      var $13=HEAP16[(($arrayidx15)>>1)];
      var $conv16=(($13 << 16) >> 16);
      var $14=$i;
      var $mul17=((($14<<1))|0);
      var $add18=(($mul17+1)|0);
      var $15=$data_addr;
      var $arrayidx19=(($15+($add18<<1))|0);
      var $16=HEAP16[(($arrayidx19)>>1)];
      var $conv20=(($16 << 16) >> 16);
      var $mul21=$conv16*$conv20;
      var $17=$e_right;
      var $add22=$17+$mul21;
      $e_right=$add22;
      var $18=$i;
      var $mul23=((($18<<1))|0);
      var $19=$data_addr;
      var $arrayidx24=(($19+($mul23<<1))|0);
      var $20=HEAP16[(($arrayidx24)>>1)];
      var $conv25=(($20 << 16) >> 16);
      var $21=$i;
      var $mul26=((($21<<1))|0);
      var $add27=(($mul26+1)|0);
      var $22=$data_addr;
      var $arrayidx28=(($22+($add27<<1))|0);
      var $23=HEAP16[(($arrayidx28)>>1)];
      var $conv29=(($23 << 16) >> 16);
      var $conv30=(($conv29)|0);
      var $add31=$conv25+$conv30;
      var $conv32=$add31;
      var $mul33=$conv32*0.5;
      var $conv34=(($mul33)|0);
      var $24=$i;
      var $25=$data_addr;
      var $arrayidx35=(($25+($24<<1))|0);
      HEAP16[(($arrayidx35)>>1)]=$conv34;
      var $26=$i;
      var $27=$data_addr;
      var $arrayidx36=(($27+($26<<1))|0);
      var $28=HEAP16[(($arrayidx36)>>1)];
      var $conv37=(($28 << 16) >> 16);
      var $29=$i;
      var $30=$data_addr;
      var $arrayidx38=(($30+($29<<1))|0);
      var $31=HEAP16[(($arrayidx38)>>1)];
      var $conv39=(($31 << 16) >> 16);
      var $mul40=$conv37*$conv39;
      var $32=$e_tot;
      var $add41=$32+$mul40;
      $e_tot=$add41;
      __label__ = 3; break;
    case 3: // $for_inc
      var $33=$i;
      var $inc=(($33+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $34=$e_left;
      var $35=$e_right;
      var $cmp42=$34 > $35;
      if ($cmp42) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then
      var $36=$bits_addr;
      _speex_bits_pack($36, 0, 1);
      var $37=$e_left;
      $largest=$37;
      var $38=$e_right;
      $smallest=$38;
      __label__ = 7; break;
    case 6: // $if_else
      var $39=$bits_addr;
      _speex_bits_pack($39, 1, 1);
      var $40=$e_right;
      $largest=$40;
      var $41=$e_left;
      $smallest=$41;
      __label__ = 7; break;
    case 7: // $if_end
      var $42=$largest;
      var $conv44=$42;
      var $add45=$conv44+1;
      var $43=$smallest;
      var $conv46=$43;
      var $add47=$conv46+1;
      var $div=$add45/$add47;
      var $conv48=$div;
      $balance=$conv48;
      var $44=$balance;
      var $conv49=$44;
      var $call=_log($conv49);
      var $mul50=$call*4;
      var $conv51=$mul50;
      $balance=$conv51;
      var $45=$balance;
      var $conv52=$45;
      var $call53=_fabs($conv52);
      var $add54=$call53+0.5;
      var $call55=_floor($add54);
      var $conv56=(($call55)|0);
      $balance_id=$conv56;
      var $46=$balance_id;
      var $cmp57=(($46)|0) > 30;
      if ($cmp57) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then59
      $balance_id=31;
      __label__ = 9; break;
    case 9: // $if_end60
      var $47=$bits_addr;
      var $48=$balance_id;
      _speex_bits_pack($47, $48, 5);
      var $49=$e_tot;
      var $conv61=$49;
      var $50=$e_left;
      var $conv62=$50;
      var $add63=$conv62+1;
      var $51=$e_right;
      var $conv64=$51;
      var $add65=$add63+$conv64;
      var $div66=$conv61/$add65;
      var $conv67=$div66;
      $e_ratio=$conv67;
      var $52=$e_ratio;
      var $call68=_scal_quant($52, ((_e_ratio_quant_bounds)|0), 4);
      $tmp=$call68;
      var $53=$bits_addr;
      var $54=$tmp;
      _speex_bits_pack($53, $54, 2);
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_encode_stereo_int["X"]=1;

function _speex_decode_stereo($data, $frame_size, $_stereo) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $data_addr;
      var $frame_size_addr;
      var $_stereo_addr;
      var $i;
      var $balance;
      var $e_left;
      var $e_right;
      var $e_ratio;
      var $stereo;
      var $tmp;
      $data_addr=$data;
      $frame_size_addr=$frame_size;
      $_stereo_addr=$_stereo;
      var $0=$_stereo_addr;
      var $1=$0;
      $stereo=$1;
      var $2=$stereo;
      var $balance1=(($2)|0);
      var $3=HEAPF32[(($balance1)>>2)];
      $balance=$3;
      var $4=$stereo;
      var $e_ratio2=(($4+4)|0);
      var $5=HEAPF32[(($e_ratio2)>>2)];
      $e_ratio=$5;
      var $6=$e_ratio;
      var $conv=$6;
      var $7=$balance;
      var $conv3=$7;
      var $add=$conv3+1;
      var $mul=$conv*$add;
      var $call=_sqrt($mul);
      var $conv4=$call;
      var $div=1/$conv4;
      $e_right=$div;
      var $8=$balance;
      var $conv5=$8;
      var $call6=_sqrt($conv5);
      var $conv7=$call6;
      var $9=$e_right;
      var $mul8=$conv7*$9;
      $e_left=$mul8;
      var $10=$frame_size_addr;
      var $sub=(($10-1)|0);
      $i=$sub;
      __label__ = 1; break;
    case 1: // $for_cond
      var $11=$i;
      var $cmp=(($11)|0) >= 0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $12=$i;
      var $13=$data_addr;
      var $arrayidx=(($13+($12<<2))|0);
      var $14=HEAPF32[(($arrayidx)>>2)];
      $tmp=$14;
      var $15=$stereo;
      var $smooth_left=(($15+8)|0);
      var $16=HEAPF32[(($smooth_left)>>2)];
      var $mul10=$16*0.9800000190734863;
      var $17=$e_left;
      var $mul11=$17*0.019999999552965164;
      var $add12=$mul10+$mul11;
      var $18=$stereo;
      var $smooth_left13=(($18+8)|0);
      HEAPF32[(($smooth_left13)>>2)]=$add12;
      var $19=$stereo;
      var $smooth_right=(($19+12)|0);
      var $20=HEAPF32[(($smooth_right)>>2)];
      var $mul14=$20*0.9800000190734863;
      var $21=$e_right;
      var $mul15=$21*0.019999999552965164;
      var $add16=$mul14+$mul15;
      var $22=$stereo;
      var $smooth_right17=(($22+12)|0);
      HEAPF32[(($smooth_right17)>>2)]=$add16;
      var $23=$stereo;
      var $smooth_left18=(($23+8)|0);
      var $24=HEAPF32[(($smooth_left18)>>2)];
      var $25=$tmp;
      var $mul19=$24*$25;
      var $26=$i;
      var $mul20=((($26<<1))|0);
      var $27=$data_addr;
      var $arrayidx21=(($27+($mul20<<2))|0);
      HEAPF32[(($arrayidx21)>>2)]=$mul19;
      var $28=$stereo;
      var $smooth_right22=(($28+12)|0);
      var $29=HEAPF32[(($smooth_right22)>>2)];
      var $30=$tmp;
      var $mul23=$29*$30;
      var $31=$i;
      var $mul24=((($31<<1))|0);
      var $add25=(($mul24+1)|0);
      var $32=$data_addr;
      var $arrayidx26=(($32+($add25<<2))|0);
      HEAPF32[(($arrayidx26)>>2)]=$mul23;
      __label__ = 3; break;
    case 3: // $for_inc
      var $33=$i;
      var $dec=(($33-1)|0);
      $i=$dec;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_decode_stereo["X"]=1;

function _speex_decode_stereo_int($data, $frame_size, $_stereo) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $data_addr;
      var $frame_size_addr;
      var $_stereo_addr;
      var $i;
      var $balance;
      var $e_left;
      var $e_right;
      var $e_ratio;
      var $stereo;
      var $tmp;
      $data_addr=$data;
      $frame_size_addr=$frame_size;
      $_stereo_addr=$_stereo;
      var $0=$_stereo_addr;
      var $1=$0;
      $stereo=$1;
      var $2=$stereo;
      var $balance1=(($2)|0);
      var $3=HEAPF32[(($balance1)>>2)];
      $balance=$3;
      var $4=$stereo;
      var $e_ratio2=(($4+4)|0);
      var $5=HEAPF32[(($e_ratio2)>>2)];
      $e_ratio=$5;
      var $6=$e_ratio;
      var $conv=$6;
      var $7=$balance;
      var $conv3=$7;
      var $add=$conv3+1;
      var $mul=$conv*$add;
      var $call=_sqrt($mul);
      var $conv4=$call;
      var $div=1/$conv4;
      $e_right=$div;
      var $8=$balance;
      var $conv5=$8;
      var $call6=_sqrt($conv5);
      var $conv7=$call6;
      var $9=$e_right;
      var $mul8=$conv7*$9;
      $e_left=$mul8;
      var $10=$frame_size_addr;
      var $sub=(($10-1)|0);
      $i=$sub;
      __label__ = 1; break;
    case 1: // $for_cond
      var $11=$i;
      var $cmp=(($11)|0) >= 0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $12=$i;
      var $13=$data_addr;
      var $arrayidx=(($13+($12<<1))|0);
      var $14=HEAP16[(($arrayidx)>>1)];
      $tmp=$14;
      var $15=$stereo;
      var $smooth_left=(($15+8)|0);
      var $16=HEAPF32[(($smooth_left)>>2)];
      var $mul10=$16*0.9800000190734863;
      var $17=$e_left;
      var $mul11=$17*0.019999999552965164;
      var $add12=$mul10+$mul11;
      var $18=$stereo;
      var $smooth_left13=(($18+8)|0);
      HEAPF32[(($smooth_left13)>>2)]=$add12;
      var $19=$stereo;
      var $smooth_right=(($19+12)|0);
      var $20=HEAPF32[(($smooth_right)>>2)];
      var $mul14=$20*0.9800000190734863;
      var $21=$e_right;
      var $mul15=$21*0.019999999552965164;
      var $add16=$mul14+$mul15;
      var $22=$stereo;
      var $smooth_right17=(($22+12)|0);
      HEAPF32[(($smooth_right17)>>2)]=$add16;
      var $23=$stereo;
      var $smooth_left18=(($23+8)|0);
      var $24=HEAPF32[(($smooth_left18)>>2)];
      var $25=$tmp;
      var $conv19=(($25 << 16) >> 16);
      var $conv20=(($conv19)|0);
      var $mul21=$24*$conv20;
      var $conv22=(($mul21)|0);
      var $26=$i;
      var $mul23=((($26<<1))|0);
      var $27=$data_addr;
      var $arrayidx24=(($27+($mul23<<1))|0);
      HEAP16[(($arrayidx24)>>1)]=$conv22;
      var $28=$stereo;
      var $smooth_right25=(($28+12)|0);
      var $29=HEAPF32[(($smooth_right25)>>2)];
      var $30=$tmp;
      var $conv26=(($30 << 16) >> 16);
      var $conv27=(($conv26)|0);
      var $mul28=$29*$conv27;
      var $conv29=(($mul28)|0);
      var $31=$i;
      var $mul30=((($31<<1))|0);
      var $add31=(($mul30+1)|0);
      var $32=$data_addr;
      var $arrayidx32=(($32+($add31<<1))|0);
      HEAP16[(($arrayidx32)>>1)]=$conv29;
      __label__ = 3; break;
    case 3: // $for_inc
      var $33=$i;
      var $dec=(($33-1)|0);
      $i=$dec;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_decode_stereo_int["X"]=1;

function _speex_std_stereo_request_handler($bits, $state, $data) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $state_addr;
      var $data_addr;
      var $stereo;
      var $sign;
      var $dexp;
      var $tmp;
      $bits_addr=$bits;
      $state_addr=$state;
      $data_addr=$data;
      $sign=1;
      var $0=$data_addr;
      var $1=$0;
      $stereo=$1;
      var $2=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($2, 1);
      var $tobool=(($call)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $sign=-1;
      __label__ = 2; break;
    case 2: // $if_end
      var $3=$bits_addr;
      var $call1=_speex_bits_unpack_unsigned($3, 5);
      var $conv=(($call1)>>>0);
      $dexp=$conv;
      var $4=$sign;
      var $conv2=$4;
      var $mul=$conv2*0.25;
      var $5=$dexp;
      var $conv3=$5;
      var $mul4=$mul*$conv3;
      var $call5=_exp($mul4);
      var $conv6=$call5;
      var $6=$stereo;
      var $balance=(($6)|0);
      HEAPF32[(($balance)>>2)]=$conv6;
      var $7=$bits_addr;
      var $call7=_speex_bits_unpack_unsigned($7, 2);
      $tmp=$call7;
      var $8=$tmp;
      var $arrayidx=((_e_ratio_quant+($8<<2))|0);
      var $9=HEAPF32[(($arrayidx)>>2)];
      var $10=$stereo;
      var $e_ratio=(($10+4)|0);
      HEAPF32[(($e_ratio)>>2)]=$9;
      ;
      return 0;
    default: assert(0, "bad label: " + __label__);
  }
}


function _vbr_init($vbr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $vbr_addr;
      var $i;
      $vbr_addr=$vbr;
      var $0=$vbr_addr;
      var $average_energy=(($0+4)|0);
      HEAPF32[(($average_energy)>>2)]=0;
      var $1=$vbr_addr;
      var $last_energy=(($1+8)|0);
      HEAPF32[(($last_energy)>>2)]=1;
      var $2=$vbr_addr;
      var $accum_sum=(($2+32)|0);
      HEAPF32[(($accum_sum)>>2)]=0;
      var $3=$vbr_addr;
      var $energy_alpha=(($3)|0);
      HEAPF32[(($energy_alpha)>>2)]=0.10000000149011612;
      var $4=$vbr_addr;
      var $soft_pitch=(($4+40)|0);
      HEAPF32[(($soft_pitch)>>2)]=0;
      var $5=$vbr_addr;
      var $last_pitch_coef=(($5+36)|0);
      HEAPF32[(($last_pitch_coef)>>2)]=0;
      var $6=$vbr_addr;
      var $last_quality=(($6+44)|0);
      HEAPF32[(($last_quality)>>2)]=0;
      var $7=_llvm_pow_f64(6000, 0.3);
      var $mul=$7*0.05;
      var $conv=$mul;
      var $8=$vbr_addr;
      var $noise_accum=(($8+52)|0);
      HEAPF32[(($noise_accum)>>2)]=$conv;
      var $9=$vbr_addr;
      var $noise_accum_count=(($9+56)|0);
      HEAPF32[(($noise_accum_count)>>2)]=0.05000000074505806;
      var $10=$vbr_addr;
      var $noise_accum1=(($10+52)|0);
      var $11=HEAPF32[(($noise_accum1)>>2)];
      var $12=$vbr_addr;
      var $noise_accum_count2=(($12+56)|0);
      var $13=HEAPF32[(($noise_accum_count2)>>2)];
      var $div=$11/$13;
      var $14=$vbr_addr;
      var $noise_level=(($14+48)|0);
      HEAPF32[(($noise_level)>>2)]=$div;
      var $15=$vbr_addr;
      var $consec_noise=(($15+60)|0);
      HEAP32[(($consec_noise)>>2)]=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $16=$i;
      var $cmp=(($16)|0) < 5;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $call=_log(6000);
      var $conv4=$call;
      var $17=$i;
      var $18=$vbr_addr;
      var $last_log_energy=(($18+12)|0);
      var $arrayidx=(($last_log_energy+($17<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$conv4;
      __label__ = 3; break;
    case 3: // $for_inc
      var $19=$i;
      var $inc=(($19+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_vbr_init["X"]=1;

function _vbr_destroy($vbr) {
  ;
  var __label__;

  var $vbr_addr;
  $vbr_addr=$vbr;
  ;
  return;
}


function _scal_quant($in, $boundary, $entries) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $in_addr;
      var $boundary_addr;
      var $entries_addr;
      var $i;
      $in_addr=$in;
      $boundary_addr=$boundary;
      $entries_addr=$entries;
      $i=0;
      __label__ = 1; break;
    case 1: // $while_cond
      var $0=$i;
      var $1=$entries_addr;
      var $sub=(($1-1)|0);
      var $cmp=(($0)|0) < (($sub)|0);
      if ($cmp) { __label__ = 2; break; } else { var $5 = 0;__label__ = 3; break; }
    case 2: // $land_rhs
      var $2=$in_addr;
      var $3=$boundary_addr;
      var $arrayidx=(($3)|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $cmp1=$2 > $4;
      var $5 = $cmp1;__label__ = 3; break;
    case 3: // $land_end
      var $5;
      if ($5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $6=$boundary_addr;
      var $incdec_ptr=(($6+4)|0);
      $boundary_addr=$incdec_ptr;
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 5: // $while_end
      var $8=$i;
      ;
      return $8;
    default: assert(0, "bad label: " + __label__);
  }
}


function _scal_quant32($in, $boundary, $entries) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $in_addr;
      var $boundary_addr;
      var $entries_addr;
      var $i;
      $in_addr=$in;
      $boundary_addr=$boundary;
      $entries_addr=$entries;
      $i=0;
      __label__ = 1; break;
    case 1: // $while_cond
      var $0=$i;
      var $1=$entries_addr;
      var $sub=(($1-1)|0);
      var $cmp=(($0)|0) < (($sub)|0);
      if ($cmp) { __label__ = 2; break; } else { var $5 = 0;__label__ = 3; break; }
    case 2: // $land_rhs
      var $2=$in_addr;
      var $3=$boundary_addr;
      var $arrayidx=(($3)|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $cmp1=$2 > $4;
      var $5 = $cmp1;__label__ = 3; break;
    case 3: // $land_end
      var $5;
      if ($5) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $6=$boundary_addr;
      var $incdec_ptr=(($6+4)|0);
      $boundary_addr=$incdec_ptr;
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 5: // $while_end
      var $8=$i;
      ;
      return $8;
    default: assert(0, "bad label: " + __label__);
  }
}


function _vbr_analysis($vbr, $sig, $len, $pitch, $pitch_coef) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $vbr_addr;
      var $sig_addr;
      var $len_addr;
      var $pitch_addr;
      var $pitch_coef_addr;
      var $i;
      var $ener;
      var $ener1;
      var $ener2;
      var $qual;
      var $va;
      var $log_energy;
      var $non_st;
      var $voicing;
      var $pow_ener;
      var $tmp;
      var $short_diff;
      var $long_diff;
      $vbr_addr=$vbr;
      $sig_addr=$sig;
      $len_addr=$len;
      $pitch_addr=$pitch;
      $pitch_coef_addr=$pitch_coef;
      $ener=0;
      $ener1=0;
      $ener2=0;
      $qual=7;
      $non_st=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$len_addr;
      var $shr=$1 >> 1;
      var $cmp=(($0)|0) < (($shr)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$sig_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $6=$sig_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx1)>>2)];
      var $mul=$4*$7;
      var $8=$ener1;
      var $add=$8+$mul;
      $ener1=$add;
      __label__ = 3; break;
    case 3: // $for_inc
      var $9=$i;
      var $inc=(($9+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $10=$len_addr;
      var $shr2=$10 >> 1;
      $i=$shr2;
      __label__ = 5; break;
    case 5: // $for_cond3
      var $11=$i;
      var $12=$len_addr;
      var $cmp4=(($11)|0) < (($12)|0);
      if ($cmp4) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body5
      var $13=$i;
      var $14=$sig_addr;
      var $arrayidx6=(($14+($13<<2))|0);
      var $15=HEAPF32[(($arrayidx6)>>2)];
      var $16=$i;
      var $17=$sig_addr;
      var $arrayidx7=(($17+($16<<2))|0);
      var $18=HEAPF32[(($arrayidx7)>>2)];
      var $mul8=$15*$18;
      var $19=$ener2;
      var $add9=$19+$mul8;
      $ener2=$add9;
      __label__ = 7; break;
    case 7: // $for_inc10
      var $20=$i;
      var $inc11=(($20+1)|0);
      $i=$inc11;
      __label__ = 5; break;
    case 8: // $for_end12
      var $21=$ener1;
      var $22=$ener2;
      var $add13=$21+$22;
      $ener=$add13;
      var $23=$ener;
      var $add14=$23+6000;
      var $conv=$add14;
      var $call=_log($conv);
      var $conv15=$call;
      $log_energy=$conv15;
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond16
      var $24=$i;
      var $cmp17=(($24)|0) < 5;
      if ($cmp17) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body19
      var $25=$log_energy;
      var $26=$i;
      var $27=$vbr_addr;
      var $last_log_energy=(($27+12)|0);
      var $arrayidx20=(($last_log_energy+($26<<2))|0);
      var $28=HEAPF32[(($arrayidx20)>>2)];
      var $sub=$25-$28;
      var $29=$log_energy;
      var $30=$i;
      var $31=$vbr_addr;
      var $last_log_energy21=(($31+12)|0);
      var $arrayidx22=(($last_log_energy21+($30<<2))|0);
      var $32=HEAPF32[(($arrayidx22)>>2)];
      var $sub23=$29-$32;
      var $mul24=$sub*$sub23;
      var $33=$non_st;
      var $add25=$33+$mul24;
      $non_st=$add25;
      __label__ = 11; break;
    case 11: // $for_inc26
      var $34=$i;
      var $inc27=(($34+1)|0);
      $i=$inc27;
      __label__ = 9; break;
    case 12: // $for_end28
      var $35=$non_st;
      var $div=$35/150;
      $non_st=$div;
      var $36=$non_st;
      var $cmp29=$36 > 1;
      if ($cmp29) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then
      $non_st=1;
      __label__ = 14; break;
    case 14: // $if_end
      var $37=$pitch_coef_addr;
      var $conv31=$37;
      var $sub32=$conv31-0.4;
      var $mul33=$sub32*3;
      var $38=$pitch_coef_addr;
      var $conv34=$38;
      var $sub35=$conv34-0.4;
      var $call36=_fabs($sub35);
      var $mul37=$mul33*$call36;
      var $conv38=$mul37;
      $voicing=$conv38;
      var $39=$vbr_addr;
      var $energy_alpha=(($39)|0);
      var $40=HEAPF32[(($energy_alpha)>>2)];
      var $sub39=1-$40;
      var $41=$vbr_addr;
      var $average_energy=(($41+4)|0);
      var $42=HEAPF32[(($average_energy)>>2)];
      var $mul40=$sub39*$42;
      var $43=$vbr_addr;
      var $energy_alpha41=(($43)|0);
      var $44=HEAPF32[(($energy_alpha41)>>2)];
      var $45=$ener;
      var $mul42=$44*$45;
      var $add43=$mul40+$mul42;
      var $46=$vbr_addr;
      var $average_energy44=(($46+4)|0);
      HEAPF32[(($average_energy44)>>2)]=$add43;
      var $47=$vbr_addr;
      var $noise_accum=(($47+52)|0);
      var $48=HEAPF32[(($noise_accum)>>2)];
      var $49=$vbr_addr;
      var $noise_accum_count=(($49+56)|0);
      var $50=HEAPF32[(($noise_accum_count)>>2)];
      var $div45=$48/$50;
      var $51=$vbr_addr;
      var $noise_level=(($51+48)|0);
      HEAPF32[(($noise_level)>>2)]=$div45;
      var $52=$ener;
      var $conv46=$52;
      var $53=_llvm_pow_f64($conv46, 0.3);
      var $conv47=$53;
      $pow_ener=$conv47;
      var $54=$vbr_addr;
      var $noise_accum_count48=(($54+56)|0);
      var $55=HEAPF32[(($noise_accum_count48)>>2)];
      var $conv49=$55;
      var $cmp50=$conv49 < 0.06;
      if ($cmp50) { __label__ = 15; break; } else { __label__ = 17; break; }
    case 15: // $land_lhs_true
      var $56=$ener;
      var $cmp52=$56 > 6000;
      if ($cmp52) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then54
      var $57=$pow_ener;
      var $conv55=$57;
      var $mul56=$conv55*0.05;
      var $conv57=$mul56;
      var $58=$vbr_addr;
      var $noise_accum58=(($58+52)|0);
      HEAPF32[(($noise_accum58)>>2)]=$conv57;
      __label__ = 17; break;
    case 17: // $if_end59
      var $59=$voicing;
      var $conv60=$59;
      var $cmp61=$conv60 < 0.3;
      if ($cmp61) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $land_lhs_true63
      var $60=$non_st;
      var $conv64=$60;
      var $cmp65=$conv64 < 0.2;
      if ($cmp65) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $land_lhs_true67
      var $61=$pow_ener;
      var $conv68=$61;
      var $62=$vbr_addr;
      var $noise_level69=(($62+48)|0);
      var $63=HEAPF32[(($noise_level69)>>2)];
      var $conv70=$63;
      var $mul71=$conv70*1.2;
      var $cmp72=$conv68 < $mul71;
      if ($cmp72) { __label__ = 28; break; } else { __label__ = 20; break; }
    case 20: // $lor_lhs_false
      var $64=$voicing;
      var $conv74=$64;
      var $cmp75=$conv74 < 0.3;
      if ($cmp75) { __label__ = 21; break; } else { __label__ = 23; break; }
    case 21: // $land_lhs_true77
      var $65=$non_st;
      var $conv78=$65;
      var $cmp79=$conv78 < 0.05;
      if ($cmp79) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $land_lhs_true81
      var $66=$pow_ener;
      var $conv82=$66;
      var $67=$vbr_addr;
      var $noise_level83=(($67+48)|0);
      var $68=HEAPF32[(($noise_level83)>>2)];
      var $conv84=$68;
      var $mul85=$conv84*1.5;
      var $cmp86=$conv82 < $mul85;
      if ($cmp86) { __label__ = 28; break; } else { __label__ = 23; break; }
    case 23: // $lor_lhs_false88
      var $69=$voicing;
      var $conv89=$69;
      var $cmp90=$conv89 < 0.4;
      if ($cmp90) { __label__ = 24; break; } else { __label__ = 26; break; }
    case 24: // $land_lhs_true92
      var $70=$non_st;
      var $conv93=$70;
      var $cmp94=$conv93 < 0.05;
      if ($cmp94) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $land_lhs_true96
      var $71=$pow_ener;
      var $conv97=$71;
      var $72=$vbr_addr;
      var $noise_level98=(($72+48)|0);
      var $73=HEAPF32[(($noise_level98)>>2)];
      var $conv99=$73;
      var $mul100=$conv99*1.2;
      var $cmp101=$conv97 < $mul100;
      if ($cmp101) { __label__ = 28; break; } else { __label__ = 26; break; }
    case 26: // $lor_lhs_false103
      var $74=$voicing;
      var $cmp104=$74 < 0;
      if ($cmp104) { __label__ = 27; break; } else { __label__ = 34; break; }
    case 27: // $land_lhs_true106
      var $75=$non_st;
      var $conv107=$75;
      var $cmp108=$conv107 < 0.05;
      if ($cmp108) { __label__ = 28; break; } else { __label__ = 34; break; }
    case 28: // $if_then110
      $va=0;
      var $76=$vbr_addr;
      var $consec_noise=(($76+60)|0);
      var $77=HEAP32[(($consec_noise)>>2)];
      var $inc111=(($77+1)|0);
      HEAP32[(($consec_noise)>>2)]=$inc111;
      var $78=$pow_ener;
      var $79=$vbr_addr;
      var $noise_level112=(($79+48)|0);
      var $80=HEAPF32[(($noise_level112)>>2)];
      var $mul113=$80*3;
      var $cmp114=$78 > $mul113;
      if ($cmp114) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $if_then116
      var $81=$vbr_addr;
      var $noise_level117=(($81+48)|0);
      var $82=HEAPF32[(($noise_level117)>>2)];
      var $mul118=$82*3;
      $tmp=$mul118;
      __label__ = 31; break;
    case 30: // $if_else
      var $83=$pow_ener;
      $tmp=$83;
      __label__ = 31; break;
    case 31: // $if_end119
      var $84=$vbr_addr;
      var $consec_noise120=(($84+60)|0);
      var $85=HEAP32[(($consec_noise120)>>2)];
      var $cmp121=(($85)|0) >= 4;
      if ($cmp121) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: // $if_then123
      var $86=$vbr_addr;
      var $noise_accum124=(($86+52)|0);
      var $87=HEAPF32[(($noise_accum124)>>2)];
      var $conv125=$87;
      var $mul126=$conv125*0.95;
      var $88=$tmp;
      var $conv127=$88;
      var $mul128=$conv127*0.05;
      var $add129=$mul126+$mul128;
      var $conv130=$add129;
      var $89=$vbr_addr;
      var $noise_accum131=(($89+52)|0);
      HEAPF32[(($noise_accum131)>>2)]=$conv130;
      var $90=$vbr_addr;
      var $noise_accum_count132=(($90+56)|0);
      var $91=HEAPF32[(($noise_accum_count132)>>2)];
      var $conv133=$91;
      var $mul134=$conv133*0.95;
      var $add135=$mul134+0.05;
      var $conv136=$add135;
      var $92=$vbr_addr;
      var $noise_accum_count137=(($92+56)|0);
      HEAPF32[(($noise_accum_count137)>>2)]=$conv136;
      __label__ = 33; break;
    case 33: // $if_end138
      __label__ = 35; break;
    case 34: // $if_else139
      $va=1;
      var $93=$vbr_addr;
      var $consec_noise140=(($93+60)|0);
      HEAP32[(($consec_noise140)>>2)]=0;
      __label__ = 35; break;
    case 35: // $if_end141
      var $94=$pow_ener;
      var $95=$vbr_addr;
      var $noise_level142=(($95+48)|0);
      var $96=HEAPF32[(($noise_level142)>>2)];
      var $cmp143=$94 < $96;
      if ($cmp143) { __label__ = 36; break; } else { __label__ = 38; break; }
    case 36: // $land_lhs_true145
      var $97=$ener;
      var $cmp146=$97 > 6000;
      if ($cmp146) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: // $if_then148
      var $98=$vbr_addr;
      var $noise_accum149=(($98+52)|0);
      var $99=HEAPF32[(($noise_accum149)>>2)];
      var $conv150=$99;
      var $mul151=$conv150*0.95;
      var $100=$pow_ener;
      var $conv152=$100;
      var $mul153=$conv152*0.05;
      var $add154=$mul151+$mul153;
      var $conv155=$add154;
      var $101=$vbr_addr;
      var $noise_accum156=(($101+52)|0);
      HEAPF32[(($noise_accum156)>>2)]=$conv155;
      var $102=$vbr_addr;
      var $noise_accum_count157=(($102+56)|0);
      var $103=HEAPF32[(($noise_accum_count157)>>2)];
      var $conv158=$103;
      var $mul159=$conv158*0.95;
      var $add160=$mul159+0.05;
      var $conv161=$add160;
      var $104=$vbr_addr;
      var $noise_accum_count162=(($104+56)|0);
      HEAPF32[(($noise_accum_count162)>>2)]=$conv161;
      __label__ = 38; break;
    case 38: // $if_end163
      var $105=$ener;
      var $cmp164=$105 < 30000;
      if ($cmp164) { __label__ = 39; break; } else { __label__ = 44; break; }
    case 39: // $if_then166
      var $106=$qual;
      var $conv167=$106;
      var $sub168=$conv167-0.7;
      var $conv169=$sub168;
      $qual=$conv169;
      var $107=$ener;
      var $cmp170=$107 < 10000;
      if ($cmp170) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $if_then172
      var $108=$qual;
      var $conv173=$108;
      var $sub174=$conv173-0.7;
      var $conv175=$sub174;
      $qual=$conv175;
      __label__ = 41; break;
    case 41: // $if_end176
      var $109=$ener;
      var $cmp177=$109 < 3000;
      if ($cmp177) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $if_then179
      var $110=$qual;
      var $conv180=$110;
      var $sub181=$conv180-0.7;
      var $conv182=$sub181;
      $qual=$conv182;
      __label__ = 43; break;
    case 43: // $if_end183
      __label__ = 59; break;
    case 44: // $if_else184
      var $111=$ener;
      var $add187=$111+1;
      var $112=$vbr_addr;
      var $last_energy=(($112+8)|0);
      var $113=HEAPF32[(($last_energy)>>2)];
      var $add188=$113+1;
      var $div189=$add187/$add188;
      var $conv190=$div189;
      var $call191=_log($conv190);
      var $conv192=$call191;
      $short_diff=$conv192;
      var $114=$ener;
      var $add193=$114+1;
      var $115=$vbr_addr;
      var $average_energy194=(($115+4)|0);
      var $116=HEAPF32[(($average_energy194)>>2)];
      var $add195=$116+1;
      var $div196=$add193/$add195;
      var $conv197=$div196;
      var $call198=_log($conv197);
      var $conv199=$call198;
      $long_diff=$conv199;
      var $117=$long_diff;
      var $cmp200=$117 < -5;
      if ($cmp200) { __label__ = 45; break; } else { __label__ = 46; break; }
    case 45: // $if_then202
      $long_diff=-5;
      __label__ = 46; break;
    case 46: // $if_end203
      var $118=$long_diff;
      var $cmp204=$118 > 2;
      if ($cmp204) { __label__ = 47; break; } else { __label__ = 48; break; }
    case 47: // $if_then206
      $long_diff=2;
      __label__ = 48; break;
    case 48: // $if_end207
      var $119=$long_diff;
      var $cmp208=$119 > 0;
      if ($cmp208) { __label__ = 49; break; } else { __label__ = 50; break; }
    case 49: // $if_then210
      var $120=$long_diff;
      var $conv211=$120;
      var $mul212=$conv211*0.6;
      var $121=$qual;
      var $conv213=$121;
      var $add214=$conv213+$mul212;
      var $conv215=$add214;
      $qual=$conv215;
      __label__ = 50; break;
    case 50: // $if_end216
      var $122=$long_diff;
      var $cmp217=$122 < 0;
      if ($cmp217) { __label__ = 51; break; } else { __label__ = 52; break; }
    case 51: // $if_then219
      var $123=$long_diff;
      var $conv220=$123;
      var $mul221=$conv220*0.5;
      var $124=$qual;
      var $conv222=$124;
      var $add223=$conv222+$mul221;
      var $conv224=$add223;
      $qual=$conv224;
      __label__ = 52; break;
    case 52: // $if_end225
      var $125=$short_diff;
      var $cmp226=$125 > 0;
      if ($cmp226) { __label__ = 53; break; } else { __label__ = 56; break; }
    case 53: // $if_then228
      var $126=$short_diff;
      var $cmp229=$126 > 5;
      if ($cmp229) { __label__ = 54; break; } else { __label__ = 55; break; }
    case 54: // $if_then231
      $short_diff=5;
      __label__ = 55; break;
    case 55: // $if_end232
      var $127=$short_diff;
      var $conv233=$127;
      var $mul234=$conv233*0.5;
      var $128=$qual;
      var $conv235=$128;
      var $add236=$conv235+$mul234;
      var $conv237=$add236;
      $qual=$conv237;
      __label__ = 56; break;
    case 56: // $if_end238
      var $129=$ener2;
      var $conv239=$129;
      var $130=$ener1;
      var $conv240=$130;
      var $mul241=$conv240*1.6;
      var $cmp242=$conv239 > $mul241;
      if ($cmp242) { __label__ = 57; break; } else { __label__ = 58; break; }
    case 57: // $if_then244
      var $131=$qual;
      var $conv245=$131;
      var $add246=$conv245+0.5;
      var $conv247=$add246;
      $qual=$conv247;
      __label__ = 58; break;
    case 58: // $if_end248
      __label__ = 59; break;
    case 59: // $if_end249
      var $132=$ener;
      var $133=$vbr_addr;
      var $last_energy250=(($133+8)|0);
      HEAPF32[(($last_energy250)>>2)]=$132;
      var $134=$vbr_addr;
      var $soft_pitch=(($134+40)|0);
      var $135=HEAPF32[(($soft_pitch)>>2)];
      var $conv251=$135;
      var $mul252=$conv251*0.6;
      var $136=$pitch_coef_addr;
      var $conv253=$136;
      var $mul254=$conv253*0.4;
      var $add255=$mul252+$mul254;
      var $conv256=$add255;
      var $137=$vbr_addr;
      var $soft_pitch257=(($137+40)|0);
      HEAPF32[(($soft_pitch257)>>2)]=$conv256;
      var $138=$pitch_coef_addr;
      var $conv258=$138;
      var $sub259=$conv258-0.4;
      var $139=$vbr_addr;
      var $soft_pitch260=(($139+40)|0);
      var $140=HEAPF32[(($soft_pitch260)>>2)];
      var $conv261=$140;
      var $sub262=$conv261-0.4;
      var $add263=$sub259+$sub262;
      var $mul264=$add263*2.2;
      var $141=$qual;
      var $conv265=$141;
      var $add266=$conv265+$mul264;
      var $conv267=$add266;
      $qual=$conv267;
      var $142=$qual;
      var $143=$vbr_addr;
      var $last_quality=(($143+44)|0);
      var $144=HEAPF32[(($last_quality)>>2)];
      var $cmp268=$142 < $144;
      if ($cmp268) { __label__ = 60; break; } else { __label__ = 61; break; }
    case 60: // $if_then270
      var $145=$qual;
      var $conv271=$145;
      var $mul272=$conv271*0.5;
      var $146=$vbr_addr;
      var $last_quality273=(($146+44)|0);
      var $147=HEAPF32[(($last_quality273)>>2)];
      var $conv274=$147;
      var $mul275=$conv274*0.5;
      var $add276=$mul272+$mul275;
      var $conv277=$add276;
      $qual=$conv277;
      __label__ = 61; break;
    case 61: // $if_end278
      var $148=$qual;
      var $cmp279=$148 < 4;
      if ($cmp279) { __label__ = 62; break; } else { __label__ = 63; break; }
    case 62: // $if_then281
      $qual=4;
      __label__ = 63; break;
    case 63: // $if_end282
      var $149=$qual;
      var $cmp283=$149 > 10;
      if ($cmp283) { __label__ = 64; break; } else { __label__ = 65; break; }
    case 64: // $if_then285
      $qual=10;
      __label__ = 65; break;
    case 65: // $if_end286
      var $150=$vbr_addr;
      var $consec_noise287=(($150+60)|0);
      var $151=HEAP32[(($consec_noise287)>>2)];
      var $cmp288=(($151)|0) >= 3;
      if ($cmp288) { __label__ = 66; break; } else { __label__ = 67; break; }
    case 66: // $if_then290
      $qual=4;
      __label__ = 67; break;
    case 67: // $if_end291
      var $152=$vbr_addr;
      var $consec_noise292=(($152+60)|0);
      var $153=HEAP32[(($consec_noise292)>>2)];
      var $tobool=(($153)|0)!=0;
      if ($tobool) { __label__ = 68; break; } else { __label__ = 69; break; }
    case 68: // $if_then293
      var $154=$vbr_addr;
      var $consec_noise294=(($154+60)|0);
      var $155=HEAP32[(($consec_noise294)>>2)];
      var $conv295=(($155)|0);
      var $add296=$conv295+3;
      var $call297=_log($add296);
      var $call298=_log(3);
      var $sub299=$call297-$call298;
      var $mul300=$sub299;
      var $156=$qual;
      var $conv301=$156;
      var $sub302=$conv301-$mul300;
      var $conv303=$sub302;
      $qual=$conv303;
      __label__ = 69; break;
    case 69: // $if_end304
      var $157=$qual;
      var $cmp305=$157 < 0;
      if ($cmp305) { __label__ = 70; break; } else { __label__ = 71; break; }
    case 70: // $if_then307
      $qual=0;
      __label__ = 71; break;
    case 71: // $if_end308
      var $158=$ener;
      var $cmp309=$158 < 60000;
      if ($cmp309) { __label__ = 72; break; } else { __label__ = 80; break; }
    case 72: // $if_then311
      var $159=$vbr_addr;
      var $consec_noise312=(($159+60)|0);
      var $160=HEAP32[(($consec_noise312)>>2)];
      var $cmp313=(($160)|0) > 2;
      if ($cmp313) { __label__ = 73; break; } else { __label__ = 74; break; }
    case 73: // $if_then315
      var $161=$vbr_addr;
      var $consec_noise316=(($161+60)|0);
      var $162=HEAP32[(($consec_noise316)>>2)];
      var $conv317=(($162)|0);
      var $add318=$conv317+3;
      var $call319=_log($add318);
      var $call320=_log(3);
      var $sub321=$call319-$call320;
      var $mul322=$sub321*0.5;
      var $163=$qual;
      var $conv323=$163;
      var $sub324=$conv323-$mul322;
      var $conv325=$sub324;
      $qual=$conv325;
      __label__ = 74; break;
    case 74: // $if_end326
      var $164=$ener;
      var $cmp327=$164 < 10000;
      if ($cmp327) { __label__ = 75; break; } else { __label__ = 77; break; }
    case 75: // $land_lhs_true329
      var $165=$vbr_addr;
      var $consec_noise330=(($165+60)|0);
      var $166=HEAP32[(($consec_noise330)>>2)];
      var $cmp331=(($166)|0) > 2;
      if ($cmp331) { __label__ = 76; break; } else { __label__ = 77; break; }
    case 76: // $if_then333
      var $167=$vbr_addr;
      var $consec_noise334=(($167+60)|0);
      var $168=HEAP32[(($consec_noise334)>>2)];
      var $conv335=(($168)|0);
      var $add336=$conv335+3;
      var $call337=_log($add336);
      var $call338=_log(3);
      var $sub339=$call337-$call338;
      var $mul340=$sub339*0.5;
      var $169=$qual;
      var $conv341=$169;
      var $sub342=$conv341-$mul340;
      var $conv343=$sub342;
      $qual=$conv343;
      __label__ = 77; break;
    case 77: // $if_end344
      var $170=$qual;
      var $cmp345=$170 < 0;
      if ($cmp345) { __label__ = 78; break; } else { __label__ = 79; break; }
    case 78: // $if_then347
      $qual=0;
      __label__ = 79; break;
    case 79: // $if_end348
      var $171=$ener;
      var $conv349=$171;
      var $div350=$conv349/60000;
      var $add351=$div350+0.0001;
      var $call352=_log($add351);
      var $mul353=$call352*0.3;
      var $172=$qual;
      var $conv354=$172;
      var $add355=$conv354+$mul353;
      var $conv356=$add355;
      $qual=$conv356;
      __label__ = 80; break;
    case 80: // $if_end357
      var $173=$qual;
      var $cmp358=$173 < -1;
      if ($cmp358) { __label__ = 81; break; } else { __label__ = 82; break; }
    case 81: // $if_then360
      $qual=-1;
      __label__ = 82; break;
    case 82: // $if_end361
      var $174=$pitch_coef_addr;
      var $175=$vbr_addr;
      var $last_pitch_coef=(($175+36)|0);
      HEAPF32[(($last_pitch_coef)>>2)]=$174;
      var $176=$qual;
      var $177=$vbr_addr;
      var $last_quality362=(($177+44)|0);
      HEAPF32[(($last_quality362)>>2)]=$176;
      $i=4;
      __label__ = 83; break;
    case 83: // $for_cond363
      var $178=$i;
      var $cmp364=(($178)|0) > 0;
      if ($cmp364) { __label__ = 84; break; } else { __label__ = 86; break; }
    case 84: // $for_body366
      var $179=$i;
      var $sub367=(($179-1)|0);
      var $180=$vbr_addr;
      var $last_log_energy368=(($180+12)|0);
      var $arrayidx369=(($last_log_energy368+($sub367<<2))|0);
      var $181=HEAPF32[(($arrayidx369)>>2)];
      var $182=$i;
      var $183=$vbr_addr;
      var $last_log_energy370=(($183+12)|0);
      var $arrayidx371=(($last_log_energy370+($182<<2))|0);
      HEAPF32[(($arrayidx371)>>2)]=$181;
      __label__ = 85; break;
    case 85: // $for_inc372
      var $184=$i;
      var $dec=(($184-1)|0);
      $i=$dec;
      __label__ = 83; break;
    case 86: // $for_end373
      var $185=$log_energy;
      var $186=$vbr_addr;
      var $last_log_energy374=(($186+12)|0);
      var $arrayidx375=(($last_log_energy374)|0);
      HEAPF32[(($arrayidx375)>>2)]=$185;
      var $187=$qual;
      ;
      return $187;
    default: assert(0, "bad label: " + __label__);
  }
}
_vbr_analysis["X"]=1;

function _vq_nbest($in, $codebook, $len, $entries, $E, $N, $nbest, $best_dist, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $in_addr;
      var $codebook_addr;
      var $len_addr;
      var $entries_addr;
      var $E_addr;
      var $N_addr;
      var $nbest_addr;
      var $best_dist_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $k;
      var $used;
      var $dist;
      $in_addr=$in;
      $codebook_addr=$codebook;
      $len_addr=$len;
      $entries_addr=$entries;
      $E_addr=$E;
      $N_addr=$N;
      $nbest_addr=$nbest;
      $best_dist_addr=$best_dist;
      $stack_addr=$stack;
      $used=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$entries_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 19; break; }
    case 2: // $for_body
      $dist=0;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond1
      var $2=$j;
      var $3=$len_addr;
      var $cmp2=(($2)|0) < (($3)|0);
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body3
      var $4=$dist;
      var $5=$j;
      var $6=$in_addr;
      var $arrayidx=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx)>>2)];
      var $8=$codebook_addr;
      var $incdec_ptr=(($8+4)|0);
      $codebook_addr=$incdec_ptr;
      var $9=HEAPF32[(($8)>>2)];
      var $mul=$7*$9;
      var $add=$4+$mul;
      $dist=$add;
      __label__ = 5; break;
    case 5: // $for_inc
      var $10=$j;
      var $inc=(($10+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $11=$i;
      var $12=$E_addr;
      var $arrayidx4=(($12+($11<<2))|0);
      var $13=HEAPF32[(($arrayidx4)>>2)];
      var $mul5=$13*0.5;
      var $14=$dist;
      var $sub=$mul5-$14;
      $dist=$sub;
      var $15=$i;
      var $16=$N_addr;
      var $cmp6=(($15)|0) < (($16)|0);
      if ($cmp6) { __label__ = 8; break; } else { __label__ = 7; break; }
    case 7: // $lor_lhs_false
      var $17=$dist;
      var $18=$N_addr;
      var $sub7=(($18-1)|0);
      var $19=$best_dist_addr;
      var $arrayidx8=(($19+($sub7<<2))|0);
      var $20=HEAPF32[(($arrayidx8)>>2)];
      var $cmp9=$17 < $20;
      if ($cmp9) { __label__ = 8; break; } else { __label__ = 17; break; }
    case 8: // $if_then
      var $21=$N_addr;
      var $sub10=(($21-1)|0);
      $k=$sub10;
      __label__ = 9; break;
    case 9: // $for_cond11
      var $22=$k;
      var $cmp12=(($22)|0) >= 1;
      if ($cmp12) { __label__ = 10; break; } else { var $30 = 0;__label__ = 13; break; }
    case 10: // $land_rhs
      var $23=$k;
      var $24=$used;
      var $cmp13=(($23)|0) > (($24)|0);
      if ($cmp13) { var $29 = 1;__label__ = 12; break; } else { __label__ = 11; break; }
    case 11: // $lor_rhs
      var $25=$dist;
      var $26=$k;
      var $sub14=(($26-1)|0);
      var $27=$best_dist_addr;
      var $arrayidx15=(($27+($sub14<<2))|0);
      var $28=HEAPF32[(($arrayidx15)>>2)];
      var $cmp16=$25 < $28;
      var $29 = $cmp16;__label__ = 12; break;
    case 12: // $lor_end
      var $29;
      var $30 = $29;__label__ = 13; break;
    case 13: // $land_end
      var $30;
      if ($30) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body17
      var $31=$k;
      var $sub18=(($31-1)|0);
      var $32=$best_dist_addr;
      var $arrayidx19=(($32+($sub18<<2))|0);
      var $33=HEAPF32[(($arrayidx19)>>2)];
      var $34=$k;
      var $35=$best_dist_addr;
      var $arrayidx20=(($35+($34<<2))|0);
      HEAPF32[(($arrayidx20)>>2)]=$33;
      var $36=$k;
      var $sub21=(($36-1)|0);
      var $37=$nbest_addr;
      var $arrayidx22=(($37+($sub21<<2))|0);
      var $38=HEAP32[(($arrayidx22)>>2)];
      var $39=$k;
      var $40=$nbest_addr;
      var $arrayidx23=(($40+($39<<2))|0);
      HEAP32[(($arrayidx23)>>2)]=$38;
      __label__ = 15; break;
    case 15: // $for_inc24
      var $41=$k;
      var $dec=(($41-1)|0);
      $k=$dec;
      __label__ = 9; break;
    case 16: // $for_end25
      var $42=$dist;
      var $43=$k;
      var $44=$best_dist_addr;
      var $arrayidx26=(($44+($43<<2))|0);
      HEAPF32[(($arrayidx26)>>2)]=$42;
      var $45=$i;
      var $46=$k;
      var $47=$nbest_addr;
      var $arrayidx27=(($47+($46<<2))|0);
      HEAP32[(($arrayidx27)>>2)]=$45;
      var $48=$used;
      var $inc28=(($48+1)|0);
      $used=$inc28;
      __label__ = 17; break;
    case 17: // $if_end
      __label__ = 18; break;
    case 18: // $for_inc29
      var $49=$i;
      var $inc30=(($49+1)|0);
      $i=$inc30;
      __label__ = 1; break;
    case 19: // $for_end31
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_vq_nbest["X"]=1;

function _vq_nbest_sign($in, $codebook, $len, $entries, $E, $N, $nbest, $best_dist, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $in_addr;
      var $codebook_addr;
      var $len_addr;
      var $entries_addr;
      var $E_addr;
      var $N_addr;
      var $nbest_addr;
      var $best_dist_addr;
      var $stack_addr;
      var $i;
      var $j;
      var $k;
      var $sign;
      var $used;
      var $dist;
      $in_addr=$in;
      $codebook_addr=$codebook;
      $len_addr=$len;
      $entries_addr=$entries;
      $E_addr=$E;
      $N_addr=$N;
      $nbest_addr=$nbest;
      $best_dist_addr=$best_dist;
      $stack_addr=$stack;
      $used=0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$entries_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 24; break; }
    case 2: // $for_body
      $dist=0;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond1
      var $2=$j;
      var $3=$len_addr;
      var $cmp2=(($2)|0) < (($3)|0);
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body3
      var $4=$dist;
      var $5=$j;
      var $6=$in_addr;
      var $arrayidx=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx)>>2)];
      var $8=$codebook_addr;
      var $incdec_ptr=(($8+4)|0);
      $codebook_addr=$incdec_ptr;
      var $9=HEAPF32[(($8)>>2)];
      var $mul=$7*$9;
      var $add=$4+$mul;
      $dist=$add;
      __label__ = 5; break;
    case 5: // $for_inc
      var $10=$j;
      var $inc=(($10+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $11=$dist;
      var $cmp4=$11 > 0;
      if ($cmp4) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      $sign=0;
      var $12=$dist;
      var $sub=(-$12);
      $dist=$sub;
      __label__ = 9; break;
    case 8: // $if_else
      $sign=1;
      __label__ = 9; break;
    case 9: // $if_end
      var $13=$dist;
      var $14=$i;
      var $15=$E_addr;
      var $arrayidx5=(($15+($14<<2))|0);
      var $16=HEAPF32[(($arrayidx5)>>2)];
      var $mul6=$16*0.5;
      var $add7=$13+$mul6;
      $dist=$add7;
      var $17=$i;
      var $18=$N_addr;
      var $cmp8=(($17)|0) < (($18)|0);
      if ($cmp8) { __label__ = 11; break; } else { __label__ = 10; break; }
    case 10: // $lor_lhs_false
      var $19=$dist;
      var $20=$N_addr;
      var $sub9=(($20-1)|0);
      var $21=$best_dist_addr;
      var $arrayidx10=(($21+($sub9<<2))|0);
      var $22=HEAPF32[(($arrayidx10)>>2)];
      var $cmp11=$19 < $22;
      if ($cmp11) { __label__ = 11; break; } else { __label__ = 22; break; }
    case 11: // $if_then12
      var $23=$N_addr;
      var $sub13=(($23-1)|0);
      $k=$sub13;
      __label__ = 12; break;
    case 12: // $for_cond14
      var $24=$k;
      var $cmp15=(($24)|0) >= 1;
      if ($cmp15) { __label__ = 13; break; } else { var $32 = 0;__label__ = 16; break; }
    case 13: // $land_rhs
      var $25=$k;
      var $26=$used;
      var $cmp16=(($25)|0) > (($26)|0);
      if ($cmp16) { var $31 = 1;__label__ = 15; break; } else { __label__ = 14; break; }
    case 14: // $lor_rhs
      var $27=$dist;
      var $28=$k;
      var $sub17=(($28-1)|0);
      var $29=$best_dist_addr;
      var $arrayidx18=(($29+($sub17<<2))|0);
      var $30=HEAPF32[(($arrayidx18)>>2)];
      var $cmp19=$27 < $30;
      var $31 = $cmp19;__label__ = 15; break;
    case 15: // $lor_end
      var $31;
      var $32 = $31;__label__ = 16; break;
    case 16: // $land_end
      var $32;
      if ($32) { __label__ = 17; break; } else { __label__ = 19; break; }
    case 17: // $for_body20
      var $33=$k;
      var $sub21=(($33-1)|0);
      var $34=$best_dist_addr;
      var $arrayidx22=(($34+($sub21<<2))|0);
      var $35=HEAPF32[(($arrayidx22)>>2)];
      var $36=$k;
      var $37=$best_dist_addr;
      var $arrayidx23=(($37+($36<<2))|0);
      HEAPF32[(($arrayidx23)>>2)]=$35;
      var $38=$k;
      var $sub24=(($38-1)|0);
      var $39=$nbest_addr;
      var $arrayidx25=(($39+($sub24<<2))|0);
      var $40=HEAP32[(($arrayidx25)>>2)];
      var $41=$k;
      var $42=$nbest_addr;
      var $arrayidx26=(($42+($41<<2))|0);
      HEAP32[(($arrayidx26)>>2)]=$40;
      __label__ = 18; break;
    case 18: // $for_inc27
      var $43=$k;
      var $dec=(($43-1)|0);
      $k=$dec;
      __label__ = 12; break;
    case 19: // $for_end28
      var $44=$dist;
      var $45=$k;
      var $46=$best_dist_addr;
      var $arrayidx29=(($46+($45<<2))|0);
      HEAPF32[(($arrayidx29)>>2)]=$44;
      var $47=$i;
      var $48=$k;
      var $49=$nbest_addr;
      var $arrayidx30=(($49+($48<<2))|0);
      HEAP32[(($arrayidx30)>>2)]=$47;
      var $50=$used;
      var $inc31=(($50+1)|0);
      $used=$inc31;
      var $51=$sign;
      var $tobool=(($51)|0)!=0;
      if ($tobool) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $if_then32
      var $52=$entries_addr;
      var $53=$k;
      var $54=$nbest_addr;
      var $arrayidx33=(($54+($53<<2))|0);
      var $55=HEAP32[(($arrayidx33)>>2)];
      var $add34=(($55+$52)|0);
      HEAP32[(($arrayidx33)>>2)]=$add34;
      __label__ = 21; break;
    case 21: // $if_end35
      __label__ = 22; break;
    case 22: // $if_end36
      __label__ = 23; break;
    case 23: // $for_inc37
      var $56=$i;
      var $inc38=(($56+1)|0);
      $i=$inc38;
      __label__ = 1; break;
    case 24: // $for_end39
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_vq_nbest_sign["X"]=1;

function _speex_bits_reset($bits) {
  ;
  var __label__;

  var $bits_addr;
  $bits_addr=$bits;
  var $0=$bits_addr;
  var $chars=(($0)|0);
  var $1=HEAP32[(($chars)>>2)];
  var $arrayidx=(($1)|0);
  HEAP8[($arrayidx)]=0;
  var $2=$bits_addr;
  var $nbBits=(($2+4)|0);
  HEAP32[(($nbBits)>>2)]=0;
  var $3=$bits_addr;
  var $charPtr=(($3+8)|0);
  HEAP32[(($charPtr)>>2)]=0;
  var $4=$bits_addr;
  var $bitPtr=(($4+12)|0);
  HEAP32[(($bitPtr)>>2)]=0;
  var $5=$bits_addr;
  var $overflow=(($5+20)|0);
  HEAP32[(($overflow)>>2)]=0;
  ;
  return;
}


function _speex_bits_set_bit_buffer($bits, $buff, $buf_size) {
  ;
  var __label__;

  var $bits_addr;
  var $buff_addr;
  var $buf_size_addr;
  $bits_addr=$bits;
  $buff_addr=$buff;
  $buf_size_addr=$buf_size;
  var $0=$buff_addr;
  var $1=$bits_addr;
  var $chars=(($1)|0);
  HEAP32[(($chars)>>2)]=$0;
  var $2=$buf_size_addr;
  var $3=$bits_addr;
  var $buf_size1=(($3+24)|0);
  HEAP32[(($buf_size1)>>2)]=$2;
  var $4=$bits_addr;
  var $owner=(($4+16)|0);
  HEAP32[(($owner)>>2)]=0;
  var $5=$buf_size_addr;
  var $shl=$5 << 3;
  var $6=$bits_addr;
  var $nbBits=(($6+4)|0);
  HEAP32[(($nbBits)>>2)]=$shl;
  var $7=$bits_addr;
  var $charPtr=(($7+8)|0);
  HEAP32[(($charPtr)>>2)]=0;
  var $8=$bits_addr;
  var $bitPtr=(($8+12)|0);
  HEAP32[(($bitPtr)>>2)]=0;
  var $9=$bits_addr;
  var $overflow=(($9+20)|0);
  HEAP32[(($overflow)>>2)]=0;
  ;
  return;
}


function _speex_bits_rewind($bits) {
  ;
  var __label__;

  var $bits_addr;
  $bits_addr=$bits;
  var $0=$bits_addr;
  var $charPtr=(($0+8)|0);
  HEAP32[(($charPtr)>>2)]=0;
  var $1=$bits_addr;
  var $bitPtr=(($1+12)|0);
  HEAP32[(($bitPtr)>>2)]=0;
  var $2=$bits_addr;
  var $overflow=(($2+20)|0);
  HEAP32[(($overflow)>>2)]=0;
  ;
  return;
}


function _speex_bits_init($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      $bits_addr=$bits;
      var $call=_speex_alloc18(2000);
      var $0=$bits_addr;
      var $chars=(($0)|0);
      HEAP32[(($chars)>>2)]=$call;
      var $1=$bits_addr;
      var $chars1=(($1)|0);
      var $2=HEAP32[(($chars1)>>2)];
      var $tobool=(($2)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $if_then
      __label__ = 3; break;
    case 2: // $if_end
      var $3=$bits_addr;
      var $buf_size=(($3+24)|0);
      HEAP32[(($buf_size)>>2)]=2000;
      var $4=$bits_addr;
      var $owner=(($4+16)|0);
      HEAP32[(($owner)>>2)]=1;
      var $5=$bits_addr;
      _speex_bits_reset($5);
      __label__ = 3; break;
    case 3: // $return
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_alloc18($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_calloc($0, 1);
  ;
  return $call;
}


function _speex_bits_init_buffer($bits, $buff, $buf_size) {
  ;
  var __label__;

  var $bits_addr;
  var $buff_addr;
  var $buf_size_addr;
  $bits_addr=$bits;
  $buff_addr=$buff;
  $buf_size_addr=$buf_size;
  var $0=$buff_addr;
  var $1=$bits_addr;
  var $chars=(($1)|0);
  HEAP32[(($chars)>>2)]=$0;
  var $2=$buf_size_addr;
  var $3=$bits_addr;
  var $buf_size1=(($3+24)|0);
  HEAP32[(($buf_size1)>>2)]=$2;
  var $4=$bits_addr;
  var $owner=(($4+16)|0);
  HEAP32[(($owner)>>2)]=0;
  var $5=$bits_addr;
  _speex_bits_reset($5);
  ;
  return;
}


function _speex_bits_destroy($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      $bits_addr=$bits;
      var $0=$bits_addr;
      var $owner=(($0+16)|0);
      var $1=HEAP32[(($owner)>>2)];
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$bits_addr;
      var $chars=(($2)|0);
      var $3=HEAP32[(($chars)>>2)];
      _speex_free19($3);
      __label__ = 2; break;
    case 2: // $if_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_free19($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _free($0);
  ;
  return;
}


function _speex_bits_read_from($bits, $chars, $len) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $chars_addr;
      var $len_addr;
      var $i;
      var $nchars;
      var $tmp;
      $bits_addr=$bits;
      $chars_addr=$chars;
      $len_addr=$len;
      var $0=$len_addr;
      var $div=(((($0)|0))|0);
      $nchars=$div;
      var $1=$nchars;
      var $2=$bits_addr;
      var $buf_size=(($2+24)|0);
      var $3=HEAP32[(($buf_size)>>2)];
      var $cmp=(($1)|0) > (($3)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 8; break; }
    case 1: // $if_then
      _speex_notify(((STRING_TABLE.__str13)|0));
      var $4=$bits_addr;
      var $owner=(($4+16)|0);
      var $5=HEAP32[(($owner)>>2)];
      var $tobool=(($5)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 6; break; }
    case 2: // $if_then1
      var $6=$bits_addr;
      var $chars2=(($6)|0);
      var $7=HEAP32[(($chars2)>>2)];
      var $8=$nchars;
      var $call=_speex_realloc($7, $8);
      $tmp=$call;
      var $9=$tmp;
      var $tobool3=(($9)|0)!=0;
      if ($tobool3) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then4
      var $10=$nchars;
      var $11=$bits_addr;
      var $buf_size5=(($11+24)|0);
      HEAP32[(($buf_size5)>>2)]=$10;
      var $12=$tmp;
      var $13=$bits_addr;
      var $chars6=(($13)|0);
      HEAP32[(($chars6)>>2)]=$12;
      __label__ = 5; break;
    case 4: // $if_else
      var $14=$bits_addr;
      var $buf_size7=(($14+24)|0);
      var $15=HEAP32[(($buf_size7)>>2)];
      $nchars=$15;
      _speex_warning(((STRING_TABLE.__str114)|0));
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 7; break;
    case 6: // $if_else8
      _speex_warning(((STRING_TABLE.__str215)|0));
      var $16=$bits_addr;
      var $buf_size9=(($16+24)|0);
      var $17=HEAP32[(($buf_size9)>>2)];
      $nchars=$17;
      __label__ = 7; break;
    case 7: // $if_end10
      __label__ = 8; break;
    case 8: // $if_end11
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond
      var $18=$i;
      var $19=$nchars;
      var $cmp12=(($18)|0) < (($19)|0);
      if ($cmp12) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body
      var $20=$i;
      var $21=$chars_addr;
      var $arrayidx=(($21+$20)|0);
      var $22=HEAP8[($arrayidx)];
      var $23=$i;
      var $24=$bits_addr;
      var $chars13=(($24)|0);
      var $25=HEAP32[(($chars13)>>2)];
      var $arrayidx14=(($25+$23)|0);
      HEAP8[($arrayidx14)]=$22;
      __label__ = 11; break;
    case 11: // $for_inc
      var $26=$i;
      var $inc=(($26+1)|0);
      $i=$inc;
      __label__ = 9; break;
    case 12: // $for_end
      var $27=$nchars;
      var $shl=$27 << 3;
      var $28=$bits_addr;
      var $nbBits=(($28+4)|0);
      HEAP32[(($nbBits)>>2)]=$shl;
      var $29=$bits_addr;
      var $charPtr=(($29+8)|0);
      HEAP32[(($charPtr)>>2)]=0;
      var $30=$bits_addr;
      var $bitPtr=(($30+12)|0);
      HEAP32[(($bitPtr)>>2)]=0;
      var $31=$bits_addr;
      var $overflow=(($31+20)|0);
      HEAP32[(($overflow)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_read_from["X"]=1;

function _speex_notify($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str8)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_realloc($ptr, $size) {
  ;
  var __label__;

  var $ptr_addr;
  var $size_addr;
  $ptr_addr=$ptr;
  $size_addr=$size;
  var $0=$ptr_addr;
  var $1=$size_addr;
  var $call=_realloc($0, $1);
  ;
  return $call;
}


function _speex_warning($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str7)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_bits_read_whole_bytes($bits, $chars, $nbytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $chars_addr;
      var $nbytes_addr;
      var $i;
      var $pos;
      var $nchars;
      var $tmp;
      $bits_addr=$bits;
      $chars_addr=$chars;
      $nbytes_addr=$nbytes;
      var $0=$nbytes_addr;
      var $div=(((($0)|0))|0);
      $nchars=$div;
      var $1=$bits_addr;
      var $nbBits=(($1+4)|0);
      var $2=HEAP32[(($nbBits)>>2)];
      var $add=(($2+8)|0);
      var $sub=(($add-1)|0);
      var $shr=$sub >> 3;
      var $3=$nchars;
      var $add1=(($shr+$3)|0);
      var $4=$bits_addr;
      var $buf_size=(($4+24)|0);
      var $5=HEAP32[(($buf_size)>>2)];
      var $cmp=(($add1)|0) > (($5)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 8; break; }
    case 1: // $if_then
      var $6=$bits_addr;
      var $owner=(($6+16)|0);
      var $7=HEAP32[(($owner)>>2)];
      var $tobool=(($7)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 6; break; }
    case 2: // $if_then2
      var $8=$bits_addr;
      var $chars3=(($8)|0);
      var $9=HEAP32[(($chars3)>>2)];
      var $10=$bits_addr;
      var $nbBits4=(($10+4)|0);
      var $11=HEAP32[(($nbBits4)>>2)];
      var $shr5=$11 >> 3;
      var $12=$nchars;
      var $add6=(($shr5+$12)|0);
      var $add7=(($add6+1)|0);
      var $call=_speex_realloc($9, $add7);
      $tmp=$call;
      var $13=$tmp;
      var $tobool8=(($13)|0)!=0;
      if ($tobool8) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then9
      var $14=$bits_addr;
      var $nbBits10=(($14+4)|0);
      var $15=HEAP32[(($nbBits10)>>2)];
      var $shr11=$15 >> 3;
      var $16=$nchars;
      var $add12=(($shr11+$16)|0);
      var $add13=(($add12+1)|0);
      var $17=$bits_addr;
      var $buf_size14=(($17+24)|0);
      HEAP32[(($buf_size14)>>2)]=$add13;
      var $18=$tmp;
      var $19=$bits_addr;
      var $chars15=(($19)|0);
      HEAP32[(($chars15)>>2)]=$18;
      __label__ = 5; break;
    case 4: // $if_else
      var $20=$bits_addr;
      var $buf_size16=(($20+24)|0);
      var $21=HEAP32[(($buf_size16)>>2)];
      var $22=$bits_addr;
      var $nbBits17=(($22+4)|0);
      var $23=HEAP32[(($nbBits17)>>2)];
      var $shr18=$23 >> 3;
      var $sub19=(($21-$shr18)|0);
      var $sub20=(($sub19-1)|0);
      $nchars=$sub20;
      _speex_warning(((STRING_TABLE.__str316)|0));
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 7; break;
    case 6: // $if_else21
      _speex_warning(((STRING_TABLE.__str215)|0));
      var $24=$bits_addr;
      var $buf_size22=(($24+24)|0);
      var $25=HEAP32[(($buf_size22)>>2)];
      $nchars=$25;
      __label__ = 7; break;
    case 7: // $if_end23
      __label__ = 8; break;
    case 8: // $if_end24
      var $26=$bits_addr;
      _speex_bits_flush($26);
      var $27=$bits_addr;
      var $nbBits25=(($27+4)|0);
      var $28=HEAP32[(($nbBits25)>>2)];
      var $shr26=$28 >> 3;
      $pos=$shr26;
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond
      var $29=$i;
      var $30=$nchars;
      var $cmp27=(($29)|0) < (($30)|0);
      if ($cmp27) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body
      var $31=$i;
      var $32=$chars_addr;
      var $arrayidx=(($32+$31)|0);
      var $33=HEAP8[($arrayidx)];
      var $34=$pos;
      var $35=$i;
      var $add28=(($34+$35)|0);
      var $36=$bits_addr;
      var $chars29=(($36)|0);
      var $37=HEAP32[(($chars29)>>2)];
      var $arrayidx30=(($37+$add28)|0);
      HEAP8[($arrayidx30)]=$33;
      __label__ = 11; break;
    case 11: // $for_inc
      var $38=$i;
      var $inc=(($38+1)|0);
      $i=$inc;
      __label__ = 9; break;
    case 12: // $for_end
      var $39=$nchars;
      var $shl=$39 << 3;
      var $40=$bits_addr;
      var $nbBits31=(($40+4)|0);
      var $41=HEAP32[(($nbBits31)>>2)];
      var $add32=(($41+$shl)|0);
      HEAP32[(($nbBits31)>>2)]=$add32;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_read_whole_bytes["X"]=1;

function _speex_bits_flush($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $nchars;
      $bits_addr=$bits;
      var $0=$bits_addr;
      var $nbBits=(($0+4)|0);
      var $1=HEAP32[(($nbBits)>>2)];
      var $add=(($1+8)|0);
      var $sub=(($add-1)|0);
      var $shr=$sub >> 3;
      $nchars=$shr;
      var $2=$bits_addr;
      var $charPtr=(($2+8)|0);
      var $3=HEAP32[(($charPtr)>>2)];
      var $cmp=(($3)|0) > 0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $4=$bits_addr;
      var $chars=(($4)|0);
      var $5=HEAP32[(($chars)>>2)];
      var $6=$bits_addr;
      var $charPtr1=(($6+8)|0);
      var $7=HEAP32[(($charPtr1)>>2)];
      var $8=$bits_addr;
      var $chars2=(($8)|0);
      var $9=HEAP32[(($chars2)>>2)];
      var $arrayidx=(($9+$7)|0);
      var $10=$nchars;
      var $11=$bits_addr;
      var $charPtr3=(($11+8)|0);
      var $12=HEAP32[(($charPtr3)>>2)];
      var $sub4=(($10-$12)|0);
      var $mul=(($sub4)|0);
      var $13=$bits_addr;
      var $chars5=(($13)|0);
      var $14=HEAP32[(($chars5)>>2)];
      var $15=$bits_addr;
      var $charPtr6=(($15+8)|0);
      var $16=HEAP32[(($charPtr6)>>2)];
      var $17=$bits_addr;
      var $chars7=(($17)|0);
      var $18=HEAP32[(($chars7)>>2)];
      var $arrayidx8=(($18+$16)|0);
      var $sub_ptr_lhs_cast=$14;
      var $sub_ptr_rhs_cast=$arrayidx8;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $mul9=((0)|0);
      var $add10=(($mul+$mul9)|0);
      _llvm_memmove_p0i8_p0i8_i32($5, $arrayidx, $add10, 1, 0);
      __label__ = 2; break;
    case 2: // $if_end
      var $19=$bits_addr;
      var $charPtr11=(($19+8)|0);
      var $20=HEAP32[(($charPtr11)>>2)];
      var $shl=$20 << 3;
      var $21=$bits_addr;
      var $nbBits12=(($21+4)|0);
      var $22=HEAP32[(($nbBits12)>>2)];
      var $sub13=(($22-$shl)|0);
      HEAP32[(($nbBits12)>>2)]=$sub13;
      var $23=$bits_addr;
      var $charPtr14=(($23+8)|0);
      HEAP32[(($charPtr14)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_flush["X"]=1;

function _speex_bits_write_whole_bytes($bits, $chars, $max_nbytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $chars_addr;
      var $max_nbytes_addr;
      var $max_nchars;
      var $i;
      $bits_addr=$bits;
      $chars_addr=$chars;
      $max_nbytes_addr=$max_nbytes;
      var $0=$max_nbytes_addr;
      var $div=(((($0)|0))|0);
      $max_nchars=$div;
      var $1=$max_nchars;
      var $2=$bits_addr;
      var $nbBits=(($2+4)|0);
      var $3=HEAP32[(($nbBits)>>2)];
      var $shr=$3 >> 3;
      var $cmp=(($1)|0) > (($shr)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $4=$bits_addr;
      var $nbBits1=(($4+4)|0);
      var $5=HEAP32[(($nbBits1)>>2)];
      var $shr2=$5 >> 3;
      $max_nchars=$shr2;
      __label__ = 2; break;
    case 2: // $if_end
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $6=$i;
      var $7=$max_nchars;
      var $cmp3=(($6)|0) < (($7)|0);
      if ($cmp3) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $8=$i;
      var $9=$bits_addr;
      var $chars4=(($9)|0);
      var $10=HEAP32[(($chars4)>>2)];
      var $arrayidx=(($10+$8)|0);
      var $11=HEAP8[($arrayidx)];
      var $12=$i;
      var $13=$chars_addr;
      var $arrayidx5=(($13+$12)|0);
      HEAP8[($arrayidx5)]=$11;
      __label__ = 5; break;
    case 5: // $for_inc
      var $14=$i;
      var $inc=(($14+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $15=$bits_addr;
      var $bitPtr=(($15+12)|0);
      var $16=HEAP32[(($bitPtr)>>2)];
      var $cmp6=(($16)|0) > 0;
      if ($cmp6) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then7
      var $17=$max_nchars;
      var $18=$bits_addr;
      var $chars8=(($18)|0);
      var $19=HEAP32[(($chars8)>>2)];
      var $arrayidx9=(($19+$17)|0);
      var $20=HEAP8[($arrayidx9)];
      var $21=$bits_addr;
      var $chars10=(($21)|0);
      var $22=HEAP32[(($chars10)>>2)];
      var $arrayidx11=(($22)|0);
      HEAP8[($arrayidx11)]=$20;
      __label__ = 9; break;
    case 8: // $if_else
      var $23=$bits_addr;
      var $chars12=(($23)|0);
      var $24=HEAP32[(($chars12)>>2)];
      var $arrayidx13=(($24)|0);
      HEAP8[($arrayidx13)]=0;
      __label__ = 9; break;
    case 9: // $if_end14
      var $25=$bits_addr;
      var $charPtr=(($25+8)|0);
      HEAP32[(($charPtr)>>2)]=0;
      var $26=$bits_addr;
      var $nbBits15=(($26+4)|0);
      var $27=HEAP32[(($nbBits15)>>2)];
      var $and=$27 & 7;
      HEAP32[(($nbBits15)>>2)]=$and;
      var $28=$max_nchars;
      var $mul=(($28)|0);
      ;
      return $mul;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_write_whole_bytes["X"]=1;

function _speex_bits_unpack_unsigned($bits, $nbBits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $bits_addr;
      var $nbBits_addr;
      var $d;
      $bits_addr=$bits;
      $nbBits_addr=$nbBits;
      $d=0;
      var $0=$bits_addr;
      var $charPtr=(($0+8)|0);
      var $1=HEAP32[(($charPtr)>>2)];
      var $shl=$1 << 3;
      var $2=$bits_addr;
      var $bitPtr=(($2+12)|0);
      var $3=HEAP32[(($bitPtr)>>2)];
      var $add=(($shl+$3)|0);
      var $4=$nbBits_addr;
      var $add1=(($add+$4)|0);
      var $5=$bits_addr;
      var $nbBits2=(($5+4)|0);
      var $6=HEAP32[(($nbBits2)>>2)];
      var $cmp=(($add1)|0) > (($6)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $7=$bits_addr;
      var $overflow=(($7+20)|0);
      HEAP32[(($overflow)>>2)]=1;
      __label__ = 2; break;
    case 2: // $if_end
      var $8=$bits_addr;
      var $overflow3=(($8+20)|0);
      var $9=HEAP32[(($overflow3)>>2)];
      var $tobool=(($9)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then4
      $retval=0;
      __label__ = 10; break;
    case 4: // $if_end5
      __label__ = 5; break;
    case 5: // $while_cond
      var $10=$nbBits_addr;
      var $tobool6=(($10)|0)!=0;
      if ($tobool6) { __label__ = 6; break; } else { __label__ = 9; break; }
    case 6: // $while_body
      var $11=$d;
      var $shl7=$11 << 1;
      $d=$shl7;
      var $12=$bits_addr;
      var $charPtr8=(($12+8)|0);
      var $13=HEAP32[(($charPtr8)>>2)];
      var $14=$bits_addr;
      var $chars=(($14)|0);
      var $15=HEAP32[(($chars)>>2)];
      var $arrayidx=(($15+$13)|0);
      var $16=HEAP8[($arrayidx)];
      var $conv=(($16 << 24) >> 24);
      var $17=$bits_addr;
      var $bitPtr9=(($17+12)|0);
      var $18=HEAP32[(($bitPtr9)>>2)];
      var $sub=((7-$18)|0);
      var $shr=$conv >> (($sub)|0);
      var $and=$shr & 1;
      var $19=$d;
      var $or=$19 | $and;
      $d=$or;
      var $20=$bits_addr;
      var $bitPtr10=(($20+12)|0);
      var $21=HEAP32[(($bitPtr10)>>2)];
      var $inc=(($21+1)|0);
      HEAP32[(($bitPtr10)>>2)]=$inc;
      var $22=$bits_addr;
      var $bitPtr11=(($22+12)|0);
      var $23=HEAP32[(($bitPtr11)>>2)];
      var $cmp12=(($23)|0)==8;
      if ($cmp12) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then14
      var $24=$bits_addr;
      var $bitPtr15=(($24+12)|0);
      HEAP32[(($bitPtr15)>>2)]=0;
      var $25=$bits_addr;
      var $charPtr16=(($25+8)|0);
      var $26=HEAP32[(($charPtr16)>>2)];
      var $inc17=(($26+1)|0);
      HEAP32[(($charPtr16)>>2)]=$inc17;
      __label__ = 8; break;
    case 8: // $if_end18
      var $27=$nbBits_addr;
      var $dec=(($27-1)|0);
      $nbBits_addr=$dec;
      __label__ = 5; break;
    case 9: // $while_end
      var $28=$d;
      $retval=$28;
      __label__ = 10; break;
    case 10: // $return
      var $29=$retval;
      ;
      return $29;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_unpack_unsigned["X"]=1;

function _speex_bits_peek_unsigned($bits, $nbBits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $bits_addr;
      var $nbBits_addr;
      var $d;
      var $bitPtr;
      var $charPtr;
      var $chars;
      $bits_addr=$bits;
      $nbBits_addr=$nbBits;
      $d=0;
      var $0=$bits_addr;
      var $charPtr1=(($0+8)|0);
      var $1=HEAP32[(($charPtr1)>>2)];
      var $shl=$1 << 3;
      var $2=$bits_addr;
      var $bitPtr2=(($2+12)|0);
      var $3=HEAP32[(($bitPtr2)>>2)];
      var $add=(($shl+$3)|0);
      var $4=$nbBits_addr;
      var $add3=(($add+$4)|0);
      var $5=$bits_addr;
      var $nbBits4=(($5+4)|0);
      var $6=HEAP32[(($nbBits4)>>2)];
      var $cmp=(($add3)|0) > (($6)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $7=$bits_addr;
      var $overflow=(($7+20)|0);
      HEAP32[(($overflow)>>2)]=1;
      __label__ = 2; break;
    case 2: // $if_end
      var $8=$bits_addr;
      var $overflow5=(($8+20)|0);
      var $9=HEAP32[(($overflow5)>>2)];
      var $tobool=(($9)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then6
      $retval=0;
      __label__ = 10; break;
    case 4: // $if_end7
      var $10=$bits_addr;
      var $bitPtr8=(($10+12)|0);
      var $11=HEAP32[(($bitPtr8)>>2)];
      $bitPtr=$11;
      var $12=$bits_addr;
      var $charPtr9=(($12+8)|0);
      var $13=HEAP32[(($charPtr9)>>2)];
      $charPtr=$13;
      var $14=$bits_addr;
      var $chars10=(($14)|0);
      var $15=HEAP32[(($chars10)>>2)];
      $chars=$15;
      __label__ = 5; break;
    case 5: // $while_cond
      var $16=$nbBits_addr;
      var $tobool11=(($16)|0)!=0;
      if ($tobool11) { __label__ = 6; break; } else { __label__ = 9; break; }
    case 6: // $while_body
      var $17=$d;
      var $shl12=$17 << 1;
      $d=$shl12;
      var $18=$charPtr;
      var $19=$chars;
      var $arrayidx=(($19+$18)|0);
      var $20=HEAP8[($arrayidx)];
      var $conv=(($20 << 24) >> 24);
      var $21=$bitPtr;
      var $sub=((7-$21)|0);
      var $shr=$conv >> (($sub)|0);
      var $and=$shr & 1;
      var $22=$d;
      var $or=$22 | $and;
      $d=$or;
      var $23=$bitPtr;
      var $inc=(($23+1)|0);
      $bitPtr=$inc;
      var $24=$bitPtr;
      var $cmp13=(($24)|0)==8;
      if ($cmp13) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then15
      $bitPtr=0;
      var $25=$charPtr;
      var $inc16=(($25+1)|0);
      $charPtr=$inc16;
      __label__ = 8; break;
    case 8: // $if_end17
      var $26=$nbBits_addr;
      var $dec=(($26-1)|0);
      $nbBits_addr=$dec;
      __label__ = 5; break;
    case 9: // $while_end
      var $27=$d;
      $retval=$27;
      __label__ = 10; break;
    case 10: // $return
      var $28=$retval;
      ;
      return $28;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_peek_unsigned["X"]=1;

function _speex_bits_peek($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $bits_addr;
      $bits_addr=$bits;
      var $0=$bits_addr;
      var $charPtr=(($0+8)|0);
      var $1=HEAP32[(($charPtr)>>2)];
      var $shl=$1 << 3;
      var $2=$bits_addr;
      var $bitPtr=(($2+12)|0);
      var $3=HEAP32[(($bitPtr)>>2)];
      var $add=(($shl+$3)|0);
      var $add1=(($add+1)|0);
      var $4=$bits_addr;
      var $nbBits=(($4+4)|0);
      var $5=HEAP32[(($nbBits)>>2)];
      var $cmp=(($add1)|0) > (($5)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $6=$bits_addr;
      var $overflow=(($6+20)|0);
      HEAP32[(($overflow)>>2)]=1;
      __label__ = 2; break;
    case 2: // $if_end
      var $7=$bits_addr;
      var $overflow2=(($7+20)|0);
      var $8=HEAP32[(($overflow2)>>2)];
      var $tobool=(($8)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then3
      $retval=0;
      __label__ = 5; break;
    case 4: // $if_end4
      var $9=$bits_addr;
      var $charPtr5=(($9+8)|0);
      var $10=HEAP32[(($charPtr5)>>2)];
      var $11=$bits_addr;
      var $chars=(($11)|0);
      var $12=HEAP32[(($chars)>>2)];
      var $arrayidx=(($12+$10)|0);
      var $13=HEAP8[($arrayidx)];
      var $conv=(($13 << 24) >> 24);
      var $14=$bits_addr;
      var $bitPtr6=(($14+12)|0);
      var $15=HEAP32[(($bitPtr6)>>2)];
      var $sub=((7-$15)|0);
      var $shr=$conv >> (($sub)|0);
      var $and=$shr & 1;
      $retval=$and;
      __label__ = 5; break;
    case 5: // $return
      var $16=$retval;
      ;
      return $16;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_bits_advance($bits, $n) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $n_addr;
      $bits_addr=$bits;
      $n_addr=$n;
      var $0=$bits_addr;
      var $charPtr=(($0+8)|0);
      var $1=HEAP32[(($charPtr)>>2)];
      var $shl=$1 << 3;
      var $2=$bits_addr;
      var $bitPtr=(($2+12)|0);
      var $3=HEAP32[(($bitPtr)>>2)];
      var $add=(($shl+$3)|0);
      var $4=$n_addr;
      var $add1=(($add+$4)|0);
      var $5=$bits_addr;
      var $nbBits=(($5+4)|0);
      var $6=HEAP32[(($nbBits)>>2)];
      var $cmp=(($add1)|0) > (($6)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $7=$bits_addr;
      var $overflow=(($7+20)|0);
      var $8=HEAP32[(($overflow)>>2)];
      var $tobool=(($8)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      var $9=$bits_addr;
      var $overflow2=(($9+20)|0);
      HEAP32[(($overflow2)>>2)]=1;
      __label__ = 4; break;
    case 3: // $if_end
      var $10=$bits_addr;
      var $bitPtr3=(($10+12)|0);
      var $11=HEAP32[(($bitPtr3)>>2)];
      var $12=$n_addr;
      var $add4=(($11+$12)|0);
      var $shr=$add4 >> 3;
      var $13=$bits_addr;
      var $charPtr5=(($13+8)|0);
      var $14=HEAP32[(($charPtr5)>>2)];
      var $add6=(($14+$shr)|0);
      HEAP32[(($charPtr5)>>2)]=$add6;
      var $15=$bits_addr;
      var $bitPtr7=(($15+12)|0);
      var $16=HEAP32[(($bitPtr7)>>2)];
      var $17=$n_addr;
      var $add8=(($16+$17)|0);
      var $and=$add8 & 7;
      var $18=$bits_addr;
      var $bitPtr9=(($18+12)|0);
      HEAP32[(($bitPtr9)>>2)]=$and;
      __label__ = 4; break;
    case 4: // $return
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_advance["X"]=1;

function _speex_bits_remaining($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $bits_addr;
      $bits_addr=$bits;
      var $0=$bits_addr;
      var $overflow=(($0+20)|0);
      var $1=HEAP32[(($overflow)>>2)];
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      $retval=-1;
      __label__ = 3; break;
    case 2: // $if_else
      var $2=$bits_addr;
      var $nbBits=(($2+4)|0);
      var $3=HEAP32[(($nbBits)>>2)];
      var $4=$bits_addr;
      var $charPtr=(($4+8)|0);
      var $5=HEAP32[(($charPtr)>>2)];
      var $shl=$5 << 3;
      var $6=$bits_addr;
      var $bitPtr=(($6+12)|0);
      var $7=HEAP32[(($bitPtr)>>2)];
      var $add=(($shl+$7)|0);
      var $sub=(($3-$add)|0);
      $retval=$sub;
      __label__ = 3; break;
    case 3: // $return
      var $8=$retval;
      ;
      return $8;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_bits_nbytes($bits) {
  ;
  var __label__;

  var $bits_addr;
  $bits_addr=$bits;
  var $0=$bits_addr;
  var $nbBits=(($0+4)|0);
  var $1=HEAP32[(($nbBits)>>2)];
  var $add=(($1+8)|0);
  var $sub=(($add-1)|0);
  var $shr=$sub >> 3;
  ;
  return $shr;
}


function _speex_bits_write($bits, $chars, $max_nbytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $chars_addr;
      var $max_nbytes_addr;
      var $i;
      var $max_nchars;
      var $charPtr;
      var $bitPtr;
      var $nbBits;
      $bits_addr=$bits;
      $chars_addr=$chars;
      $max_nbytes_addr=$max_nbytes;
      var $0=$max_nbytes_addr;
      var $div=(((($0)|0))|0);
      $max_nchars=$div;
      var $1=$bits_addr;
      var $bitPtr1=(($1+12)|0);
      var $2=HEAP32[(($bitPtr1)>>2)];
      $bitPtr=$2;
      var $3=$bits_addr;
      var $charPtr2=(($3+8)|0);
      var $4=HEAP32[(($charPtr2)>>2)];
      $charPtr=$4;
      var $5=$bits_addr;
      var $nbBits3=(($5+4)|0);
      var $6=HEAP32[(($nbBits3)>>2)];
      $nbBits=$6;
      var $7=$bits_addr;
      _speex_bits_insert_terminator($7);
      var $8=$bitPtr;
      var $9=$bits_addr;
      var $bitPtr4=(($9+12)|0);
      HEAP32[(($bitPtr4)>>2)]=$8;
      var $10=$charPtr;
      var $11=$bits_addr;
      var $charPtr5=(($11+8)|0);
      HEAP32[(($charPtr5)>>2)]=$10;
      var $12=$nbBits;
      var $13=$bits_addr;
      var $nbBits6=(($13+4)|0);
      HEAP32[(($nbBits6)>>2)]=$12;
      var $14=$max_nchars;
      var $15=$bits_addr;
      var $nbBits7=(($15+4)|0);
      var $16=HEAP32[(($nbBits7)>>2)];
      var $add=(($16+8)|0);
      var $sub=(($add-1)|0);
      var $shr=$sub >> 3;
      var $cmp=(($14)|0) > (($shr)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $17=$bits_addr;
      var $nbBits8=(($17+4)|0);
      var $18=HEAP32[(($nbBits8)>>2)];
      var $add9=(($18+8)|0);
      var $sub10=(($add9-1)|0);
      var $shr11=$sub10 >> 3;
      $max_nchars=$shr11;
      __label__ = 2; break;
    case 2: // $if_end
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $19=$i;
      var $20=$max_nchars;
      var $cmp12=(($19)|0) < (($20)|0);
      if ($cmp12) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $21=$i;
      var $22=$bits_addr;
      var $chars13=(($22)|0);
      var $23=HEAP32[(($chars13)>>2)];
      var $arrayidx=(($23+$21)|0);
      var $24=HEAP8[($arrayidx)];
      var $25=$i;
      var $26=$chars_addr;
      var $arrayidx14=(($26+$25)|0);
      HEAP8[($arrayidx14)]=$24;
      __label__ = 5; break;
    case 5: // $for_inc
      var $27=$i;
      var $inc=(($27+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $28=$max_nchars;
      var $mul=(($28)|0);
      ;
      return $mul;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_write["X"]=1;

function _speex_bits_insert_terminator($bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      $bits_addr=$bits;
      var $0=$bits_addr;
      var $bitPtr=(($0+12)|0);
      var $1=HEAP32[(($bitPtr)>>2)];
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$bits_addr;
      _speex_bits_pack($2, 0, 1);
      __label__ = 2; break;
    case 2: // $if_end
      __label__ = 3; break;
    case 3: // $while_cond
      var $3=$bits_addr;
      var $bitPtr1=(($3+12)|0);
      var $4=HEAP32[(($bitPtr1)>>2)];
      var $tobool2=(($4)|0)!=0;
      if ($tobool2) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $while_body
      var $5=$bits_addr;
      _speex_bits_pack($5, 1, 1);
      __label__ = 3; break;
    case 5: // $while_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_bits_pack($bits, $data, $nbBits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $data_addr;
      var $nbBits_addr;
      var $d;
      var $new_nchars;
      var $tmp;
      var $bit;
      $bits_addr=$bits;
      $data_addr=$data;
      $nbBits_addr=$nbBits;
      var $0=$data_addr;
      $d=$0;
      var $1=$bits_addr;
      var $charPtr=(($1+8)|0);
      var $2=HEAP32[(($charPtr)>>2)];
      var $3=$nbBits_addr;
      var $4=$bits_addr;
      var $bitPtr=(($4+12)|0);
      var $5=HEAP32[(($bitPtr)>>2)];
      var $add=(($3+$5)|0);
      var $shr=$add >> 3;
      var $add1=(($2+$shr)|0);
      var $6=$bits_addr;
      var $buf_size=(($6+24)|0);
      var $7=HEAP32[(($buf_size)>>2)];
      var $cmp=(($add1)|0) >= (($7)|0);
      if ($cmp) { __label__ = 1; break; } else { __label__ = 8; break; }
    case 1: // $if_then
      _speex_notify(((STRING_TABLE.__str417)|0));
      var $8=$bits_addr;
      var $owner=(($8+16)|0);
      var $9=HEAP32[(($owner)>>2)];
      var $tobool=(($9)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 6; break; }
    case 2: // $if_then2
      var $10=$bits_addr;
      var $buf_size3=(($10+24)|0);
      var $11=HEAP32[(($buf_size3)>>2)];
      var $add4=(($11+5)|0);
      var $mul=(($add4*3)|0);
      var $shr5=$mul >> 1;
      $new_nchars=$shr5;
      var $12=$bits_addr;
      var $chars=(($12)|0);
      var $13=HEAP32[(($chars)>>2)];
      var $14=$new_nchars;
      var $call=_speex_realloc($13, $14);
      $tmp=$call;
      var $15=$tmp;
      var $tobool6=(($15)|0)!=0;
      if ($tobool6) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then7
      var $16=$new_nchars;
      var $17=$bits_addr;
      var $buf_size8=(($17+24)|0);
      HEAP32[(($buf_size8)>>2)]=$16;
      var $18=$tmp;
      var $19=$bits_addr;
      var $chars9=(($19)|0);
      HEAP32[(($chars9)>>2)]=$18;
      __label__ = 5; break;
    case 4: // $if_else
      _speex_warning(((STRING_TABLE.__str5)|0));
      __label__ = 13; break;
    case 5: // $if_end
      __label__ = 7; break;
    case 6: // $if_else10
      _speex_warning(((STRING_TABLE.__str6)|0));
      __label__ = 13; break;
    case 7: // $if_end11
      __label__ = 8; break;
    case 8: // $if_end12
      __label__ = 9; break;
    case 9: // $while_cond
      var $20=$nbBits_addr;
      var $tobool13=(($20)|0)!=0;
      if ($tobool13) { __label__ = 10; break; } else { __label__ = 13; break; }
    case 10: // $while_body
      var $21=$d;
      var $22=$nbBits_addr;
      var $sub=(($22-1)|0);
      var $shr15=$21 >>> (($sub)>>>0);
      var $and=$shr15 & 1;
      $bit=$and;
      var $23=$bit;
      var $24=$bits_addr;
      var $bitPtr16=(($24+12)|0);
      var $25=HEAP32[(($bitPtr16)>>2)];
      var $sub17=((7-$25)|0);
      var $shl=$23 << $sub17;
      var $26=$bits_addr;
      var $charPtr18=(($26+8)|0);
      var $27=HEAP32[(($charPtr18)>>2)];
      var $28=$bits_addr;
      var $chars19=(($28)|0);
      var $29=HEAP32[(($chars19)>>2)];
      var $arrayidx=(($29+$27)|0);
      var $30=HEAP8[($arrayidx)];
      var $conv=(($30 << 24) >> 24);
      var $or=$conv | $shl;
      var $conv20=(($or) & 255);
      HEAP8[($arrayidx)]=$conv20;
      var $31=$bits_addr;
      var $bitPtr21=(($31+12)|0);
      var $32=HEAP32[(($bitPtr21)>>2)];
      var $inc=(($32+1)|0);
      HEAP32[(($bitPtr21)>>2)]=$inc;
      var $33=$bits_addr;
      var $bitPtr22=(($33+12)|0);
      var $34=HEAP32[(($bitPtr22)>>2)];
      var $cmp23=(($34)|0)==8;
      if ($cmp23) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then25
      var $35=$bits_addr;
      var $bitPtr26=(($35+12)|0);
      HEAP32[(($bitPtr26)>>2)]=0;
      var $36=$bits_addr;
      var $charPtr27=(($36+8)|0);
      var $37=HEAP32[(($charPtr27)>>2)];
      var $inc28=(($37+1)|0);
      HEAP32[(($charPtr27)>>2)]=$inc28;
      var $38=$bits_addr;
      var $charPtr29=(($38+8)|0);
      var $39=HEAP32[(($charPtr29)>>2)];
      var $40=$bits_addr;
      var $chars30=(($40)|0);
      var $41=HEAP32[(($chars30)>>2)];
      var $arrayidx31=(($41+$39)|0);
      HEAP8[($arrayidx31)]=0;
      __label__ = 12; break;
    case 12: // $if_end32
      var $42=$bits_addr;
      var $nbBits33=(($42+4)|0);
      var $43=HEAP32[(($nbBits33)>>2)];
      var $inc34=(($43+1)|0);
      HEAP32[(($nbBits33)>>2)]=$inc34;
      var $44=$nbBits_addr;
      var $dec=(($44-1)|0);
      $nbBits_addr=$dec;
      __label__ = 9; break;
    case 13: // $while_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_bits_pack["X"]=1;

function _speex_bits_unpack_signed($bits, $nbBits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bits_addr;
      var $nbBits_addr;
      var $d;
      $bits_addr=$bits;
      $nbBits_addr=$nbBits;
      var $0=$bits_addr;
      var $1=$nbBits_addr;
      var $call=_speex_bits_unpack_unsigned($0, $1);
      $d=$call;
      var $2=$d;
      var $3=$nbBits_addr;
      var $sub=(($3-1)|0);
      var $shr=$2 >>> (($sub)>>>0);
      var $tobool=(($shr)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $4=$nbBits_addr;
      var $shl=-1 << $4;
      var $5=$d;
      var $or=$5 | $shl;
      $d=$or;
      __label__ = 2; break;
    case 2: // $if_end
      var $6=$d;
      ;
      return $6;
    default: assert(0, "bad label: " + __label__);
  }
}


function __spx_lpc($lpc, $ac, $p) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $lpc_addr;
      var $ac_addr;
      var $p_addr;
      var $i;
      var $j;
      var $r;
      var $error;
      var $rr;
      var $tmp;
      $lpc_addr=$lpc;
      $ac_addr=$ac;
      $p_addr=$p;
      var $0=$ac_addr;
      var $arrayidx=(($0)|0);
      var $1=HEAPF32[(($arrayidx)>>2)];
      $error=$1;
      var $2=$ac_addr;
      var $arrayidx1=(($2)|0);
      var $3=HEAPF32[(($arrayidx1)>>2)];
      var $cmp=$3 == 0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 6; break; }
    case 1: // $if_then
      $i=0;
      __label__ = 2; break;
    case 2: // $for_cond
      var $4=$i;
      var $5=$p_addr;
      var $cmp2=(($4)|0) < (($5)|0);
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 5; break; }
    case 3: // $for_body
      var $6=$i;
      var $7=$lpc_addr;
      var $arrayidx3=(($7+($6<<2))|0);
      HEAPF32[(($arrayidx3)>>2)]=0;
      __label__ = 4; break;
    case 4: // $for_inc
      var $8=$i;
      var $inc=(($8+1)|0);
      $i=$inc;
      __label__ = 2; break;
    case 5: // $for_end
      $retval=0;
      __label__ = 21; break;
    case 6: // $if_end
      $i=0;
      __label__ = 7; break;
    case 7: // $for_cond4
      var $9=$i;
      var $10=$p_addr;
      var $cmp5=(($9)|0) < (($10)|0);
      if ($cmp5) { __label__ = 8; break; } else { __label__ = 20; break; }
    case 8: // $for_body6
      var $11=$i;
      var $add=(($11+1)|0);
      var $12=$ac_addr;
      var $arrayidx7=(($12+($add<<2))|0);
      var $13=HEAPF32[(($arrayidx7)>>2)];
      var $sub=(-$13);
      $rr=$sub;
      $j=0;
      __label__ = 9; break;
    case 9: // $for_cond8
      var $14=$j;
      var $15=$i;
      var $cmp9=(($14)|0) < (($15)|0);
      if ($cmp9) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body10
      var $16=$rr;
      var $17=$j;
      var $18=$lpc_addr;
      var $arrayidx11=(($18+($17<<2))|0);
      var $19=HEAPF32[(($arrayidx11)>>2)];
      var $20=$i;
      var $21=$j;
      var $sub12=(($20-$21)|0);
      var $22=$ac_addr;
      var $arrayidx13=(($22+($sub12<<2))|0);
      var $23=HEAPF32[(($arrayidx13)>>2)];
      var $mul=$19*$23;
      var $sub14=$16-$mul;
      $rr=$sub14;
      __label__ = 11; break;
    case 11: // $for_inc15
      var $24=$j;
      var $inc16=(($24+1)|0);
      $j=$inc16;
      __label__ = 9; break;
    case 12: // $for_end17
      var $25=$rr;
      var $conv=$25;
      var $26=$error;
      var $conv18=$26;
      var $27=$ac_addr;
      var $arrayidx19=(($27)|0);
      var $28=HEAPF32[(($arrayidx19)>>2)];
      var $conv20=$28;
      var $mul21=$conv20*0.003;
      var $add22=$conv18+$mul21;
      var $div=$conv/$add22;
      var $conv23=$div;
      $r=$conv23;
      var $29=$r;
      var $30=$i;
      var $31=$lpc_addr;
      var $arrayidx24=(($31+($30<<2))|0);
      HEAPF32[(($arrayidx24)>>2)]=$29;
      $j=0;
      __label__ = 13; break;
    case 13: // $for_cond25
      var $32=$j;
      var $33=$i;
      var $shr=$33 >> 1;
      var $cmp26=(($32)|0) < (($shr)|0);
      if ($cmp26) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body28
      var $34=$j;
      var $35=$lpc_addr;
      var $arrayidx29=(($35+($34<<2))|0);
      var $36=HEAPF32[(($arrayidx29)>>2)];
      $tmp=$36;
      var $37=$j;
      var $38=$lpc_addr;
      var $arrayidx30=(($38+($37<<2))|0);
      var $39=HEAPF32[(($arrayidx30)>>2)];
      var $40=$r;
      var $41=$i;
      var $sub31=(($41-1)|0);
      var $42=$j;
      var $sub32=(($sub31-$42)|0);
      var $43=$lpc_addr;
      var $arrayidx33=(($43+($sub32<<2))|0);
      var $44=HEAPF32[(($arrayidx33)>>2)];
      var $mul34=$40*$44;
      var $add35=$39+$mul34;
      var $45=$j;
      var $46=$lpc_addr;
      var $arrayidx36=(($46+($45<<2))|0);
      HEAPF32[(($arrayidx36)>>2)]=$add35;
      var $47=$i;
      var $sub37=(($47-1)|0);
      var $48=$j;
      var $sub38=(($sub37-$48)|0);
      var $49=$lpc_addr;
      var $arrayidx39=(($49+($sub38<<2))|0);
      var $50=HEAPF32[(($arrayidx39)>>2)];
      var $51=$r;
      var $52=$tmp;
      var $mul40=$51*$52;
      var $add41=$50+$mul40;
      var $53=$i;
      var $sub42=(($53-1)|0);
      var $54=$j;
      var $sub43=(($sub42-$54)|0);
      var $55=$lpc_addr;
      var $arrayidx44=(($55+($sub43<<2))|0);
      HEAPF32[(($arrayidx44)>>2)]=$add41;
      __label__ = 15; break;
    case 15: // $for_inc45
      var $56=$j;
      var $inc46=(($56+1)|0);
      $j=$inc46;
      __label__ = 13; break;
    case 16: // $for_end47
      var $57=$i;
      var $and=$57 & 1;
      var $tobool=(($and)|0)!=0;
      if ($tobool) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then48
      var $58=$j;
      var $59=$lpc_addr;
      var $arrayidx49=(($59+($58<<2))|0);
      var $60=HEAPF32[(($arrayidx49)>>2)];
      var $61=$j;
      var $62=$lpc_addr;
      var $arrayidx50=(($62+($61<<2))|0);
      var $63=HEAPF32[(($arrayidx50)>>2)];
      var $64=$r;
      var $mul51=$63*$64;
      var $add52=$60+$mul51;
      var $65=$j;
      var $66=$lpc_addr;
      var $arrayidx53=(($66+($65<<2))|0);
      HEAPF32[(($arrayidx53)>>2)]=$add52;
      __label__ = 18; break;
    case 18: // $if_end54
      var $67=$error;
      var $68=$r;
      var $69=$error;
      var $70=$r;
      var $mul55=$69*$70;
      var $mul56=$68*$mul55;
      var $sub57=$67-$mul56;
      $error=$sub57;
      __label__ = 19; break;
    case 19: // $for_inc58
      var $71=$i;
      var $inc59=(($71+1)|0);
      $i=$inc59;
      __label__ = 7; break;
    case 20: // $for_end60
      var $72=$error;
      $retval=$72;
      __label__ = 21; break;
    case 21: // $return
      var $73=$retval;
      ;
      return $73;
    default: assert(0, "bad label: " + __label__);
  }
}
__spx_lpc["X"]=1;

function __spx_autocorr($x, $ac, $lag, $n) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $ac_addr;
      var $lag_addr;
      var $n_addr;
      var $d;
      var $i;
      $x_addr=$x;
      $ac_addr=$ac;
      $lag_addr=$lag;
      $n_addr=$n;
      __label__ = 1; break;
    case 1: // $while_cond
      var $0=$lag_addr;
      var $dec=(($0-1)|0);
      $lag_addr=$dec;
      var $tobool=(($0)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 7; break; }
    case 2: // $while_body
      var $1=$lag_addr;
      $i=$1;
      $d=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $2=$i;
      var $3=$n_addr;
      var $cmp=(($2)|0) < (($3)|0);
      if ($cmp) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $4=$i;
      var $5=$x_addr;
      var $arrayidx=(($5+($4<<2))|0);
      var $6=HEAPF32[(($arrayidx)>>2)];
      var $7=$i;
      var $8=$lag_addr;
      var $sub=(($7-$8)|0);
      var $9=$x_addr;
      var $arrayidx1=(($9+($sub<<2))|0);
      var $10=HEAPF32[(($arrayidx1)>>2)];
      var $mul=$6*$10;
      var $11=$d;
      var $add=$11+$mul;
      $d=$add;
      __label__ = 5; break;
    case 5: // $for_inc
      var $12=$i;
      var $inc=(($12+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $13=$d;
      var $14=$lag_addr;
      var $15=$ac_addr;
      var $arrayidx2=(($15+($14<<2))|0);
      HEAPF32[(($arrayidx2)>>2)]=$13;
      __label__ = 1; break;
    case 7: // $while_end
      var $16=$ac_addr;
      var $arrayidx3=(($16)|0);
      var $17=HEAPF32[(($arrayidx3)>>2)];
      var $add4=$17+10;
      HEAPF32[(($arrayidx3)>>2)]=$add4;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
__spx_autocorr["X"]=1;

function _speex_lib_get_mode($mode) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $mode_addr;
      $mode_addr=$mode;
      var $0=$mode_addr;
      var $cmp=(($0)|0) < 0;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $1=$mode_addr;
      var $cmp1=(($1)|0) >= 3;
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      $retval=0;
      __label__ = 4; break;
    case 3: // $if_end
      var $2=$mode_addr;
      var $arrayidx=((_speex_mode_list+($2<<2))|0);
      var $3=HEAP32[(($arrayidx)>>2)];
      $retval=$3;
      __label__ = 4; break;
    case 4: // $return
      var $4=$retval;
      ;
      return $4;
    default: assert(0, "bad label: " + __label__);
  }
}


function _speex_mode_query($mode, $request, $ptr) {
  ;
  var __label__;

  var $mode_addr;
  var $request_addr;
  var $ptr_addr;
  $mode_addr=$mode;
  $request_addr=$request;
  $ptr_addr=$ptr;
  var $0=$mode_addr;
  var $query=(($0+4)|0);
  var $1=HEAP32[(($query)>>2)];
  var $2=$mode_addr;
  var $mode1=(($2)|0);
  var $3=HEAP32[(($mode1)>>2)];
  var $4=$request_addr;
  var $5=$ptr_addr;
  var $call=FUNCTION_TABLE[$1]($3, $4, $5);
  ;
  return $call;
}


function _wb_mode_query($mode, $request, $ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $mode_addr;
      var $request_addr;
      var $ptr_addr;
      var $m;
      $mode_addr=$mode;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$mode_addr;
      var $1=$0;
      $m=$1;
      var $2=$request_addr;
      if ($2 == 0) {
        __label__ = 1; break;
      }
      else if ($2 == 1) {
        __label__ = 2; break;
      }
      else {
      __label__ = 9; break;
      }
      
    case 1: // $sw_bb
      var $3=$m;
      var $frameSize=(($3+4)|0);
      var $4=HEAP32[(($frameSize)>>2)];
      var $mul=((($4<<1))|0);
      var $5=$ptr_addr;
      var $6=$5;
      HEAP32[(($6)>>2)]=$mul;
      __label__ = 10; break;
    case 2: // $sw_bb1
      var $7=$ptr_addr;
      var $8=$7;
      var $9=HEAP32[(($8)>>2)];
      var $cmp=(($9)|0)==0;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $10=$ptr_addr;
      var $11=$10;
      HEAP32[(($11)>>2)]=4;
      __label__ = 8; break;
    case 4: // $if_else
      var $12=$ptr_addr;
      var $13=$12;
      var $14=HEAP32[(($13)>>2)];
      var $15=$m;
      var $submodes=(($15+32)|0);
      var $arrayidx=(($submodes+($14<<2))|0);
      var $16=HEAP32[(($arrayidx)>>2)];
      var $cmp2=(($16)|0)==0;
      if ($cmp2) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then3
      var $17=$ptr_addr;
      var $18=$17;
      HEAP32[(($18)>>2)]=-1;
      __label__ = 7; break;
    case 6: // $if_else4
      var $19=$ptr_addr;
      var $20=$19;
      var $21=HEAP32[(($20)>>2)];
      var $22=$m;
      var $submodes5=(($22+32)|0);
      var $arrayidx6=(($submodes5+($21<<2))|0);
      var $23=HEAP32[(($arrayidx6)>>2)];
      var $bits_per_frame=(($23+52)|0);
      var $24=HEAP32[(($bits_per_frame)>>2)];
      var $25=$ptr_addr;
      var $26=$25;
      HEAP32[(($26)>>2)]=$24;
      __label__ = 7; break;
    case 7: // $if_end
      __label__ = 8; break;
    case 8: // $if_end7
      __label__ = 10; break;
    case 9: // $sw_default
      var $27=$request_addr;
      _speex_warning_int29(((STRING_TABLE.__str126)|0), $27);
      $retval=-1;
      __label__ = 11; break;
    case 10: // $sw_epilog
      $retval=0;
      __label__ = 11; break;
    case 11: // $return
      var $28=$retval;
      ;
      return $28;
    default: assert(0, "bad label: " + __label__);
  }
}
_wb_mode_query["X"]=1;

function _speex_warning_int29($str, $val) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  var $val_addr;
  $str_addr=$str;
  $val_addr=$val;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $3=$val_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str328)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,HEAP32[((tempInt+4)>>2)]=$3,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _nb_encoder_init($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $st;
      var $mode;
      var $i;
      $m_addr=$m;
      var $0=$m_addr;
      var $mode1=(($0)|0);
      var $1=HEAP32[(($mode1)>>2)];
      var $2=$1;
      $mode=$2;
      var $call=_speex_alloc41(228);
      var $3=$call;
      $st=$3;
      var $4=$st;
      var $tobool=(($4)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $if_then
      $retval=0;
      __label__ = 7; break;
    case 2: // $if_end
      var $5=$st;
      var $stack=(($5+68)|0);
      HEAP32[(($stack)>>2)]=0;
      var $6=$m_addr;
      var $7=$st;
      var $mode2=(($7)|0);
      HEAP32[(($mode2)>>2)]=$6;
      var $8=$mode;
      var $frameSize=(($8)|0);
      var $9=HEAP32[(($frameSize)>>2)];
      var $10=$st;
      var $frameSize3=(($10+8)|0);
      HEAP32[(($frameSize3)>>2)]=$9;
      var $11=$mode;
      var $frameSize4=(($11)|0);
      var $12=HEAP32[(($frameSize4)>>2)];
      var $13=$mode;
      var $subframeSize=(($13+4)|0);
      var $14=HEAP32[(($subframeSize)>>2)];
      var $div=(((($12)|0)/(($14)|0))|0);
      var $15=$st;
      var $nbSubframes=(($15+16)|0);
      HEAP32[(($nbSubframes)>>2)]=$div;
      var $16=$mode;
      var $subframeSize5=(($16+4)|0);
      var $17=HEAP32[(($subframeSize5)>>2)];
      var $18=$st;
      var $subframeSize6=(($18+12)|0);
      HEAP32[(($subframeSize6)>>2)]=$17;
      var $19=$st;
      var $frameSize7=(($19+8)|0);
      var $20=HEAP32[(($frameSize7)>>2)];
      var $21=$st;
      var $subframeSize8=(($21+12)|0);
      var $22=HEAP32[(($subframeSize8)>>2)];
      var $add=(($20+$22)|0);
      var $23=$st;
      var $windowSize=(($23+20)|0);
      HEAP32[(($windowSize)>>2)]=$add;
      var $24=$mode;
      var $lpcSize=(($24+8)|0);
      var $25=HEAP32[(($lpcSize)>>2)];
      var $26=$st;
      var $lpcSize9=(($26+24)|0);
      HEAP32[(($lpcSize9)>>2)]=$25;
      var $27=$mode;
      var $gamma1=(($27+20)|0);
      var $28=HEAPF32[(($gamma1)>>2)];
      var $29=$st;
      var $gamma110=(($29+56)|0);
      HEAPF32[(($gamma110)>>2)]=$28;
      var $30=$mode;
      var $gamma2=(($30+24)|0);
      var $31=HEAPF32[(($gamma2)>>2)];
      var $32=$st;
      var $gamma211=(($32+60)|0);
      HEAPF32[(($gamma211)>>2)]=$31;
      var $33=$mode;
      var $pitchStart=(($33+12)|0);
      var $34=HEAP32[(($pitchStart)>>2)];
      var $35=$st;
      var $min_pitch=(($35+28)|0);
      HEAP32[(($min_pitch)>>2)]=$34;
      var $36=$mode;
      var $pitchEnd=(($36+16)|0);
      var $37=HEAP32[(($pitchEnd)>>2)];
      var $38=$st;
      var $max_pitch=(($38+32)|0);
      HEAP32[(($max_pitch)>>2)]=$37;
      var $39=$mode;
      var $lpc_floor=(($39+28)|0);
      var $40=HEAPF32[(($lpc_floor)>>2)];
      var $41=$st;
      var $lpc_floor12=(($41+64)|0);
      HEAPF32[(($lpc_floor12)>>2)]=$40;
      var $42=$mode;
      var $submodes=(($42+32)|0);
      var $arraydecay=(($submodes)|0);
      var $43=$st;
      var $submodes13=(($43+208)|0);
      HEAP32[(($submodes13)>>2)]=$arraydecay;
      var $44=$mode;
      var $defaultSubmode=(($44+96)|0);
      var $45=HEAP32[(($defaultSubmode)>>2)];
      var $46=$st;
      var $submodeSelect=(($46+216)|0);
      HEAP32[(($submodeSelect)>>2)]=$45;
      var $47=$st;
      var $submodeID=(($47+212)|0);
      HEAP32[(($submodeID)>>2)]=$45;
      var $48=$st;
      var $bounded_pitch=(($48+40)|0);
      HEAP32[(($bounded_pitch)>>2)]=1;
      var $49=$st;
      var $encode_submode=(($49+204)|0);
      HEAP32[(($encode_submode)>>2)]=1;
      var $50=$st;
      var $cumul_gain=(($50+36)|0);
      HEAPF32[(($cumul_gain)>>2)]=1024;
      var $51=$st;
      var $windowSize14=(($51+20)|0);
      var $52=HEAP32[(($windowSize14)>>2)];
      var $53=$st;
      var $frameSize15=(($53+8)|0);
      var $54=HEAP32[(($frameSize15)>>2)];
      var $sub=(($52-$54)|0);
      var $mul=((($sub<<2))|0);
      var $call16=_speex_alloc41($mul);
      var $55=$call16;
      var $56=$st;
      var $winBuf=(($56+72)|0);
      HEAP32[(($winBuf)>>2)]=$55;
      var $57=$mode;
      var $frameSize17=(($57)|0);
      var $58=HEAP32[(($frameSize17)>>2)];
      var $59=$mode;
      var $pitchEnd18=(($59+16)|0);
      var $60=HEAP32[(($pitchEnd18)>>2)];
      var $add19=(($58+$60)|0);
      var $add20=(($add19+2)|0);
      var $mul21=((($add20<<2))|0);
      var $call22=_speex_alloc41($mul21);
      var $61=$call22;
      var $62=$st;
      var $excBuf=(($62+76)|0);
      HEAP32[(($excBuf)>>2)]=$61;
      var $63=$st;
      var $excBuf23=(($63+76)|0);
      var $64=HEAP32[(($excBuf23)>>2)];
      var $65=$mode;
      var $pitchEnd24=(($65+16)|0);
      var $66=HEAP32[(($pitchEnd24)>>2)];
      var $add_ptr=(($64+($66<<2))|0);
      var $add_ptr25=(($add_ptr+8)|0);
      var $67=$st;
      var $exc=(($67+80)|0);
      HEAP32[(($exc)>>2)]=$add_ptr25;
      var $68=$mode;
      var $frameSize26=(($68)|0);
      var $69=HEAP32[(($frameSize26)>>2)];
      var $70=$mode;
      var $pitchEnd27=(($70+16)|0);
      var $71=HEAP32[(($pitchEnd27)>>2)];
      var $add28=(($69+$71)|0);
      var $add29=(($add28+2)|0);
      var $mul30=((($add29<<2))|0);
      var $call31=_speex_alloc41($mul30);
      var $72=$call31;
      var $73=$st;
      var $swBuf=(($73+84)|0);
      HEAP32[(($swBuf)>>2)]=$72;
      var $74=$st;
      var $swBuf32=(($74+84)|0);
      var $75=HEAP32[(($swBuf32)>>2)];
      var $76=$mode;
      var $pitchEnd33=(($76+16)|0);
      var $77=HEAP32[(($pitchEnd33)>>2)];
      var $add_ptr34=(($75+($77<<2))|0);
      var $add_ptr35=(($add_ptr34+8)|0);
      var $78=$st;
      var $sw=(($78+88)|0);
      HEAP32[(($sw)>>2)]=$add_ptr35;
      var $79=$st;
      var $window=(($79+92)|0);
      HEAP32[(($window)>>2)]=((_lpc_window)|0);
      var $80=$st;
      var $lagWindow=(($80+96)|0);
      HEAP32[(($lagWindow)>>2)]=((_lag_window)|0);
      var $81=$st;
      var $lpcSize36=(($81+24)|0);
      var $82=HEAP32[(($lpcSize36)>>2)];
      var $mul37=((($82<<2))|0);
      var $call38=_speex_alloc41($mul37);
      var $83=$call38;
      var $84=$st;
      var $old_lsp=(($84+100)|0);
      HEAP32[(($old_lsp)>>2)]=$83;
      var $85=$st;
      var $lpcSize39=(($85+24)|0);
      var $86=HEAP32[(($lpcSize39)>>2)];
      var $mul40=((($86<<2))|0);
      var $call41=_speex_alloc41($mul40);
      var $87=$call41;
      var $88=$st;
      var $old_qlsp=(($88+104)|0);
      HEAP32[(($old_qlsp)>>2)]=$87;
      var $89=$st;
      var $first=(($89+4)|0);
      HEAP32[(($first)>>2)]=1;
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $90=$i;
      var $91=$st;
      var $lpcSize42=(($91+24)|0);
      var $92=HEAP32[(($lpcSize42)>>2)];
      var $cmp=(($90)|0) < (($92)|0);
      if ($cmp) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $93=$i;
      var $add43=(($93+1)|0);
      var $conv=(($add43)|0);
      var $mul44=$conv*3.1415927410125732;
      var $94=$st;
      var $lpcSize45=(($94+24)|0);
      var $95=HEAP32[(($lpcSize45)>>2)];
      var $add46=(($95+1)|0);
      var $conv47=(($add46)|0);
      var $div48=$mul44/$conv47;
      var $96=$i;
      var $97=$st;
      var $old_lsp49=(($97+100)|0);
      var $98=HEAP32[(($old_lsp49)>>2)];
      var $arrayidx=(($98+($96<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$div48;
      __label__ = 5; break;
    case 5: // $for_inc
      var $99=$i;
      var $inc=(($99+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $100=$st;
      var $lpcSize50=(($100+24)|0);
      var $101=HEAP32[(($lpcSize50)>>2)];
      var $mul51=((($101<<2))|0);
      var $call52=_speex_alloc41($mul51);
      var $102=$call52;
      var $103=$st;
      var $mem_sp=(($103+108)|0);
      HEAP32[(($mem_sp)>>2)]=$102;
      var $104=$st;
      var $lpcSize53=(($104+24)|0);
      var $105=HEAP32[(($lpcSize53)>>2)];
      var $mul54=((($105<<2))|0);
      var $call55=_speex_alloc41($mul54);
      var $106=$call55;
      var $107=$st;
      var $mem_sw=(($107+112)|0);
      HEAP32[(($mem_sw)>>2)]=$106;
      var $108=$st;
      var $lpcSize56=(($108+24)|0);
      var $109=HEAP32[(($lpcSize56)>>2)];
      var $mul57=((($109<<2))|0);
      var $call58=_speex_alloc41($mul57);
      var $110=$call58;
      var $111=$st;
      var $mem_sw_whole=(($111+116)|0);
      HEAP32[(($mem_sw_whole)>>2)]=$110;
      var $112=$st;
      var $lpcSize59=(($112+24)|0);
      var $113=HEAP32[(($lpcSize59)>>2)];
      var $mul60=((($113<<2))|0);
      var $call61=_speex_alloc41($mul60);
      var $114=$call61;
      var $115=$st;
      var $mem_exc=(($115+120)|0);
      HEAP32[(($mem_exc)>>2)]=$114;
      var $116=$st;
      var $lpcSize62=(($116+24)|0);
      var $117=HEAP32[(($lpcSize62)>>2)];
      var $mul63=((($117<<2))|0);
      var $call64=_speex_alloc41($mul63);
      var $118=$call64;
      var $119=$st;
      var $mem_exc2=(($119+124)|0);
      HEAP32[(($mem_exc2)>>2)]=$118;
      var $120=$st;
      var $nbSubframes65=(($120+16)|0);
      var $121=HEAP32[(($nbSubframes65)>>2)];
      var $mul66=((($121<<2))|0);
      var $call67=_speex_alloc41($mul66);
      var $122=$call67;
      var $123=$st;
      var $pi_gain=(($123+136)|0);
      HEAP32[(($pi_gain)>>2)]=$122;
      var $124=$st;
      var $innov_rms_save=(($124+140)|0);
      HEAP32[(($innov_rms_save)>>2)]=0;
      var $125=$st;
      var $nbSubframes68=(($125+16)|0);
      var $126=HEAP32[(($nbSubframes68)>>2)];
      var $mul69=((($126<<2))|0);
      var $call70=_speex_alloc41($mul69);
      var $127=$call70;
      var $128=$st;
      var $pitch=(($128+52)|0);
      HEAP32[(($pitch)>>2)]=$127;
      var $call71=_speex_alloc41(64);
      var $129=$call71;
      var $130=$st;
      var $vbr=(($130+144)|0);
      HEAP32[(($vbr)>>2)]=$129;
      var $131=$st;
      var $vbr72=(($131+144)|0);
      var $132=HEAP32[(($vbr72)>>2)];
      _vbr_init($132);
      var $133=$st;
      var $vbr_quality=(($133+148)|0);
      HEAPF32[(($vbr_quality)>>2)]=8;
      var $134=$st;
      var $vbr_enabled=(($134+156)|0);
      HEAP32[(($vbr_enabled)>>2)]=0;
      var $135=$st;
      var $vbr_max=(($135+160)|0);
      HEAP32[(($vbr_max)>>2)]=0;
      var $136=$st;
      var $vad_enabled=(($136+164)|0);
      HEAP32[(($vad_enabled)>>2)]=0;
      var $137=$st;
      var $dtx_enabled=(($137+168)|0);
      HEAP32[(($dtx_enabled)>>2)]=0;
      var $138=$st;
      var $dtx_count=(($138+172)|0);
      HEAP32[(($dtx_count)>>2)]=0;
      var $139=$st;
      var $abr_enabled=(($139+176)|0);
      HEAP32[(($abr_enabled)>>2)]=0;
      var $140=$st;
      var $abr_drift=(($140+180)|0);
      HEAPF32[(($abr_drift)>>2)]=0;
      var $141=$st;
      var $abr_drift2=(($141+184)|0);
      HEAPF32[(($abr_drift2)>>2)]=0;
      var $142=$st;
      var $plc_tuning=(($142+200)|0);
      HEAP32[(($plc_tuning)>>2)]=2;
      var $143=$st;
      var $complexity=(($143+192)|0);
      HEAP32[(($complexity)>>2)]=2;
      var $144=$st;
      var $sampling_rate=(($144+196)|0);
      HEAP32[(($sampling_rate)>>2)]=8000;
      var $145=$st;
      var $isWideband=(($145+220)|0);
      HEAP32[(($isWideband)>>2)]=0;
      var $146=$st;
      var $highpass_enabled=(($146+224)|0);
      HEAP32[(($highpass_enabled)>>2)]=1;
      var $147=$st;
      var $148=$147;
      $retval=$148;
      __label__ = 7; break;
    case 7: // $return
      var $149=$retval;
      ;
      return $149;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_encoder_init["X"]=1;

function _speex_alloc41($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_calloc($0, 1);
  ;
  return $call;
}


function _nb_encoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  var $st;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  $st=$1;
  var $2=$st;
  var $winBuf=(($2+72)|0);
  var $3=HEAP32[(($winBuf)>>2)];
  var $4=$3;
  _speex_free44($4);
  var $5=$st;
  var $excBuf=(($5+76)|0);
  var $6=HEAP32[(($excBuf)>>2)];
  var $7=$6;
  _speex_free44($7);
  var $8=$st;
  var $old_qlsp=(($8+104)|0);
  var $9=HEAP32[(($old_qlsp)>>2)];
  var $10=$9;
  _speex_free44($10);
  var $11=$st;
  var $swBuf=(($11+84)|0);
  var $12=HEAP32[(($swBuf)>>2)];
  var $13=$12;
  _speex_free44($13);
  var $14=$st;
  var $old_lsp=(($14+100)|0);
  var $15=HEAP32[(($old_lsp)>>2)];
  var $16=$15;
  _speex_free44($16);
  var $17=$st;
  var $mem_sp=(($17+108)|0);
  var $18=HEAP32[(($mem_sp)>>2)];
  var $19=$18;
  _speex_free44($19);
  var $20=$st;
  var $mem_sw=(($20+112)|0);
  var $21=HEAP32[(($mem_sw)>>2)];
  var $22=$21;
  _speex_free44($22);
  var $23=$st;
  var $mem_sw_whole=(($23+116)|0);
  var $24=HEAP32[(($mem_sw_whole)>>2)];
  var $25=$24;
  _speex_free44($25);
  var $26=$st;
  var $mem_exc=(($26+120)|0);
  var $27=HEAP32[(($mem_exc)>>2)];
  var $28=$27;
  _speex_free44($28);
  var $29=$st;
  var $mem_exc2=(($29+124)|0);
  var $30=HEAP32[(($mem_exc2)>>2)];
  var $31=$30;
  _speex_free44($31);
  var $32=$st;
  var $pi_gain=(($32+136)|0);
  var $33=HEAP32[(($pi_gain)>>2)];
  var $34=$33;
  _speex_free44($34);
  var $35=$st;
  var $pitch=(($35+52)|0);
  var $36=HEAP32[(($pitch)>>2)];
  var $37=$36;
  _speex_free44($37);
  var $38=$st;
  var $vbr=(($38+144)|0);
  var $39=HEAP32[(($vbr)>>2)];
  _vbr_destroy($39);
  var $40=$st;
  var $vbr1=(($40+144)|0);
  var $41=HEAP32[(($vbr1)>>2)];
  var $42=$41;
  _speex_free44($42);
  var $43=$st;
  var $44=$43;
  _speex_free44($44);
  ;
  return;
}
_nb_encoder_destroy["X"]=1;

function _speex_free44($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _free($0);
  ;
  return;
}


function _nb_encode($state, $vin, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 60; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $vin_addr;
      var $bits_addr;
      var $st;
      var $i;
      var $sub;
      var $roots;
      var $ol_pitch;
      var $ol_pitch_coef;
      var $ol_gain;
      var $stack;
      var $ener;
      var $fine_gain;
      var $in;
      var $saved_stack;
      var $saved_stack43;
      var $diff;
      var $nol_pitch=__stackBase__;
      var $nol_pitch_coef=__stackBase__+24;
      var $g;
      var $lsp_dist;
      var $qual_change;
      var $mode=__stackBase__+48;
      var $choice;
      var $min_diff;
      var $v1;
      var $thresh;
      var $rate=__stackBase__+52;
      var $bitrate=__stackBase__+56;
      var $mode493;
      var $cleanup_dest_slot;
      var $quant;
      var $qe;
      var $offset;
      var $sw700;
      var $exc701;
      var $pitch;
      var $response_bound;
      var $pi_g;
      var $pit_min;
      var $pit_max;
      var $margin;
      var $qe976;
      var $tmp_stack;
      var $saved_stack1034;
      $state_addr=$state;
      $vin_addr=$vin;
      $bits_addr=$bits;
      $ener=0;
      var $0=$vin_addr;
      var $1=$0;
      $in=$1;
      var $2=$state_addr;
      var $3=$2;
      $st=$3;
      var $4=$st;
      var $stack1=(($4+68)|0);
      var $5=HEAP32[(($stack1)>>2)];
      $stack=$5;
      var $6=$st;
      var $lpcSize=(($6+24)|0);
      var $7=HEAP32[(($lpcSize)>>2)];
      var $8=_llvm_stacksave();
      $saved_stack=$8;
      var $vla=STACKTOP;STACKTOP += $7*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $9=$st;
      var $lpcSize2=(($9+24)|0);
      var $10=HEAP32[(($lpcSize2)>>2)];
      var $vla3=STACKTOP;STACKTOP += $10*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $11=$st;
      var $lpcSize4=(($11+24)|0);
      var $12=HEAP32[(($lpcSize4)>>2)];
      var $vla5=STACKTOP;STACKTOP += $12*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $13=$st;
      var $lpcSize6=(($13+24)|0);
      var $14=HEAP32[(($lpcSize6)>>2)];
      var $vla7=STACKTOP;STACKTOP += $14*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $15=$st;
      var $lpcSize8=(($15+24)|0);
      var $16=HEAP32[(($lpcSize8)>>2)];
      var $vla9=STACKTOP;STACKTOP += $16*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $17=$st;
      var $lpcSize10=(($17+24)|0);
      var $18=HEAP32[(($lpcSize10)>>2)];
      var $vla11=STACKTOP;STACKTOP += $18*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $19=$st;
      var $lpcSize12=(($19+24)|0);
      var $20=HEAP32[(($lpcSize12)>>2)];
      var $vla13=STACKTOP;STACKTOP += $20*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $21=$st;
      var $lpcSize14=(($21+24)|0);
      var $22=HEAP32[(($lpcSize14)>>2)];
      var $vla15=STACKTOP;STACKTOP += $22*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $23=$st;
      var $lpcSize16=(($23+24)|0);
      var $24=HEAP32[(($lpcSize16)>>2)];
      var $vla17=STACKTOP;STACKTOP += $24*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $25=$st;
      var $excBuf=(($25+76)|0);
      var $26=HEAP32[(($excBuf)>>2)];
      var $27=$26;
      var $28=$st;
      var $excBuf18=(($28+76)|0);
      var $29=HEAP32[(($excBuf18)>>2)];
      var $30=$st;
      var $frameSize=(($30+8)|0);
      var $31=HEAP32[(($frameSize)>>2)];
      var $add_ptr=(($29+($31<<2))|0);
      var $32=$add_ptr;
      var $33=$st;
      var $max_pitch=(($33+32)|0);
      var $34=HEAP32[(($max_pitch)>>2)];
      var $add=(($34+2)|0);
      var $mul=((($add<<2))|0);
      var $35=$st;
      var $excBuf19=(($35+76)|0);
      var $36=HEAP32[(($excBuf19)>>2)];
      var $37=$st;
      var $excBuf20=(($37+76)|0);
      var $38=HEAP32[(($excBuf20)>>2)];
      var $39=$st;
      var $frameSize21=(($39+8)|0);
      var $40=HEAP32[(($frameSize21)>>2)];
      var $add_ptr22=(($38+($40<<2))|0);
      var $sub_ptr_lhs_cast=$36;
      var $sub_ptr_rhs_cast=$add_ptr22;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul23=((0)|0);
      var $add24=(($mul+$mul23)|0);
      _llvm_memmove_p0i8_p0i8_i32($27, $32, $add24, 1, 0);
      var $41=$st;
      var $swBuf=(($41+84)|0);
      var $42=HEAP32[(($swBuf)>>2)];
      var $43=$42;
      var $44=$st;
      var $swBuf25=(($44+84)|0);
      var $45=HEAP32[(($swBuf25)>>2)];
      var $46=$st;
      var $frameSize26=(($46+8)|0);
      var $47=HEAP32[(($frameSize26)>>2)];
      var $add_ptr27=(($45+($47<<2))|0);
      var $48=$add_ptr27;
      var $49=$st;
      var $max_pitch28=(($49+32)|0);
      var $50=HEAP32[(($max_pitch28)>>2)];
      var $add29=(($50+2)|0);
      var $mul30=((($add29<<2))|0);
      var $51=$st;
      var $swBuf31=(($51+84)|0);
      var $52=HEAP32[(($swBuf31)>>2)];
      var $53=$st;
      var $swBuf32=(($53+84)|0);
      var $54=HEAP32[(($swBuf32)>>2)];
      var $55=$st;
      var $frameSize33=(($55+8)|0);
      var $56=HEAP32[(($frameSize33)>>2)];
      var $add_ptr34=(($54+($56<<2))|0);
      var $sub_ptr_lhs_cast35=$52;
      var $sub_ptr_rhs_cast36=$add_ptr34;
      var $sub_ptr_sub37=(($sub_ptr_lhs_cast35-$sub_ptr_rhs_cast36)|0);
      var $sub_ptr_div38=(((($sub_ptr_sub37)|0)/4)|0);
      var $mul39=((0)|0);
      var $add40=(($mul30+$mul39)|0);
      _llvm_memmove_p0i8_p0i8_i32($43, $48, $add40, 1, 0);
      var $57=$st;
      var $highpass_enabled=(($57+224)|0);
      var $58=HEAP32[(($highpass_enabled)>>2)];
      var $tobool=(($58)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $59=$in;
      var $60=$in;
      var $61=$st;
      var $frameSize41=(($61+8)|0);
      var $62=HEAP32[(($frameSize41)>>2)];
      var $63=$st;
      var $isWideband=(($63+220)|0);
      var $64=HEAP32[(($isWideband)>>2)];
      var $tobool42=(($64)|0)!=0;
      var $cond=$tobool42 ? 2 : 0;
      var $65=$st;
      var $mem_hp=(($65+128)|0);
      var $arraydecay=(($mem_hp)|0);
      _highpass($59, $60, $62, $cond, $arraydecay);
      __label__ = 2; break;
    case 2: // $if_end
      var $66=$st;
      var $windowSize=(($66+20)|0);
      var $67=HEAP32[(($windowSize)>>2)];
      var $68=_llvm_stacksave();
      $saved_stack43=$68;
      var $vla44=STACKTOP;STACKTOP += $67*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $69=$st;
      var $lpcSize45=(($69+24)|0);
      var $70=HEAP32[(($lpcSize45)>>2)];
      var $add46=(($70+1)|0);
      var $vla47=STACKTOP;STACKTOP += $add46*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $71=$i;
      var $72=$st;
      var $windowSize48=(($72+20)|0);
      var $73=HEAP32[(($windowSize48)>>2)];
      var $74=$st;
      var $frameSize49=(($74+8)|0);
      var $75=HEAP32[(($frameSize49)>>2)];
      var $sub50=(($73-$75)|0);
      var $cmp=(($71)|0) < (($sub50)|0);
      if ($cmp) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $76=$i;
      var $77=$st;
      var $winBuf=(($77+72)|0);
      var $78=HEAP32[(($winBuf)>>2)];
      var $arrayidx=(($78+($76<<2))|0);
      var $79=HEAPF32[(($arrayidx)>>2)];
      var $80=$i;
      var $81=$st;
      var $window=(($81+92)|0);
      var $82=HEAP32[(($window)>>2)];
      var $arrayidx51=(($82+($80<<2))|0);
      var $83=HEAPF32[(($arrayidx51)>>2)];
      var $mul52=$79*$83;
      var $84=$i;
      var $arrayidx53=(($vla44+($84<<2))|0);
      HEAPF32[(($arrayidx53)>>2)]=$mul52;
      __label__ = 5; break;
    case 5: // $for_inc
      var $85=$i;
      var $inc=(($85+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      __label__ = 7; break;
    case 7: // $for_cond54
      var $86=$i;
      var $87=$st;
      var $windowSize55=(($87+20)|0);
      var $88=HEAP32[(($windowSize55)>>2)];
      var $cmp56=(($86)|0) < (($88)|0);
      if ($cmp56) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: // $for_body57
      var $89=$i;
      var $90=$st;
      var $windowSize58=(($90+20)|0);
      var $91=HEAP32[(($windowSize58)>>2)];
      var $sub59=(($89-$91)|0);
      var $92=$st;
      var $frameSize60=(($92+8)|0);
      var $93=HEAP32[(($frameSize60)>>2)];
      var $add61=(($sub59+$93)|0);
      var $94=$in;
      var $arrayidx62=(($94+($add61<<2))|0);
      var $95=HEAPF32[(($arrayidx62)>>2)];
      var $96=$i;
      var $97=$st;
      var $window63=(($97+92)|0);
      var $98=HEAP32[(($window63)>>2)];
      var $arrayidx64=(($98+($96<<2))|0);
      var $99=HEAPF32[(($arrayidx64)>>2)];
      var $mul65=$95*$99;
      var $100=$i;
      var $arrayidx66=(($vla44+($100<<2))|0);
      HEAPF32[(($arrayidx66)>>2)]=$mul65;
      __label__ = 9; break;
    case 9: // $for_inc67
      var $101=$i;
      var $inc68=(($101+1)|0);
      $i=$inc68;
      __label__ = 7; break;
    case 10: // $for_end69
      var $102=$st;
      var $lpcSize70=(($102+24)|0);
      var $103=HEAP32[(($lpcSize70)>>2)];
      var $add71=(($103+1)|0);
      var $104=$st;
      var $windowSize72=(($104+20)|0);
      var $105=HEAP32[(($windowSize72)>>2)];
      __spx_autocorr($vla44, $vla47, $add71, $105);
      var $arrayidx73=(($vla47)|0);
      var $106=HEAPF32[(($arrayidx73)>>2)];
      var $arrayidx74=(($vla47)|0);
      var $107=HEAPF32[(($arrayidx74)>>2)];
      var $108=$st;
      var $lpc_floor=(($108+64)|0);
      var $109=HEAPF32[(($lpc_floor)>>2)];
      var $mul75=$107*$109;
      var $add76=$106+$mul75;
      var $arrayidx77=(($vla47)|0);
      HEAPF32[(($arrayidx77)>>2)]=$add76;
      $i=0;
      __label__ = 11; break;
    case 11: // $for_cond78
      var $110=$i;
      var $111=$st;
      var $lpcSize79=(($111+24)|0);
      var $112=HEAP32[(($lpcSize79)>>2)];
      var $add80=(($112+1)|0);
      var $cmp81=(($110)|0) < (($add80)|0);
      if ($cmp81) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body82
      var $113=$i;
      var $arrayidx83=(($vla47+($113<<2))|0);
      var $114=HEAPF32[(($arrayidx83)>>2)];
      var $115=$i;
      var $116=$st;
      var $lagWindow=(($116+96)|0);
      var $117=HEAP32[(($lagWindow)>>2)];
      var $arrayidx84=(($117+($115<<2))|0);
      var $118=HEAPF32[(($arrayidx84)>>2)];
      var $mul85=$114*$118;
      var $119=$i;
      var $arrayidx86=(($vla47+($119<<2))|0);
      HEAPF32[(($arrayidx86)>>2)]=$mul85;
      __label__ = 13; break;
    case 13: // $for_inc87
      var $120=$i;
      var $inc88=(($120+1)|0);
      $i=$inc88;
      __label__ = 11; break;
    case 14: // $for_end89
      var $121=$st;
      var $lpcSize90=(($121+24)|0);
      var $122=HEAP32[(($lpcSize90)>>2)];
      var $call=__spx_lpc($vla, $vla47, $122);
      var $123=$st;
      var $lpcSize91=(($123+24)|0);
      var $124=HEAP32[(($lpcSize91)>>2)];
      var $125=$stack;
      var $call92=_lpc_to_lsp($vla, $124, $vla7, 10, 0.20000000298023224, $125);
      $roots=$call92;
      var $126=$roots;
      var $127=$st;
      var $lpcSize93=(($127+24)|0);
      var $128=HEAP32[(($lpcSize93)>>2)];
      var $cmp94=(($126)|0)!=(($128)|0);
      if ($cmp94) { __label__ = 15; break; } else { __label__ = 20; break; }
    case 15: // $if_then95
      $i=0;
      __label__ = 16; break;
    case 16: // $for_cond96
      var $129=$i;
      var $130=$st;
      var $lpcSize97=(($130+24)|0);
      var $131=HEAP32[(($lpcSize97)>>2)];
      var $cmp98=(($129)|0) < (($131)|0);
      if ($cmp98) { __label__ = 17; break; } else { __label__ = 19; break; }
    case 17: // $for_body99
      var $132=$i;
      var $133=$st;
      var $old_lsp=(($133+100)|0);
      var $134=HEAP32[(($old_lsp)>>2)];
      var $arrayidx100=(($134+($132<<2))|0);
      var $135=HEAPF32[(($arrayidx100)>>2)];
      var $136=$i;
      var $arrayidx101=(($vla7+($136<<2))|0);
      HEAPF32[(($arrayidx101)>>2)]=$135;
      __label__ = 18; break;
    case 18: // $for_inc102
      var $137=$i;
      var $inc103=(($137+1)|0);
      $i=$inc103;
      __label__ = 16; break;
    case 19: // $for_end104
      __label__ = 20; break;
    case 20: // $if_end105
      var $138=$saved_stack43;
      _llvm_stackrestore($138);
      var $139=$st;
      var $windowSize106=(($139+20)|0);
      var $140=HEAP32[(($windowSize106)>>2)];
      var $141=$st;
      var $frameSize107=(($141+8)|0);
      var $142=HEAP32[(($frameSize107)>>2)];
      var $sub108=(($140-$142)|0);
      $diff=$sub108;
      var $143=$st;
      var $first=(($143+4)|0);
      var $144=HEAP32[(($first)>>2)];
      var $tobool109=(($144)|0)!=0;
      if ($tobool109) { __label__ = 21; break; } else { __label__ = 26; break; }
    case 21: // $if_then110
      $i=0;
      __label__ = 22; break;
    case 22: // $for_cond111
      var $145=$i;
      var $146=$st;
      var $lpcSize112=(($146+24)|0);
      var $147=HEAP32[(($lpcSize112)>>2)];
      var $cmp113=(($145)|0) < (($147)|0);
      if ($cmp113) { __label__ = 23; break; } else { __label__ = 25; break; }
    case 23: // $for_body114
      var $148=$i;
      var $arrayidx115=(($vla7+($148<<2))|0);
      var $149=HEAPF32[(($arrayidx115)>>2)];
      var $150=$i;
      var $arrayidx116=(($vla11+($150<<2))|0);
      HEAPF32[(($arrayidx116)>>2)]=$149;
      __label__ = 24; break;
    case 24: // $for_inc117
      var $151=$i;
      var $inc118=(($151+1)|0);
      $i=$inc118;
      __label__ = 22; break;
    case 25: // $for_end119
      __label__ = 27; break;
    case 26: // $if_else
      var $152=$st;
      var $old_lsp120=(($152+100)|0);
      var $153=HEAP32[(($old_lsp120)>>2)];
      var $154=$st;
      var $lpcSize121=(($154+24)|0);
      var $155=HEAP32[(($lpcSize121)>>2)];
      var $156=$st;
      var $nbSubframes=(($156+16)|0);
      var $157=HEAP32[(($nbSubframes)>>2)];
      var $158=$st;
      var $nbSubframes122=(($158+16)|0);
      var $159=HEAP32[(($nbSubframes122)>>2)];
      var $shl=$159 << 1;
      _lsp_interpolate($153, $vla7, $vla11, $155, $157, $shl);
      __label__ = 27; break;
    case 27: // $if_end123
      var $160=$st;
      var $lpcSize124=(($160+24)|0);
      var $161=HEAP32[(($lpcSize124)>>2)];
      _lsp_enforce_margin($vla11, $161, 0.0020000000949949026);
      var $162=$st;
      var $lpcSize125=(($162+24)|0);
      var $163=HEAP32[(($lpcSize125)>>2)];
      var $164=$stack;
      _lsp_to_lpc($vla11, $vla15, $163, $164);
      var $165=$st;
      var $submodeID=(($165+212)|0);
      var $166=HEAP32[(($submodeID)>>2)];
      var $167=$st;
      var $submodes=(($167+208)|0);
      var $168=HEAP32[(($submodes)>>2)];
      var $arrayidx126=(($168+($166<<2))|0);
      var $169=HEAP32[(($arrayidx126)>>2)];
      var $tobool127=(($169)|0)!=0;
      if ($tobool127) { __label__ = 28; break; } else { __label__ = 34; break; }
    case 28: // $lor_lhs_false
      var $170=$st;
      var $complexity=(($170+192)|0);
      var $171=HEAP32[(($complexity)>>2)];
      var $cmp128=(($171)|0) > 2;
      if ($cmp128) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $land_lhs_true
      var $172=$st;
      var $submodeID129=(($172+212)|0);
      var $173=HEAP32[(($submodeID129)>>2)];
      var $174=$st;
      var $submodes130=(($174+208)|0);
      var $175=HEAP32[(($submodes130)>>2)];
      var $arrayidx131=(($175+($173<<2))|0);
      var $176=HEAP32[(($arrayidx131)>>2)];
      var $have_subframe_gain=(($176+8)|0);
      var $177=HEAP32[(($have_subframe_gain)>>2)];
      var $cmp132=(($177)|0) < 3;
      if ($cmp132) { __label__ = 34; break; } else { __label__ = 30; break; }
    case 30: // $lor_lhs_false133
      var $178=$st;
      var $submodeID134=(($178+212)|0);
      var $179=HEAP32[(($submodeID134)>>2)];
      var $180=$st;
      var $submodes135=(($180+208)|0);
      var $181=HEAP32[(($submodes135)>>2)];
      var $arrayidx136=(($181+($179<<2))|0);
      var $182=HEAP32[(($arrayidx136)>>2)];
      var $forced_pitch_gain=(($182+4)|0);
      var $183=HEAP32[(($forced_pitch_gain)>>2)];
      var $tobool137=(($183)|0)!=0;
      if ($tobool137) { __label__ = 34; break; } else { __label__ = 31; break; }
    case 31: // $lor_lhs_false138
      var $184=$st;
      var $submodeID139=(($184+212)|0);
      var $185=HEAP32[(($submodeID139)>>2)];
      var $186=$st;
      var $submodes140=(($186+208)|0);
      var $187=HEAP32[(($submodes140)>>2)];
      var $arrayidx141=(($187+($185<<2))|0);
      var $188=HEAP32[(($arrayidx141)>>2)];
      var $lbr_pitch=(($188)|0);
      var $189=HEAP32[(($lbr_pitch)>>2)];
      var $cmp142=(($189)|0)!=-1;
      if ($cmp142) { __label__ = 34; break; } else { __label__ = 32; break; }
    case 32: // $lor_lhs_false143
      var $190=$st;
      var $vbr_enabled=(($190+156)|0);
      var $191=HEAP32[(($vbr_enabled)>>2)];
      var $tobool144=(($191)|0)!=0;
      if ($tobool144) { __label__ = 34; break; } else { __label__ = 33; break; }
    case 33: // $lor_lhs_false145
      var $192=$st;
      var $vad_enabled=(($192+164)|0);
      var $193=HEAP32[(($vad_enabled)>>2)];
      var $tobool146=(($193)|0)!=0;
      if ($tobool146) { __label__ = 34; break; } else { __label__ = 57; break; }
    case 34: // $if_then147
      var $194=$st;
      var $gamma1=(($194+56)|0);
      var $195=HEAPF32[(($gamma1)>>2)];
      var $196=$st;
      var $lpcSize148=(($196+24)|0);
      var $197=HEAP32[(($lpcSize148)>>2)];
      _bw_lpc($195, $vla15, $vla3, $197);
      var $198=$st;
      var $gamma2=(($198+60)|0);
      var $199=HEAPF32[(($gamma2)>>2)];
      var $200=$st;
      var $lpcSize149=(($200+24)|0);
      var $201=HEAP32[(($lpcSize149)>>2)];
      _bw_lpc($199, $vla15, $vla5, $201);
      var $202=$st;
      var $sw=(($202+88)|0);
      var $203=HEAP32[(($sw)>>2)];
      var $204=$203;
      var $205=$st;
      var $winBuf150=(($205+72)|0);
      var $206=HEAP32[(($winBuf150)>>2)];
      var $207=$206;
      var $208=$diff;
      var $mul151=((($208<<2))|0);
      var $209=$st;
      var $sw152=(($209+88)|0);
      var $210=HEAP32[(($sw152)>>2)];
      var $211=$st;
      var $winBuf153=(($211+72)|0);
      var $212=HEAP32[(($winBuf153)>>2)];
      var $sub_ptr_lhs_cast154=$210;
      var $sub_ptr_rhs_cast155=$212;
      var $sub_ptr_sub156=(($sub_ptr_lhs_cast154-$sub_ptr_rhs_cast155)|0);
      var $sub_ptr_div157=(((($sub_ptr_sub156)|0)/4)|0);
      var $mul158=((0)|0);
      var $add159=(($mul151+$mul158)|0);
      assert($add159 % 1 === 0, 'memcpy given ' + $add159 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($204, $207, $add159, 1);
      var $213=$st;
      var $sw160=(($213+88)|0);
      var $214=HEAP32[(($sw160)>>2)];
      var $215=$diff;
      var $add_ptr161=(($214+($215<<2))|0);
      var $216=$add_ptr161;
      var $217=$in;
      var $218=$217;
      var $219=$st;
      var $frameSize162=(($219+8)|0);
      var $220=HEAP32[(($frameSize162)>>2)];
      var $221=$diff;
      var $sub163=(($220-$221)|0);
      var $mul164=((($sub163<<2))|0);
      var $222=$st;
      var $sw165=(($222+88)|0);
      var $223=HEAP32[(($sw165)>>2)];
      var $224=$diff;
      var $add_ptr166=(($223+($224<<2))|0);
      var $225=$in;
      var $sub_ptr_lhs_cast167=$add_ptr166;
      var $sub_ptr_rhs_cast168=$225;
      var $sub_ptr_sub169=(($sub_ptr_lhs_cast167-$sub_ptr_rhs_cast168)|0);
      var $sub_ptr_div170=(((($sub_ptr_sub169)|0)/4)|0);
      var $mul171=((0)|0);
      var $add172=(($mul164+$mul171)|0);
      assert($add172 % 1 === 0, 'memcpy given ' + $add172 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($216, $218, $add172, 1);
      var $226=$st;
      var $sw173=(($226+88)|0);
      var $227=HEAP32[(($sw173)>>2)];
      var $228=$st;
      var $sw174=(($228+88)|0);
      var $229=HEAP32[(($sw174)>>2)];
      var $230=$st;
      var $frameSize175=(($230+8)|0);
      var $231=HEAP32[(($frameSize175)>>2)];
      var $232=$st;
      var $lpcSize176=(($232+24)|0);
      var $233=HEAP32[(($lpcSize176)>>2)];
      var $234=$st;
      var $mem_sw_whole=(($234+116)|0);
      var $235=HEAP32[(($mem_sw_whole)>>2)];
      var $236=$stack;
      _filter_mem16($227, $vla3, $vla5, $229, $231, $233, $235, $236);
      var $237=$st;
      var $sw177=(($237+88)|0);
      var $238=HEAP32[(($sw177)>>2)];
      var $239=$st;
      var $min_pitch=(($239+28)|0);
      var $240=HEAP32[(($min_pitch)>>2)];
      var $241=$st;
      var $max_pitch178=(($241+32)|0);
      var $242=HEAP32[(($max_pitch178)>>2)];
      var $243=$st;
      var $frameSize179=(($243+8)|0);
      var $244=HEAP32[(($frameSize179)>>2)];
      var $arraydecay180=(($nol_pitch)|0);
      var $arraydecay181=(($nol_pitch_coef)|0);
      var $245=$stack;
      _open_loop_nbest_pitch($238, $240, $242, $244, $arraydecay180, $arraydecay181, 6, $245);
      var $arrayidx182=(($nol_pitch)|0);
      var $246=HEAP32[(($arrayidx182)>>2)];
      $ol_pitch=$246;
      var $arrayidx183=(($nol_pitch_coef)|0);
      var $247=HEAPF32[(($arrayidx183)>>2)];
      $ol_pitch_coef=$247;
      $i=1;
      __label__ = 35; break;
    case 35: // $for_cond184
      var $248=$i;
      var $cmp185=(($248)|0) < 6;
      if ($cmp185) { __label__ = 36; break; } else { __label__ = 56; break; }
    case 36: // $for_body186
      var $249=$i;
      var $arrayidx187=(($nol_pitch_coef+($249<<2))|0);
      var $250=HEAPF32[(($arrayidx187)>>2)];
      var $conv=$250;
      var $arrayidx188=(($nol_pitch_coef)|0);
      var $251=HEAPF32[(($arrayidx188)>>2)];
      var $conv189=$251;
      var $mul190=$conv189*0.85;
      var $cmp191=$conv > $mul190;
      if ($cmp191) { __label__ = 37; break; } else { __label__ = 54; break; }
    case 37: // $land_lhs_true193
      var $252=$i;
      var $arrayidx194=(($nol_pitch+($252<<2))|0);
      var $253=HEAP32[(($arrayidx194)>>2)];
      var $mul195=((($253<<1))|0);
      var $254=$ol_pitch;
      var $sub196=(($mul195-$254)|0);
      var $cmp197=(($sub196)|0) < 0;
      if ($cmp197) { __label__ = 38; break; } else { __label__ = 39; break; }
    case 38: // $cond_true
      var $255=$i;
      var $arrayidx199=(($nol_pitch+($255<<2))|0);
      var $256=HEAP32[(($arrayidx199)>>2)];
      var $mul200=((($256<<1))|0);
      var $257=$ol_pitch;
      var $sub201=(($mul200-$257)|0);
      var $sub202=(((-$sub201))|0);
      var $cond206 = $sub202;__label__ = 40; break;
    case 39: // $cond_false
      var $258=$i;
      var $arrayidx203=(($nol_pitch+($258<<2))|0);
      var $259=HEAP32[(($arrayidx203)>>2)];
      var $mul204=((($259<<1))|0);
      var $260=$ol_pitch;
      var $sub205=(($mul204-$260)|0);
      var $cond206 = $sub205;__label__ = 40; break;
    case 40: // $cond_end
      var $cond206;
      var $cmp207=(($cond206)|0) <= 2;
      if ($cmp207) { __label__ = 53; break; } else { __label__ = 41; break; }
    case 41: // $lor_lhs_false209
      var $261=$i;
      var $arrayidx210=(($nol_pitch+($261<<2))|0);
      var $262=HEAP32[(($arrayidx210)>>2)];
      var $mul211=(($262*3)|0);
      var $263=$ol_pitch;
      var $sub212=(($mul211-$263)|0);
      var $cmp213=(($sub212)|0) < 0;
      if ($cmp213) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $cond_true215
      var $264=$i;
      var $arrayidx216=(($nol_pitch+($264<<2))|0);
      var $265=HEAP32[(($arrayidx216)>>2)];
      var $mul217=(($265*3)|0);
      var $266=$ol_pitch;
      var $sub218=(($mul217-$266)|0);
      var $sub219=(((-$sub218))|0);
      var $cond225 = $sub219;__label__ = 44; break;
    case 43: // $cond_false220
      var $267=$i;
      var $arrayidx221=(($nol_pitch+($267<<2))|0);
      var $268=HEAP32[(($arrayidx221)>>2)];
      var $mul222=(($268*3)|0);
      var $269=$ol_pitch;
      var $sub223=(($mul222-$269)|0);
      var $cond225 = $sub223;__label__ = 44; break;
    case 44: // $cond_end224
      var $cond225;
      var $cmp226=(($cond225)|0) <= 3;
      if ($cmp226) { __label__ = 53; break; } else { __label__ = 45; break; }
    case 45: // $lor_lhs_false228
      var $270=$i;
      var $arrayidx229=(($nol_pitch+($270<<2))|0);
      var $271=HEAP32[(($arrayidx229)>>2)];
      var $mul230=((($271<<2))|0);
      var $272=$ol_pitch;
      var $sub231=(($mul230-$272)|0);
      var $cmp232=(($sub231)|0) < 0;
      if ($cmp232) { __label__ = 46; break; } else { __label__ = 47; break; }
    case 46: // $cond_true234
      var $273=$i;
      var $arrayidx235=(($nol_pitch+($273<<2))|0);
      var $274=HEAP32[(($arrayidx235)>>2)];
      var $mul236=((($274<<2))|0);
      var $275=$ol_pitch;
      var $sub237=(($mul236-$275)|0);
      var $sub238=(((-$sub237))|0);
      var $cond244 = $sub238;__label__ = 48; break;
    case 47: // $cond_false239
      var $276=$i;
      var $arrayidx240=(($nol_pitch+($276<<2))|0);
      var $277=HEAP32[(($arrayidx240)>>2)];
      var $mul241=((($277<<2))|0);
      var $278=$ol_pitch;
      var $sub242=(($mul241-$278)|0);
      var $cond244 = $sub242;__label__ = 48; break;
    case 48: // $cond_end243
      var $cond244;
      var $cmp245=(($cond244)|0) <= 4;
      if ($cmp245) { __label__ = 53; break; } else { __label__ = 49; break; }
    case 49: // $lor_lhs_false247
      var $279=$i;
      var $arrayidx248=(($nol_pitch+($279<<2))|0);
      var $280=HEAP32[(($arrayidx248)>>2)];
      var $mul249=(($280*5)|0);
      var $281=$ol_pitch;
      var $sub250=(($mul249-$281)|0);
      var $cmp251=(($sub250)|0) < 0;
      if ($cmp251) { __label__ = 50; break; } else { __label__ = 51; break; }
    case 50: // $cond_true253
      var $282=$i;
      var $arrayidx254=(($nol_pitch+($282<<2))|0);
      var $283=HEAP32[(($arrayidx254)>>2)];
      var $mul255=(($283*5)|0);
      var $284=$ol_pitch;
      var $sub256=(($mul255-$284)|0);
      var $sub257=(((-$sub256))|0);
      var $cond263 = $sub257;__label__ = 52; break;
    case 51: // $cond_false258
      var $285=$i;
      var $arrayidx259=(($nol_pitch+($285<<2))|0);
      var $286=HEAP32[(($arrayidx259)>>2)];
      var $mul260=(($286*5)|0);
      var $287=$ol_pitch;
      var $sub261=(($mul260-$287)|0);
      var $cond263 = $sub261;__label__ = 52; break;
    case 52: // $cond_end262
      var $cond263;
      var $cmp264=(($cond263)|0) <= 5;
      if ($cmp264) { __label__ = 53; break; } else { __label__ = 54; break; }
    case 53: // $if_then266
      var $288=$i;
      var $arrayidx267=(($nol_pitch+($288<<2))|0);
      var $289=HEAP32[(($arrayidx267)>>2)];
      $ol_pitch=$289;
      __label__ = 54; break;
    case 54: // $if_end268
      __label__ = 55; break;
    case 55: // $for_inc269
      var $290=$i;
      var $inc270=(($290+1)|0);
      $i=$inc270;
      __label__ = 35; break;
    case 56: // $for_end271
      __label__ = 58; break;
    case 57: // $if_else272
      $ol_pitch=0;
      $ol_pitch_coef=0;
      __label__ = 58; break;
    case 58: // $if_end273
      var $291=$st;
      var $exc=(($291+80)|0);
      var $292=HEAP32[(($exc)>>2)];
      var $293=$292;
      var $294=$st;
      var $winBuf274=(($294+72)|0);
      var $295=HEAP32[(($winBuf274)>>2)];
      var $296=$295;
      var $297=$diff;
      var $mul275=((($297<<2))|0);
      var $298=$st;
      var $exc276=(($298+80)|0);
      var $299=HEAP32[(($exc276)>>2)];
      var $300=$st;
      var $winBuf277=(($300+72)|0);
      var $301=HEAP32[(($winBuf277)>>2)];
      var $sub_ptr_lhs_cast278=$299;
      var $sub_ptr_rhs_cast279=$301;
      var $sub_ptr_sub280=(($sub_ptr_lhs_cast278-$sub_ptr_rhs_cast279)|0);
      var $sub_ptr_div281=(((($sub_ptr_sub280)|0)/4)|0);
      var $mul282=((0)|0);
      var $add283=(($mul275+$mul282)|0);
      assert($add283 % 1 === 0, 'memcpy given ' + $add283 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($293, $296, $add283, 1);
      var $302=$st;
      var $exc284=(($302+80)|0);
      var $303=HEAP32[(($exc284)>>2)];
      var $304=$diff;
      var $add_ptr285=(($303+($304<<2))|0);
      var $305=$add_ptr285;
      var $306=$in;
      var $307=$306;
      var $308=$st;
      var $frameSize286=(($308+8)|0);
      var $309=HEAP32[(($frameSize286)>>2)];
      var $310=$diff;
      var $sub287=(($309-$310)|0);
      var $mul288=((($sub287<<2))|0);
      var $311=$st;
      var $exc289=(($311+80)|0);
      var $312=HEAP32[(($exc289)>>2)];
      var $313=$diff;
      var $add_ptr290=(($312+($313<<2))|0);
      var $314=$in;
      var $sub_ptr_lhs_cast291=$add_ptr290;
      var $sub_ptr_rhs_cast292=$314;
      var $sub_ptr_sub293=(($sub_ptr_lhs_cast291-$sub_ptr_rhs_cast292)|0);
      var $sub_ptr_div294=(((($sub_ptr_sub293)|0)/4)|0);
      var $mul295=((0)|0);
      var $add296=(($mul288+$mul295)|0);
      assert($add296 % 1 === 0, 'memcpy given ' + $add296 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($305, $307, $add296, 1);
      var $315=$st;
      var $exc297=(($315+80)|0);
      var $316=HEAP32[(($exc297)>>2)];
      var $317=$st;
      var $exc298=(($317+80)|0);
      var $318=HEAP32[(($exc298)>>2)];
      var $319=$st;
      var $frameSize299=(($319+8)|0);
      var $320=HEAP32[(($frameSize299)>>2)];
      var $321=$st;
      var $lpcSize300=(($321+24)|0);
      var $322=HEAP32[(($lpcSize300)>>2)];
      var $323=$st;
      var $mem_exc=(($323+120)|0);
      var $324=HEAP32[(($mem_exc)>>2)];
      var $325=$stack;
      _fir_mem16($316, $vla15, $318, $320, $322, $324, $325);
      var $326=$st;
      var $exc301=(($326+80)|0);
      var $327=HEAP32[(($exc301)>>2)];
      var $328=$st;
      var $frameSize302=(($328+8)|0);
      var $329=HEAP32[(($frameSize302)>>2)];
      var $call303=_compute_rms16($327, $329);
      $g=$call303;
      var $330=$st;
      var $submodeID304=(($330+212)|0);
      var $331=HEAP32[(($submodeID304)>>2)];
      var $cmp305=(($331)|0)!=1;
      if ($cmp305) { __label__ = 59; break; } else { __label__ = 61; break; }
    case 59: // $land_lhs_true307
      var $332=$ol_pitch;
      var $cmp308=(($332)|0) > 0;
      if ($cmp308) { __label__ = 60; break; } else { __label__ = 61; break; }
    case 60: // $if_then310
      var $333=$g;
      var $334=$ol_pitch_coef;
      var $335=$ol_pitch_coef;
      var $mul311=$334*$335;
      var $conv312=$mul311;
      var $mul313=$conv312*0.8;
      var $sub314=1-$mul313;
      var $call315=_sqrt($sub314);
      var $mul316=$call315*1.1;
      var $conv317=$mul316;
      var $mul318=$333*$conv317;
      $ol_gain=$mul318;
      __label__ = 62; break;
    case 61: // $if_else319
      var $336=$g;
      $ol_gain=$336;
      __label__ = 62; break;
    case 62: // $if_end320
      var $337=$st;
      var $vbr=(($337+144)|0);
      var $338=HEAP32[(($vbr)>>2)];
      var $tobool321=(($338)|0)!=0;
      if ($tobool321) { __label__ = 63; break; } else { __label__ = 118; break; }
    case 63: // $land_lhs_true322
      var $339=$st;
      var $vbr_enabled323=(($339+156)|0);
      var $340=HEAP32[(($vbr_enabled323)>>2)];
      var $tobool324=(($340)|0)!=0;
      if ($tobool324) { __label__ = 65; break; } else { __label__ = 64; break; }
    case 64: // $lor_lhs_false325
      var $341=$st;
      var $vad_enabled326=(($341+164)|0);
      var $342=HEAP32[(($vad_enabled326)>>2)];
      var $tobool327=(($342)|0)!=0;
      if ($tobool327) { __label__ = 65; break; } else { __label__ = 118; break; }
    case 65: // $if_then328
      $lsp_dist=0;
      $i=0;
      __label__ = 66; break;
    case 66: // $for_cond329
      var $343=$i;
      var $344=$st;
      var $lpcSize330=(($344+24)|0);
      var $345=HEAP32[(($lpcSize330)>>2)];
      var $cmp331=(($343)|0) < (($345)|0);
      if ($cmp331) { __label__ = 67; break; } else { __label__ = 69; break; }
    case 67: // $for_body333
      var $346=$i;
      var $347=$st;
      var $old_lsp334=(($347+100)|0);
      var $348=HEAP32[(($old_lsp334)>>2)];
      var $arrayidx335=(($348+($346<<2))|0);
      var $349=HEAPF32[(($arrayidx335)>>2)];
      var $350=$i;
      var $arrayidx336=(($vla7+($350<<2))|0);
      var $351=HEAPF32[(($arrayidx336)>>2)];
      var $sub337=$349-$351;
      var $352=$i;
      var $353=$st;
      var $old_lsp338=(($353+100)|0);
      var $354=HEAP32[(($old_lsp338)>>2)];
      var $arrayidx339=(($354+($352<<2))|0);
      var $355=HEAPF32[(($arrayidx339)>>2)];
      var $356=$i;
      var $arrayidx340=(($vla7+($356<<2))|0);
      var $357=HEAPF32[(($arrayidx340)>>2)];
      var $sub341=$355-$357;
      var $mul342=$sub337*$sub341;
      var $358=$lsp_dist;
      var $add343=$358+$mul342;
      $lsp_dist=$add343;
      __label__ = 68; break;
    case 68: // $for_inc344
      var $359=$i;
      var $inc345=(($359+1)|0);
      $i=$inc345;
      __label__ = 66; break;
    case 69: // $for_end346
      var $360=$lsp_dist;
      var $div=$360;
      $lsp_dist=$div;
      var $361=$st;
      var $abr_enabled=(($361+176)|0);
      var $362=HEAP32[(($abr_enabled)>>2)];
      var $tobool347=(($362)|0)!=0;
      if ($tobool347) { __label__ = 70; break; } else { __label__ = 81; break; }
    case 70: // $if_then348
      $qual_change=0;
      var $363=$st;
      var $abr_drift2=(($363+184)|0);
      var $364=HEAPF32[(($abr_drift2)>>2)];
      var $365=$st;
      var $abr_drift=(($365+180)|0);
      var $366=HEAPF32[(($abr_drift)>>2)];
      var $mul349=$364*$366;
      var $cmp350=$mul349 > 0;
      if ($cmp350) { __label__ = 71; break; } else { __label__ = 76; break; }
    case 71: // $if_then352
      var $367=$st;
      var $abr_drift353=(($367+180)|0);
      var $368=HEAPF32[(($abr_drift353)>>2)];
      var $conv354=$368;
      var $mul355=$conv354*-0.00001;
      var $369=$st;
      var $abr_count=(($369+188)|0);
      var $370=HEAPF32[(($abr_count)>>2)];
      var $add356=$370+1;
      var $conv357=$add356;
      var $div358=$mul355/$conv357;
      var $conv359=$div358;
      $qual_change=$conv359;
      var $371=$qual_change;
      var $conv360=$371;
      var $cmp361=$conv360 > 0.05;
      if ($cmp361) { __label__ = 72; break; } else { __label__ = 73; break; }
    case 72: // $if_then363
      $qual_change=0.05000000074505806;
      __label__ = 73; break;
    case 73: // $if_end364
      var $372=$qual_change;
      var $conv365=$372;
      var $cmp366=$conv365 < -0.05;
      if ($cmp366) { __label__ = 74; break; } else { __label__ = 75; break; }
    case 74: // $if_then368
      $qual_change=-0.05000000074505806;
      __label__ = 75; break;
    case 75: // $if_end369
      __label__ = 76; break;
    case 76: // $if_end370
      var $373=$qual_change;
      var $374=$st;
      var $vbr_quality=(($374+148)|0);
      var $375=HEAPF32[(($vbr_quality)>>2)];
      var $add371=$375+$373;
      HEAPF32[(($vbr_quality)>>2)]=$add371;
      var $376=$st;
      var $vbr_quality372=(($376+148)|0);
      var $377=HEAPF32[(($vbr_quality372)>>2)];
      var $cmp373=$377 > 10;
      if ($cmp373) { __label__ = 77; break; } else { __label__ = 78; break; }
    case 77: // $if_then375
      var $378=$st;
      var $vbr_quality376=(($378+148)|0);
      HEAPF32[(($vbr_quality376)>>2)]=10;
      __label__ = 78; break;
    case 78: // $if_end377
      var $379=$st;
      var $vbr_quality378=(($379+148)|0);
      var $380=HEAPF32[(($vbr_quality378)>>2)];
      var $cmp379=$380 < 0;
      if ($cmp379) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $if_then381
      var $381=$st;
      var $vbr_quality382=(($381+148)|0);
      HEAPF32[(($vbr_quality382)>>2)]=0;
      __label__ = 80; break;
    case 80: // $if_end383
      __label__ = 81; break;
    case 81: // $if_end384
      var $382=$st;
      var $vbr385=(($382+144)|0);
      var $383=HEAP32[(($vbr385)>>2)];
      var $384=$in;
      var $385=$st;
      var $frameSize386=(($385+8)|0);
      var $386=HEAP32[(($frameSize386)>>2)];
      var $387=$ol_pitch;
      var $388=$ol_pitch_coef;
      var $mul387=$388;
      var $call388=_vbr_analysis($383, $384, $386, $387, $mul387);
      var $389=$st;
      var $relative_quality=(($389+152)|0);
      HEAPF32[(($relative_quality)>>2)]=$call388;
      var $390=$st;
      var $vbr_enabled389=(($390+156)|0);
      var $391=HEAP32[(($vbr_enabled389)>>2)];
      var $tobool390=(($391)|0)!=0;
      if ($tobool390) { __label__ = 82; break; } else { __label__ = 107; break; }
    case 82: // $if_then391
      $choice=0;
      $min_diff=100;
      HEAP32[(($mode)>>2)]=8;
      __label__ = 83; break;
    case 83: // $while_cond
      var $392=HEAP32[(($mode)>>2)];
      var $tobool392=(($392)|0)!=0;
      if ($tobool392) { __label__ = 84; break; } else { __label__ = 91; break; }
    case 84: // $while_body
      var $393=$st;
      var $vbr_quality393=(($393+148)|0);
      var $394=HEAPF32[(($vbr_quality393)>>2)];
      var $conv394=$394;
      var $call395=_floor($conv394);
      var $conv396=(($call395)|0);
      $v1=$conv396;
      var $395=$v1;
      var $cmp397=(($395)|0)==10;
      if ($cmp397) { __label__ = 85; break; } else { __label__ = 86; break; }
    case 85: // $if_then399
      var $396=$v1;
      var $397=HEAP32[(($mode)>>2)];
      var $arrayidx400=((_vbr_nb_thresh+$397*44)|0);
      var $arrayidx401=(($arrayidx400+($396<<2))|0);
      var $398=HEAPF32[(($arrayidx401)>>2)];
      $thresh=$398;
      __label__ = 87; break;
    case 86: // $if_else402
      var $399=$st;
      var $vbr_quality403=(($399+148)|0);
      var $400=HEAPF32[(($vbr_quality403)>>2)];
      var $401=$v1;
      var $conv404=(($401)|0);
      var $sub405=$400-$conv404;
      var $402=$v1;
      var $add406=(($402+1)|0);
      var $403=HEAP32[(($mode)>>2)];
      var $arrayidx407=((_vbr_nb_thresh+$403*44)|0);
      var $arrayidx408=(($arrayidx407+($add406<<2))|0);
      var $404=HEAPF32[(($arrayidx408)>>2)];
      var $mul409=$sub405*$404;
      var $405=$v1;
      var $add410=(($405+1)|0);
      var $conv411=(($add410)|0);
      var $406=$st;
      var $vbr_quality412=(($406+148)|0);
      var $407=HEAPF32[(($vbr_quality412)>>2)];
      var $sub413=$conv411-$407;
      var $408=$v1;
      var $409=HEAP32[(($mode)>>2)];
      var $arrayidx414=((_vbr_nb_thresh+$409*44)|0);
      var $arrayidx415=(($arrayidx414+($408<<2))|0);
      var $410=HEAPF32[(($arrayidx415)>>2)];
      var $mul416=$sub413*$410;
      var $add417=$mul409+$mul416;
      $thresh=$add417;
      __label__ = 87; break;
    case 87: // $if_end418
      var $411=$st;
      var $relative_quality419=(($411+152)|0);
      var $412=HEAPF32[(($relative_quality419)>>2)];
      var $413=$thresh;
      var $cmp420=$412 > $413;
      if ($cmp420) { __label__ = 88; break; } else { __label__ = 90; break; }
    case 88: // $land_lhs_true422
      var $414=$st;
      var $relative_quality423=(($414+152)|0);
      var $415=HEAPF32[(($relative_quality423)>>2)];
      var $416=$thresh;
      var $sub424=$415-$416;
      var $417=$min_diff;
      var $cmp425=$sub424 < $417;
      if ($cmp425) { __label__ = 89; break; } else { __label__ = 90; break; }
    case 89: // $if_then427
      var $418=HEAP32[(($mode)>>2)];
      $choice=$418;
      var $419=$st;
      var $relative_quality428=(($419+152)|0);
      var $420=HEAPF32[(($relative_quality428)>>2)];
      var $421=$thresh;
      var $sub429=$420-$421;
      $min_diff=$sub429;
      __label__ = 90; break;
    case 90: // $if_end430
      var $422=HEAP32[(($mode)>>2)];
      var $dec=(($422-1)|0);
      HEAP32[(($mode)>>2)]=$dec;
      __label__ = 83; break;
    case 91: // $while_end
      var $423=$choice;
      HEAP32[(($mode)>>2)]=$423;
      var $424=HEAP32[(($mode)>>2)];
      var $cmp431=(($424)|0)==0;
      if ($cmp431) { __label__ = 92; break; } else { __label__ = 99; break; }
    case 92: // $if_then433
      var $425=$st;
      var $dtx_count=(($425+172)|0);
      var $426=HEAP32[(($dtx_count)>>2)];
      var $cmp434=(($426)|0)==0;
      if ($cmp434) { __label__ = 96; break; } else { __label__ = 93; break; }
    case 93: // $lor_lhs_false436
      var $427=$lsp_dist;
      var $conv437=$427;
      var $cmp438=$conv437 > 0.05;
      if ($cmp438) { __label__ = 96; break; } else { __label__ = 94; break; }
    case 94: // $lor_lhs_false440
      var $428=$st;
      var $dtx_enabled=(($428+168)|0);
      var $429=HEAP32[(($dtx_enabled)>>2)];
      var $tobool441=(($429)|0)!=0;
      if ($tobool441) { __label__ = 95; break; } else { __label__ = 96; break; }
    case 95: // $lor_lhs_false442
      var $430=$st;
      var $dtx_count443=(($430+172)|0);
      var $431=HEAP32[(($dtx_count443)>>2)];
      var $cmp444=(($431)|0) > 20;
      if ($cmp444) { __label__ = 96; break; } else { __label__ = 97; break; }
    case 96: // $if_then446
      HEAP32[(($mode)>>2)]=1;
      var $432=$st;
      var $dtx_count447=(($432+172)|0);
      HEAP32[(($dtx_count447)>>2)]=1;
      __label__ = 98; break;
    case 97: // $if_else448
      HEAP32[(($mode)>>2)]=0;
      var $433=$st;
      var $dtx_count449=(($433+172)|0);
      var $434=HEAP32[(($dtx_count449)>>2)];
      var $inc450=(($434+1)|0);
      HEAP32[(($dtx_count449)>>2)]=$inc450;
      __label__ = 98; break;
    case 98: // $if_end451
      __label__ = 100; break;
    case 99: // $if_else452
      var $435=$st;
      var $dtx_count453=(($435+172)|0);
      HEAP32[(($dtx_count453)>>2)]=0;
      __label__ = 100; break;
    case 100: // $if_end454
      var $436=$state_addr;
      var $437=$mode;
      var $call455=_speex_encoder_ctl($436, 6, $437);
      var $438=$st;
      var $vbr_max=(($438+160)|0);
      var $439=HEAP32[(($vbr_max)>>2)];
      var $cmp456=(($439)|0) > 0;
      if ($cmp456) { __label__ = 101; break; } else { __label__ = 104; break; }
    case 101: // $if_then458
      var $440=$state_addr;
      var $441=$rate;
      var $call459=_speex_encoder_ctl($440, 19, $441);
      var $442=HEAP32[(($rate)>>2)];
      var $443=$st;
      var $vbr_max460=(($443+160)|0);
      var $444=HEAP32[(($vbr_max460)>>2)];
      var $cmp461=(($442)|0) > (($444)|0);
      if ($cmp461) { __label__ = 102; break; } else { __label__ = 103; break; }
    case 102: // $if_then463
      var $445=$st;
      var $vbr_max464=(($445+160)|0);
      var $446=HEAP32[(($vbr_max464)>>2)];
      HEAP32[(($rate)>>2)]=$446;
      var $447=$state_addr;
      var $448=$rate;
      var $call465=_speex_encoder_ctl($447, 18, $448);
      __label__ = 103; break;
    case 103: // $if_end466
      __label__ = 104; break;
    case 104: // $if_end467
      var $449=$st;
      var $abr_enabled468=(($449+176)|0);
      var $450=HEAP32[(($abr_enabled468)>>2)];
      var $tobool469=(($450)|0)!=0;
      if ($tobool469) { __label__ = 105; break; } else { __label__ = 106; break; }
    case 105: // $if_then470
      var $451=$state_addr;
      var $452=$bitrate;
      var $call471=_speex_encoder_ctl($451, 19, $452);
      var $453=HEAP32[(($bitrate)>>2)];
      var $454=$st;
      var $abr_enabled472=(($454+176)|0);
      var $455=HEAP32[(($abr_enabled472)>>2)];
      var $sub473=(($453-$455)|0);
      var $conv474=(($sub473)|0);
      var $456=$st;
      var $abr_drift475=(($456+180)|0);
      var $457=HEAPF32[(($abr_drift475)>>2)];
      var $add476=$457+$conv474;
      HEAPF32[(($abr_drift475)>>2)]=$add476;
      var $458=$st;
      var $abr_drift2477=(($458+184)|0);
      var $459=HEAPF32[(($abr_drift2477)>>2)];
      var $conv478=$459;
      var $mul479=$conv478*0.95;
      var $460=HEAP32[(($bitrate)>>2)];
      var $461=$st;
      var $abr_enabled480=(($461+176)|0);
      var $462=HEAP32[(($abr_enabled480)>>2)];
      var $sub481=(($460-$462)|0);
      var $conv482=(($sub481)|0);
      var $mul483=$conv482*0.05;
      var $add484=$mul479+$mul483;
      var $conv485=$add484;
      var $463=$st;
      var $abr_drift2486=(($463+184)|0);
      HEAPF32[(($abr_drift2486)>>2)]=$conv485;
      var $464=$st;
      var $abr_count487=(($464+188)|0);
      var $465=HEAPF32[(($abr_count487)>>2)];
      var $conv488=$465;
      var $add489=$conv488+1;
      var $conv490=$add489;
      HEAPF32[(($abr_count487)>>2)]=$conv490;
      __label__ = 106; break;
    case 106: // $if_end491
      __label__ = 117; break;
    case 107: // $if_else492
      var $466=$st;
      var $relative_quality494=(($466+152)|0);
      var $467=HEAPF32[(($relative_quality494)>>2)];
      var $cmp495=$467 < 2;
      if ($cmp495) { __label__ = 108; break; } else { __label__ = 115; break; }
    case 108: // $if_then497
      var $468=$st;
      var $dtx_count498=(($468+172)|0);
      var $469=HEAP32[(($dtx_count498)>>2)];
      var $cmp499=(($469)|0)==0;
      if ($cmp499) { __label__ = 112; break; } else { __label__ = 109; break; }
    case 109: // $lor_lhs_false501
      var $470=$lsp_dist;
      var $conv502=$470;
      var $cmp503=$conv502 > 0.05;
      if ($cmp503) { __label__ = 112; break; } else { __label__ = 110; break; }
    case 110: // $lor_lhs_false505
      var $471=$st;
      var $dtx_enabled506=(($471+168)|0);
      var $472=HEAP32[(($dtx_enabled506)>>2)];
      var $tobool507=(($472)|0)!=0;
      if ($tobool507) { __label__ = 111; break; } else { __label__ = 112; break; }
    case 111: // $lor_lhs_false508
      var $473=$st;
      var $dtx_count509=(($473+172)|0);
      var $474=HEAP32[(($dtx_count509)>>2)];
      var $cmp510=(($474)|0) > 20;
      if ($cmp510) { __label__ = 112; break; } else { __label__ = 113; break; }
    case 112: // $if_then512
      var $475=$st;
      var $dtx_count513=(($475+172)|0);
      HEAP32[(($dtx_count513)>>2)]=1;
      $mode493=1;
      __label__ = 114; break;
    case 113: // $if_else514
      $mode493=0;
      var $476=$st;
      var $dtx_count515=(($476+172)|0);
      var $477=HEAP32[(($dtx_count515)>>2)];
      var $inc516=(($477+1)|0);
      HEAP32[(($dtx_count515)>>2)]=$inc516;
      __label__ = 114; break;
    case 114: // $if_end517
      __label__ = 116; break;
    case 115: // $if_else518
      var $478=$st;
      var $dtx_count519=(($478+172)|0);
      HEAP32[(($dtx_count519)>>2)]=0;
      var $479=$st;
      var $submodeSelect=(($479+216)|0);
      var $480=HEAP32[(($submodeSelect)>>2)];
      $mode493=$480;
      __label__ = 116; break;
    case 116: // $if_end520
      var $481=$mode493;
      var $482=$st;
      var $submodeID521=(($482+212)|0);
      HEAP32[(($submodeID521)>>2)]=$481;
      __label__ = 117; break;
    case 117: // $if_end522
      __label__ = 119; break;
    case 118: // $if_else523
      var $483=$st;
      var $relative_quality524=(($483+152)|0);
      HEAPF32[(($relative_quality524)>>2)]=-1;
      __label__ = 119; break;
    case 119: // $if_end525
      var $484=$st;
      var $encode_submode=(($484+204)|0);
      var $485=HEAP32[(($encode_submode)>>2)];
      var $tobool526=(($485)|0)!=0;
      if ($tobool526) { __label__ = 120; break; } else { __label__ = 121; break; }
    case 120: // $if_then527
      var $486=$bits_addr;
      _speex_bits_pack($486, 0, 1);
      var $487=$bits_addr;
      var $488=$st;
      var $submodeID528=(($488+212)|0);
      var $489=HEAP32[(($submodeID528)>>2)];
      _speex_bits_pack($487, $489, 4);
      __label__ = 121; break;
    case 121: // $if_end529
      var $490=$st;
      var $submodeID530=(($490+212)|0);
      var $491=HEAP32[(($submodeID530)>>2)];
      var $492=$st;
      var $submodes531=(($492+208)|0);
      var $493=HEAP32[(($submodes531)>>2)];
      var $arrayidx532=(($493+($491<<2))|0);
      var $494=HEAP32[(($arrayidx532)>>2)];
      var $cmp533=(($494)|0)==0;
      if ($cmp533) { __label__ = 122; break; } else { __label__ = 135; break; }
    case 122: // $if_then535
      $i=0;
      __label__ = 123; break;
    case 123: // $for_cond536
      var $495=$i;
      var $496=$st;
      var $frameSize537=(($496+8)|0);
      var $497=HEAP32[(($frameSize537)>>2)];
      var $cmp538=(($495)|0) < (($497)|0);
      if ($cmp538) { __label__ = 124; break; } else { __label__ = 126; break; }
    case 124: // $for_body540
      var $498=$i;
      var $499=$st;
      var $sw541=(($499+88)|0);
      var $500=HEAP32[(($sw541)>>2)];
      var $arrayidx542=(($500+($498<<2))|0);
      HEAPF32[(($arrayidx542)>>2)]=1.0000000036274937e-15;
      var $501=$i;
      var $502=$st;
      var $exc543=(($502+80)|0);
      var $503=HEAP32[(($exc543)>>2)];
      var $arrayidx544=(($503+($501<<2))|0);
      HEAPF32[(($arrayidx544)>>2)]=1.0000000036274937e-15;
      __label__ = 125; break;
    case 125: // $for_inc545
      var $504=$i;
      var $inc546=(($504+1)|0);
      $i=$inc546;
      __label__ = 123; break;
    case 126: // $for_end547
      $i=0;
      __label__ = 127; break;
    case 127: // $for_cond548
      var $505=$i;
      var $506=$st;
      var $lpcSize549=(($506+24)|0);
      var $507=HEAP32[(($lpcSize549)>>2)];
      var $cmp550=(($505)|0) < (($507)|0);
      if ($cmp550) { __label__ = 128; break; } else { __label__ = 130; break; }
    case 128: // $for_body552
      var $508=$i;
      var $509=$st;
      var $mem_sw=(($509+112)|0);
      var $510=HEAP32[(($mem_sw)>>2)];
      var $arrayidx553=(($510+($508<<2))|0);
      HEAPF32[(($arrayidx553)>>2)]=0;
      __label__ = 129; break;
    case 129: // $for_inc554
      var $511=$i;
      var $inc555=(($511+1)|0);
      $i=$inc555;
      __label__ = 127; break;
    case 130: // $for_end556
      var $512=$st;
      var $first557=(($512+4)|0);
      HEAP32[(($first557)>>2)]=1;
      var $513=$st;
      var $bounded_pitch=(($513+40)|0);
      HEAP32[(($bounded_pitch)>>2)]=1;
      var $514=$st;
      var $winBuf558=(($514+72)|0);
      var $515=HEAP32[(($winBuf558)>>2)];
      var $516=$515;
      var $517=$in;
      var $518=$st;
      var $frameSize559=(($518+8)|0);
      var $519=HEAP32[(($frameSize559)>>2)];
      var $mul560=((($519<<1))|0);
      var $add_ptr561=(($517+($mul560<<2))|0);
      var $520=$st;
      var $windowSize562=(($520+20)|0);
      var $521=HEAP32[(($windowSize562)>>2)];
      var $idx_neg=(((-$521))|0);
      var $add_ptr563=(($add_ptr561+($idx_neg<<2))|0);
      var $522=$add_ptr563;
      var $523=$st;
      var $windowSize564=(($523+20)|0);
      var $524=HEAP32[(($windowSize564)>>2)];
      var $525=$st;
      var $frameSize565=(($525+8)|0);
      var $526=HEAP32[(($frameSize565)>>2)];
      var $sub566=(($524-$526)|0);
      var $mul567=((($sub566<<2))|0);
      var $527=$st;
      var $winBuf568=(($527+72)|0);
      var $528=HEAP32[(($winBuf568)>>2)];
      var $529=$in;
      var $530=$st;
      var $frameSize569=(($530+8)|0);
      var $531=HEAP32[(($frameSize569)>>2)];
      var $mul570=((($531<<1))|0);
      var $add_ptr571=(($529+($mul570<<2))|0);
      var $532=$st;
      var $windowSize572=(($532+20)|0);
      var $533=HEAP32[(($windowSize572)>>2)];
      var $idx_neg573=(((-$533))|0);
      var $add_ptr574=(($add_ptr571+($idx_neg573<<2))|0);
      var $sub_ptr_lhs_cast575=$528;
      var $sub_ptr_rhs_cast576=$add_ptr574;
      var $sub_ptr_sub577=(($sub_ptr_lhs_cast575-$sub_ptr_rhs_cast576)|0);
      var $sub_ptr_div578=(((($sub_ptr_sub577)|0)/4)|0);
      var $mul579=((0)|0);
      var $add580=(($mul567+$mul579)|0);
      assert($add580 % 1 === 0, 'memcpy given ' + $add580 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($516, $522, $add580, 1);
      $i=0;
      __label__ = 131; break;
    case 131: // $for_cond581
      var $534=$i;
      var $535=$st;
      var $lpcSize582=(($535+24)|0);
      var $536=HEAP32[(($lpcSize582)>>2)];
      var $cmp583=(($534)|0) < (($536)|0);
      if ($cmp583) { __label__ = 132; break; } else { __label__ = 134; break; }
    case 132: // $for_body585
      var $537=$i;
      var $538=$st;
      var $mem_sp=(($538+108)|0);
      var $539=HEAP32[(($mem_sp)>>2)];
      var $arrayidx586=(($539+($537<<2))|0);
      HEAPF32[(($arrayidx586)>>2)]=0;
      __label__ = 133; break;
    case 133: // $for_inc587
      var $540=$i;
      var $inc588=(($540+1)|0);
      $i=$inc588;
      __label__ = 131; break;
    case 134: // $for_end589
      $retval=0;
      $cleanup_dest_slot=1;
      __label__ = 288; break;
    case 135: // $if_end590
      var $541=$st;
      var $first591=(($541+4)|0);
      var $542=HEAP32[(($first591)>>2)];
      var $tobool592=(($542)|0)!=0;
      if ($tobool592) { __label__ = 136; break; } else { __label__ = 141; break; }
    case 136: // $if_then593
      $i=0;
      __label__ = 137; break;
    case 137: // $for_cond594
      var $543=$i;
      var $544=$st;
      var $lpcSize595=(($544+24)|0);
      var $545=HEAP32[(($lpcSize595)>>2)];
      var $cmp596=(($543)|0) < (($545)|0);
      if ($cmp596) { __label__ = 138; break; } else { __label__ = 140; break; }
    case 138: // $for_body598
      var $546=$i;
      var $arrayidx599=(($vla7+($546<<2))|0);
      var $547=HEAPF32[(($arrayidx599)>>2)];
      var $548=$i;
      var $549=$st;
      var $old_lsp600=(($549+100)|0);
      var $550=HEAP32[(($old_lsp600)>>2)];
      var $arrayidx601=(($550+($548<<2))|0);
      HEAPF32[(($arrayidx601)>>2)]=$547;
      __label__ = 139; break;
    case 139: // $for_inc602
      var $551=$i;
      var $inc603=(($551+1)|0);
      $i=$inc603;
      __label__ = 137; break;
    case 140: // $for_end604
      __label__ = 141; break;
    case 141: // $if_end605
      var $552=$st;
      var $submodeID606=(($552+212)|0);
      var $553=HEAP32[(($submodeID606)>>2)];
      var $554=$st;
      var $submodes607=(($554+208)|0);
      var $555=HEAP32[(($submodes607)>>2)];
      var $arrayidx608=(($555+($553<<2))|0);
      var $556=HEAP32[(($arrayidx608)>>2)];
      var $lsp_quant=(($556+16)|0);
      var $557=HEAP32[(($lsp_quant)>>2)];
      var $558=$st;
      var $lpcSize609=(($558+24)|0);
      var $559=HEAP32[(($lpcSize609)>>2)];
      var $560=$bits_addr;
      FUNCTION_TABLE[$557]($vla7, $vla9, $559, $560);
      var $561=$st;
      var $submodeID610=(($561+212)|0);
      var $562=HEAP32[(($submodeID610)>>2)];
      var $563=$st;
      var $submodes611=(($563+208)|0);
      var $564=HEAP32[(($submodes611)>>2)];
      var $arrayidx612=(($564+($562<<2))|0);
      var $565=HEAP32[(($arrayidx612)>>2)];
      var $lbr_pitch613=(($565)|0);
      var $566=HEAP32[(($lbr_pitch613)>>2)];
      var $cmp614=(($566)|0)!=-1;
      if ($cmp614) { __label__ = 142; break; } else { __label__ = 143; break; }
    case 142: // $if_then616
      var $567=$bits_addr;
      var $568=$ol_pitch;
      var $569=$st;
      var $min_pitch617=(($569+28)|0);
      var $570=HEAP32[(($min_pitch617)>>2)];
      var $sub618=(($568-$570)|0);
      _speex_bits_pack($567, $sub618, 7);
      __label__ = 143; break;
    case 143: // $if_end619
      var $571=$st;
      var $submodeID620=(($571+212)|0);
      var $572=HEAP32[(($submodeID620)>>2)];
      var $573=$st;
      var $submodes621=(($573+208)|0);
      var $574=HEAP32[(($submodes621)>>2)];
      var $arrayidx622=(($574+($572<<2))|0);
      var $575=HEAP32[(($arrayidx622)>>2)];
      var $forced_pitch_gain623=(($575+4)|0);
      var $576=HEAP32[(($forced_pitch_gain623)>>2)];
      var $tobool624=(($576)|0)!=0;
      if ($tobool624) { __label__ = 144; break; } else { __label__ = 149; break; }
    case 144: // $if_then625
      var $577=$ol_pitch_coef;
      var $conv626=$577;
      var $mul627=$conv626*0.9;
      var $conv628=$mul627;
      $ol_pitch_coef=$conv628;
      var $578=$ol_pitch_coef;
      var $mul629=$578*15;
      var $mul630=$mul629;
      var $conv631=$mul630;
      var $add632=$conv631+0.5;
      var $call633=_floor($add632);
      var $conv634=(($call633)|0);
      $quant=$conv634;
      var $579=$quant;
      var $cmp635=(($579)|0) > 15;
      if ($cmp635) { __label__ = 145; break; } else { __label__ = 146; break; }
    case 145: // $if_then637
      $quant=15;
      __label__ = 146; break;
    case 146: // $if_end638
      var $580=$quant;
      var $cmp639=(($580)|0) < 0;
      if ($cmp639) { __label__ = 147; break; } else { __label__ = 148; break; }
    case 147: // $if_then641
      $quant=0;
      __label__ = 148; break;
    case 148: // $if_end642
      var $581=$bits_addr;
      var $582=$quant;
      _speex_bits_pack($581, $582, 4);
      var $583=$quant;
      var $conv643=(($583)|0);
      var $mul644=$conv643*0.066667;
      var $conv645=$mul644;
      $ol_pitch_coef=$conv645;
      __label__ = 149; break;
    case 149: // $if_end646
      var $584=$ol_gain;
      var $conv647=$584;
      var $mul648=$conv647;
      var $div649=$mul648;
      var $call650=_log($div649);
      var $mul651=$call650*3.5;
      var $add652=$mul651+0.5;
      var $call653=_floor($add652);
      var $conv654=(($call653)|0);
      $qe=$conv654;
      var $585=$qe;
      var $cmp655=(($585)|0) < 0;
      if ($cmp655) { __label__ = 150; break; } else { __label__ = 151; break; }
    case 150: // $if_then657
      $qe=0;
      __label__ = 151; break;
    case 151: // $if_end658
      var $586=$qe;
      var $cmp659=(($586)|0) > 31;
      if ($cmp659) { __label__ = 152; break; } else { __label__ = 153; break; }
    case 152: // $if_then661
      $qe=31;
      __label__ = 153; break;
    case 153: // $if_end662
      var $587=$qe;
      var $conv663=(($587)|0);
      var $div664=$conv663/3.5;
      var $call665=_exp($div664);
      var $mul666=$call665;
      var $conv667=$mul666;
      $ol_gain=$conv667;
      var $588=$bits_addr;
      var $589=$qe;
      _speex_bits_pack($588, $589, 5);
      var $590=$st;
      var $first668=(($590+4)|0);
      var $591=HEAP32[(($first668)>>2)];
      var $tobool669=(($591)|0)!=0;
      if ($tobool669) { __label__ = 154; break; } else { __label__ = 159; break; }
    case 154: // $if_then670
      $i=0;
      __label__ = 155; break;
    case 155: // $for_cond671
      var $592=$i;
      var $593=$st;
      var $lpcSize672=(($593+24)|0);
      var $594=HEAP32[(($lpcSize672)>>2)];
      var $cmp673=(($592)|0) < (($594)|0);
      if ($cmp673) { __label__ = 156; break; } else { __label__ = 158; break; }
    case 156: // $for_body675
      var $595=$i;
      var $arrayidx676=(($vla9+($595<<2))|0);
      var $596=HEAPF32[(($arrayidx676)>>2)];
      var $597=$i;
      var $598=$st;
      var $old_qlsp=(($598+104)|0);
      var $599=HEAP32[(($old_qlsp)>>2)];
      var $arrayidx677=(($599+($597<<2))|0);
      HEAPF32[(($arrayidx677)>>2)]=$596;
      __label__ = 157; break;
    case 157: // $for_inc678
      var $600=$i;
      var $inc679=(($600+1)|0);
      $i=$inc679;
      __label__ = 155; break;
    case 158: // $for_end680
      __label__ = 159; break;
    case 159: // $if_end681
      var $601=$st;
      var $subframeSize=(($601+12)|0);
      var $602=HEAP32[(($subframeSize)>>2)];
      var $vla682=STACKTOP;STACKTOP += $602*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $603=$st;
      var $subframeSize683=(($603+12)|0);
      var $604=HEAP32[(($subframeSize683)>>2)];
      var $vla684=STACKTOP;STACKTOP += $604*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $605=$st;
      var $subframeSize685=(($605+12)|0);
      var $606=HEAP32[(($subframeSize685)>>2)];
      var $vla686=STACKTOP;STACKTOP += $606*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $607=$st;
      var $subframeSize687=(($607+12)|0);
      var $608=HEAP32[(($subframeSize687)>>2)];
      var $vla688=STACKTOP;STACKTOP += $608*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $609=$st;
      var $subframeSize689=(($609+12)|0);
      var $610=HEAP32[(($subframeSize689)>>2)];
      var $vla690=STACKTOP;STACKTOP += $610*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $611=$st;
      var $subframeSize691=(($611+12)|0);
      var $612=HEAP32[(($subframeSize691)>>2)];
      var $vla692=STACKTOP;STACKTOP += $612*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $613=$st;
      var $lpcSize693=(($613+24)|0);
      var $614=HEAP32[(($lpcSize693)>>2)];
      var $vla694=STACKTOP;STACKTOP += $614*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $sub=0;
      __label__ = 160; break;
    case 160: // $for_cond695
      var $615=$sub;
      var $616=$st;
      var $nbSubframes696=(($616+16)|0);
      var $617=HEAP32[(($nbSubframes696)>>2)];
      var $cmp697=(($615)|0) < (($617)|0);
      if ($cmp697) { __label__ = 161; break; } else { __label__ = 268; break; }
    case 161: // $for_body699
      var $618=$st;
      var $subframeSize702=(($618+12)|0);
      var $619=HEAP32[(($subframeSize702)>>2)];
      $response_bound=$619;
      var $620=$st;
      var $subframeSize703=(($620+12)|0);
      var $621=HEAP32[(($subframeSize703)>>2)];
      var $622=$sub;
      var $mul704=(($621*$622)|0);
      $offset=$mul704;
      var $623=$st;
      var $exc705=(($623+80)|0);
      var $624=HEAP32[(($exc705)>>2)];
      var $625=$offset;
      var $add_ptr706=(($624+($625<<2))|0);
      $exc701=$add_ptr706;
      var $626=$st;
      var $sw707=(($626+88)|0);
      var $627=HEAP32[(($sw707)>>2)];
      var $628=$offset;
      var $add_ptr708=(($627+($628<<2))|0);
      $sw700=$add_ptr708;
      var $629=$st;
      var $old_lsp709=(($629+100)|0);
      var $630=HEAP32[(($old_lsp709)>>2)];
      var $631=$st;
      var $lpcSize710=(($631+24)|0);
      var $632=HEAP32[(($lpcSize710)>>2)];
      var $633=$sub;
      var $634=$st;
      var $nbSubframes711=(($634+16)|0);
      var $635=HEAP32[(($nbSubframes711)>>2)];
      _lsp_interpolate($630, $vla7, $vla11, $632, $633, $635);
      var $636=$st;
      var $old_qlsp712=(($636+104)|0);
      var $637=HEAP32[(($old_qlsp712)>>2)];
      var $638=$st;
      var $lpcSize713=(($638+24)|0);
      var $639=HEAP32[(($lpcSize713)>>2)];
      var $640=$sub;
      var $641=$st;
      var $nbSubframes714=(($641+16)|0);
      var $642=HEAP32[(($nbSubframes714)>>2)];
      _lsp_interpolate($637, $vla9, $vla13, $639, $640, $642);
      var $643=$st;
      var $lpcSize715=(($643+24)|0);
      var $644=HEAP32[(($lpcSize715)>>2)];
      _lsp_enforce_margin($vla11, $644, 0.0020000000949949026);
      var $645=$st;
      var $lpcSize716=(($645+24)|0);
      var $646=HEAP32[(($lpcSize716)>>2)];
      _lsp_enforce_margin($vla13, $646, 0.0020000000949949026);
      var $647=$st;
      var $lpcSize717=(($647+24)|0);
      var $648=HEAP32[(($lpcSize717)>>2)];
      var $649=$stack;
      _lsp_to_lpc($vla11, $vla15, $648, $649);
      var $650=$st;
      var $lpcSize718=(($650+24)|0);
      var $651=HEAP32[(($lpcSize718)>>2)];
      var $652=$stack;
      _lsp_to_lpc($vla13, $vla17, $651, $652);
      $pi_g=1;
      $i=0;
      __label__ = 162; break;
    case 162: // $for_cond719
      var $653=$i;
      var $654=$st;
      var $lpcSize720=(($654+24)|0);
      var $655=HEAP32[(($lpcSize720)>>2)];
      var $cmp721=(($653)|0) < (($655)|0);
      if ($cmp721) { __label__ = 163; break; } else { __label__ = 165; break; }
    case 163: // $for_body723
      var $656=$pi_g;
      var $657=$i;
      var $add724=(($657+1)|0);
      var $arrayidx725=(($vla17+($add724<<2))|0);
      var $658=HEAPF32[(($arrayidx725)>>2)];
      var $659=$i;
      var $arrayidx726=(($vla17+($659<<2))|0);
      var $660=HEAPF32[(($arrayidx726)>>2)];
      var $sub727=$658-$660;
      var $add728=$656+$sub727;
      $pi_g=$add728;
      __label__ = 164; break;
    case 164: // $for_inc729
      var $661=$i;
      var $add730=(($661+2)|0);
      $i=$add730;
      __label__ = 162; break;
    case 165: // $for_end731
      var $662=$pi_g;
      var $663=$sub;
      var $664=$st;
      var $pi_gain=(($664+136)|0);
      var $665=HEAP32[(($pi_gain)>>2)];
      var $arrayidx732=(($665+($663<<2))|0);
      HEAPF32[(($arrayidx732)>>2)]=$662;
      var $666=$st;
      var $gamma1733=(($666+56)|0);
      var $667=HEAPF32[(($gamma1733)>>2)];
      var $668=$st;
      var $lpcSize734=(($668+24)|0);
      var $669=HEAP32[(($lpcSize734)>>2)];
      _bw_lpc($667, $vla15, $vla3, $669);
      var $670=$st;
      var $gamma2735=(($670+60)|0);
      var $671=HEAPF32[(($gamma2735)>>2)];
      var $cmp736=$671 >= 0;
      if ($cmp736) { __label__ = 166; break; } else { __label__ = 167; break; }
    case 166: // $if_then738
      var $672=$st;
      var $gamma2739=(($672+60)|0);
      var $673=HEAPF32[(($gamma2739)>>2)];
      var $674=$st;
      var $lpcSize740=(($674+24)|0);
      var $675=HEAP32[(($lpcSize740)>>2)];
      _bw_lpc($673, $vla15, $vla5, $675);
      __label__ = 172; break;
    case 167: // $if_else741
      $i=0;
      __label__ = 168; break;
    case 168: // $for_cond742
      var $676=$i;
      var $677=$st;
      var $lpcSize743=(($677+24)|0);
      var $678=HEAP32[(($lpcSize743)>>2)];
      var $cmp744=(($676)|0) < (($678)|0);
      if ($cmp744) { __label__ = 169; break; } else { __label__ = 171; break; }
    case 169: // $for_body746
      var $679=$i;
      var $arrayidx747=(($vla5+($679<<2))|0);
      HEAPF32[(($arrayidx747)>>2)]=0;
      __label__ = 170; break;
    case 170: // $for_inc748
      var $680=$i;
      var $inc749=(($680+1)|0);
      $i=$inc749;
      __label__ = 168; break;
    case 171: // $for_end750
      __label__ = 172; break;
    case 172: // $if_end751
      var $681=$st;
      var $windowSize752=(($681+20)|0);
      var $682=HEAP32[(($windowSize752)>>2)];
      var $683=$st;
      var $frameSize753=(($683+8)|0);
      var $684=HEAP32[(($frameSize753)>>2)];
      var $sub754=(($682-$684)|0);
      var $685=$st;
      var $subframeSize755=(($685+12)|0);
      var $686=HEAP32[(($subframeSize755)>>2)];
      var $cmp756=(($sub754)|0)==(($686)|0);
      if ($cmp756) { __label__ = 174; break; } else { __label__ = 173; break; }
    case 173: // $if_then758
      __speex_fatal(((STRING_TABLE.__str30)|0), ((STRING_TABLE.__str131)|0), 708);
      __label__ = 174; break;
    case 174: // $if_end759
      var $687=$sub;
      var $cmp760=(($687)|0)==0;
      if ($cmp760) { __label__ = 175; break; } else { __label__ = 180; break; }
    case 175: // $if_then762
      $i=0;
      __label__ = 176; break;
    case 176: // $for_cond763
      var $688=$i;
      var $689=$st;
      var $subframeSize764=(($689+12)|0);
      var $690=HEAP32[(($subframeSize764)>>2)];
      var $cmp765=(($688)|0) < (($690)|0);
      if ($cmp765) { __label__ = 177; break; } else { __label__ = 179; break; }
    case 177: // $for_body767
      var $691=$i;
      var $692=$st;
      var $winBuf768=(($692+72)|0);
      var $693=HEAP32[(($winBuf768)>>2)];
      var $arrayidx769=(($693+($691<<2))|0);
      var $694=HEAPF32[(($arrayidx769)>>2)];
      var $695=$i;
      var $696=$sw700;
      var $arrayidx770=(($696+($695<<2))|0);
      HEAPF32[(($arrayidx770)>>2)]=$694;
      var $697=$i;
      var $arrayidx771=(($vla692+($697<<2))|0);
      HEAPF32[(($arrayidx771)>>2)]=$694;
      __label__ = 178; break;
    case 178: // $for_inc772
      var $698=$i;
      var $inc773=(($698+1)|0);
      $i=$inc773;
      __label__ = 176; break;
    case 179: // $for_end774
      __label__ = 185; break;
    case 180: // $if_else775
      $i=0;
      __label__ = 181; break;
    case 181: // $for_cond776
      var $699=$i;
      var $700=$st;
      var $subframeSize777=(($700+12)|0);
      var $701=HEAP32[(($subframeSize777)>>2)];
      var $cmp778=(($699)|0) < (($701)|0);
      if ($cmp778) { __label__ = 182; break; } else { __label__ = 184; break; }
    case 182: // $for_body780
      var $702=$i;
      var $703=$sub;
      var $sub781=(($703-1)|0);
      var $704=$st;
      var $subframeSize782=(($704+12)|0);
      var $705=HEAP32[(($subframeSize782)>>2)];
      var $mul783=(($sub781*$705)|0);
      var $add784=(($702+$mul783)|0);
      var $706=$in;
      var $arrayidx785=(($706+($add784<<2))|0);
      var $707=HEAPF32[(($arrayidx785)>>2)];
      var $708=$i;
      var $709=$sw700;
      var $arrayidx786=(($709+($708<<2))|0);
      HEAPF32[(($arrayidx786)>>2)]=$707;
      var $710=$i;
      var $arrayidx787=(($vla692+($710<<2))|0);
      HEAPF32[(($arrayidx787)>>2)]=$707;
      __label__ = 183; break;
    case 183: // $for_inc788
      var $711=$i;
      var $inc789=(($711+1)|0);
      $i=$inc789;
      __label__ = 181; break;
    case 184: // $for_end790
      __label__ = 185; break;
    case 185: // $if_end791
      var $712=$st;
      var $subframeSize792=(($712+12)|0);
      var $713=HEAP32[(($subframeSize792)>>2)];
      var $714=$st;
      var $lpcSize793=(($714+24)|0);
      var $715=HEAP32[(($lpcSize793)>>2)];
      var $716=$st;
      var $mem_exc2=(($716+124)|0);
      var $717=HEAP32[(($mem_exc2)>>2)];
      var $718=$stack;
      _fir_mem16($vla692, $vla17, $vla692, $713, $715, $717, $718);
      var $719=$st;
      var $complexity794=(($719+192)|0);
      var $720=HEAP32[(($complexity794)>>2)];
      var $cmp795=(($720)|0)==0;
      if ($cmp795) { __label__ = 186; break; } else { __label__ = 187; break; }
    case 186: // $if_then797
      var $721=$response_bound;
      var $shr=$721 >> 1;
      $response_bound=$shr;
      __label__ = 187; break;
    case 187: // $if_end798
      var $722=$response_bound;
      var $723=$st;
      var $lpcSize799=(($723+24)|0);
      var $724=HEAP32[(($lpcSize799)>>2)];
      var $725=$stack;
      _compute_impulse_response($vla17, $vla3, $vla5, $vla690, $722, $724, $725);
      var $726=$response_bound;
      $i=$726;
      __label__ = 188; break;
    case 188: // $for_cond800
      var $727=$i;
      var $728=$st;
      var $subframeSize801=(($728+12)|0);
      var $729=HEAP32[(($subframeSize801)>>2)];
      var $cmp802=(($727)|0) < (($729)|0);
      if ($cmp802) { __label__ = 189; break; } else { __label__ = 191; break; }
    case 189: // $for_body804
      var $730=$i;
      var $arrayidx805=(($vla690+($730<<2))|0);
      HEAPF32[(($arrayidx805)>>2)]=1.0000000036274937e-15;
      __label__ = 190; break;
    case 190: // $for_inc806
      var $731=$i;
      var $inc807=(($731+1)|0);
      $i=$inc807;
      __label__ = 188; break;
    case 191: // $for_end808
      $i=0;
      __label__ = 192; break;
    case 192: // $for_cond809
      var $732=$i;
      var $733=$st;
      var $lpcSize810=(($733+24)|0);
      var $734=HEAP32[(($lpcSize810)>>2)];
      var $cmp811=(($732)|0) < (($734)|0);
      if ($cmp811) { __label__ = 193; break; } else { __label__ = 195; break; }
    case 193: // $for_body813
      var $735=$i;
      var $736=$st;
      var $mem_sp814=(($736+108)|0);
      var $737=HEAP32[(($mem_sp814)>>2)];
      var $arrayidx815=(($737+($735<<2))|0);
      var $738=HEAPF32[(($arrayidx815)>>2)];
      var $739=$i;
      var $arrayidx816=(($vla694+($739<<2))|0);
      HEAPF32[(($arrayidx816)>>2)]=$738;
      __label__ = 194; break;
    case 194: // $for_inc817
      var $740=$i;
      var $inc818=(($740+1)|0);
      $i=$inc818;
      __label__ = 192; break;
    case 195: // $for_end819
      $i=0;
      __label__ = 196; break;
    case 196: // $for_cond820
      var $741=$i;
      var $742=$st;
      var $subframeSize821=(($742+12)|0);
      var $743=HEAP32[(($subframeSize821)>>2)];
      var $cmp822=(($741)|0) < (($743)|0);
      if ($cmp822) { __label__ = 197; break; } else { __label__ = 199; break; }
    case 197: // $for_body824
      var $744=$i;
      var $arrayidx825=(($vla688+($744<<2))|0);
      HEAPF32[(($arrayidx825)>>2)]=1.0000000036274937e-15;
      __label__ = 198; break;
    case 198: // $for_inc826
      var $745=$i;
      var $inc827=(($745+1)|0);
      $i=$inc827;
      __label__ = 196; break;
    case 199: // $for_end828
      var $746=$st;
      var $subframeSize829=(($746+12)|0);
      var $747=HEAP32[(($subframeSize829)>>2)];
      var $748=$st;
      var $lpcSize830=(($748+24)|0);
      var $749=HEAP32[(($lpcSize830)>>2)];
      var $750=$stack;
      _iir_mem16($vla688, $vla17, $vla688, $747, $749, $vla694, $750);
      $i=0;
      __label__ = 200; break;
    case 200: // $for_cond831
      var $751=$i;
      var $752=$st;
      var $lpcSize832=(($752+24)|0);
      var $753=HEAP32[(($lpcSize832)>>2)];
      var $cmp833=(($751)|0) < (($753)|0);
      if ($cmp833) { __label__ = 201; break; } else { __label__ = 203; break; }
    case 201: // $for_body835
      var $754=$i;
      var $755=$st;
      var $mem_sw836=(($755+112)|0);
      var $756=HEAP32[(($mem_sw836)>>2)];
      var $arrayidx837=(($756+($754<<2))|0);
      var $757=HEAPF32[(($arrayidx837)>>2)];
      var $758=$i;
      var $arrayidx838=(($vla694+($758<<2))|0);
      HEAPF32[(($arrayidx838)>>2)]=$757;
      __label__ = 202; break;
    case 202: // $for_inc839
      var $759=$i;
      var $inc840=(($759+1)|0);
      $i=$inc840;
      __label__ = 200; break;
    case 203: // $for_end841
      var $760=$st;
      var $subframeSize842=(($760+12)|0);
      var $761=HEAP32[(($subframeSize842)>>2)];
      var $762=$st;
      var $lpcSize843=(($762+24)|0);
      var $763=HEAP32[(($lpcSize843)>>2)];
      var $764=$stack;
      _filter_mem16($vla688, $vla3, $vla5, $vla688, $761, $763, $vla694, $764);
      $i=0;
      __label__ = 204; break;
    case 204: // $for_cond844
      var $765=$i;
      var $766=$st;
      var $lpcSize845=(($766+24)|0);
      var $767=HEAP32[(($lpcSize845)>>2)];
      var $cmp846=(($765)|0) < (($767)|0);
      if ($cmp846) { __label__ = 205; break; } else { __label__ = 207; break; }
    case 205: // $for_body848
      var $768=$i;
      var $769=$st;
      var $mem_sw849=(($769+112)|0);
      var $770=HEAP32[(($mem_sw849)>>2)];
      var $arrayidx850=(($770+($768<<2))|0);
      var $771=HEAPF32[(($arrayidx850)>>2)];
      var $772=$i;
      var $arrayidx851=(($vla694+($772<<2))|0);
      HEAPF32[(($arrayidx851)>>2)]=$771;
      __label__ = 206; break;
    case 206: // $for_inc852
      var $773=$i;
      var $inc853=(($773+1)|0);
      $i=$inc853;
      __label__ = 204; break;
    case 207: // $for_end854
      var $774=$sw700;
      var $775=$sw700;
      var $776=$st;
      var $subframeSize855=(($776+12)|0);
      var $777=HEAP32[(($subframeSize855)>>2)];
      var $778=$st;
      var $lpcSize856=(($778+24)|0);
      var $779=HEAP32[(($lpcSize856)>>2)];
      var $780=$stack;
      _filter_mem16($774, $vla3, $vla5, $775, $777, $779, $vla694, $780);
      var $781=$st;
      var $complexity857=(($781+192)|0);
      var $782=HEAP32[(($complexity857)>>2)];
      var $cmp858=(($782)|0)==0;
      if ($cmp858) { __label__ = 208; break; } else { __label__ = 213; break; }
    case 208: // $if_then860
      $i=0;
      __label__ = 209; break;
    case 209: // $for_cond861
      var $783=$i;
      var $784=$st;
      var $lpcSize862=(($784+24)|0);
      var $785=HEAP32[(($lpcSize862)>>2)];
      var $cmp863=(($783)|0) < (($785)|0);
      if ($cmp863) { __label__ = 210; break; } else { __label__ = 212; break; }
    case 210: // $for_body865
      var $786=$i;
      var $arrayidx866=(($vla694+($786<<2))|0);
      var $787=HEAPF32[(($arrayidx866)>>2)];
      var $788=$i;
      var $789=$st;
      var $mem_sw867=(($789+112)|0);
      var $790=HEAP32[(($mem_sw867)>>2)];
      var $arrayidx868=(($790+($788<<2))|0);
      HEAPF32[(($arrayidx868)>>2)]=$787;
      __label__ = 211; break;
    case 211: // $for_inc869
      var $791=$i;
      var $inc870=(($791+1)|0);
      $i=$inc870;
      __label__ = 209; break;
    case 212: // $for_end871
      __label__ = 213; break;
    case 213: // $if_end872
      $i=0;
      __label__ = 214; break;
    case 214: // $for_cond873
      var $792=$i;
      var $793=$st;
      var $subframeSize874=(($793+12)|0);
      var $794=HEAP32[(($subframeSize874)>>2)];
      var $cmp875=(($792)|0) < (($794)|0);
      if ($cmp875) { __label__ = 215; break; } else { __label__ = 217; break; }
    case 215: // $for_body877
      var $795=$i;
      var $796=$sw700;
      var $arrayidx878=(($796+($795<<2))|0);
      var $797=HEAPF32[(($arrayidx878)>>2)];
      var $798=$i;
      var $arrayidx879=(($vla688+($798<<2))|0);
      var $799=HEAPF32[(($arrayidx879)>>2)];
      var $sub880=$797-$799;
      var $800=$i;
      var $arrayidx881=(($vla682+($800<<2))|0);
      HEAPF32[(($arrayidx881)>>2)]=$sub880;
      __label__ = 216; break;
    case 216: // $for_inc882
      var $801=$i;
      var $inc883=(($801+1)|0);
      $i=$inc883;
      __label__ = 214; break;
    case 217: // $for_end884
      var $802=$exc701;
      var $803=$802;
      var $804=$st;
      var $subframeSize885=(($804+12)|0);
      var $805=HEAP32[(($subframeSize885)>>2)];
      var $mul886=((($805<<2))|0);
      _memset($803, 0, $mul886, 1);
      var $806=$st;
      var $submodeID887=(($806+212)|0);
      var $807=HEAP32[(($submodeID887)>>2)];
      var $808=$st;
      var $submodes888=(($808+208)|0);
      var $809=HEAP32[(($submodes888)>>2)];
      var $arrayidx889=(($809+($807<<2))|0);
      var $810=HEAP32[(($arrayidx889)>>2)];
      var $ltp_quant=(($810+24)|0);
      var $811=HEAP32[(($ltp_quant)>>2)];
      var $tobool890=(($811)|0)!=0;
      if ($tobool890) { __label__ = 219; break; } else { __label__ = 218; break; }
    case 218: // $if_then891
      __speex_fatal(((STRING_TABLE.__str232)|0), ((STRING_TABLE.__str131)|0), 760);
      __label__ = 219; break;
    case 219: // $if_end892
      var $812=$st;
      var $submodeID893=(($812+212)|0);
      var $813=HEAP32[(($submodeID893)>>2)];
      var $814=$st;
      var $submodes894=(($814+208)|0);
      var $815=HEAP32[(($submodes894)>>2)];
      var $arrayidx895=(($815+($813<<2))|0);
      var $816=HEAP32[(($arrayidx895)>>2)];
      var $lbr_pitch896=(($816)|0);
      var $817=HEAP32[(($lbr_pitch896)>>2)];
      var $cmp897=(($817)|0)!=-1;
      if ($cmp897) { __label__ = 220; break; } else { __label__ = 228; break; }
    case 220: // $if_then899
      var $818=$st;
      var $submodeID900=(($818+212)|0);
      var $819=HEAP32[(($submodeID900)>>2)];
      var $820=$st;
      var $submodes901=(($820+208)|0);
      var $821=HEAP32[(($submodes901)>>2)];
      var $arrayidx902=(($821+($819<<2))|0);
      var $822=HEAP32[(($arrayidx902)>>2)];
      var $lbr_pitch903=(($822)|0);
      var $823=HEAP32[(($lbr_pitch903)>>2)];
      $margin=$823;
      var $824=$margin;
      var $tobool904=(($824)|0)!=0;
      if ($tobool904) { __label__ = 221; break; } else { __label__ = 226; break; }
    case 221: // $if_then905
      var $825=$ol_pitch;
      var $826=$st;
      var $min_pitch906=(($826+28)|0);
      var $827=HEAP32[(($min_pitch906)>>2)];
      var $828=$margin;
      var $add907=(($827+$828)|0);
      var $sub908=(($add907-1)|0);
      var $cmp909=(($825)|0) < (($sub908)|0);
      if ($cmp909) { __label__ = 222; break; } else { __label__ = 223; break; }
    case 222: // $if_then911
      var $829=$st;
      var $min_pitch912=(($829+28)|0);
      var $830=HEAP32[(($min_pitch912)>>2)];
      var $831=$margin;
      var $add913=(($830+$831)|0);
      var $sub914=(($add913-1)|0);
      $ol_pitch=$sub914;
      __label__ = 223; break;
    case 223: // $if_end915
      var $832=$ol_pitch;
      var $833=$st;
      var $max_pitch916=(($833+32)|0);
      var $834=HEAP32[(($max_pitch916)>>2)];
      var $835=$margin;
      var $sub917=(($834-$835)|0);
      var $cmp918=(($832)|0) > (($sub917)|0);
      if ($cmp918) { __label__ = 224; break; } else { __label__ = 225; break; }
    case 224: // $if_then920
      var $836=$st;
      var $max_pitch921=(($836+32)|0);
      var $837=HEAP32[(($max_pitch921)>>2)];
      var $838=$margin;
      var $sub922=(($837-$838)|0);
      $ol_pitch=$sub922;
      __label__ = 225; break;
    case 225: // $if_end923
      var $839=$ol_pitch;
      var $840=$margin;
      var $sub924=(($839-$840)|0);
      var $add925=(($sub924+1)|0);
      $pit_min=$add925;
      var $841=$ol_pitch;
      var $842=$margin;
      var $add926=(($841+$842)|0);
      $pit_max=$add926;
      __label__ = 227; break;
    case 226: // $if_else927
      var $843=$ol_pitch;
      $pit_max=$843;
      $pit_min=$843;
      __label__ = 227; break;
    case 227: // $if_end928
      __label__ = 229; break;
    case 228: // $if_else929
      var $844=$st;
      var $min_pitch930=(($844+28)|0);
      var $845=HEAP32[(($min_pitch930)>>2)];
      $pit_min=$845;
      var $846=$st;
      var $max_pitch931=(($846+32)|0);
      var $847=HEAP32[(($max_pitch931)>>2)];
      $pit_max=$847;
      __label__ = 229; break;
    case 229: // $if_end932
      var $848=$st;
      var $bounded_pitch933=(($848+40)|0);
      var $849=HEAP32[(($bounded_pitch933)>>2)];
      var $tobool934=(($849)|0)!=0;
      if ($tobool934) { __label__ = 230; break; } else { __label__ = 232; break; }
    case 230: // $land_lhs_true935
      var $850=$pit_max;
      var $851=$offset;
      var $cmp936=(($850)|0) > (($851)|0);
      if ($cmp936) { __label__ = 231; break; } else { __label__ = 232; break; }
    case 231: // $if_then938
      var $852=$offset;
      $pit_max=$852;
      __label__ = 232; break;
    case 232: // $if_end939
      var $853=$st;
      var $submodeID940=(($853+212)|0);
      var $854=HEAP32[(($submodeID940)>>2)];
      var $855=$st;
      var $submodes941=(($855+208)|0);
      var $856=HEAP32[(($submodes941)>>2)];
      var $arrayidx942=(($856+($854<<2))|0);
      var $857=HEAP32[(($arrayidx942)>>2)];
      var $ltp_quant943=(($857+24)|0);
      var $858=HEAP32[(($ltp_quant943)>>2)];
      var $859=$sw700;
      var $860=$st;
      var $submodeID944=(($860+212)|0);
      var $861=HEAP32[(($submodeID944)>>2)];
      var $862=$st;
      var $submodes945=(($862+208)|0);
      var $863=HEAP32[(($submodes945)>>2)];
      var $arrayidx946=(($863+($861<<2))|0);
      var $864=HEAP32[(($arrayidx946)>>2)];
      var $ltp_params=(($864+32)|0);
      var $865=HEAP32[(($ltp_params)>>2)];
      var $866=$pit_min;
      var $867=$pit_max;
      var $868=$ol_pitch_coef;
      var $869=$st;
      var $lpcSize947=(($869+24)|0);
      var $870=HEAP32[(($lpcSize947)>>2)];
      var $871=$st;
      var $subframeSize948=(($871+12)|0);
      var $872=HEAP32[(($subframeSize948)>>2)];
      var $873=$bits_addr;
      var $874=$stack;
      var $875=$exc701;
      var $876=$st;
      var $complexity949=(($876+192)|0);
      var $877=HEAP32[(($complexity949)>>2)];
      var $878=$st;
      var $plc_tuning=(($878+200)|0);
      var $879=HEAP32[(($plc_tuning)>>2)];
      var $880=$st;
      var $cumul_gain=(($880+36)|0);
      var $call950=FUNCTION_TABLE[$858]($vla682, $859, $vla17, $vla3, $vla5, $vla686, $865, $866, $867, $868, $870, $872, $873, $874, $875, $vla690, $877, 0, $879, $cumul_gain);
      $pitch=$call950;
      var $881=$pitch;
      var $882=$sub;
      var $883=$st;
      var $pitch951=(($883+52)|0);
      var $884=HEAP32[(($pitch951)>>2)];
      var $arrayidx952=(($884+($882<<2))|0);
      HEAP32[(($arrayidx952)>>2)]=$881;
      var $885=$vla684;
      var $886=$st;
      var $subframeSize953=(($886+12)|0);
      var $887=HEAP32[(($subframeSize953)>>2)];
      var $mul954=((($887<<2))|0);
      _memset($885, 0, $mul954, 1);
      $i=0;
      __label__ = 233; break;
    case 233: // $for_cond955
      var $888=$i;
      var $889=$st;
      var $subframeSize956=(($889+12)|0);
      var $890=HEAP32[(($subframeSize956)>>2)];
      var $cmp957=(($888)|0) < (($890)|0);
      if ($cmp957) { __label__ = 234; break; } else { __label__ = 236; break; }
    case 234: // $for_body959
      var $891=$i;
      var $arrayidx960=(($vla692+($891<<2))|0);
      var $892=HEAPF32[(($arrayidx960)>>2)];
      var $893=$i;
      var $arrayidx961=(($vla686+($893<<2))|0);
      var $894=HEAPF32[(($arrayidx961)>>2)];
      var $sub962=$892-$894;
      var $895=$i;
      var $arrayidx963=(($vla692+($895<<2))|0);
      HEAPF32[(($arrayidx963)>>2)]=$sub962;
      __label__ = 235; break;
    case 235: // $for_inc964
      var $896=$i;
      var $inc965=(($896+1)|0);
      $i=$inc965;
      __label__ = 233; break;
    case 236: // $for_end966
      var $897=$st;
      var $subframeSize967=(($897+12)|0);
      var $898=HEAP32[(($subframeSize967)>>2)];
      var $call968=_compute_rms16($vla692, $898);
      $ener=$call968;
      var $899=$ener;
      var $900=$ol_gain;
      var $div969=$899/$900;
      $fine_gain=$div969;
      var $901=$st;
      var $submodeID970=(($901+212)|0);
      var $902=HEAP32[(($submodeID970)>>2)];
      var $903=$st;
      var $submodes971=(($903+208)|0);
      var $904=HEAP32[(($submodes971)>>2)];
      var $arrayidx972=(($904+($902<<2))|0);
      var $905=HEAP32[(($arrayidx972)>>2)];
      var $have_subframe_gain973=(($905+8)|0);
      var $906=HEAP32[(($have_subframe_gain973)>>2)];
      var $tobool974=(($906)|0)!=0;
      if ($tobool974) { __label__ = 237; break; } else { __label__ = 241; break; }
    case 237: // $if_then975
      var $907=$st;
      var $submodeID977=(($907+212)|0);
      var $908=HEAP32[(($submodeID977)>>2)];
      var $909=$st;
      var $submodes978=(($909+208)|0);
      var $910=HEAP32[(($submodes978)>>2)];
      var $arrayidx979=(($910+($908<<2))|0);
      var $911=HEAP32[(($arrayidx979)>>2)];
      var $have_subframe_gain980=(($911+8)|0);
      var $912=HEAP32[(($have_subframe_gain980)>>2)];
      var $cmp981=(($912)|0)==3;
      if ($cmp981) { __label__ = 238; break; } else { __label__ = 239; break; }
    case 238: // $if_then983
      var $913=$fine_gain;
      var $call984=_scal_quant($913, ((_exc_gain_quant_scal3_bound)|0), 8);
      $qe976=$call984;
      var $914=$bits_addr;
      var $915=$qe976;
      _speex_bits_pack($914, $915, 3);
      var $916=$qe976;
      var $arrayidx985=((_exc_gain_quant_scal3+($916<<2))|0);
      var $917=HEAPF32[(($arrayidx985)>>2)];
      var $918=$ol_gain;
      var $mul986=$917*$918;
      $ener=$mul986;
      __label__ = 240; break;
    case 239: // $if_else987
      var $919=$fine_gain;
      var $call988=_scal_quant($919, ((_exc_gain_quant_scal1_bound)|0), 2);
      $qe976=$call988;
      var $920=$bits_addr;
      var $921=$qe976;
      _speex_bits_pack($920, $921, 1);
      var $922=$qe976;
      var $arrayidx989=((_exc_gain_quant_scal1+($922<<2))|0);
      var $923=HEAPF32[(($arrayidx989)>>2)];
      var $924=$ol_gain;
      var $mul990=$923*$924;
      $ener=$mul990;
      __label__ = 240; break;
    case 240: // $if_end991
      __label__ = 242; break;
    case 241: // $if_else992
      var $925=$ol_gain;
      $ener=$925;
      __label__ = 242; break;
    case 242: // $if_end993
      var $926=$ener;
      var $927=$st;
      var $subframeSize994=(($927+12)|0);
      var $928=HEAP32[(($subframeSize994)>>2)];
      _signal_div($vla682, $vla682, $926, $928);
      var $929=$st;
      var $submodeID995=(($929+212)|0);
      var $930=HEAP32[(($submodeID995)>>2)];
      var $931=$st;
      var $submodes996=(($931+208)|0);
      var $932=HEAP32[(($submodes996)>>2)];
      var $arrayidx997=(($932+($930<<2))|0);
      var $933=HEAP32[(($arrayidx997)>>2)];
      var $innovation_quant=(($933+36)|0);
      var $934=HEAP32[(($innovation_quant)>>2)];
      var $tobool998=(($934)|0)!=0;
      if ($tobool998) { __label__ = 244; break; } else { __label__ = 243; break; }
    case 243: // $if_then999
      __speex_fatal(((STRING_TABLE.__str333)|0), ((STRING_TABLE.__str131)|0), 842);
      __label__ = 244; break;
    case 244: // $if_end1000
      var $935=$st;
      var $submodeID1001=(($935+212)|0);
      var $936=HEAP32[(($submodeID1001)>>2)];
      var $937=$st;
      var $submodes1002=(($937+208)|0);
      var $938=HEAP32[(($submodes1002)>>2)];
      var $arrayidx1003=(($938+($936<<2))|0);
      var $939=HEAP32[(($arrayidx1003)>>2)];
      var $innovation_quant1004=(($939+36)|0);
      var $940=HEAP32[(($innovation_quant1004)>>2)];
      var $941=$st;
      var $submodeID1005=(($941+212)|0);
      var $942=HEAP32[(($submodeID1005)>>2)];
      var $943=$st;
      var $submodes1006=(($943+208)|0);
      var $944=HEAP32[(($submodes1006)>>2)];
      var $arrayidx1007=(($944+($942<<2))|0);
      var $945=HEAP32[(($arrayidx1007)>>2)];
      var $innovation_params=(($945+44)|0);
      var $946=HEAP32[(($innovation_params)>>2)];
      var $947=$st;
      var $lpcSize1008=(($947+24)|0);
      var $948=HEAP32[(($lpcSize1008)>>2)];
      var $949=$st;
      var $subframeSize1009=(($949+12)|0);
      var $950=HEAP32[(($subframeSize1009)>>2)];
      var $951=$bits_addr;
      var $952=$stack;
      var $953=$st;
      var $complexity1010=(($953+192)|0);
      var $954=HEAP32[(($complexity1010)>>2)];
      var $955=$st;
      var $submodeID1011=(($955+212)|0);
      var $956=HEAP32[(($submodeID1011)>>2)];
      var $957=$st;
      var $submodes1012=(($957+208)|0);
      var $958=HEAP32[(($submodes1012)>>2)];
      var $arrayidx1013=(($958+($956<<2))|0);
      var $959=HEAP32[(($arrayidx1013)>>2)];
      var $double_codebook=(($959+12)|0);
      var $960=HEAP32[(($double_codebook)>>2)];
      FUNCTION_TABLE[$940]($vla682, $vla17, $vla3, $vla5, $946, $948, $950, $vla684, $vla690, $951, $952, $954, $960);
      var $961=$ener;
      var $962=$st;
      var $subframeSize1014=(($962+12)|0);
      var $963=HEAP32[(($subframeSize1014)>>2)];
      _signal_mul($vla684, $vla684, $961, $963);
      $i=0;
      __label__ = 245; break;
    case 245: // $for_cond1015
      var $964=$i;
      var $965=$st;
      var $subframeSize1016=(($965+12)|0);
      var $966=HEAP32[(($subframeSize1016)>>2)];
      var $cmp1017=(($964)|0) < (($966)|0);
      if ($cmp1017) { __label__ = 246; break; } else { __label__ = 248; break; }
    case 246: // $for_body1019
      var $967=$i;
      var $arrayidx1020=(($vla686+($967<<2))|0);
      var $968=HEAPF32[(($arrayidx1020)>>2)];
      var $969=$i;
      var $arrayidx1021=(($vla684+($969<<2))|0);
      var $970=HEAPF32[(($arrayidx1021)>>2)];
      var $add1022=$968+$970;
      var $971=$i;
      var $972=$exc701;
      var $arrayidx1023=(($972+($971<<2))|0);
      HEAPF32[(($arrayidx1023)>>2)]=$add1022;
      __label__ = 247; break;
    case 247: // $for_inc1024
      var $973=$i;
      var $inc1025=(($973+1)|0);
      $i=$inc1025;
      __label__ = 245; break;
    case 248: // $for_end1026
      var $974=$st;
      var $submodeID1027=(($974+212)|0);
      var $975=HEAP32[(($submodeID1027)>>2)];
      var $976=$st;
      var $submodes1028=(($976+208)|0);
      var $977=HEAP32[(($submodes1028)>>2)];
      var $arrayidx1029=(($977+($975<<2))|0);
      var $978=HEAP32[(($arrayidx1029)>>2)];
      var $double_codebook1030=(($978+12)|0);
      var $979=HEAP32[(($double_codebook1030)>>2)];
      var $tobool1031=(($979)|0)!=0;
      if ($tobool1031) { __label__ = 249; break; } else { __label__ = 258; break; }
    case 249: // $if_then1032
      var $980=$stack;
      $tmp_stack=$980;
      var $981=$st;
      var $subframeSize1033=(($981+12)|0);
      var $982=HEAP32[(($subframeSize1033)>>2)];
      var $983=_llvm_stacksave();
      $saved_stack1034=$983;
      var $vla1035=STACKTOP;STACKTOP += $982*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $984=$vla1035;
      var $985=$st;
      var $subframeSize1036=(($985+12)|0);
      var $986=HEAP32[(($subframeSize1036)>>2)];
      var $mul1037=((($986<<2))|0);
      _memset($984, 0, $mul1037, 1);
      $i=0;
      __label__ = 250; break;
    case 250: // $for_cond1038
      var $987=$i;
      var $988=$st;
      var $subframeSize1039=(($988+12)|0);
      var $989=HEAP32[(($subframeSize1039)>>2)];
      var $cmp1040=(($987)|0) < (($989)|0);
      if ($cmp1040) { __label__ = 251; break; } else { __label__ = 253; break; }
    case 251: // $for_body1042
      var $990=$i;
      var $arrayidx1043=(($vla682+($990<<2))|0);
      var $991=HEAPF32[(($arrayidx1043)>>2)];
      var $mul1044=$991*2.200000047683716;
      var $992=$i;
      var $arrayidx1045=(($vla682+($992<<2))|0);
      HEAPF32[(($arrayidx1045)>>2)]=$mul1044;
      __label__ = 252; break;
    case 252: // $for_inc1046
      var $993=$i;
      var $inc1047=(($993+1)|0);
      $i=$inc1047;
      __label__ = 250; break;
    case 253: // $for_end1048
      var $994=$st;
      var $submodeID1049=(($994+212)|0);
      var $995=HEAP32[(($submodeID1049)>>2)];
      var $996=$st;
      var $submodes1050=(($996+208)|0);
      var $997=HEAP32[(($submodes1050)>>2)];
      var $arrayidx1051=(($997+($995<<2))|0);
      var $998=HEAP32[(($arrayidx1051)>>2)];
      var $innovation_quant1052=(($998+36)|0);
      var $999=HEAP32[(($innovation_quant1052)>>2)];
      var $1000=$st;
      var $submodeID1053=(($1000+212)|0);
      var $1001=HEAP32[(($submodeID1053)>>2)];
      var $1002=$st;
      var $submodes1054=(($1002+208)|0);
      var $1003=HEAP32[(($submodes1054)>>2)];
      var $arrayidx1055=(($1003+($1001<<2))|0);
      var $1004=HEAP32[(($arrayidx1055)>>2)];
      var $innovation_params1056=(($1004+44)|0);
      var $1005=HEAP32[(($innovation_params1056)>>2)];
      var $1006=$st;
      var $lpcSize1057=(($1006+24)|0);
      var $1007=HEAP32[(($lpcSize1057)>>2)];
      var $1008=$st;
      var $subframeSize1058=(($1008+12)|0);
      var $1009=HEAP32[(($subframeSize1058)>>2)];
      var $1010=$bits_addr;
      var $1011=$stack;
      var $1012=$st;
      var $complexity1059=(($1012+192)|0);
      var $1013=HEAP32[(($complexity1059)>>2)];
      FUNCTION_TABLE[$999]($vla682, $vla17, $vla3, $vla5, $1005, $1007, $1009, $vla1035, $vla690, $1010, $1011, $1013, 0);
      var $1014=$ener;
      var $mul1060=$1014*0.4545449912548065;
      var $1015=$st;
      var $subframeSize1061=(($1015+12)|0);
      var $1016=HEAP32[(($subframeSize1061)>>2)];
      _signal_mul($vla1035, $vla1035, $mul1060, $1016);
      $i=0;
      __label__ = 254; break;
    case 254: // $for_cond1062
      var $1017=$i;
      var $1018=$st;
      var $subframeSize1063=(($1018+12)|0);
      var $1019=HEAP32[(($subframeSize1063)>>2)];
      var $cmp1064=(($1017)|0) < (($1019)|0);
      if ($cmp1064) { __label__ = 255; break; } else { __label__ = 257; break; }
    case 255: // $for_body1066
      var $1020=$i;
      var $arrayidx1067=(($vla684+($1020<<2))|0);
      var $1021=HEAPF32[(($arrayidx1067)>>2)];
      var $1022=$i;
      var $arrayidx1068=(($vla1035+($1022<<2))|0);
      var $1023=HEAPF32[(($arrayidx1068)>>2)];
      var $add1069=$1021+$1023;
      var $1024=$i;
      var $arrayidx1070=(($vla684+($1024<<2))|0);
      HEAPF32[(($arrayidx1070)>>2)]=$add1069;
      __label__ = 256; break;
    case 256: // $for_inc1071
      var $1025=$i;
      var $inc1072=(($1025+1)|0);
      $i=$inc1072;
      __label__ = 254; break;
    case 257: // $for_end1073
      var $1026=$tmp_stack;
      $stack=$1026;
      var $1027=$saved_stack1034;
      _llvm_stackrestore($1027);
      __label__ = 258; break;
    case 258: // $if_end1074
      $i=0;
      __label__ = 259; break;
    case 259: // $for_cond1075
      var $1028=$i;
      var $1029=$st;
      var $subframeSize1076=(($1029+12)|0);
      var $1030=HEAP32[(($subframeSize1076)>>2)];
      var $cmp1077=(($1028)|0) < (($1030)|0);
      if ($cmp1077) { __label__ = 260; break; } else { __label__ = 262; break; }
    case 260: // $for_body1079
      var $1031=$i;
      var $arrayidx1080=(($vla686+($1031<<2))|0);
      var $1032=HEAPF32[(($arrayidx1080)>>2)];
      var $1033=$i;
      var $arrayidx1081=(($vla684+($1033<<2))|0);
      var $1034=HEAPF32[(($arrayidx1081)>>2)];
      var $add1082=$1032+$1034;
      var $1035=$i;
      var $1036=$exc701;
      var $arrayidx1083=(($1036+($1035<<2))|0);
      HEAPF32[(($arrayidx1083)>>2)]=$add1082;
      __label__ = 261; break;
    case 261: // $for_inc1084
      var $1037=$i;
      var $inc1085=(($1037+1)|0);
      $i=$inc1085;
      __label__ = 259; break;
    case 262: // $for_end1086
      var $1038=$st;
      var $innov_rms_save=(($1038+140)|0);
      var $1039=HEAP32[(($innov_rms_save)>>2)];
      var $tobool1087=(($1039)|0)!=0;
      if ($tobool1087) { __label__ = 263; break; } else { __label__ = 264; break; }
    case 263: // $if_then1088
      var $1040=$st;
      var $subframeSize1089=(($1040+12)|0);
      var $1041=HEAP32[(($subframeSize1089)>>2)];
      var $call1090=_compute_rms($vla684, $1041);
      var $1042=$sub;
      var $1043=$st;
      var $innov_rms_save1091=(($1043+140)|0);
      var $1044=HEAP32[(($innov_rms_save1091)>>2)];
      var $arrayidx1092=(($1044+($1042<<2))|0);
      HEAPF32[(($arrayidx1092)>>2)]=$call1090;
      __label__ = 264; break;
    case 264: // $if_end1093
      var $1045=$exc701;
      var $1046=$sw700;
      var $1047=$st;
      var $subframeSize1094=(($1047+12)|0);
      var $1048=HEAP32[(($subframeSize1094)>>2)];
      var $1049=$st;
      var $lpcSize1095=(($1049+24)|0);
      var $1050=HEAP32[(($lpcSize1095)>>2)];
      var $1051=$st;
      var $mem_sp1096=(($1051+108)|0);
      var $1052=HEAP32[(($mem_sp1096)>>2)];
      var $1053=$stack;
      _iir_mem16($1045, $vla17, $1046, $1048, $1050, $1052, $1053);
      var $1054=$st;
      var $complexity1097=(($1054+192)|0);
      var $1055=HEAP32[(($complexity1097)>>2)];
      var $cmp1098=(($1055)|0)!=0;
      if ($cmp1098) { __label__ = 265; break; } else { __label__ = 266; break; }
    case 265: // $if_then1100
      var $1056=$sw700;
      var $1057=$sw700;
      var $1058=$st;
      var $subframeSize1101=(($1058+12)|0);
      var $1059=HEAP32[(($subframeSize1101)>>2)];
      var $1060=$st;
      var $lpcSize1102=(($1060+24)|0);
      var $1061=HEAP32[(($lpcSize1102)>>2)];
      var $1062=$st;
      var $mem_sw1103=(($1062+112)|0);
      var $1063=HEAP32[(($mem_sw1103)>>2)];
      var $1064=$stack;
      _filter_mem16($1056, $vla3, $vla5, $1057, $1059, $1061, $1063, $1064);
      __label__ = 266; break;
    case 266: // $if_end1104
      __label__ = 267; break;
    case 267: // $for_inc1105
      var $1065=$sub;
      var $inc1106=(($1065+1)|0);
      $sub=$inc1106;
      __label__ = 160; break;
    case 268: // $for_end1107
      var $1066=$st;
      var $submodeID1108=(($1066+212)|0);
      var $1067=HEAP32[(($submodeID1108)>>2)];
      var $cmp1109=(($1067)|0) >= 1;
      if ($cmp1109) { __label__ = 269; break; } else { __label__ = 278; break; }
    case 269: // $if_then1111
      $i=0;
      __label__ = 270; break;
    case 270: // $for_cond1112
      var $1068=$i;
      var $1069=$st;
      var $lpcSize1113=(($1069+24)|0);
      var $1070=HEAP32[(($lpcSize1113)>>2)];
      var $cmp1114=(($1068)|0) < (($1070)|0);
      if ($cmp1114) { __label__ = 271; break; } else { __label__ = 273; break; }
    case 271: // $for_body1116
      var $1071=$i;
      var $arrayidx1117=(($vla7+($1071<<2))|0);
      var $1072=HEAPF32[(($arrayidx1117)>>2)];
      var $1073=$i;
      var $1074=$st;
      var $old_lsp1118=(($1074+100)|0);
      var $1075=HEAP32[(($old_lsp1118)>>2)];
      var $arrayidx1119=(($1075+($1073<<2))|0);
      HEAPF32[(($arrayidx1119)>>2)]=$1072;
      __label__ = 272; break;
    case 272: // $for_inc1120
      var $1076=$i;
      var $inc1121=(($1076+1)|0);
      $i=$inc1121;
      __label__ = 270; break;
    case 273: // $for_end1122
      $i=0;
      __label__ = 274; break;
    case 274: // $for_cond1123
      var $1077=$i;
      var $1078=$st;
      var $lpcSize1124=(($1078+24)|0);
      var $1079=HEAP32[(($lpcSize1124)>>2)];
      var $cmp1125=(($1077)|0) < (($1079)|0);
      if ($cmp1125) { __label__ = 275; break; } else { __label__ = 277; break; }
    case 275: // $for_body1127
      var $1080=$i;
      var $arrayidx1128=(($vla9+($1080<<2))|0);
      var $1081=HEAPF32[(($arrayidx1128)>>2)];
      var $1082=$i;
      var $1083=$st;
      var $old_qlsp1129=(($1083+104)|0);
      var $1084=HEAP32[(($old_qlsp1129)>>2)];
      var $arrayidx1130=(($1084+($1082<<2))|0);
      HEAPF32[(($arrayidx1130)>>2)]=$1081;
      __label__ = 276; break;
    case 276: // $for_inc1131
      var $1085=$i;
      var $inc1132=(($1085+1)|0);
      $i=$inc1132;
      __label__ = 274; break;
    case 277: // $for_end1133
      __label__ = 278; break;
    case 278: // $if_end1134
      var $1086=$st;
      var $submodeID1135=(($1086+212)|0);
      var $1087=HEAP32[(($submodeID1135)>>2)];
      var $cmp1136=(($1087)|0)==1;
      if ($cmp1136) { __label__ = 279; break; } else { __label__ = 283; break; }
    case 279: // $if_then1138
      var $1088=$st;
      var $dtx_count1139=(($1088+172)|0);
      var $1089=HEAP32[(($dtx_count1139)>>2)];
      var $tobool1140=(($1089)|0)!=0;
      if ($tobool1140) { __label__ = 280; break; } else { __label__ = 281; break; }
    case 280: // $if_then1141
      var $1090=$bits_addr;
      _speex_bits_pack($1090, 15, 4);
      __label__ = 282; break;
    case 281: // $if_else1142
      var $1091=$bits_addr;
      _speex_bits_pack($1091, 0, 4);
      __label__ = 282; break;
    case 282: // $if_end1143
      __label__ = 283; break;
    case 283: // $if_end1144
      var $1092=$st;
      var $first1145=(($1092+4)|0);
      HEAP32[(($first1145)>>2)]=0;
      var $1093=$st;
      var $winBuf1146=(($1093+72)|0);
      var $1094=HEAP32[(($winBuf1146)>>2)];
      var $1095=$1094;
      var $1096=$in;
      var $1097=$st;
      var $frameSize1147=(($1097+8)|0);
      var $1098=HEAP32[(($frameSize1147)>>2)];
      var $mul1148=((($1098<<1))|0);
      var $add_ptr1149=(($1096+($mul1148<<2))|0);
      var $1099=$st;
      var $windowSize1150=(($1099+20)|0);
      var $1100=HEAP32[(($windowSize1150)>>2)];
      var $idx_neg1151=(((-$1100))|0);
      var $add_ptr1152=(($add_ptr1149+($idx_neg1151<<2))|0);
      var $1101=$add_ptr1152;
      var $1102=$st;
      var $windowSize1153=(($1102+20)|0);
      var $1103=HEAP32[(($windowSize1153)>>2)];
      var $1104=$st;
      var $frameSize1154=(($1104+8)|0);
      var $1105=HEAP32[(($frameSize1154)>>2)];
      var $sub1155=(($1103-$1105)|0);
      var $mul1156=((($sub1155<<2))|0);
      var $1106=$st;
      var $winBuf1157=(($1106+72)|0);
      var $1107=HEAP32[(($winBuf1157)>>2)];
      var $1108=$in;
      var $1109=$st;
      var $frameSize1158=(($1109+8)|0);
      var $1110=HEAP32[(($frameSize1158)>>2)];
      var $mul1159=((($1110<<1))|0);
      var $add_ptr1160=(($1108+($mul1159<<2))|0);
      var $1111=$st;
      var $windowSize1161=(($1111+20)|0);
      var $1112=HEAP32[(($windowSize1161)>>2)];
      var $idx_neg1162=(((-$1112))|0);
      var $add_ptr1163=(($add_ptr1160+($idx_neg1162<<2))|0);
      var $sub_ptr_lhs_cast1164=$1107;
      var $sub_ptr_rhs_cast1165=$add_ptr1163;
      var $sub_ptr_sub1166=(($sub_ptr_lhs_cast1164-$sub_ptr_rhs_cast1165)|0);
      var $sub_ptr_div1167=(((($sub_ptr_sub1166)|0)/4)|0);
      var $mul1168=((0)|0);
      var $add1169=(($mul1156+$mul1168)|0);
      assert($add1169 % 1 === 0, 'memcpy given ' + $add1169 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($1095, $1101, $add1169, 1);
      var $1113=$st;
      var $submodeID1170=(($1113+212)|0);
      var $1114=HEAP32[(($submodeID1170)>>2)];
      var $1115=$st;
      var $submodes1171=(($1115+208)|0);
      var $1116=HEAP32[(($submodes1171)>>2)];
      var $arrayidx1172=(($1116+($1114<<2))|0);
      var $1117=HEAP32[(($arrayidx1172)>>2)];
      var $innovation_quant1173=(($1117+36)|0);
      var $1118=HEAP32[(($innovation_quant1173)>>2)];
      var $cmp1174=(($1118)|0)==2;
      if ($cmp1174) { __label__ = 285; break; } else { __label__ = 284; break; }
    case 284: // $lor_lhs_false1176
      var $1119=$st;
      var $submodeID1177=(($1119+212)|0);
      var $1120=HEAP32[(($submodeID1177)>>2)];
      var $cmp1178=(($1120)|0)==0;
      if ($cmp1178) { __label__ = 285; break; } else { __label__ = 286; break; }
    case 285: // $if_then1180
      var $1121=$st;
      var $bounded_pitch1181=(($1121+40)|0);
      HEAP32[(($bounded_pitch1181)>>2)]=1;
      __label__ = 287; break;
    case 286: // $if_else1182
      var $1122=$st;
      var $bounded_pitch1183=(($1122+40)|0);
      HEAP32[(($bounded_pitch1183)>>2)]=0;
      __label__ = 287; break;
    case 287: // $if_end1184
      $retval=1;
      $cleanup_dest_slot=1;
      __label__ = 288; break;
    case 288: // $cleanup
      var $1123=$saved_stack;
      _llvm_stackrestore($1123);
      var $1124=$retval;
      STACKTOP = __stackBase__;
      return $1124;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_encode["X"]=1;

function _nb_decoder_init($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $st;
      var $mode;
      var $i;
      $m_addr=$m;
      var $0=$m_addr;
      var $mode1=(($0)|0);
      var $1=HEAP32[(($mode1)>>2)];
      var $2=$1;
      $mode=$2;
      var $call=_speex_alloc41(508);
      var $3=$call;
      $st=$3;
      var $4=$st;
      var $tobool=(($4)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $if_then
      $retval=0;
      __label__ = 7; break;
    case 2: // $if_end
      var $5=$st;
      var $stack=(($5+44)|0);
      HEAP32[(($stack)>>2)]=0;
      var $6=$m_addr;
      var $7=$st;
      var $mode2=(($7)|0);
      HEAP32[(($mode2)>>2)]=$6;
      var $8=$st;
      var $encode_submode=(($8+124)|0);
      HEAP32[(($encode_submode)>>2)]=1;
      var $9=$st;
      var $first=(($9+4)|0);
      HEAP32[(($first)>>2)]=1;
      var $10=$mode;
      var $frameSize=(($10)|0);
      var $11=HEAP32[(($frameSize)>>2)];
      var $12=$st;
      var $frameSize3=(($12+12)|0);
      HEAP32[(($frameSize3)>>2)]=$11;
      var $13=$mode;
      var $frameSize4=(($13)|0);
      var $14=HEAP32[(($frameSize4)>>2)];
      var $15=$mode;
      var $subframeSize=(($15+4)|0);
      var $16=HEAP32[(($subframeSize)>>2)];
      var $div=(((($14)|0)/(($16)|0))|0);
      var $17=$st;
      var $nbSubframes=(($17+20)|0);
      HEAP32[(($nbSubframes)>>2)]=$div;
      var $18=$mode;
      var $subframeSize5=(($18+4)|0);
      var $19=HEAP32[(($subframeSize5)>>2)];
      var $20=$st;
      var $subframeSize6=(($20+16)|0);
      HEAP32[(($subframeSize6)>>2)]=$19;
      var $21=$mode;
      var $lpcSize=(($21+8)|0);
      var $22=HEAP32[(($lpcSize)>>2)];
      var $23=$st;
      var $lpcSize7=(($23+24)|0);
      HEAP32[(($lpcSize7)>>2)]=$22;
      var $24=$mode;
      var $pitchStart=(($24+12)|0);
      var $25=HEAP32[(($pitchStart)>>2)];
      var $26=$st;
      var $min_pitch=(($26+28)|0);
      HEAP32[(($min_pitch)>>2)]=$25;
      var $27=$mode;
      var $pitchEnd=(($27+16)|0);
      var $28=HEAP32[(($pitchEnd)>>2)];
      var $29=$st;
      var $max_pitch=(($29+32)|0);
      HEAP32[(($max_pitch)>>2)]=$28;
      var $30=$mode;
      var $submodes=(($30+32)|0);
      var $arraydecay=(($submodes)|0);
      var $31=$st;
      var $submodes8=(($31+128)|0);
      HEAP32[(($submodes8)>>2)]=$arraydecay;
      var $32=$mode;
      var $defaultSubmode=(($32+96)|0);
      var $33=HEAP32[(($defaultSubmode)>>2)];
      var $34=$st;
      var $submodeID=(($34+132)|0);
      HEAP32[(($submodeID)>>2)]=$33;
      var $35=$st;
      var $lpc_enh_enabled=(($35+136)|0);
      HEAP32[(($lpc_enh_enabled)>>2)]=1;
      var $36=$st;
      var $frameSize9=(($36+12)|0);
      var $37=HEAP32[(($frameSize9)>>2)];
      var $38=$st;
      var $max_pitch10=(($38+32)|0);
      var $39=HEAP32[(($max_pitch10)>>2)];
      var $mul=((($39<<1))|0);
      var $add=(($37+$mul)|0);
      var $40=$st;
      var $subframeSize11=(($40+16)|0);
      var $41=HEAP32[(($subframeSize11)>>2)];
      var $add12=(($add+$41)|0);
      var $add13=(($add12+12)|0);
      var $mul14=((($add13<<2))|0);
      var $call15=_speex_alloc41($mul14);
      var $42=$call15;
      var $43=$st;
      var $excBuf=(($43+48)|0);
      HEAP32[(($excBuf)>>2)]=$42;
      var $44=$st;
      var $excBuf16=(($44+48)|0);
      var $45=HEAP32[(($excBuf16)>>2)];
      var $46=$st;
      var $max_pitch17=(($46+32)|0);
      var $47=HEAP32[(($max_pitch17)>>2)];
      var $mul18=((($47<<1))|0);
      var $add_ptr=(($45+($mul18<<2))|0);
      var $48=$st;
      var $subframeSize19=(($48+16)|0);
      var $49=HEAP32[(($subframeSize19)>>2)];
      var $add_ptr20=(($add_ptr+($49<<2))|0);
      var $add_ptr21=(($add_ptr20+24)|0);
      var $50=$st;
      var $exc=(($50+52)|0);
      HEAP32[(($exc)>>2)]=$add_ptr21;
      var $51=$st;
      var $excBuf22=(($51+48)|0);
      var $52=HEAP32[(($excBuf22)>>2)];
      var $53=$52;
      var $54=$st;
      var $frameSize23=(($54+12)|0);
      var $55=HEAP32[(($frameSize23)>>2)];
      var $56=$st;
      var $max_pitch24=(($56+32)|0);
      var $57=HEAP32[(($max_pitch24)>>2)];
      var $add25=(($55+$57)|0);
      var $mul26=((($add25<<2))|0);
      _memset($53, 0, $mul26, 1);
      var $58=$st;
      var $lpcSize27=(($58+24)|0);
      var $59=HEAP32[(($lpcSize27)>>2)];
      var $mul28=((($59<<2))|0);
      var $call29=_speex_alloc41($mul28);
      var $60=$call29;
      var $61=$st;
      var $interp_qlpc=(($61+60)|0);
      HEAP32[(($interp_qlpc)>>2)]=$60;
      var $62=$st;
      var $lpcSize30=(($62+24)|0);
      var $63=HEAP32[(($lpcSize30)>>2)];
      var $mul31=((($63<<2))|0);
      var $call32=_speex_alloc41($mul31);
      var $64=$call32;
      var $65=$st;
      var $old_qlsp=(($65+56)|0);
      HEAP32[(($old_qlsp)>>2)]=$64;
      var $66=$st;
      var $lpcSize33=(($66+24)|0);
      var $67=HEAP32[(($lpcSize33)>>2)];
      var $mul34=((($67<<2))|0);
      var $call35=_speex_alloc41($mul34);
      var $68=$call35;
      var $69=$st;
      var $mem_sp=(($69+64)|0);
      HEAP32[(($mem_sp)>>2)]=$68;
      var $70=$st;
      var $nbSubframes36=(($70+20)|0);
      var $71=HEAP32[(($nbSubframes36)>>2)];
      var $mul37=((($71<<2))|0);
      var $call38=_speex_alloc41($mul37);
      var $72=$call38;
      var $73=$st;
      var $pi_gain=(($73+76)|0);
      HEAP32[(($pi_gain)>>2)]=$72;
      var $74=$st;
      var $last_pitch=(($74+96)|0);
      HEAP32[(($last_pitch)>>2)]=40;
      var $75=$st;
      var $count_lost=(($75+8)|0);
      HEAP32[(($count_lost)>>2)]=0;
      var $76=$st;
      var $pitch_gain_buf=(($76+104)|0);
      var $arrayidx=(($pitch_gain_buf+8)|0);
      HEAPF32[(($arrayidx)>>2)]=0;
      var $77=$st;
      var $pitch_gain_buf39=(($77+104)|0);
      var $arrayidx40=(($pitch_gain_buf39+4)|0);
      HEAPF32[(($arrayidx40)>>2)]=0;
      var $78=$st;
      var $pitch_gain_buf41=(($78+104)|0);
      var $arrayidx42=(($pitch_gain_buf41)|0);
      HEAPF32[(($arrayidx42)>>2)]=0;
      var $79=$st;
      var $pitch_gain_buf_idx=(($79+116)|0);
      HEAP32[(($pitch_gain_buf_idx)>>2)]=0;
      var $80=$st;
      var $seed=(($80+120)|0);
      HEAP32[(($seed)>>2)]=1000;
      var $81=$st;
      var $sampling_rate=(($81+36)|0);
      HEAP32[(($sampling_rate)>>2)]=8000;
      var $82=$st;
      var $last_ol_gain=(($82+40)|0);
      HEAPF32[(($last_ol_gain)>>2)]=0;
      var $83=$st;
      var $user_callback=(($83+460)|0);
      var $func=(($user_callback+4)|0);
      HEAP32[(($func)>>2)]=4;
      var $84=$st;
      var $user_callback43=(($84+460)|0);
      var $data=(($user_callback43+8)|0);
      HEAP32[(($data)>>2)]=0;
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $85=$i;
      var $cmp=(($85)|0) < 16;
      if ($cmp) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $86=$i;
      var $87=$st;
      var $speex_callbacks=(($87+140)|0);
      var $arrayidx44=(($speex_callbacks+$86*20)|0);
      var $func45=(($arrayidx44+4)|0);
      HEAP32[(($func45)>>2)]=0;
      __label__ = 5; break;
    case 5: // $for_inc
      var $88=$i;
      var $inc=(($88+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $89=$st;
      var $voc_mean=(($89+488)|0);
      HEAPF32[(($voc_mean)>>2)]=0;
      var $90=$st;
      var $voc_m2=(($90+484)|0);
      HEAPF32[(($voc_m2)>>2)]=0;
      var $91=$st;
      var $voc_m1=(($91+480)|0);
      HEAPF32[(($voc_m1)>>2)]=0;
      var $92=$st;
      var $voc_offset=(($92+492)|0);
      HEAP32[(($voc_offset)>>2)]=0;
      var $93=$st;
      var $dtx_enabled=(($93+496)|0);
      HEAP32[(($dtx_enabled)>>2)]=0;
      var $94=$st;
      var $isWideband=(($94+500)|0);
      HEAP32[(($isWideband)>>2)]=0;
      var $95=$st;
      var $highpass_enabled=(($95+504)|0);
      HEAP32[(($highpass_enabled)>>2)]=1;
      var $96=$st;
      var $97=$96;
      $retval=$97;
      __label__ = 7; break;
    case 7: // $return
      var $98=$retval;
      ;
      return $98;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_decoder_init["X"]=1;

function _nb_decoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  var $st;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  $st=$1;
  var $2=$st;
  var $excBuf=(($2+48)|0);
  var $3=HEAP32[(($excBuf)>>2)];
  var $4=$3;
  _speex_free44($4);
  var $5=$st;
  var $interp_qlpc=(($5+60)|0);
  var $6=HEAP32[(($interp_qlpc)>>2)];
  var $7=$6;
  _speex_free44($7);
  var $8=$st;
  var $old_qlsp=(($8+56)|0);
  var $9=HEAP32[(($old_qlsp)>>2)];
  var $10=$9;
  _speex_free44($10);
  var $11=$st;
  var $mem_sp=(($11+64)|0);
  var $12=HEAP32[(($mem_sp)>>2)];
  var $13=$12;
  _speex_free44($13);
  var $14=$st;
  var $pi_gain=(($14+76)|0);
  var $15=HEAP32[(($pi_gain)>>2)];
  var $16=$15;
  _speex_free44($16);
  var $17=$state_addr;
  _speex_free44($17);
  ;
  return;
}


function __speex_fatal($str, $file, $line) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $str_addr;
      var $file_addr;
      var $line_addr;
      $str_addr=$str;
      $file_addr=$file;
      $line_addr=$line;
      var $0=HEAP32[((__impure_ptr)>>2)];
      var $_stderr=(($0+12)|0);
      var $1=HEAP32[(($_stderr)>>2)];
      var $2=$file_addr;
      var $3=$line_addr;
      var $4=$str_addr;
      var $call=_fprintf($1, ((STRING_TABLE.__str11)|0), (tempInt=STACKTOP,STACKTOP += 12,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,HEAP32[((tempInt+4)>>2)]=$3,HEAP32[((tempInt+8)>>2)]=$4,tempInt));
      _exit(1);
      throw "Reached an unreachable!"
    case 1: // $return
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}


function _nb_decode($state, $bits, $vout) {
  var __stackBase__  = STACKTOP; STACKTOP += 16; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $bits_addr;
      var $vout_addr;
      var $st;
      var $i;
      var $sub;
      var $pitch=__stackBase__;
      var $pitch_gain=__stackBase__+4;
      var $ol_gain;
      var $ol_pitch;
      var $ol_pitch_coef;
      var $best_pitch;
      var $best_pitch_gain;
      var $wideband;
      var $m;
      var $stack;
      var $pitch_average;
      var $out;
      var $submode;
      var $advance;
      var $ret;
      var $ret53;
      var $saved_stack;
      var $innov_gain;
      var $cleanup_dest_slot;
      var $saved_stack96;
      var $fact;
      var $lsp_dist;
      var $quant;
      var $qe;
      var $extra;
      var $offset;
      var $exc214;
      var $sp;
      var $innov_save;
      var $tmp;
      var $pit_min;
      var $pit_max;
      var $margin;
      var $q_energy;
      var $ener;
      var $tmp_stack;
      var $saved_stack535;
      var $g;
      var $exci;
      var $exc_ener;
      var $gain32;
      var $gain;
      var $offset761;
      var $sp763;
      var $exc765;
      var $pi_g;
      $state_addr=$state;
      $bits_addr=$bits;
      $vout_addr=$vout;
      $ol_gain=0;
      $ol_pitch=0;
      $ol_pitch_coef=0;
      $best_pitch=40;
      $best_pitch_gain=0;
      $pitch_average=0;
      var $0=$vout_addr;
      var $1=$0;
      $out=$1;
      var $2=$state_addr;
      var $3=$2;
      $st=$3;
      var $4=$st;
      var $stack1=(($4+44)|0);
      var $5=HEAP32[(($stack1)>>2)];
      $stack=$5;
      var $6=$bits_addr;
      var $tobool=(($6)|0)!=0;
      if ($tobool) { __label__ = 3; break; } else { __label__ = 1; break; }
    case 1: // $land_lhs_true
      var $7=$st;
      var $dtx_enabled=(($7+496)|0);
      var $8=HEAP32[(($dtx_enabled)>>2)];
      var $tobool2=(($8)|0)!=0;
      if ($tobool2) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      var $9=$st;
      var $submodeID=(($9+132)|0);
      HEAP32[(($submodeID)>>2)]=0;
      __label__ = 42; break;
    case 3: // $if_else
      var $10=$bits_addr;
      var $tobool3=(($10)|0)!=0;
      if ($tobool3) { __label__ = 5; break; } else { __label__ = 4; break; }
    case 4: // $if_then4
      var $11=$st;
      var $12=$out;
      var $13=$stack;
      _nb_decode_lost($11, $12, $13);
      $retval=0;
      __label__ = 229; break;
    case 5: // $if_end
      var $14=$st;
      var $encode_submode=(($14+124)|0);
      var $15=HEAP32[(($encode_submode)>>2)];
      var $tobool5=(($15)|0)!=0;
      if ($tobool5) { __label__ = 6; break; } else { __label__ = 41; break; }
    case 6: // $if_then6
      __label__ = 7; break;
    case 7: // $do_body
      var $16=$bits_addr;
      var $call=_speex_bits_remaining($16);
      var $cmp=(($call)|0) < 5;
      if ($cmp) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then7
      $retval=-1;
      __label__ = 229; break;
    case 9: // $if_end8
      var $17=$bits_addr;
      var $call9=_speex_bits_unpack_unsigned($17, 1);
      $wideband=$call9;
      var $18=$wideband;
      var $tobool10=(($18)|0)!=0;
      if ($tobool10) { __label__ = 10; break; } else { __label__ = 21; break; }
    case 10: // $if_then11
      var $19=$bits_addr;
      var $call12=_speex_bits_unpack_unsigned($19, 3);
      $submode=$call12;
      $advance=$call12;
      var $20=$submode;
      var $arrayidx=((_wb_skip_table+($20<<2))|0);
      var $21=HEAP32[(($arrayidx)>>2)];
      $advance=$21;
      var $22=$advance;
      var $cmp13=(($22)|0) < 0;
      if ($cmp13) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then14
      _speex_notify53(((STRING_TABLE.__str434)|0));
      $retval=-2;
      __label__ = 229; break;
    case 12: // $if_end15
      var $23=$advance;
      var $sub16=(($23-4)|0);
      $advance=$sub16;
      var $24=$bits_addr;
      var $25=$advance;
      _speex_bits_advance($24, $25);
      var $26=$bits_addr;
      var $call17=_speex_bits_remaining($26);
      var $cmp18=(($call17)|0) < 5;
      if ($cmp18) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then19
      $retval=-1;
      __label__ = 229; break;
    case 14: // $if_end20
      var $27=$bits_addr;
      var $call21=_speex_bits_unpack_unsigned($27, 1);
      $wideband=$call21;
      var $28=$wideband;
      var $tobool22=(($28)|0)!=0;
      if ($tobool22) { __label__ = 15; break; } else { __label__ = 20; break; }
    case 15: // $if_then23
      var $29=$bits_addr;
      var $call24=_speex_bits_unpack_unsigned($29, 3);
      $submode=$call24;
      $advance=$call24;
      var $30=$submode;
      var $arrayidx25=((_wb_skip_table+($30<<2))|0);
      var $31=HEAP32[(($arrayidx25)>>2)];
      $advance=$31;
      var $32=$advance;
      var $cmp26=(($32)|0) < 0;
      if ($cmp26) { __label__ = 16; break; } else { __label__ = 17; break; }
    case 16: // $if_then27
      _speex_notify53(((STRING_TABLE.__str434)|0));
      $retval=-2;
      __label__ = 229; break;
    case 17: // $if_end28
      var $33=$advance;
      var $sub29=(($33-4)|0);
      $advance=$sub29;
      var $34=$bits_addr;
      var $35=$advance;
      _speex_bits_advance($34, $35);
      var $36=$bits_addr;
      var $call30=_speex_bits_unpack_unsigned($36, 1);
      $wideband=$call30;
      var $37=$wideband;
      var $tobool31=(($37)|0)!=0;
      if ($tobool31) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then32
      _speex_notify53(((STRING_TABLE.__str535)|0));
      $retval=-2;
      __label__ = 229; break;
    case 19: // $if_end33
      __label__ = 20; break;
    case 20: // $if_end34
      __label__ = 21; break;
    case 21: // $if_end35
      var $38=$bits_addr;
      var $call36=_speex_bits_remaining($38);
      var $cmp37=(($call36)|0) < 4;
      if ($cmp37) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then38
      $retval=-1;
      __label__ = 229; break;
    case 23: // $if_end39
      var $39=$bits_addr;
      var $call40=_speex_bits_unpack_unsigned($39, 4);
      $m=$call40;
      var $40=$m;
      var $cmp41=(($40)|0)==15;
      if ($cmp41) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: // $if_then42
      $retval=-1;
      __label__ = 229; break;
    case 25: // $if_else43
      var $41=$m;
      var $cmp44=(($41)|0)==14;
      if ($cmp44) { __label__ = 26; break; } else { __label__ = 29; break; }
    case 26: // $if_then45
      var $42=$bits_addr;
      var $43=$st;
      var $speex_callbacks=(($43+140)|0);
      var $arraydecay=(($speex_callbacks)|0);
      var $44=$state_addr;
      var $call46=_speex_inband_handler($42, $arraydecay, $44);
      $ret=$call46;
      var $45=$ret;
      var $tobool47=(($45)|0)!=0;
      if ($tobool47) { __label__ = 27; break; } else { __label__ = 28; break; }
    case 27: // $if_then48
      var $46=$ret;
      $retval=$46;
      __label__ = 229; break;
    case 28: // $if_end49
      __label__ = 37; break;
    case 29: // $if_else50
      var $47=$m;
      var $cmp51=(($47)|0)==13;
      if ($cmp51) { __label__ = 30; break; } else { __label__ = 33; break; }
    case 30: // $if_then52
      var $48=$st;
      var $user_callback=(($48+460)|0);
      var $func=(($user_callback+4)|0);
      var $49=HEAP32[(($func)>>2)];
      var $50=$bits_addr;
      var $51=$state_addr;
      var $52=$st;
      var $user_callback54=(($52+460)|0);
      var $data=(($user_callback54+8)|0);
      var $53=HEAP32[(($data)>>2)];
      var $call55=FUNCTION_TABLE[$49]($50, $51, $53);
      $ret53=$call55;
      var $54=$ret53;
      var $tobool56=(($54)|0)!=0;
      if ($tobool56) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then57
      var $55=$ret53;
      $retval=$55;
      __label__ = 229; break;
    case 32: // $if_end58
      __label__ = 36; break;
    case 33: // $if_else59
      var $56=$m;
      var $cmp60=(($56)|0) > 8;
      if ($cmp60) { __label__ = 34; break; } else { __label__ = 35; break; }
    case 34: // $if_then61
      _speex_notify53(((STRING_TABLE.__str434)|0));
      $retval=-2;
      __label__ = 229; break;
    case 35: // $if_end62
      __label__ = 36; break;
    case 36: // $if_end63
      __label__ = 37; break;
    case 37: // $if_end64
      __label__ = 38; break;
    case 38: // $if_end65
      __label__ = 39; break;
    case 39: // $do_cond
      var $57=$m;
      var $cmp66=(($57)|0) > 8;
      if ($cmp66) { __label__ = 7; break; } else { __label__ = 40; break; }
    case 40: // $do_end
      var $58=$m;
      var $59=$st;
      var $submodeID67=(($59+132)|0);
      HEAP32[(($submodeID67)>>2)]=$58;
      __label__ = 41; break;
    case 41: // $if_end68
      __label__ = 42; break;
    case 42: // $if_end69
      var $60=$st;
      var $excBuf=(($60+48)|0);
      var $61=HEAP32[(($excBuf)>>2)];
      var $62=$61;
      var $63=$st;
      var $excBuf70=(($63+48)|0);
      var $64=HEAP32[(($excBuf70)>>2)];
      var $65=$st;
      var $frameSize=(($65+12)|0);
      var $66=HEAP32[(($frameSize)>>2)];
      var $add_ptr=(($64+($66<<2))|0);
      var $67=$add_ptr;
      var $68=$st;
      var $max_pitch=(($68+32)|0);
      var $69=HEAP32[(($max_pitch)>>2)];
      var $mul=((($69<<1))|0);
      var $70=$st;
      var $subframeSize=(($70+16)|0);
      var $71=HEAP32[(($subframeSize)>>2)];
      var $add=(($mul+$71)|0);
      var $add71=(($add+12)|0);
      var $mul72=((($add71<<2))|0);
      var $72=$st;
      var $excBuf73=(($72+48)|0);
      var $73=HEAP32[(($excBuf73)>>2)];
      var $74=$st;
      var $excBuf74=(($74+48)|0);
      var $75=HEAP32[(($excBuf74)>>2)];
      var $76=$st;
      var $frameSize75=(($76+12)|0);
      var $77=HEAP32[(($frameSize75)>>2)];
      var $add_ptr76=(($75+($77<<2))|0);
      var $sub_ptr_lhs_cast=$73;
      var $sub_ptr_rhs_cast=$add_ptr76;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul77=((0)|0);
      var $add78=(($mul72+$mul77)|0);
      _llvm_memmove_p0i8_p0i8_i32($62, $67, $add78, 1, 0);
      var $78=$st;
      var $submodeID79=(($78+132)|0);
      var $79=HEAP32[(($submodeID79)>>2)];
      var $80=$st;
      var $submodes=(($80+128)|0);
      var $81=HEAP32[(($submodes)>>2)];
      var $arrayidx80=(($81+($79<<2))|0);
      var $82=HEAP32[(($arrayidx80)>>2)];
      var $cmp81=(($82)|0)==0;
      if ($cmp81) { __label__ = 43; break; } else { __label__ = 48; break; }
    case 43: // $if_then82
      var $83=$st;
      var $lpcSize=(($83+24)|0);
      var $84=HEAP32[(($lpcSize)>>2)];
      var $85=_llvm_stacksave();
      $saved_stack=$85;
      var $vla=STACKTOP;STACKTOP += $84*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $86=$st;
      var $interp_qlpc=(($86+60)|0);
      var $87=HEAP32[(($interp_qlpc)>>2)];
      var $88=$st;
      var $lpcSize83=(($88+24)|0);
      var $89=HEAP32[(($lpcSize83)>>2)];
      _bw_lpc(0.9300000071525574, $87, $vla, $89);
      $innov_gain=0;
      var $90=$st;
      var $exc=(($90+52)|0);
      var $91=HEAP32[(($exc)>>2)];
      var $92=$st;
      var $frameSize84=(($92+12)|0);
      var $93=HEAP32[(($frameSize84)>>2)];
      var $call85=_compute_rms16($91, $93);
      $innov_gain=$call85;
      $i=0;
      __label__ = 44; break;
    case 44: // $for_cond
      var $94=$i;
      var $95=$st;
      var $frameSize86=(($95+12)|0);
      var $96=HEAP32[(($frameSize86)>>2)];
      var $cmp87=(($94)|0) < (($96)|0);
      if ($cmp87) { __label__ = 45; break; } else { __label__ = 47; break; }
    case 45: // $for_body
      var $97=$innov_gain;
      var $98=$st;
      var $seed=(($98+120)|0);
      var $call88=_speex_rand54($97, $seed);
      var $99=$i;
      var $100=$st;
      var $exc89=(($100+52)|0);
      var $101=HEAP32[(($exc89)>>2)];
      var $arrayidx90=(($101+($99<<2))|0);
      HEAPF32[(($arrayidx90)>>2)]=$call88;
      __label__ = 46; break;
    case 46: // $for_inc
      var $102=$i;
      var $inc=(($102+1)|0);
      $i=$inc;
      __label__ = 44; break;
    case 47: // $for_end
      var $103=$st;
      var $first=(($103+4)|0);
      HEAP32[(($first)>>2)]=1;
      var $104=$st;
      var $exc91=(($104+52)|0);
      var $105=HEAP32[(($exc91)>>2)];
      var $106=$out;
      var $107=$st;
      var $frameSize92=(($107+12)|0);
      var $108=HEAP32[(($frameSize92)>>2)];
      var $109=$st;
      var $lpcSize93=(($109+24)|0);
      var $110=HEAP32[(($lpcSize93)>>2)];
      var $111=$st;
      var $mem_sp=(($111+64)|0);
      var $112=HEAP32[(($mem_sp)>>2)];
      var $113=$stack;
      _iir_mem16($105, $vla, $106, $108, $110, $112, $113);
      var $114=$st;
      var $count_lost=(($114+8)|0);
      HEAP32[(($count_lost)>>2)]=0;
      $retval=0;
      $cleanup_dest_slot=1;
      var $115=$saved_stack;
      _llvm_stackrestore($115);
      __label__ = 229; break;
    case 48: // $if_end94
      var $116=$st;
      var $lpcSize95=(($116+24)|0);
      var $117=HEAP32[(($lpcSize95)>>2)];
      var $118=_llvm_stacksave();
      $saved_stack96=$118;
      var $vla97=STACKTOP;STACKTOP += $117*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $119=$st;
      var $submodeID98=(($119+132)|0);
      var $120=HEAP32[(($submodeID98)>>2)];
      var $121=$st;
      var $submodes99=(($121+128)|0);
      var $122=HEAP32[(($submodes99)>>2)];
      var $arrayidx100=(($122+($120<<2))|0);
      var $123=HEAP32[(($arrayidx100)>>2)];
      var $lsp_unquant=(($123+20)|0);
      var $124=HEAP32[(($lsp_unquant)>>2)];
      var $125=$st;
      var $lpcSize101=(($125+24)|0);
      var $126=HEAP32[(($lpcSize101)>>2)];
      var $127=$bits_addr;
      FUNCTION_TABLE[$124]($vla97, $126, $127);
      var $128=$st;
      var $count_lost102=(($128+8)|0);
      var $129=HEAP32[(($count_lost102)>>2)];
      var $tobool103=(($129)|0)!=0;
      if ($tobool103) { __label__ = 49; break; } else { __label__ = 61; break; }
    case 49: // $if_then104
      $lsp_dist=0;
      $i=0;
      __label__ = 50; break;
    case 50: // $for_cond105
      var $130=$i;
      var $131=$st;
      var $lpcSize106=(($131+24)|0);
      var $132=HEAP32[(($lpcSize106)>>2)];
      var $cmp107=(($130)|0) < (($132)|0);
      if ($cmp107) { __label__ = 51; break; } else { __label__ = 56; break; }
    case 51: // $for_body108
      var $133=$lsp_dist;
      var $134=$i;
      var $135=$st;
      var $old_qlsp=(($135+56)|0);
      var $136=HEAP32[(($old_qlsp)>>2)];
      var $arrayidx109=(($136+($134<<2))|0);
      var $137=HEAPF32[(($arrayidx109)>>2)];
      var $138=$i;
      var $arrayidx110=(($vla97+($138<<2))|0);
      var $139=HEAPF32[(($arrayidx110)>>2)];
      var $sub111=$137-$139;
      var $cmp112=$sub111 < 0;
      if ($cmp112) { __label__ = 52; break; } else { __label__ = 53; break; }
    case 52: // $cond_true
      var $140=$i;
      var $141=$st;
      var $old_qlsp113=(($141+56)|0);
      var $142=HEAP32[(($old_qlsp113)>>2)];
      var $arrayidx114=(($142+($140<<2))|0);
      var $143=HEAPF32[(($arrayidx114)>>2)];
      var $144=$i;
      var $arrayidx115=(($vla97+($144<<2))|0);
      var $145=HEAPF32[(($arrayidx115)>>2)];
      var $sub116=$143-$145;
      var $sub117=(-$sub116);
      var $cond = $sub117;__label__ = 54; break;
    case 53: // $cond_false
      var $146=$i;
      var $147=$st;
      var $old_qlsp118=(($147+56)|0);
      var $148=HEAP32[(($old_qlsp118)>>2)];
      var $arrayidx119=(($148+($146<<2))|0);
      var $149=HEAPF32[(($arrayidx119)>>2)];
      var $150=$i;
      var $arrayidx120=(($vla97+($150<<2))|0);
      var $151=HEAPF32[(($arrayidx120)>>2)];
      var $sub121=$149-$151;
      var $cond = $sub121;__label__ = 54; break;
    case 54: // $cond_end
      var $cond;
      var $add122=$133+$cond;
      $lsp_dist=$add122;
      __label__ = 55; break;
    case 55: // $for_inc123
      var $152=$i;
      var $inc124=(($152+1)|0);
      $i=$inc124;
      __label__ = 50; break;
    case 56: // $for_end125
      var $153=$lsp_dist;
      var $conv=$153;
      var $mul126=$conv*-0.2;
      var $call127=_exp($mul126);
      var $mul128=$call127*0.6;
      var $conv129=$mul128;
      $fact=$conv129;
      $i=0;
      __label__ = 57; break;
    case 57: // $for_cond130
      var $154=$i;
      var $155=$st;
      var $lpcSize131=(($155+24)|0);
      var $156=HEAP32[(($lpcSize131)>>2)];
      var $cmp132=(($154)|0) < (($156)|0);
      if ($cmp132) { __label__ = 58; break; } else { __label__ = 60; break; }
    case 58: // $for_body134
      var $157=$fact;
      var $158=$i;
      var $159=$st;
      var $mem_sp135=(($159+64)|0);
      var $160=HEAP32[(($mem_sp135)>>2)];
      var $arrayidx136=(($160+($158<<2))|0);
      var $161=HEAPF32[(($arrayidx136)>>2)];
      var $mul137=$157*$161;
      var $162=$i;
      var $163=$st;
      var $mem_sp138=(($163+64)|0);
      var $164=HEAP32[(($mem_sp138)>>2)];
      var $arrayidx139=(($164+($162<<2))|0);
      HEAPF32[(($arrayidx139)>>2)]=$mul137;
      __label__ = 59; break;
    case 59: // $for_inc140
      var $165=$i;
      var $inc141=(($165+1)|0);
      $i=$inc141;
      __label__ = 57; break;
    case 60: // $for_end142
      __label__ = 61; break;
    case 61: // $if_end143
      var $166=$st;
      var $first144=(($166+4)|0);
      var $167=HEAP32[(($first144)>>2)];
      var $tobool145=(($167)|0)!=0;
      if ($tobool145) { __label__ = 63; break; } else { __label__ = 62; break; }
    case 62: // $lor_lhs_false
      var $168=$st;
      var $count_lost146=(($168+8)|0);
      var $169=HEAP32[(($count_lost146)>>2)];
      var $tobool147=(($169)|0)!=0;
      if ($tobool147) { __label__ = 63; break; } else { __label__ = 68; break; }
    case 63: // $if_then148
      $i=0;
      __label__ = 64; break;
    case 64: // $for_cond149
      var $170=$i;
      var $171=$st;
      var $lpcSize150=(($171+24)|0);
      var $172=HEAP32[(($lpcSize150)>>2)];
      var $cmp151=(($170)|0) < (($172)|0);
      if ($cmp151) { __label__ = 65; break; } else { __label__ = 67; break; }
    case 65: // $for_body153
      var $173=$i;
      var $arrayidx154=(($vla97+($173<<2))|0);
      var $174=HEAPF32[(($arrayidx154)>>2)];
      var $175=$i;
      var $176=$st;
      var $old_qlsp155=(($176+56)|0);
      var $177=HEAP32[(($old_qlsp155)>>2)];
      var $arrayidx156=(($177+($175<<2))|0);
      HEAPF32[(($arrayidx156)>>2)]=$174;
      __label__ = 66; break;
    case 66: // $for_inc157
      var $178=$i;
      var $inc158=(($178+1)|0);
      $i=$inc158;
      __label__ = 64; break;
    case 67: // $for_end159
      __label__ = 68; break;
    case 68: // $if_end160
      var $179=$st;
      var $submodeID161=(($179+132)|0);
      var $180=HEAP32[(($submodeID161)>>2)];
      var $181=$st;
      var $submodes162=(($181+128)|0);
      var $182=HEAP32[(($submodes162)>>2)];
      var $arrayidx163=(($182+($180<<2))|0);
      var $183=HEAP32[(($arrayidx163)>>2)];
      var $lbr_pitch=(($183)|0);
      var $184=HEAP32[(($lbr_pitch)>>2)];
      var $cmp164=(($184)|0)!=-1;
      if ($cmp164) { __label__ = 69; break; } else { __label__ = 70; break; }
    case 69: // $if_then166
      var $185=$st;
      var $min_pitch=(($185+28)|0);
      var $186=HEAP32[(($min_pitch)>>2)];
      var $187=$bits_addr;
      var $call167=_speex_bits_unpack_unsigned($187, 7);
      var $add168=(($186+$call167)|0);
      $ol_pitch=$add168;
      __label__ = 70; break;
    case 70: // $if_end169
      var $188=$st;
      var $submodeID170=(($188+132)|0);
      var $189=HEAP32[(($submodeID170)>>2)];
      var $190=$st;
      var $submodes171=(($190+128)|0);
      var $191=HEAP32[(($submodes171)>>2)];
      var $arrayidx172=(($191+($189<<2))|0);
      var $192=HEAP32[(($arrayidx172)>>2)];
      var $forced_pitch_gain=(($192+4)|0);
      var $193=HEAP32[(($forced_pitch_gain)>>2)];
      var $tobool173=(($193)|0)!=0;
      if ($tobool173) { __label__ = 71; break; } else { __label__ = 72; break; }
    case 71: // $if_then174
      var $194=$bits_addr;
      var $call175=_speex_bits_unpack_unsigned($194, 4);
      $quant=$call175;
      var $195=$quant;
      var $conv176=(($195)|0);
      var $mul177=$conv176*0.066667;
      var $conv178=$mul177;
      $ol_pitch_coef=$conv178;
      __label__ = 72; break;
    case 72: // $if_end179
      var $196=$bits_addr;
      var $call180=_speex_bits_unpack_unsigned($196, 5);
      $qe=$call180;
      var $197=$qe;
      var $conv181=(($197)|0);
      var $div=$conv181/3.5;
      var $call182=_exp($div);
      var $mul183=$call182;
      var $conv184=$mul183;
      $ol_gain=$conv184;
      var $198=$st;
      var $lpcSize185=(($198+24)|0);
      var $199=HEAP32[(($lpcSize185)>>2)];
      var $vla186=STACKTOP;STACKTOP += $199*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $200=$st;
      var $subframeSize187=(($200+16)|0);
      var $201=HEAP32[(($subframeSize187)>>2)];
      var $vla188=STACKTOP;STACKTOP += $201*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $202=$st;
      var $subframeSize189=(($202+16)|0);
      var $203=HEAP32[(($subframeSize189)>>2)];
      var $vla190=STACKTOP;STACKTOP += $203*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $204=$st;
      var $submodeID191=(($204+132)|0);
      var $205=HEAP32[(($submodeID191)>>2)];
      var $cmp192=(($205)|0)==1;
      if ($cmp192) { __label__ = 73; break; } else { __label__ = 77; break; }
    case 73: // $if_then194
      var $206=$bits_addr;
      var $call195=_speex_bits_unpack_unsigned($206, 4);
      $extra=$call195;
      var $207=$extra;
      var $cmp196=(($207)|0)==15;
      if ($cmp196) { __label__ = 74; break; } else { __label__ = 75; break; }
    case 74: // $if_then198
      var $208=$st;
      var $dtx_enabled199=(($208+496)|0);
      HEAP32[(($dtx_enabled199)>>2)]=1;
      __label__ = 76; break;
    case 75: // $if_else200
      var $209=$st;
      var $dtx_enabled201=(($209+496)|0);
      HEAP32[(($dtx_enabled201)>>2)]=0;
      __label__ = 76; break;
    case 76: // $if_end202
      __label__ = 77; break;
    case 77: // $if_end203
      var $210=$st;
      var $submodeID204=(($210+132)|0);
      var $211=HEAP32[(($submodeID204)>>2)];
      var $cmp205=(($211)|0) > 1;
      if ($cmp205) { __label__ = 78; break; } else { __label__ = 79; break; }
    case 78: // $if_then207
      var $212=$st;
      var $dtx_enabled208=(($212+496)|0);
      HEAP32[(($dtx_enabled208)>>2)]=0;
      __label__ = 79; break;
    case 79: // $if_end209
      $sub=0;
      __label__ = 80; break;
    case 80: // $for_cond210
      var $213=$sub;
      var $214=$st;
      var $nbSubframes=(($214+20)|0);
      var $215=HEAP32[(($nbSubframes)>>2)];
      var $cmp211=(($213)|0) < (($215)|0);
      if ($cmp211) { __label__ = 81; break; } else { __label__ = 187; break; }
    case 81: // $for_body213
      $innov_save=0;
      var $216=$st;
      var $subframeSize215=(($216+16)|0);
      var $217=HEAP32[(($subframeSize215)>>2)];
      var $218=$sub;
      var $mul216=(($217*$218)|0);
      $offset=$mul216;
      var $219=$st;
      var $exc217=(($219+52)|0);
      var $220=HEAP32[(($exc217)>>2)];
      var $221=$offset;
      var $add_ptr218=(($220+($221<<2))|0);
      $exc214=$add_ptr218;
      var $222=$out;
      var $223=$offset;
      var $add_ptr219=(($222+($223<<2))|0);
      $sp=$add_ptr219;
      var $224=$st;
      var $innov_save220=(($224+80)|0);
      var $225=HEAP32[(($innov_save220)>>2)];
      var $tobool221=(($225)|0)!=0;
      if ($tobool221) { __label__ = 82; break; } else { __label__ = 83; break; }
    case 82: // $if_then222
      var $226=$st;
      var $innov_save223=(($226+80)|0);
      var $227=HEAP32[(($innov_save223)>>2)];
      var $228=$offset;
      var $add_ptr224=(($227+($228<<2))|0);
      $innov_save=$add_ptr224;
      __label__ = 83; break;
    case 83: // $if_end225
      var $229=$exc214;
      var $230=$229;
      var $231=$st;
      var $subframeSize226=(($231+16)|0);
      var $232=HEAP32[(($subframeSize226)>>2)];
      var $mul227=((($232<<2))|0);
      _memset($230, 0, $mul227, 1);
      var $233=$st;
      var $submodeID228=(($233+132)|0);
      var $234=HEAP32[(($submodeID228)>>2)];
      var $235=$st;
      var $submodes229=(($235+128)|0);
      var $236=HEAP32[(($submodes229)>>2)];
      var $arrayidx230=(($236+($234<<2))|0);
      var $237=HEAP32[(($arrayidx230)>>2)];
      var $ltp_unquant=(($237+28)|0);
      var $238=HEAP32[(($ltp_unquant)>>2)];
      var $tobool231=(($238)|0)!=0;
      if ($tobool231) { __label__ = 85; break; } else { __label__ = 84; break; }
    case 84: // $if_then232
      __speex_fatal(((STRING_TABLE.__str636)|0), ((STRING_TABLE.__str131)|0), 1321);
      __label__ = 85; break;
    case 85: // $if_end233
      var $239=$st;
      var $submodeID236=(($239+132)|0);
      var $240=HEAP32[(($submodeID236)>>2)];
      var $241=$st;
      var $submodes237=(($241+128)|0);
      var $242=HEAP32[(($submodes237)>>2)];
      var $arrayidx238=(($242+($240<<2))|0);
      var $243=HEAP32[(($arrayidx238)>>2)];
      var $lbr_pitch239=(($243)|0);
      var $244=HEAP32[(($lbr_pitch239)>>2)];
      var $cmp240=(($244)|0)!=-1;
      if ($cmp240) { __label__ = 86; break; } else { __label__ = 94; break; }
    case 86: // $if_then242
      var $245=$st;
      var $submodeID244=(($245+132)|0);
      var $246=HEAP32[(($submodeID244)>>2)];
      var $247=$st;
      var $submodes245=(($247+128)|0);
      var $248=HEAP32[(($submodes245)>>2)];
      var $arrayidx246=(($248+($246<<2))|0);
      var $249=HEAP32[(($arrayidx246)>>2)];
      var $lbr_pitch247=(($249)|0);
      var $250=HEAP32[(($lbr_pitch247)>>2)];
      $margin=$250;
      var $251=$margin;
      var $tobool248=(($251)|0)!=0;
      if ($tobool248) { __label__ = 87; break; } else { __label__ = 92; break; }
    case 87: // $if_then249
      var $252=$ol_pitch;
      var $253=$margin;
      var $sub250=(($252-$253)|0);
      var $add251=(($sub250+1)|0);
      $pit_min=$add251;
      var $254=$pit_min;
      var $255=$st;
      var $min_pitch252=(($255+28)|0);
      var $256=HEAP32[(($min_pitch252)>>2)];
      var $cmp253=(($254)|0) < (($256)|0);
      if ($cmp253) { __label__ = 88; break; } else { __label__ = 89; break; }
    case 88: // $if_then255
      var $257=$st;
      var $min_pitch256=(($257+28)|0);
      var $258=HEAP32[(($min_pitch256)>>2)];
      $pit_min=$258;
      __label__ = 89; break;
    case 89: // $if_end257
      var $259=$ol_pitch;
      var $260=$margin;
      var $add258=(($259+$260)|0);
      $pit_max=$add258;
      var $261=$pit_max;
      var $262=$st;
      var $max_pitch259=(($262+32)|0);
      var $263=HEAP32[(($max_pitch259)>>2)];
      var $cmp260=(($261)|0) > (($263)|0);
      if ($cmp260) { __label__ = 90; break; } else { __label__ = 91; break; }
    case 90: // $if_then262
      var $264=$st;
      var $max_pitch263=(($264+32)|0);
      var $265=HEAP32[(($max_pitch263)>>2)];
      $pit_max=$265;
      __label__ = 91; break;
    case 91: // $if_end264
      __label__ = 93; break;
    case 92: // $if_else265
      var $266=$ol_pitch;
      $pit_max=$266;
      $pit_min=$266;
      __label__ = 93; break;
    case 93: // $if_end266
      __label__ = 95; break;
    case 94: // $if_else267
      var $267=$st;
      var $min_pitch268=(($267+28)|0);
      var $268=HEAP32[(($min_pitch268)>>2)];
      $pit_min=$268;
      var $269=$st;
      var $max_pitch269=(($269+32)|0);
      var $270=HEAP32[(($max_pitch269)>>2)];
      $pit_max=$270;
      __label__ = 95; break;
    case 95: // $if_end270
      var $271=$st;
      var $submodeID271=(($271+132)|0);
      var $272=HEAP32[(($submodeID271)>>2)];
      var $273=$st;
      var $submodes272=(($273+128)|0);
      var $274=HEAP32[(($submodes272)>>2)];
      var $arrayidx273=(($274+($272<<2))|0);
      var $275=HEAP32[(($arrayidx273)>>2)];
      var $ltp_unquant274=(($275+28)|0);
      var $276=HEAP32[(($ltp_unquant274)>>2)];
      var $277=$exc214;
      var $278=$pit_min;
      var $279=$pit_max;
      var $280=$ol_pitch_coef;
      var $281=$st;
      var $submodeID275=(($281+132)|0);
      var $282=HEAP32[(($submodeID275)>>2)];
      var $283=$st;
      var $submodes276=(($283+128)|0);
      var $284=HEAP32[(($submodes276)>>2)];
      var $arrayidx277=(($284+($282<<2))|0);
      var $285=HEAP32[(($arrayidx277)>>2)];
      var $ltp_params=(($285+32)|0);
      var $286=HEAP32[(($ltp_params)>>2)];
      var $287=$st;
      var $subframeSize278=(($287+16)|0);
      var $288=HEAP32[(($subframeSize278)>>2)];
      var $arrayidx279=(($pitch_gain)|0);
      var $289=$bits_addr;
      var $290=$stack;
      var $291=$st;
      var $count_lost280=(($291+8)|0);
      var $292=HEAP32[(($count_lost280)>>2)];
      var $293=$offset;
      var $294=$st;
      var $last_pitch_gain=(($294+100)|0);
      var $295=HEAPF32[(($last_pitch_gain)>>2)];
      FUNCTION_TABLE[$276]($277, $vla190, $278, $279, $280, $286, $288, $pitch, $arrayidx279, $289, $290, $292, $293, $295, 0);
      var $296=$st;
      var $subframeSize281=(($296+16)|0);
      var $297=HEAP32[(($subframeSize281)>>2)];
      _sanitize_values32($vla190, -32000, 32000, $297);
      var $arrayidx282=(($pitch_gain+4)|0);
      var $298=HEAPF32[(($arrayidx282)>>2)];
      var $cmp283=$298 < 0;
      if ($cmp283) { __label__ = 96; break; } else { __label__ = 97; break; }
    case 96: // $cond_true285
      var $arrayidx286=(($pitch_gain+4)|0);
      var $299=HEAPF32[(($arrayidx286)>>2)];
      var $sub287=(-$299);
      var $cond291 = $sub287;__label__ = 98; break;
    case 97: // $cond_false288
      var $arrayidx289=(($pitch_gain+4)|0);
      var $300=HEAPF32[(($arrayidx289)>>2)];
      var $cond291 = $300;__label__ = 98; break;
    case 98: // $cond_end290
      var $cond291;
      var $conv292=$cond291;
      var $arrayidx293=(($pitch_gain)|0);
      var $301=HEAPF32[(($arrayidx293)>>2)];
      var $cmp294=$301 > 0;
      if ($cmp294) { __label__ = 99; break; } else { __label__ = 100; break; }
    case 99: // $cond_true296
      var $arrayidx297=(($pitch_gain)|0);
      var $302=HEAPF32[(($arrayidx297)>>2)];
      var $conv298=$302;
      var $cond304 = $conv298;__label__ = 101; break;
    case 100: // $cond_false299
      var $arrayidx300=(($pitch_gain)|0);
      var $303=HEAPF32[(($arrayidx300)>>2)];
      var $conv301=$303;
      var $mul302=$conv301*-0.5;
      var $cond304 = $mul302;__label__ = 101; break;
    case 101: // $cond_end303
      var $cond304;
      var $add305=$conv292+$cond304;
      var $arrayidx306=(($pitch_gain+8)|0);
      var $304=HEAPF32[(($arrayidx306)>>2)];
      var $cmp307=$304 > 0;
      if ($cmp307) { __label__ = 102; break; } else { __label__ = 103; break; }
    case 102: // $cond_true309
      var $arrayidx310=(($pitch_gain+8)|0);
      var $305=HEAPF32[(($arrayidx310)>>2)];
      var $conv311=$305;
      var $cond317 = $conv311;__label__ = 104; break;
    case 103: // $cond_false312
      var $arrayidx313=(($pitch_gain+8)|0);
      var $306=HEAPF32[(($arrayidx313)>>2)];
      var $conv314=$306;
      var $mul315=$conv314*-0.5;
      var $cond317 = $mul315;__label__ = 104; break;
    case 104: // $cond_end316
      var $cond317;
      var $add318=$add305+$cond317;
      var $conv319=$add318;
      $tmp=$conv319;
      var $307=$tmp;
      var $308=$pitch_average;
      var $add320=$308+$307;
      $pitch_average=$add320;
      var $309=$tmp;
      var $310=$best_pitch_gain;
      var $cmp321=$309 > $310;
      if ($cmp321) { __label__ = 105; break; } else { __label__ = 117; break; }
    case 105: // $land_lhs_true323
      var $311=$best_pitch;
      var $mul324=((($311<<1))|0);
      var $312=HEAP32[(($pitch)>>2)];
      var $sub325=(($mul324-$312)|0);
      var $cmp326=(($sub325)|0) < 0;
      if ($cmp326) { __label__ = 106; break; } else { __label__ = 107; break; }
    case 106: // $cond_true328
      var $313=$best_pitch;
      var $mul329=((($313<<1))|0);
      var $314=HEAP32[(($pitch)>>2)];
      var $sub330=(($mul329-$314)|0);
      var $sub331=(((-$sub330))|0);
      var $cond336 = $sub331;__label__ = 108; break;
    case 107: // $cond_false332
      var $315=$best_pitch;
      var $mul333=((($315<<1))|0);
      var $316=HEAP32[(($pitch)>>2)];
      var $sub334=(($mul333-$316)|0);
      var $cond336 = $sub334;__label__ = 108; break;
    case 108: // $cond_end335
      var $cond336;
      var $cmp337=(($cond336)|0) >= 3;
      if ($cmp337) { __label__ = 109; break; } else { __label__ = 117; break; }
    case 109: // $land_lhs_true339
      var $317=$best_pitch;
      var $mul340=(($317*3)|0);
      var $318=HEAP32[(($pitch)>>2)];
      var $sub341=(($mul340-$318)|0);
      var $cmp342=(($sub341)|0) < 0;
      if ($cmp342) { __label__ = 110; break; } else { __label__ = 111; break; }
    case 110: // $cond_true344
      var $319=$best_pitch;
      var $mul345=(($319*3)|0);
      var $320=HEAP32[(($pitch)>>2)];
      var $sub346=(($mul345-$320)|0);
      var $sub347=(((-$sub346))|0);
      var $cond352 = $sub347;__label__ = 112; break;
    case 111: // $cond_false348
      var $321=$best_pitch;
      var $mul349=(($321*3)|0);
      var $322=HEAP32[(($pitch)>>2)];
      var $sub350=(($mul349-$322)|0);
      var $cond352 = $sub350;__label__ = 112; break;
    case 112: // $cond_end351
      var $cond352;
      var $cmp353=(($cond352)|0) >= 4;
      if ($cmp353) { __label__ = 113; break; } else { __label__ = 117; break; }
    case 113: // $land_lhs_true355
      var $323=$best_pitch;
      var $mul356=((($323<<2))|0);
      var $324=HEAP32[(($pitch)>>2)];
      var $sub357=(($mul356-$324)|0);
      var $cmp358=(($sub357)|0) < 0;
      if ($cmp358) { __label__ = 114; break; } else { __label__ = 115; break; }
    case 114: // $cond_true360
      var $325=$best_pitch;
      var $mul361=((($325<<2))|0);
      var $326=HEAP32[(($pitch)>>2)];
      var $sub362=(($mul361-$326)|0);
      var $sub363=(((-$sub362))|0);
      var $cond368 = $sub363;__label__ = 116; break;
    case 115: // $cond_false364
      var $327=$best_pitch;
      var $mul365=((($327<<2))|0);
      var $328=HEAP32[(($pitch)>>2)];
      var $sub366=(($mul365-$328)|0);
      var $cond368 = $sub366;__label__ = 116; break;
    case 116: // $cond_end367
      var $cond368;
      var $cmp369=(($cond368)|0) >= 5;
      if ($cmp369) { __label__ = 143; break; } else { __label__ = 117; break; }
    case 117: // $lor_lhs_false371
      var $329=$tmp;
      var $conv372=$329;
      var $330=$best_pitch_gain;
      var $conv373=$330;
      var $mul374=$conv373*0.6;
      var $cmp375=$conv372 > $mul374;
      if ($cmp375) { __label__ = 118; break; } else { __label__ = 130; break; }
    case 118: // $land_lhs_true377
      var $331=$best_pitch;
      var $332=HEAP32[(($pitch)>>2)];
      var $mul378=((($332<<1))|0);
      var $sub379=(($331-$mul378)|0);
      var $cmp380=(($sub379)|0) < 0;
      if ($cmp380) { __label__ = 119; break; } else { __label__ = 120; break; }
    case 119: // $cond_true382
      var $333=$best_pitch;
      var $334=HEAP32[(($pitch)>>2)];
      var $mul383=((($334<<1))|0);
      var $sub384=(($333-$mul383)|0);
      var $sub385=(((-$sub384))|0);
      var $cond390 = $sub385;__label__ = 121; break;
    case 120: // $cond_false386
      var $335=$best_pitch;
      var $336=HEAP32[(($pitch)>>2)];
      var $mul387=((($336<<1))|0);
      var $sub388=(($335-$mul387)|0);
      var $cond390 = $sub388;__label__ = 121; break;
    case 121: // $cond_end389
      var $cond390;
      var $cmp391=(($cond390)|0) < 3;
      if ($cmp391) { __label__ = 143; break; } else { __label__ = 122; break; }
    case 122: // $lor_lhs_false393
      var $337=$best_pitch;
      var $338=HEAP32[(($pitch)>>2)];
      var $mul394=(($338*3)|0);
      var $sub395=(($337-$mul394)|0);
      var $cmp396=(($sub395)|0) < 0;
      if ($cmp396) { __label__ = 123; break; } else { __label__ = 124; break; }
    case 123: // $cond_true398
      var $339=$best_pitch;
      var $340=HEAP32[(($pitch)>>2)];
      var $mul399=(($340*3)|0);
      var $sub400=(($339-$mul399)|0);
      var $sub401=(((-$sub400))|0);
      var $cond406 = $sub401;__label__ = 125; break;
    case 124: // $cond_false402
      var $341=$best_pitch;
      var $342=HEAP32[(($pitch)>>2)];
      var $mul403=(($342*3)|0);
      var $sub404=(($341-$mul403)|0);
      var $cond406 = $sub404;__label__ = 125; break;
    case 125: // $cond_end405
      var $cond406;
      var $cmp407=(($cond406)|0) < 4;
      if ($cmp407) { __label__ = 143; break; } else { __label__ = 126; break; }
    case 126: // $lor_lhs_false409
      var $343=$best_pitch;
      var $344=HEAP32[(($pitch)>>2)];
      var $mul410=((($344<<2))|0);
      var $sub411=(($343-$mul410)|0);
      var $cmp412=(($sub411)|0) < 0;
      if ($cmp412) { __label__ = 127; break; } else { __label__ = 128; break; }
    case 127: // $cond_true414
      var $345=$best_pitch;
      var $346=HEAP32[(($pitch)>>2)];
      var $mul415=((($346<<2))|0);
      var $sub416=(($345-$mul415)|0);
      var $sub417=(((-$sub416))|0);
      var $cond422 = $sub417;__label__ = 129; break;
    case 128: // $cond_false418
      var $347=$best_pitch;
      var $348=HEAP32[(($pitch)>>2)];
      var $mul419=((($348<<2))|0);
      var $sub420=(($347-$mul419)|0);
      var $cond422 = $sub420;__label__ = 129; break;
    case 129: // $cond_end421
      var $cond422;
      var $cmp423=(($cond422)|0) < 5;
      if ($cmp423) { __label__ = 143; break; } else { __label__ = 130; break; }
    case 130: // $lor_lhs_false425
      var $349=$tmp;
      var $conv426=$349;
      var $mul427=$conv426*0.67;
      var $350=$best_pitch_gain;
      var $conv428=$350;
      var $cmp429=$mul427 > $conv428;
      if ($cmp429) { __label__ = 131; break; } else { __label__ = 146; break; }
    case 131: // $land_lhs_true431
      var $351=$best_pitch;
      var $mul432=((($351<<1))|0);
      var $352=HEAP32[(($pitch)>>2)];
      var $sub433=(($mul432-$352)|0);
      var $cmp434=(($sub433)|0) < 0;
      if ($cmp434) { __label__ = 132; break; } else { __label__ = 133; break; }
    case 132: // $cond_true436
      var $353=$best_pitch;
      var $mul437=((($353<<1))|0);
      var $354=HEAP32[(($pitch)>>2)];
      var $sub438=(($mul437-$354)|0);
      var $sub439=(((-$sub438))|0);
      var $cond444 = $sub439;__label__ = 134; break;
    case 133: // $cond_false440
      var $355=$best_pitch;
      var $mul441=((($355<<1))|0);
      var $356=HEAP32[(($pitch)>>2)];
      var $sub442=(($mul441-$356)|0);
      var $cond444 = $sub442;__label__ = 134; break;
    case 134: // $cond_end443
      var $cond444;
      var $cmp445=(($cond444)|0) < 3;
      if ($cmp445) { __label__ = 143; break; } else { __label__ = 135; break; }
    case 135: // $lor_lhs_false447
      var $357=$best_pitch;
      var $mul448=(($357*3)|0);
      var $358=HEAP32[(($pitch)>>2)];
      var $sub449=(($mul448-$358)|0);
      var $cmp450=(($sub449)|0) < 0;
      if ($cmp450) { __label__ = 136; break; } else { __label__ = 137; break; }
    case 136: // $cond_true452
      var $359=$best_pitch;
      var $mul453=(($359*3)|0);
      var $360=HEAP32[(($pitch)>>2)];
      var $sub454=(($mul453-$360)|0);
      var $sub455=(((-$sub454))|0);
      var $cond460 = $sub455;__label__ = 138; break;
    case 137: // $cond_false456
      var $361=$best_pitch;
      var $mul457=(($361*3)|0);
      var $362=HEAP32[(($pitch)>>2)];
      var $sub458=(($mul457-$362)|0);
      var $cond460 = $sub458;__label__ = 138; break;
    case 138: // $cond_end459
      var $cond460;
      var $cmp461=(($cond460)|0) < 4;
      if ($cmp461) { __label__ = 143; break; } else { __label__ = 139; break; }
    case 139: // $lor_lhs_false463
      var $363=$best_pitch;
      var $mul464=((($363<<2))|0);
      var $364=HEAP32[(($pitch)>>2)];
      var $sub465=(($mul464-$364)|0);
      var $cmp466=(($sub465)|0) < 0;
      if ($cmp466) { __label__ = 140; break; } else { __label__ = 141; break; }
    case 140: // $cond_true468
      var $365=$best_pitch;
      var $mul469=((($365<<2))|0);
      var $366=HEAP32[(($pitch)>>2)];
      var $sub470=(($mul469-$366)|0);
      var $sub471=(((-$sub470))|0);
      var $cond476 = $sub471;__label__ = 142; break;
    case 141: // $cond_false472
      var $367=$best_pitch;
      var $mul473=((($367<<2))|0);
      var $368=HEAP32[(($pitch)>>2)];
      var $sub474=(($mul473-$368)|0);
      var $cond476 = $sub474;__label__ = 142; break;
    case 142: // $cond_end475
      var $cond476;
      var $cmp477=(($cond476)|0) < 5;
      if ($cmp477) { __label__ = 143; break; } else { __label__ = 146; break; }
    case 143: // $if_then479
      var $369=HEAP32[(($pitch)>>2)];
      $best_pitch=$369;
      var $370=$tmp;
      var $371=$best_pitch_gain;
      var $cmp480=$370 > $371;
      if ($cmp480) { __label__ = 144; break; } else { __label__ = 145; break; }
    case 144: // $if_then482
      var $372=$tmp;
      $best_pitch_gain=$372;
      __label__ = 145; break;
    case 145: // $if_end483
      __label__ = 146; break;
    case 146: // $if_end484
      var $373=$vla188;
      var $374=$st;
      var $subframeSize487=(($374+16)|0);
      var $375=HEAP32[(($subframeSize487)>>2)];
      var $mul488=((($375<<2))|0);
      _memset($373, 0, $mul488, 1);
      var $376=$st;
      var $submodeID489=(($376+132)|0);
      var $377=HEAP32[(($submodeID489)>>2)];
      var $378=$st;
      var $submodes490=(($378+128)|0);
      var $379=HEAP32[(($submodes490)>>2)];
      var $arrayidx491=(($379+($377<<2))|0);
      var $380=HEAP32[(($arrayidx491)>>2)];
      var $have_subframe_gain=(($380+8)|0);
      var $381=HEAP32[(($have_subframe_gain)>>2)];
      var $cmp492=(($381)|0)==3;
      if ($cmp492) { __label__ = 147; break; } else { __label__ = 148; break; }
    case 147: // $if_then494
      var $382=$bits_addr;
      var $call495=_speex_bits_unpack_unsigned($382, 3);
      $q_energy=$call495;
      var $383=$q_energy;
      var $arrayidx496=((_exc_gain_quant_scal3+($383<<2))|0);
      var $384=HEAPF32[(($arrayidx496)>>2)];
      var $385=$ol_gain;
      var $mul497=$384*$385;
      $ener=$mul497;
      __label__ = 152; break;
    case 148: // $if_else498
      var $386=$st;
      var $submodeID499=(($386+132)|0);
      var $387=HEAP32[(($submodeID499)>>2)];
      var $388=$st;
      var $submodes500=(($388+128)|0);
      var $389=HEAP32[(($submodes500)>>2)];
      var $arrayidx501=(($389+($387<<2))|0);
      var $390=HEAP32[(($arrayidx501)>>2)];
      var $have_subframe_gain502=(($390+8)|0);
      var $391=HEAP32[(($have_subframe_gain502)>>2)];
      var $cmp503=(($391)|0)==1;
      if ($cmp503) { __label__ = 149; break; } else { __label__ = 150; break; }
    case 149: // $if_then505
      var $392=$bits_addr;
      var $call506=_speex_bits_unpack_unsigned($392, 1);
      $q_energy=$call506;
      var $393=$q_energy;
      var $arrayidx507=((_exc_gain_quant_scal1+($393<<2))|0);
      var $394=HEAPF32[(($arrayidx507)>>2)];
      var $395=$ol_gain;
      var $mul508=$394*$395;
      $ener=$mul508;
      __label__ = 151; break;
    case 150: // $if_else509
      var $396=$ol_gain;
      $ener=$396;
      __label__ = 151; break;
    case 151: // $if_end510
      __label__ = 152; break;
    case 152: // $if_end511
      var $397=$st;
      var $submodeID512=(($397+132)|0);
      var $398=HEAP32[(($submodeID512)>>2)];
      var $399=$st;
      var $submodes513=(($399+128)|0);
      var $400=HEAP32[(($submodes513)>>2)];
      var $arrayidx514=(($400+($398<<2))|0);
      var $401=HEAP32[(($arrayidx514)>>2)];
      var $innovation_unquant=(($401+40)|0);
      var $402=HEAP32[(($innovation_unquant)>>2)];
      var $tobool515=(($402)|0)!=0;
      if ($tobool515) { __label__ = 154; break; } else { __label__ = 153; break; }
    case 153: // $if_then516
      __speex_fatal(((STRING_TABLE.__str737)|0), ((STRING_TABLE.__str131)|0), 1397);
      __label__ = 154; break;
    case 154: // $if_end517
      var $403=$st;
      var $submodeID518=(($403+132)|0);
      var $404=HEAP32[(($submodeID518)>>2)];
      var $405=$st;
      var $submodes519=(($405+128)|0);
      var $406=HEAP32[(($submodes519)>>2)];
      var $arrayidx520=(($406+($404<<2))|0);
      var $407=HEAP32[(($arrayidx520)>>2)];
      var $innovation_unquant521=(($407+40)|0);
      var $408=HEAP32[(($innovation_unquant521)>>2)];
      var $409=$st;
      var $submodeID522=(($409+132)|0);
      var $410=HEAP32[(($submodeID522)>>2)];
      var $411=$st;
      var $submodes523=(($411+128)|0);
      var $412=HEAP32[(($submodes523)>>2)];
      var $arrayidx524=(($412+($410<<2))|0);
      var $413=HEAP32[(($arrayidx524)>>2)];
      var $innovation_params=(($413+44)|0);
      var $414=HEAP32[(($innovation_params)>>2)];
      var $415=$st;
      var $subframeSize525=(($415+16)|0);
      var $416=HEAP32[(($subframeSize525)>>2)];
      var $417=$bits_addr;
      var $418=$stack;
      var $419=$st;
      var $seed526=(($419+120)|0);
      FUNCTION_TABLE[$408]($vla188, $414, $416, $417, $418, $seed526);
      var $420=$ener;
      var $421=$st;
      var $subframeSize527=(($421+16)|0);
      var $422=HEAP32[(($subframeSize527)>>2)];
      _signal_mul($vla188, $vla188, $420, $422);
      var $423=$st;
      var $submodeID528=(($423+132)|0);
      var $424=HEAP32[(($submodeID528)>>2)];
      var $425=$st;
      var $submodes529=(($425+128)|0);
      var $426=HEAP32[(($submodes529)>>2)];
      var $arrayidx530=(($426+($424<<2))|0);
      var $427=HEAP32[(($arrayidx530)>>2)];
      var $double_codebook=(($427+12)|0);
      var $428=HEAP32[(($double_codebook)>>2)];
      var $tobool531=(($428)|0)!=0;
      if ($tobool531) { __label__ = 155; break; } else { __label__ = 160; break; }
    case 155: // $if_then532
      var $429=$stack;
      $tmp_stack=$429;
      var $430=$st;
      var $subframeSize534=(($430+16)|0);
      var $431=HEAP32[(($subframeSize534)>>2)];
      var $432=_llvm_stacksave();
      $saved_stack535=$432;
      var $vla536=STACKTOP;STACKTOP += $431*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $433=$vla536;
      var $434=$st;
      var $subframeSize537=(($434+16)|0);
      var $435=HEAP32[(($subframeSize537)>>2)];
      var $mul538=((($435<<2))|0);
      _memset($433, 0, $mul538, 1);
      var $436=$st;
      var $submodeID539=(($436+132)|0);
      var $437=HEAP32[(($submodeID539)>>2)];
      var $438=$st;
      var $submodes540=(($438+128)|0);
      var $439=HEAP32[(($submodes540)>>2)];
      var $arrayidx541=(($439+($437<<2))|0);
      var $440=HEAP32[(($arrayidx541)>>2)];
      var $innovation_unquant542=(($440+40)|0);
      var $441=HEAP32[(($innovation_unquant542)>>2)];
      var $442=$st;
      var $submodeID543=(($442+132)|0);
      var $443=HEAP32[(($submodeID543)>>2)];
      var $444=$st;
      var $submodes544=(($444+128)|0);
      var $445=HEAP32[(($submodes544)>>2)];
      var $arrayidx545=(($445+($443<<2))|0);
      var $446=HEAP32[(($arrayidx545)>>2)];
      var $innovation_params546=(($446+44)|0);
      var $447=HEAP32[(($innovation_params546)>>2)];
      var $448=$st;
      var $subframeSize547=(($448+16)|0);
      var $449=HEAP32[(($subframeSize547)>>2)];
      var $450=$bits_addr;
      var $451=$stack;
      var $452=$st;
      var $seed548=(($452+120)|0);
      FUNCTION_TABLE[$441]($vla536, $447, $449, $450, $451, $seed548);
      var $453=$ener;
      var $mul549=$453*0.4545449912548065;
      var $454=$st;
      var $subframeSize550=(($454+16)|0);
      var $455=HEAP32[(($subframeSize550)>>2)];
      _signal_mul($vla536, $vla536, $mul549, $455);
      $i=0;
      __label__ = 156; break;
    case 156: // $for_cond551
      var $456=$i;
      var $457=$st;
      var $subframeSize552=(($457+16)|0);
      var $458=HEAP32[(($subframeSize552)>>2)];
      var $cmp553=(($456)|0) < (($458)|0);
      if ($cmp553) { __label__ = 157; break; } else { __label__ = 159; break; }
    case 157: // $for_body555
      var $459=$i;
      var $arrayidx556=(($vla188+($459<<2))|0);
      var $460=HEAPF32[(($arrayidx556)>>2)];
      var $461=$i;
      var $arrayidx557=(($vla536+($461<<2))|0);
      var $462=HEAPF32[(($arrayidx557)>>2)];
      var $add558=$460+$462;
      var $463=$i;
      var $arrayidx559=(($vla188+($463<<2))|0);
      HEAPF32[(($arrayidx559)>>2)]=$add558;
      __label__ = 158; break;
    case 158: // $for_inc560
      var $464=$i;
      var $inc561=(($464+1)|0);
      $i=$inc561;
      __label__ = 156; break;
    case 159: // $for_end562
      var $465=$tmp_stack;
      $stack=$465;
      var $466=$saved_stack535;
      _llvm_stackrestore($466);
      __label__ = 160; break;
    case 160: // $if_end563
      $i=0;
      __label__ = 161; break;
    case 161: // $for_cond564
      var $467=$i;
      var $468=$st;
      var $subframeSize565=(($468+16)|0);
      var $469=HEAP32[(($subframeSize565)>>2)];
      var $cmp566=(($467)|0) < (($469)|0);
      if ($cmp566) { __label__ = 162; break; } else { __label__ = 164; break; }
    case 162: // $for_body568
      var $470=$i;
      var $arrayidx569=(($vla190+($470<<2))|0);
      var $471=HEAPF32[(($arrayidx569)>>2)];
      var $472=$i;
      var $arrayidx570=(($vla188+($472<<2))|0);
      var $473=HEAPF32[(($arrayidx570)>>2)];
      var $add571=$471+$473;
      var $474=$i;
      var $475=$exc214;
      var $arrayidx572=(($475+($474<<2))|0);
      HEAPF32[(($arrayidx572)>>2)]=$add571;
      __label__ = 163; break;
    case 163: // $for_inc573
      var $476=$i;
      var $inc574=(($476+1)|0);
      $i=$inc574;
      __label__ = 161; break;
    case 164: // $for_end575
      var $477=$innov_save;
      var $tobool576=(($477)|0)!=0;
      if ($tobool576) { __label__ = 165; break; } else { __label__ = 170; break; }
    case 165: // $if_then577
      $i=0;
      __label__ = 166; break;
    case 166: // $for_cond578
      var $478=$i;
      var $479=$st;
      var $subframeSize579=(($479+16)|0);
      var $480=HEAP32[(($subframeSize579)>>2)];
      var $cmp580=(($478)|0) < (($480)|0);
      if ($cmp580) { __label__ = 167; break; } else { __label__ = 169; break; }
    case 167: // $for_body582
      var $481=$i;
      var $arrayidx583=(($vla188+($481<<2))|0);
      var $482=HEAPF32[(($arrayidx583)>>2)];
      var $483=$i;
      var $484=$innov_save;
      var $arrayidx584=(($484+($483<<2))|0);
      HEAPF32[(($arrayidx584)>>2)]=$482;
      __label__ = 168; break;
    case 168: // $for_inc585
      var $485=$i;
      var $inc586=(($485+1)|0);
      $i=$inc586;
      __label__ = 166; break;
    case 169: // $for_end587
      __label__ = 170; break;
    case 170: // $if_end588
      var $486=$st;
      var $submodeID589=(($486+132)|0);
      var $487=HEAP32[(($submodeID589)>>2)];
      var $cmp590=(($487)|0)==1;
      if ($cmp590) { __label__ = 171; break; } else { __label__ = 185; break; }
    case 171: // $if_then592
      var $488=$ol_pitch_coef;
      $g=$488;
      var $489=$g;
      var $sub594=$489-0.20000000298023224;
      var $mul595=$sub594*1.5;
      $g=$mul595;
      var $490=$g;
      var $cmp596=$490 < 0;
      if ($cmp596) { __label__ = 172; break; } else { __label__ = 173; break; }
    case 172: // $if_then598
      $g=0;
      __label__ = 173; break;
    case 173: // $if_end599
      var $491=$g;
      var $cmp600=$491 > 1;
      if ($cmp600) { __label__ = 174; break; } else { __label__ = 175; break; }
    case 174: // $if_then602
      $g=1;
      __label__ = 175; break;
    case 175: // $if_end603
      var $492=$exc214;
      var $493=$492;
      var $494=$st;
      var $subframeSize604=(($494+16)|0);
      var $495=HEAP32[(($subframeSize604)>>2)];
      var $mul605=((($495<<2))|0);
      _memset($493, 0, $mul605, 1);
      __label__ = 176; break;
    case 176: // $while_cond
      var $496=$st;
      var $voc_offset=(($496+492)|0);
      var $497=HEAP32[(($voc_offset)>>2)];
      var $498=$st;
      var $subframeSize606=(($498+16)|0);
      var $499=HEAP32[(($subframeSize606)>>2)];
      var $cmp607=(($497)|0) < (($499)|0);
      if ($cmp607) { __label__ = 177; break; } else { __label__ = 180; break; }
    case 177: // $while_body
      var $500=$st;
      var $voc_offset609=(($500+492)|0);
      var $501=HEAP32[(($voc_offset609)>>2)];
      var $cmp610=(($501)|0) >= 0;
      if ($cmp610) { __label__ = 178; break; } else { __label__ = 179; break; }
    case 178: // $if_then612
      var $502=$ol_pitch;
      var $mul613=((($502<<1))|0);
      var $conv614=(($mul613)|0);
      var $call615=_sqrt($conv614);
      var $conv616=$call615;
      var $503=$g;
      var $504=$ol_gain;
      var $mul617=$503*$504;
      var $mul618=$conv616*$mul617;
      var $505=$st;
      var $voc_offset619=(($505+492)|0);
      var $506=HEAP32[(($voc_offset619)>>2)];
      var $507=$exc214;
      var $arrayidx620=(($507+($506<<2))|0);
      HEAPF32[(($arrayidx620)>>2)]=$mul618;
      __label__ = 179; break;
    case 179: // $if_end621
      var $508=$ol_pitch;
      var $509=$st;
      var $voc_offset622=(($509+492)|0);
      var $510=HEAP32[(($voc_offset622)>>2)];
      var $add623=(($510+$508)|0);
      HEAP32[(($voc_offset622)>>2)]=$add623;
      __label__ = 176; break;
    case 180: // $while_end
      var $511=$st;
      var $subframeSize624=(($511+16)|0);
      var $512=HEAP32[(($subframeSize624)>>2)];
      var $513=$st;
      var $voc_offset625=(($513+492)|0);
      var $514=HEAP32[(($voc_offset625)>>2)];
      var $sub626=(($514-$512)|0);
      HEAP32[(($voc_offset625)>>2)]=$sub626;
      $i=0;
      __label__ = 181; break;
    case 181: // $for_cond627
      var $515=$i;
      var $516=$st;
      var $subframeSize628=(($516+16)|0);
      var $517=HEAP32[(($subframeSize628)>>2)];
      var $cmp629=(($515)|0) < (($517)|0);
      if ($cmp629) { __label__ = 182; break; } else { __label__ = 184; break; }
    case 182: // $for_body631
      var $518=$i;
      var $519=$exc214;
      var $arrayidx633=(($519+($518<<2))|0);
      var $520=HEAPF32[(($arrayidx633)>>2)];
      $exci=$520;
      var $521=$i;
      var $522=$exc214;
      var $arrayidx634=(($522+($521<<2))|0);
      var $523=HEAPF32[(($arrayidx634)>>2)];
      var $mul635=$523*0.699999988079071;
      var $524=$st;
      var $voc_m1=(($524+480)|0);
      var $525=HEAPF32[(($voc_m1)>>2)];
      var $mul636=$525*0.30000001192092896;
      var $add637=$mul635+$mul636;
      var $526=$g;
      var $mul638=$526*0.8500000238418579;
      var $sub639=1-$mul638;
      var $527=$i;
      var $arrayidx640=(($vla188+($527<<2))|0);
      var $528=HEAPF32[(($arrayidx640)>>2)];
      var $mul641=$sub639*$528;
      var $529=$g;
      var $mul642=$529*0.15000000596046448;
      var $530=$st;
      var $voc_m2=(($530+484)|0);
      var $531=HEAPF32[(($voc_m2)>>2)];
      var $mul643=$mul642*$531;
      var $sub644=$mul641-$mul643;
      var $add645=$add637+$sub644;
      var $532=$i;
      var $533=$exc214;
      var $arrayidx646=(($533+($532<<2))|0);
      HEAPF32[(($arrayidx646)>>2)]=$add645;
      var $534=$exci;
      var $535=$st;
      var $voc_m1647=(($535+480)|0);
      HEAPF32[(($voc_m1647)>>2)]=$534;
      var $536=$i;
      var $arrayidx648=(($vla188+($536<<2))|0);
      var $537=HEAPF32[(($arrayidx648)>>2)];
      var $538=$st;
      var $voc_m2649=(($538+484)|0);
      HEAPF32[(($voc_m2649)>>2)]=$537;
      var $539=$st;
      var $voc_mean=(($539+488)|0);
      var $540=HEAPF32[(($voc_mean)>>2)];
      var $mul650=$540*0.800000011920929;
      var $541=$i;
      var $542=$exc214;
      var $arrayidx651=(($542+($541<<2))|0);
      var $543=HEAPF32[(($arrayidx651)>>2)];
      var $mul652=$543*0.20000000298023224;
      var $add653=$mul650+$mul652;
      var $544=$st;
      var $voc_mean654=(($544+488)|0);
      HEAPF32[(($voc_mean654)>>2)]=$add653;
      var $545=$st;
      var $voc_mean655=(($545+488)|0);
      var $546=HEAPF32[(($voc_mean655)>>2)];
      var $547=$i;
      var $548=$exc214;
      var $arrayidx656=(($548+($547<<2))|0);
      var $549=HEAPF32[(($arrayidx656)>>2)];
      var $sub657=$549-$546;
      HEAPF32[(($arrayidx656)>>2)]=$sub657;
      __label__ = 183; break;
    case 183: // $for_inc658
      var $550=$i;
      var $inc659=(($550+1)|0);
      $i=$inc659;
      __label__ = 181; break;
    case 184: // $for_end660
      __label__ = 185; break;
    case 185: // $if_end661
      __label__ = 186; break;
    case 186: // $for_inc662
      var $551=$sub;
      var $inc663=(($551+1)|0);
      $sub=$inc663;
      __label__ = 80; break;
    case 187: // $for_end664
      var $552=$st;
      var $lpcSize665=(($552+24)|0);
      var $553=HEAP32[(($lpcSize665)>>2)];
      var $vla666=STACKTOP;STACKTOP += $553*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $554=$st;
      var $lpc_enh_enabled=(($554+136)|0);
      var $555=HEAP32[(($lpc_enh_enabled)>>2)];
      var $tobool667=(($555)|0)!=0;
      if ($tobool667) { __label__ = 188; break; } else { __label__ = 191; break; }
    case 188: // $land_lhs_true668
      var $556=$st;
      var $submodeID669=(($556+132)|0);
      var $557=HEAP32[(($submodeID669)>>2)];
      var $558=$st;
      var $submodes670=(($558+128)|0);
      var $559=HEAP32[(($submodes670)>>2)];
      var $arrayidx671=(($559+($557<<2))|0);
      var $560=HEAP32[(($arrayidx671)>>2)];
      var $comb_gain=(($560+48)|0);
      var $561=HEAPF32[(($comb_gain)>>2)];
      var $cmp672=$561 > 0;
      if ($cmp672) { __label__ = 189; break; } else { __label__ = 191; break; }
    case 189: // $land_lhs_true674
      var $562=$st;
      var $count_lost675=(($562+8)|0);
      var $563=HEAP32[(($count_lost675)>>2)];
      var $tobool676=(($563)|0)!=0;
      if ($tobool676) { __label__ = 191; break; } else { __label__ = 190; break; }
    case 190: // $if_then677
      var $564=$st;
      var $exc678=(($564+52)|0);
      var $565=HEAP32[(($exc678)>>2)];
      var $566=$st;
      var $subframeSize679=(($566+16)|0);
      var $567=HEAP32[(($subframeSize679)>>2)];
      var $idx_neg=(((-$567))|0);
      var $add_ptr680=(($565+($idx_neg<<2))|0);
      var $568=$out;
      var $569=$st;
      var $interp_qlpc681=(($569+60)|0);
      var $570=HEAP32[(($interp_qlpc681)>>2)];
      var $571=$st;
      var $lpcSize682=(($571+24)|0);
      var $572=HEAP32[(($lpcSize682)>>2)];
      var $573=$st;
      var $subframeSize683=(($573+16)|0);
      var $574=HEAP32[(($subframeSize683)>>2)];
      var $mul684=((($574<<1))|0);
      var $575=$best_pitch;
      var $576=$st;
      var $submodeID685=(($576+132)|0);
      var $577=HEAP32[(($submodeID685)>>2)];
      var $578=$st;
      var $submodes686=(($578+128)|0);
      var $579=HEAP32[(($submodes686)>>2)];
      var $arrayidx687=(($579+($577<<2))|0);
      var $580=HEAP32[(($arrayidx687)>>2)];
      var $comb_gain688=(($580+48)|0);
      var $581=HEAPF32[(($comb_gain688)>>2)];
      var $582=$stack;
      _multicomb($add_ptr680, $568, $570, $572, $mul684, $575, 40, $581, $582);
      var $583=$st;
      var $exc689=(($583+52)|0);
      var $584=HEAP32[(($exc689)>>2)];
      var $585=$st;
      var $subframeSize690=(($585+16)|0);
      var $586=HEAP32[(($subframeSize690)>>2)];
      var $add_ptr691=(($584+($586<<2))|0);
      var $587=$out;
      var $588=$st;
      var $subframeSize692=(($588+16)|0);
      var $589=HEAP32[(($subframeSize692)>>2)];
      var $mul693=((($589<<1))|0);
      var $add_ptr694=(($587+($mul693<<2))|0);
      var $590=$st;
      var $interp_qlpc695=(($590+60)|0);
      var $591=HEAP32[(($interp_qlpc695)>>2)];
      var $592=$st;
      var $lpcSize696=(($592+24)|0);
      var $593=HEAP32[(($lpcSize696)>>2)];
      var $594=$st;
      var $subframeSize697=(($594+16)|0);
      var $595=HEAP32[(($subframeSize697)>>2)];
      var $mul698=((($595<<1))|0);
      var $596=$best_pitch;
      var $597=$st;
      var $submodeID699=(($597+132)|0);
      var $598=HEAP32[(($submodeID699)>>2)];
      var $599=$st;
      var $submodes700=(($599+128)|0);
      var $600=HEAP32[(($submodes700)>>2)];
      var $arrayidx701=(($600+($598<<2))|0);
      var $601=HEAP32[(($arrayidx701)>>2)];
      var $comb_gain702=(($601+48)|0);
      var $602=HEAPF32[(($comb_gain702)>>2)];
      var $603=$stack;
      _multicomb($add_ptr691, $add_ptr694, $591, $593, $mul698, $596, 40, $602, $603);
      __label__ = 192; break;
    case 191: // $if_else703
      var $604=$out;
      var $605=$604;
      var $606=$st;
      var $subframeSize704=(($606+16)|0);
      var $607=HEAP32[(($subframeSize704)>>2)];
      var $sub705=(((-$607))|0);
      var $608=$st;
      var $exc706=(($608+52)|0);
      var $609=HEAP32[(($exc706)>>2)];
      var $arrayidx707=(($609+($sub705<<2))|0);
      var $610=$arrayidx707;
      var $611=$st;
      var $frameSize708=(($611+12)|0);
      var $612=HEAP32[(($frameSize708)>>2)];
      var $mul709=((($612<<2))|0);
      var $613=$out;
      var $614=$st;
      var $subframeSize710=(($614+16)|0);
      var $615=HEAP32[(($subframeSize710)>>2)];
      var $sub711=(((-$615))|0);
      var $616=$st;
      var $exc712=(($616+52)|0);
      var $617=HEAP32[(($exc712)>>2)];
      var $arrayidx713=(($617+($sub711<<2))|0);
      var $sub_ptr_lhs_cast714=$613;
      var $sub_ptr_rhs_cast715=$arrayidx713;
      var $sub_ptr_sub716=(($sub_ptr_lhs_cast714-$sub_ptr_rhs_cast715)|0);
      var $sub_ptr_div717=(((($sub_ptr_sub716)|0)/4)|0);
      var $mul718=((0)|0);
      var $add719=(($mul709+$mul718)|0);
      assert($add719 % 1 === 0, 'memcpy given ' + $add719 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($605, $610, $add719, 1);
      __label__ = 192; break;
    case 192: // $if_end720
      var $618=$st;
      var $count_lost721=(($618+8)|0);
      var $619=HEAP32[(($count_lost721)>>2)];
      var $tobool722=(($619)|0)!=0;
      if ($tobool722) { __label__ = 193; break; } else { __label__ = 200; break; }
    case 193: // $if_then723
      var $620=$st;
      var $exc727=(($620+52)|0);
      var $621=HEAP32[(($exc727)>>2)];
      var $622=$st;
      var $frameSize728=(($622+12)|0);
      var $623=HEAP32[(($frameSize728)>>2)];
      var $call729=_compute_rms16($621, $623);
      $exc_ener=$call729;
      var $624=$ol_gain;
      var $625=$exc_ener;
      var $add730=$625+1;
      var $div731=$624/$add730;
      $gain32=$div731;
      var $626=$gain32;
      var $cmp732=$626 > 2;
      if ($cmp732) { __label__ = 194; break; } else { __label__ = 195; break; }
    case 194: // $if_then734
      $gain32=2;
      __label__ = 195; break;
    case 195: // $if_end735
      var $627=$gain32;
      $gain=$627;
      $i=0;
      __label__ = 196; break;
    case 196: // $for_cond736
      var $628=$i;
      var $629=$st;
      var $frameSize737=(($629+12)|0);
      var $630=HEAP32[(($frameSize737)>>2)];
      var $cmp738=(($628)|0) < (($630)|0);
      if ($cmp738) { __label__ = 197; break; } else { __label__ = 199; break; }
    case 197: // $for_body740
      var $631=$gain;
      var $632=$i;
      var $633=$st;
      var $exc741=(($633+52)|0);
      var $634=HEAP32[(($exc741)>>2)];
      var $arrayidx742=(($634+($632<<2))|0);
      var $635=HEAPF32[(($arrayidx742)>>2)];
      var $mul743=$631*$635;
      var $636=$i;
      var $637=$st;
      var $exc744=(($637+52)|0);
      var $638=HEAP32[(($exc744)>>2)];
      var $arrayidx745=(($638+($636<<2))|0);
      HEAPF32[(($arrayidx745)>>2)]=$mul743;
      var $639=$i;
      var $640=$st;
      var $subframeSize746=(($640+16)|0);
      var $641=HEAP32[(($subframeSize746)>>2)];
      var $sub747=(($639-$641)|0);
      var $642=$st;
      var $exc748=(($642+52)|0);
      var $643=HEAP32[(($exc748)>>2)];
      var $arrayidx749=(($643+($sub747<<2))|0);
      var $644=HEAPF32[(($arrayidx749)>>2)];
      var $645=$i;
      var $646=$out;
      var $arrayidx750=(($646+($645<<2))|0);
      HEAPF32[(($arrayidx750)>>2)]=$644;
      __label__ = 198; break;
    case 198: // $for_inc751
      var $647=$i;
      var $inc752=(($647+1)|0);
      $i=$inc752;
      __label__ = 196; break;
    case 199: // $for_end753
      __label__ = 200; break;
    case 200: // $if_end754
      $sub=0;
      __label__ = 201; break;
    case 201: // $for_cond755
      var $648=$sub;
      var $649=$st;
      var $nbSubframes756=(($649+20)|0);
      var $650=HEAP32[(($nbSubframes756)>>2)];
      var $cmp757=(($648)|0) < (($650)|0);
      if ($cmp757) { __label__ = 202; break; } else { __label__ = 212; break; }
    case 202: // $for_body759
      var $651=$st;
      var $subframeSize766=(($651+16)|0);
      var $652=HEAP32[(($subframeSize766)>>2)];
      var $653=$sub;
      var $mul767=(($652*$653)|0);
      $offset761=$mul767;
      var $654=$out;
      var $655=$offset761;
      var $add_ptr768=(($654+($655<<2))|0);
      $sp763=$add_ptr768;
      var $656=$st;
      var $exc769=(($656+52)|0);
      var $657=HEAP32[(($exc769)>>2)];
      var $658=$offset761;
      var $add_ptr770=(($657+($658<<2))|0);
      $exc765=$add_ptr770;
      var $659=$st;
      var $old_qlsp771=(($659+56)|0);
      var $660=HEAP32[(($old_qlsp771)>>2)];
      var $661=$st;
      var $lpcSize772=(($661+24)|0);
      var $662=HEAP32[(($lpcSize772)>>2)];
      var $663=$sub;
      var $664=$st;
      var $nbSubframes773=(($664+20)|0);
      var $665=HEAP32[(($nbSubframes773)>>2)];
      _lsp_interpolate($660, $vla97, $vla666, $662, $663, $665);
      var $666=$st;
      var $lpcSize774=(($666+24)|0);
      var $667=HEAP32[(($lpcSize774)>>2)];
      _lsp_enforce_margin($vla666, $667, 0.0020000000949949026);
      var $668=$st;
      var $lpcSize775=(($668+24)|0);
      var $669=HEAP32[(($lpcSize775)>>2)];
      var $670=$stack;
      _lsp_to_lpc($vla666, $vla186, $669, $670);
      $pi_g=1;
      $i=0;
      __label__ = 203; break;
    case 203: // $for_cond777
      var $671=$i;
      var $672=$st;
      var $lpcSize778=(($672+24)|0);
      var $673=HEAP32[(($lpcSize778)>>2)];
      var $cmp779=(($671)|0) < (($673)|0);
      if ($cmp779) { __label__ = 204; break; } else { __label__ = 206; break; }
    case 204: // $for_body781
      var $674=$pi_g;
      var $675=$i;
      var $add782=(($675+1)|0);
      var $arrayidx783=(($vla186+($add782<<2))|0);
      var $676=HEAPF32[(($arrayidx783)>>2)];
      var $677=$i;
      var $arrayidx784=(($vla186+($677<<2))|0);
      var $678=HEAPF32[(($arrayidx784)>>2)];
      var $sub785=$676-$678;
      var $add786=$674+$sub785;
      $pi_g=$add786;
      __label__ = 205; break;
    case 205: // $for_inc787
      var $679=$i;
      var $add788=(($679+2)|0);
      $i=$add788;
      __label__ = 203; break;
    case 206: // $for_end789
      var $680=$pi_g;
      var $681=$sub;
      var $682=$st;
      var $pi_gain=(($682+76)|0);
      var $683=HEAP32[(($pi_gain)>>2)];
      var $arrayidx790=(($683+($681<<2))|0);
      HEAPF32[(($arrayidx790)>>2)]=$680;
      var $684=$sp763;
      var $685=$st;
      var $interp_qlpc791=(($685+60)|0);
      var $686=HEAP32[(($interp_qlpc791)>>2)];
      var $687=$sp763;
      var $688=$st;
      var $subframeSize792=(($688+16)|0);
      var $689=HEAP32[(($subframeSize792)>>2)];
      var $690=$st;
      var $lpcSize793=(($690+24)|0);
      var $691=HEAP32[(($lpcSize793)>>2)];
      var $692=$st;
      var $mem_sp794=(($692+64)|0);
      var $693=HEAP32[(($mem_sp794)>>2)];
      var $694=$stack;
      _iir_mem16($684, $686, $687, $689, $691, $693, $694);
      $i=0;
      __label__ = 207; break;
    case 207: // $for_cond795
      var $695=$i;
      var $696=$st;
      var $lpcSize796=(($696+24)|0);
      var $697=HEAP32[(($lpcSize796)>>2)];
      var $cmp797=(($695)|0) < (($697)|0);
      if ($cmp797) { __label__ = 208; break; } else { __label__ = 210; break; }
    case 208: // $for_body799
      var $698=$i;
      var $arrayidx800=(($vla186+($698<<2))|0);
      var $699=HEAPF32[(($arrayidx800)>>2)];
      var $700=$i;
      var $701=$st;
      var $interp_qlpc801=(($701+60)|0);
      var $702=HEAP32[(($interp_qlpc801)>>2)];
      var $arrayidx802=(($702+($700<<2))|0);
      HEAPF32[(($arrayidx802)>>2)]=$699;
      __label__ = 209; break;
    case 209: // $for_inc803
      var $703=$i;
      var $inc804=(($703+1)|0);
      $i=$inc804;
      __label__ = 207; break;
    case 210: // $for_end805
      __label__ = 211; break;
    case 211: // $for_inc806
      var $704=$sub;
      var $inc807=(($704+1)|0);
      $sub=$inc807;
      __label__ = 201; break;
    case 212: // $for_end808
      var $705=$st;
      var $highpass_enabled=(($705+504)|0);
      var $706=HEAP32[(($highpass_enabled)>>2)];
      var $tobool809=(($706)|0)!=0;
      if ($tobool809) { __label__ = 213; break; } else { __label__ = 214; break; }
    case 213: // $if_then810
      var $707=$out;
      var $708=$out;
      var $709=$st;
      var $frameSize811=(($709+12)|0);
      var $710=HEAP32[(($frameSize811)>>2)];
      var $711=$st;
      var $isWideband=(($711+500)|0);
      var $712=HEAP32[(($isWideband)>>2)];
      var $tobool812=(($712)|0)!=0;
      var $cond813=$tobool812 ? 2 : 0;
      var $or=$cond813 | 1;
      var $713=$st;
      var $mem_hp=(($713+68)|0);
      var $arraydecay814=(($mem_hp)|0);
      _highpass($707, $708, $710, $or, $arraydecay814);
      __label__ = 214; break;
    case 214: // $if_end815
      var $714=$ol_gain;
      var $add816=$714+1;
      var $715=$st;
      var $level=(($715+84)|0);
      HEAPF32[(($level)>>2)]=$add816;
      var $716=$st;
      var $max_level=(($716+88)|0);
      var $717=HEAPF32[(($max_level)>>2)];
      var $mul817=$717*0.9900000095367432;
      var $718=$st;
      var $level818=(($718+84)|0);
      var $719=HEAPF32[(($level818)>>2)];
      var $cmp819=$mul817 > $719;
      if ($cmp819) { __label__ = 215; break; } else { __label__ = 216; break; }
    case 215: // $cond_true821
      var $720=$st;
      var $max_level822=(($720+88)|0);
      var $721=HEAPF32[(($max_level822)>>2)];
      var $mul823=$721*0.9900000095367432;
      var $cond827 = $mul823;__label__ = 217; break;
    case 216: // $cond_false824
      var $722=$st;
      var $level825=(($722+84)|0);
      var $723=HEAPF32[(($level825)>>2)];
      var $cond827 = $723;__label__ = 217; break;
    case 217: // $cond_end826
      var $cond827;
      var $724=$st;
      var $max_level828=(($724+88)|0);
      HEAPF32[(($max_level828)>>2)]=$cond827;
      var $725=$st;
      var $min_level=(($725+92)|0);
      var $726=HEAPF32[(($min_level)>>2)];
      var $mul829=$726*1.0099999904632568;
      var $add830=$mul829+1;
      var $727=$st;
      var $level831=(($727+84)|0);
      var $728=HEAPF32[(($level831)>>2)];
      var $cmp832=$add830 < $728;
      if ($cmp832) { __label__ = 218; break; } else { __label__ = 219; break; }
    case 218: // $cond_true834
      var $729=$st;
      var $min_level835=(($729+92)|0);
      var $730=HEAPF32[(($min_level835)>>2)];
      var $mul836=$730*1.0099999904632568;
      var $add837=$mul836+1;
      var $cond841 = $add837;__label__ = 220; break;
    case 219: // $cond_false838
      var $731=$st;
      var $level839=(($731+84)|0);
      var $732=HEAPF32[(($level839)>>2)];
      var $cond841 = $732;__label__ = 220; break;
    case 220: // $cond_end840
      var $cond841;
      var $733=$st;
      var $min_level842=(($733+92)|0);
      HEAPF32[(($min_level842)>>2)]=$cond841;
      var $734=$st;
      var $max_level843=(($734+88)|0);
      var $735=HEAPF32[(($max_level843)>>2)];
      var $736=$st;
      var $min_level844=(($736+92)|0);
      var $737=HEAPF32[(($min_level844)>>2)];
      var $add845=$737+1;
      var $cmp846=$735 < $add845;
      if ($cmp846) { __label__ = 221; break; } else { __label__ = 222; break; }
    case 221: // $if_then848
      var $738=$st;
      var $min_level849=(($738+92)|0);
      var $739=HEAPF32[(($min_level849)>>2)];
      var $add850=$739+1;
      var $740=$st;
      var $max_level851=(($740+88)|0);
      HEAPF32[(($max_level851)>>2)]=$add850;
      __label__ = 222; break;
    case 222: // $if_end852
      $i=0;
      __label__ = 223; break;
    case 223: // $for_cond853
      var $741=$i;
      var $742=$st;
      var $lpcSize854=(($742+24)|0);
      var $743=HEAP32[(($lpcSize854)>>2)];
      var $cmp855=(($741)|0) < (($743)|0);
      if ($cmp855) { __label__ = 224; break; } else { __label__ = 226; break; }
    case 224: // $for_body857
      var $744=$i;
      var $arrayidx858=(($vla97+($744<<2))|0);
      var $745=HEAPF32[(($arrayidx858)>>2)];
      var $746=$i;
      var $747=$st;
      var $old_qlsp859=(($747+56)|0);
      var $748=HEAP32[(($old_qlsp859)>>2)];
      var $arrayidx860=(($748+($746<<2))|0);
      HEAPF32[(($arrayidx860)>>2)]=$745;
      __label__ = 225; break;
    case 225: // $for_inc861
      var $749=$i;
      var $inc862=(($749+1)|0);
      $i=$inc862;
      __label__ = 223; break;
    case 226: // $for_end863
      var $750=$st;
      var $first864=(($750+4)|0);
      HEAP32[(($first864)>>2)]=0;
      var $751=$st;
      var $count_lost865=(($751+8)|0);
      HEAP32[(($count_lost865)>>2)]=0;
      var $752=$best_pitch;
      var $753=$st;
      var $last_pitch=(($753+96)|0);
      HEAP32[(($last_pitch)>>2)]=$752;
      var $754=$pitch_average;
      var $conv866=$754;
      var $mul867=$conv866*0.25;
      var $conv868=$mul867;
      var $755=$st;
      var $last_pitch_gain869=(($755+100)|0);
      HEAPF32[(($last_pitch_gain869)>>2)]=$conv868;
      var $756=$st;
      var $last_pitch_gain870=(($756+100)|0);
      var $757=HEAPF32[(($last_pitch_gain870)>>2)];
      var $758=$st;
      var $pitch_gain_buf_idx=(($758+116)|0);
      var $759=HEAP32[(($pitch_gain_buf_idx)>>2)];
      var $inc871=(($759+1)|0);
      HEAP32[(($pitch_gain_buf_idx)>>2)]=$inc871;
      var $760=$st;
      var $pitch_gain_buf=(($760+104)|0);
      var $arrayidx872=(($pitch_gain_buf+($759<<2))|0);
      HEAPF32[(($arrayidx872)>>2)]=$757;
      var $761=$st;
      var $pitch_gain_buf_idx873=(($761+116)|0);
      var $762=HEAP32[(($pitch_gain_buf_idx873)>>2)];
      var $cmp874=(($762)|0) > 2;
      if ($cmp874) { __label__ = 227; break; } else { __label__ = 228; break; }
    case 227: // $if_then876
      var $763=$st;
      var $pitch_gain_buf_idx877=(($763+116)|0);
      HEAP32[(($pitch_gain_buf_idx877)>>2)]=0;
      __label__ = 228; break;
    case 228: // $if_end878
      var $764=$ol_gain;
      var $765=$st;
      var $last_ol_gain=(($765+40)|0);
      HEAPF32[(($last_ol_gain)>>2)]=$764;
      $retval=0;
      $cleanup_dest_slot=1;
      var $766=$saved_stack96;
      _llvm_stackrestore($766);
      __label__ = 229; break;
    case 229: // $return
      var $767=$retval;
      STACKTOP = __stackBase__;
      return $767;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_decode["X"]=1;

function _speex_rand54($std, $seed) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $std_addr;
  var $seed_addr;
  var $jflone;
  var $jflmsk;
  var $ran=__stackBase__;
  $std_addr=$std;
  $seed_addr=$seed;
  $jflone=1065353216;
  $jflmsk=8388607;
  var $0=$seed_addr;
  var $1=HEAP32[(($0)>>2)];
  var $mul=(($1*1664525)|0);
  var $add=(($mul+1013904223)|0);
  var $2=$seed_addr;
  HEAP32[(($2)>>2)]=$add;
  var $3=$seed_addr;
  var $4=HEAP32[(($3)>>2)];
  var $and=8388607 & $4;
  var $or=1065353216 | $and;
  var $i=$ran;
  HEAP32[(($i)>>2)]=$or;
  var $f=$ran;
  var $5=HEAPF32[(($f)>>2)];
  var $conv=$5;
  var $sub=$conv-1.5;
  var $conv1=$sub;
  HEAPF32[(($f)>>2)]=$conv1;
  var $6=$std_addr;
  var $conv2=$6;
  var $mul3=$conv2*3.4642;
  var $f4=$ran;
  var $7=HEAPF32[(($f4)>>2)];
  var $conv5=$7;
  var $mul6=$mul3*$conv5;
  var $conv7=$mul6;
  STACKTOP = __stackBase__;
  return $conv7;
}


function _nb_decode_lost($st, $out, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $st_addr;
      var $out_addr;
      var $stack_addr;
      var $i;
      var $pitch_val;
      var $pitch_gain;
      var $fact;
      var $gain_med;
      var $innov_gain;
      var $noise_gain;
      $st_addr=$st;
      $out_addr=$out;
      $stack_addr=$stack;
      var $0=$st_addr;
      var $count_lost=(($0+8)|0);
      var $1=HEAP32[(($count_lost)>>2)];
      var $cmp=(($1)|0) < 10;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $2=$st_addr;
      var $count_lost1=(($2+8)|0);
      var $3=HEAP32[(($count_lost1)>>2)];
      var $arrayidx=((_attenuation+($3<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      $fact=$4;
      __label__ = 3; break;
    case 2: // $if_else
      $fact=0;
      __label__ = 3; break;
    case 3: // $if_end
      var $5=$st_addr;
      var $pitch_gain_buf=(($5+104)|0);
      var $arrayidx2=(($pitch_gain_buf)|0);
      var $6=HEAPF32[(($arrayidx2)>>2)];
      var $7=$st_addr;
      var $pitch_gain_buf3=(($7+104)|0);
      var $arrayidx4=(($pitch_gain_buf3+4)|0);
      var $8=HEAPF32[(($arrayidx4)>>2)];
      var $cmp5=$6 < $8;
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 11; break; }
    case 4: // $cond_true
      var $9=$st_addr;
      var $pitch_gain_buf6=(($9+104)|0);
      var $arrayidx7=(($pitch_gain_buf6+4)|0);
      var $10=HEAPF32[(($arrayidx7)>>2)];
      var $11=$st_addr;
      var $pitch_gain_buf8=(($11+104)|0);
      var $arrayidx9=(($pitch_gain_buf8+8)|0);
      var $12=HEAPF32[(($arrayidx9)>>2)];
      var $cmp10=$10 < $12;
      if ($cmp10) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $cond_true11
      var $13=$st_addr;
      var $pitch_gain_buf12=(($13+104)|0);
      var $arrayidx13=(($pitch_gain_buf12+4)|0);
      var $14=HEAPF32[(($arrayidx13)>>2)];
      var $cond26 = $14;__label__ = 10; break;
    case 6: // $cond_false
      var $15=$st_addr;
      var $pitch_gain_buf14=(($15+104)|0);
      var $arrayidx15=(($pitch_gain_buf14)|0);
      var $16=HEAPF32[(($arrayidx15)>>2)];
      var $17=$st_addr;
      var $pitch_gain_buf16=(($17+104)|0);
      var $arrayidx17=(($pitch_gain_buf16+8)|0);
      var $18=HEAPF32[(($arrayidx17)>>2)];
      var $cmp18=$16 < $18;
      if ($cmp18) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $cond_true19
      var $19=$st_addr;
      var $pitch_gain_buf20=(($19+104)|0);
      var $arrayidx21=(($pitch_gain_buf20+8)|0);
      var $20=HEAPF32[(($arrayidx21)>>2)];
      var $cond = $20;__label__ = 9; break;
    case 8: // $cond_false22
      var $21=$st_addr;
      var $pitch_gain_buf23=(($21+104)|0);
      var $arrayidx24=(($pitch_gain_buf23)|0);
      var $22=HEAPF32[(($arrayidx24)>>2)];
      var $cond = $22;__label__ = 9; break;
    case 9: // $cond_end
      var $cond;
      var $cond26 = $cond;__label__ = 10; break;
    case 10: // $cond_end25
      var $cond26;
      var $cond53 = $cond26;__label__ = 18; break;
    case 11: // $cond_false27
      var $23=$st_addr;
      var $pitch_gain_buf28=(($23+104)|0);
      var $arrayidx29=(($pitch_gain_buf28+8)|0);
      var $24=HEAPF32[(($arrayidx29)>>2)];
      var $25=$st_addr;
      var $pitch_gain_buf30=(($25+104)|0);
      var $arrayidx31=(($pitch_gain_buf30+4)|0);
      var $26=HEAPF32[(($arrayidx31)>>2)];
      var $cmp32=$24 < $26;
      if ($cmp32) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $cond_true33
      var $27=$st_addr;
      var $pitch_gain_buf34=(($27+104)|0);
      var $arrayidx35=(($pitch_gain_buf34+4)|0);
      var $28=HEAPF32[(($arrayidx35)>>2)];
      var $cond51 = $28;__label__ = 17; break;
    case 13: // $cond_false36
      var $29=$st_addr;
      var $pitch_gain_buf37=(($29+104)|0);
      var $arrayidx38=(($pitch_gain_buf37+8)|0);
      var $30=HEAPF32[(($arrayidx38)>>2)];
      var $31=$st_addr;
      var $pitch_gain_buf39=(($31+104)|0);
      var $arrayidx40=(($pitch_gain_buf39)|0);
      var $32=HEAPF32[(($arrayidx40)>>2)];
      var $cmp41=$30 < $32;
      if ($cmp41) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $cond_true42
      var $33=$st_addr;
      var $pitch_gain_buf43=(($33+104)|0);
      var $arrayidx44=(($pitch_gain_buf43+8)|0);
      var $34=HEAPF32[(($arrayidx44)>>2)];
      var $cond49 = $34;__label__ = 16; break;
    case 15: // $cond_false45
      var $35=$st_addr;
      var $pitch_gain_buf46=(($35+104)|0);
      var $arrayidx47=(($pitch_gain_buf46)|0);
      var $36=HEAPF32[(($arrayidx47)>>2)];
      var $cond49 = $36;__label__ = 16; break;
    case 16: // $cond_end48
      var $cond49;
      var $cond51 = $cond49;__label__ = 17; break;
    case 17: // $cond_end50
      var $cond51;
      var $cond53 = $cond51;__label__ = 18; break;
    case 18: // $cond_end52
      var $cond53;
      $gain_med=$cond53;
      var $37=$gain_med;
      var $38=$st_addr;
      var $last_pitch_gain=(($38+100)|0);
      var $39=HEAPF32[(($last_pitch_gain)>>2)];
      var $cmp54=$37 < $39;
      if ($cmp54) { __label__ = 19; break; } else { __label__ = 20; break; }
    case 19: // $if_then55
      var $40=$gain_med;
      var $41=$st_addr;
      var $last_pitch_gain56=(($41+100)|0);
      HEAPF32[(($last_pitch_gain56)>>2)]=$40;
      __label__ = 20; break;
    case 20: // $if_end57
      var $42=$st_addr;
      var $last_pitch_gain58=(($42+100)|0);
      var $43=HEAPF32[(($last_pitch_gain58)>>2)];
      var $mul=$43;
      $pitch_gain=$mul;
      var $44=$pitch_gain;
      var $conv=$44;
      var $cmp59=$conv > 0.85;
      if ($cmp59) { __label__ = 21; break; } else { __label__ = 22; break; }
    case 21: // $if_then61
      $pitch_gain=0.8500000238418579;
      __label__ = 22; break;
    case 22: // $if_end62
      var $45=$fact;
      var $46=$pitch_gain;
      var $mul63=$45*$46;
      var $add=$mul63+1.0000000036274937e-15;
      $pitch_gain=$add;
      var $47=$st_addr;
      var $exc=(($47+52)|0);
      var $48=HEAP32[(($exc)>>2)];
      var $49=$st_addr;
      var $frameSize=(($49+12)|0);
      var $50=HEAP32[(($frameSize)>>2)];
      var $call=_compute_rms16($48, $50);
      $innov_gain=$call;
      var $51=$innov_gain;
      var $52=$fact;
      var $53=$pitch_gain;
      var $54=$pitch_gain;
      var $mul64=$53*$54;
      var $sub=1-$mul64;
      var $mul65=$52*$sub;
      var $mul66=$51*$mul65;
      $noise_gain=$mul66;
      var $55=$st_addr;
      var $excBuf=(($55+48)|0);
      var $56=HEAP32[(($excBuf)>>2)];
      var $57=$56;
      var $58=$st_addr;
      var $excBuf67=(($58+48)|0);
      var $59=HEAP32[(($excBuf67)>>2)];
      var $60=$st_addr;
      var $frameSize68=(($60+12)|0);
      var $61=HEAP32[(($frameSize68)>>2)];
      var $add_ptr=(($59+($61<<2))|0);
      var $62=$add_ptr;
      var $63=$st_addr;
      var $max_pitch=(($63+32)|0);
      var $64=HEAP32[(($max_pitch)>>2)];
      var $mul69=((($64<<1))|0);
      var $65=$st_addr;
      var $subframeSize=(($65+16)|0);
      var $66=HEAP32[(($subframeSize)>>2)];
      var $add70=(($mul69+$66)|0);
      var $add71=(($add70+12)|0);
      var $mul72=((($add71<<2))|0);
      var $67=$st_addr;
      var $excBuf73=(($67+48)|0);
      var $68=HEAP32[(($excBuf73)>>2)];
      var $69=$st_addr;
      var $excBuf74=(($69+48)|0);
      var $70=HEAP32[(($excBuf74)>>2)];
      var $71=$st_addr;
      var $frameSize75=(($71+12)|0);
      var $72=HEAP32[(($frameSize75)>>2)];
      var $add_ptr76=(($70+($72<<2))|0);
      var $sub_ptr_lhs_cast=$68;
      var $sub_ptr_rhs_cast=$add_ptr76;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul77=((0)|0);
      var $add78=(($mul72+$mul77)|0);
      _llvm_memmove_p0i8_p0i8_i32($57, $62, $add78, 1, 0);
      var $73=$st_addr;
      var $last_pitch=(($73+96)|0);
      var $74=HEAP32[(($last_pitch)>>2)];
      var $75=$st_addr;
      var $count_lost79=(($75+8)|0);
      var $76=HEAP32[(($count_lost79)>>2)];
      var $add80=(($76+1)|0);
      var $conv81=(($add80)|0);
      var $77=$st_addr;
      var $seed=(($77+120)|0);
      var $call82=_speex_rand54($conv81, $seed);
      var $conv83=(($call82)|0);
      var $add84=(($74+$conv83)|0);
      $pitch_val=$add84;
      var $78=$pitch_val;
      var $79=$st_addr;
      var $max_pitch85=(($79+32)|0);
      var $80=HEAP32[(($max_pitch85)>>2)];
      var $cmp86=(($78)|0) > (($80)|0);
      if ($cmp86) { __label__ = 23; break; } else { __label__ = 24; break; }
    case 23: // $if_then88
      var $81=$st_addr;
      var $max_pitch89=(($81+32)|0);
      var $82=HEAP32[(($max_pitch89)>>2)];
      $pitch_val=$82;
      __label__ = 24; break;
    case 24: // $if_end90
      var $83=$pitch_val;
      var $84=$st_addr;
      var $min_pitch=(($84+28)|0);
      var $85=HEAP32[(($min_pitch)>>2)];
      var $cmp91=(($83)|0) < (($85)|0);
      if ($cmp91) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then93
      var $86=$st_addr;
      var $min_pitch94=(($86+28)|0);
      var $87=HEAP32[(($min_pitch94)>>2)];
      $pitch_val=$87;
      __label__ = 26; break;
    case 26: // $if_end95
      $i=0;
      __label__ = 27; break;
    case 27: // $for_cond
      var $88=$i;
      var $89=$st_addr;
      var $frameSize96=(($89+12)|0);
      var $90=HEAP32[(($frameSize96)>>2)];
      var $cmp97=(($88)|0) < (($90)|0);
      if ($cmp97) { __label__ = 28; break; } else { __label__ = 30; break; }
    case 28: // $for_body
      var $91=$pitch_gain;
      var $92=$i;
      var $93=$pitch_val;
      var $sub99=(($92-$93)|0);
      var $94=$st_addr;
      var $exc100=(($94+52)|0);
      var $95=HEAP32[(($exc100)>>2)];
      var $arrayidx101=(($95+($sub99<<2))|0);
      var $96=HEAPF32[(($arrayidx101)>>2)];
      var $add102=$96+1.0000000036274937e-15;
      var $mul103=$91*$add102;
      var $97=$noise_gain;
      var $98=$st_addr;
      var $seed104=(($98+120)|0);
      var $call105=_speex_rand54($97, $seed104);
      var $add106=$mul103+$call105;
      var $99=$i;
      var $100=$st_addr;
      var $exc107=(($100+52)|0);
      var $101=HEAP32[(($exc107)>>2)];
      var $arrayidx108=(($101+($99<<2))|0);
      HEAPF32[(($arrayidx108)>>2)]=$add106;
      __label__ = 29; break;
    case 29: // $for_inc
      var $102=$i;
      var $inc=(($102+1)|0);
      $i=$inc;
      __label__ = 27; break;
    case 30: // $for_end
      var $103=$st_addr;
      var $interp_qlpc=(($103+60)|0);
      var $104=HEAP32[(($interp_qlpc)>>2)];
      var $105=$st_addr;
      var $interp_qlpc109=(($105+60)|0);
      var $106=HEAP32[(($interp_qlpc109)>>2)];
      var $107=$st_addr;
      var $lpcSize=(($107+24)|0);
      var $108=HEAP32[(($lpcSize)>>2)];
      _bw_lpc(0.9800000190734863, $104, $106, $108);
      var $109=$st_addr;
      var $subframeSize110=(($109+16)|0);
      var $110=HEAP32[(($subframeSize110)>>2)];
      var $sub111=(((-$110))|0);
      var $111=$st_addr;
      var $exc112=(($111+52)|0);
      var $112=HEAP32[(($exc112)>>2)];
      var $arrayidx113=(($112+($sub111<<2))|0);
      var $113=$st_addr;
      var $interp_qlpc114=(($113+60)|0);
      var $114=HEAP32[(($interp_qlpc114)>>2)];
      var $115=$out_addr;
      var $116=$st_addr;
      var $frameSize115=(($116+12)|0);
      var $117=HEAP32[(($frameSize115)>>2)];
      var $118=$st_addr;
      var $lpcSize116=(($118+24)|0);
      var $119=HEAP32[(($lpcSize116)>>2)];
      var $120=$st_addr;
      var $mem_sp=(($120+64)|0);
      var $121=HEAP32[(($mem_sp)>>2)];
      var $122=$stack_addr;
      _iir_mem16($arrayidx113, $114, $115, $117, $119, $121, $122);
      var $123=$out_addr;
      var $124=$out_addr;
      var $125=$st_addr;
      var $frameSize117=(($125+12)|0);
      var $126=HEAP32[(($frameSize117)>>2)];
      var $127=$st_addr;
      var $mem_hp=(($127+68)|0);
      var $arraydecay=(($mem_hp)|0);
      _highpass($123, $124, $126, 1, $arraydecay);
      var $128=$st_addr;
      var $first=(($128+4)|0);
      HEAP32[(($first)>>2)]=0;
      var $129=$st_addr;
      var $count_lost118=(($129+8)|0);
      var $130=HEAP32[(($count_lost118)>>2)];
      var $inc119=(($130+1)|0);
      HEAP32[(($count_lost118)>>2)]=$inc119;
      var $131=$pitch_gain;
      var $132=$st_addr;
      var $pitch_gain_buf_idx=(($132+116)|0);
      var $133=HEAP32[(($pitch_gain_buf_idx)>>2)];
      var $inc120=(($133+1)|0);
      HEAP32[(($pitch_gain_buf_idx)>>2)]=$inc120;
      var $134=$st_addr;
      var $pitch_gain_buf121=(($134+104)|0);
      var $arrayidx122=(($pitch_gain_buf121+($133<<2))|0);
      HEAPF32[(($arrayidx122)>>2)]=$131;
      var $135=$st_addr;
      var $pitch_gain_buf_idx123=(($135+116)|0);
      var $136=HEAP32[(($pitch_gain_buf_idx123)>>2)];
      var $cmp124=(($136)|0) > 2;
      if ($cmp124) { __label__ = 31; break; } else { __label__ = 32; break; }
    case 31: // $if_then126
      var $137=$st_addr;
      var $pitch_gain_buf_idx127=(($137+116)|0);
      HEAP32[(($pitch_gain_buf_idx127)>>2)]=0;
      __label__ = 32; break;
    case 32: // $if_end128
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_decode_lost["X"]=1;

function _speex_notify53($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str10)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _nb_encoder_ctl($state, $request, $ptr) {
  var __stackBase__  = STACKTOP; STACKTOP += 20; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $request_addr;
      var $ptr_addr;
      var $st;
      var $i=__stackBase__;
      var $rate=__stackBase__+4;
      var $target;
      var $vbr_qual=__stackBase__+8;
      var $quality;
      var $i57=__stackBase__+12;
      var $rate58=__stackBase__+16;
      var $target59;
      var $i91;
      var $i157;
      var $g;
      var $i168;
      $state_addr=$state;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$state_addr;
      var $1=$0;
      $st=$1;
      var $2=$request_addr;
      if ($2 == 3) {
        __label__ = 1; break;
      }
      else if ($2 == 8 || $2 == 6) {
        __label__ = 2; break;
      }
      else if ($2 == 9 || $2 == 7) {
        __label__ = 3; break;
      }
      else if ($2 == 12) {
        __label__ = 4; break;
      }
      else if ($2 == 13) {
        __label__ = 5; break;
      }
      else if ($2 == 30) {
        __label__ = 6; break;
      }
      else if ($2 == 31) {
        __label__ = 7; break;
      }
      else if ($2 == 34) {
        __label__ = 8; break;
      }
      else if ($2 == 35) {
        __label__ = 9; break;
      }
      else if ($2 == 32) {
        __label__ = 10; break;
      }
      else if ($2 == 33) {
        __label__ = 20; break;
      }
      else if ($2 == 14) {
        __label__ = 21; break;
      }
      else if ($2 == 15) {
        __label__ = 22; break;
      }
      else if ($2 == 4) {
        __label__ = 23; break;
      }
      else if ($2 == 16) {
        __label__ = 28; break;
      }
      else if ($2 == 17) {
        __label__ = 31; break;
      }
      else if ($2 == 18) {
        __label__ = 32; break;
      }
      else if ($2 == 19) {
        __label__ = 38; break;
      }
      else if ($2 == 24) {
        __label__ = 42; break;
      }
      else if ($2 == 25) {
        __label__ = 43; break;
      }
      else if ($2 == 26) {
        __label__ = 44; break;
      }
      else if ($2 == 36) {
        __label__ = 61; break;
      }
      else if ($2 == 37) {
        __label__ = 62; break;
      }
      else if ($2 == 39) {
        __label__ = 63; break;
      }
      else if ($2 == 40) {
        __label__ = 64; break;
      }
      else if ($2 == 41) {
        __label__ = 67; break;
      }
      else if ($2 == 42) {
        __label__ = 68; break;
      }
      else if ($2 == 43) {
        __label__ = 69; break;
      }
      else if ($2 == 44) {
        __label__ = 70; break;
      }
      else if ($2 == 45) {
        __label__ = 71; break;
      }
      else if ($2 == 100) {
        __label__ = 72; break;
      }
      else if ($2 == 101) {
        __label__ = 77; break;
      }
      else if ($2 == 29) {
        __label__ = 82; break;
      }
      else if ($2 == 104) {
        __label__ = 83; break;
      }
      else if ($2 == 105) {
        __label__ = 84; break;
      }
      else if ($2 == 106) {
        __label__ = 85; break;
      }
      else {
      __label__ = 86; break;
      }
      
    case 1: // $sw_bb
      var $3=$st;
      var $frameSize=(($3+8)|0);
      var $4=HEAP32[(($frameSize)>>2)];
      var $5=$ptr_addr;
      var $6=$5;
      HEAP32[(($6)>>2)]=$4;
      __label__ = 87; break;
    case 2: // $sw_bb1
      var $7=$ptr_addr;
      var $8=$7;
      var $9=HEAP32[(($8)>>2)];
      var $10=$st;
      var $submodeID=(($10+212)|0);
      HEAP32[(($submodeID)>>2)]=$9;
      var $11=$st;
      var $submodeSelect=(($11+216)|0);
      HEAP32[(($submodeSelect)>>2)]=$9;
      __label__ = 87; break;
    case 3: // $sw_bb2
      var $12=$st;
      var $submodeID3=(($12+212)|0);
      var $13=HEAP32[(($submodeID3)>>2)];
      var $14=$ptr_addr;
      var $15=$14;
      HEAP32[(($15)>>2)]=$13;
      __label__ = 87; break;
    case 4: // $sw_bb4
      var $16=$ptr_addr;
      var $17=$16;
      var $18=HEAP32[(($17)>>2)];
      var $19=$st;
      var $vbr_enabled=(($19+156)|0);
      HEAP32[(($vbr_enabled)>>2)]=$18;
      __label__ = 87; break;
    case 5: // $sw_bb5
      var $20=$st;
      var $vbr_enabled6=(($20+156)|0);
      var $21=HEAP32[(($vbr_enabled6)>>2)];
      var $22=$ptr_addr;
      var $23=$22;
      HEAP32[(($23)>>2)]=$21;
      __label__ = 87; break;
    case 6: // $sw_bb7
      var $24=$ptr_addr;
      var $25=$24;
      var $26=HEAP32[(($25)>>2)];
      var $27=$st;
      var $vad_enabled=(($27+164)|0);
      HEAP32[(($vad_enabled)>>2)]=$26;
      __label__ = 87; break;
    case 7: // $sw_bb8
      var $28=$st;
      var $vad_enabled9=(($28+164)|0);
      var $29=HEAP32[(($vad_enabled9)>>2)];
      var $30=$ptr_addr;
      var $31=$30;
      HEAP32[(($31)>>2)]=$29;
      __label__ = 87; break;
    case 8: // $sw_bb10
      var $32=$ptr_addr;
      var $33=$32;
      var $34=HEAP32[(($33)>>2)];
      var $35=$st;
      var $dtx_enabled=(($35+168)|0);
      HEAP32[(($dtx_enabled)>>2)]=$34;
      __label__ = 87; break;
    case 9: // $sw_bb11
      var $36=$st;
      var $dtx_enabled12=(($36+168)|0);
      var $37=HEAP32[(($dtx_enabled12)>>2)];
      var $38=$ptr_addr;
      var $39=$38;
      HEAP32[(($39)>>2)]=$37;
      __label__ = 87; break;
    case 10: // $sw_bb13
      var $40=$ptr_addr;
      var $41=$40;
      var $42=HEAP32[(($41)>>2)];
      var $43=$st;
      var $abr_enabled=(($43+176)|0);
      HEAP32[(($abr_enabled)>>2)]=$42;
      var $44=$st;
      var $abr_enabled14=(($44+176)|0);
      var $45=HEAP32[(($abr_enabled14)>>2)];
      var $cmp=(($45)|0)!=0;
      var $conv=(($cmp)&1);
      var $46=$st;
      var $vbr_enabled15=(($46+156)|0);
      HEAP32[(($vbr_enabled15)>>2)]=$conv;
      var $47=$st;
      var $vbr_enabled16=(($47+156)|0);
      var $48=HEAP32[(($vbr_enabled16)>>2)];
      var $tobool=(($48)|0)!=0;
      if ($tobool) { __label__ = 11; break; } else { __label__ = 19; break; }
    case 11: // $if_then
      HEAP32[(($i)>>2)]=10;
      var $49=$ptr_addr;
      var $50=$49;
      var $51=HEAP32[(($50)>>2)];
      $target=$51;
      __label__ = 12; break;
    case 12: // $while_cond
      var $52=HEAP32[(($i)>>2)];
      var $cmp17=(($52)|0) >= 0;
      if ($cmp17) { __label__ = 13; break; } else { __label__ = 16; break; }
    case 13: // $while_body
      var $53=$st;
      var $54=$53;
      var $55=$i;
      var $call=_speex_encoder_ctl($54, 4, $55);
      var $56=$st;
      var $57=$56;
      var $58=$rate;
      var $call19=_speex_encoder_ctl($57, 19, $58);
      var $59=HEAP32[(($rate)>>2)];
      var $60=$target;
      var $cmp20=(($59)|0) <= (($60)|0);
      if ($cmp20) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then22
      __label__ = 16; break;
    case 15: // $if_end
      var $61=HEAP32[(($i)>>2)];
      var $dec=(($61-1)|0);
      HEAP32[(($i)>>2)]=$dec;
      __label__ = 12; break;
    case 16: // $while_end
      var $62=HEAP32[(($i)>>2)];
      var $conv23=(($62)|0);
      HEAPF32[(($vbr_qual)>>2)]=$conv23;
      var $63=HEAPF32[(($vbr_qual)>>2)];
      var $cmp24=$63 < 0;
      if ($cmp24) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then26
      HEAPF32[(($vbr_qual)>>2)]=0;
      __label__ = 18; break;
    case 18: // $if_end27
      var $64=$st;
      var $65=$64;
      var $66=$vbr_qual;
      var $call28=_speex_encoder_ctl($65, 14, $66);
      var $67=$st;
      var $abr_count=(($67+188)|0);
      HEAPF32[(($abr_count)>>2)]=0;
      var $68=$st;
      var $abr_drift=(($68+180)|0);
      HEAPF32[(($abr_drift)>>2)]=0;
      var $69=$st;
      var $abr_drift2=(($69+184)|0);
      HEAPF32[(($abr_drift2)>>2)]=0;
      __label__ = 19; break;
    case 19: // $if_end29
      __label__ = 87; break;
    case 20: // $sw_bb30
      var $70=$st;
      var $abr_enabled31=(($70+176)|0);
      var $71=HEAP32[(($abr_enabled31)>>2)];
      var $72=$ptr_addr;
      var $73=$72;
      HEAP32[(($73)>>2)]=$71;
      __label__ = 87; break;
    case 21: // $sw_bb32
      var $74=$ptr_addr;
      var $75=$74;
      var $76=HEAPF32[(($75)>>2)];
      var $77=$st;
      var $vbr_quality=(($77+148)|0);
      HEAPF32[(($vbr_quality)>>2)]=$76;
      __label__ = 87; break;
    case 22: // $sw_bb33
      var $78=$st;
      var $vbr_quality34=(($78+148)|0);
      var $79=HEAPF32[(($vbr_quality34)>>2)];
      var $80=$ptr_addr;
      var $81=$80;
      HEAPF32[(($81)>>2)]=$79;
      __label__ = 87; break;
    case 23: // $sw_bb35
      var $82=$ptr_addr;
      var $83=$82;
      var $84=HEAP32[(($83)>>2)];
      $quality=$84;
      var $85=$quality;
      var $cmp36=(($85)|0) < 0;
      if ($cmp36) { __label__ = 24; break; } else { __label__ = 25; break; }
    case 24: // $if_then38
      $quality=0;
      __label__ = 25; break;
    case 25: // $if_end39
      var $86=$quality;
      var $cmp40=(($86)|0) > 10;
      if ($cmp40) { __label__ = 26; break; } else { __label__ = 27; break; }
    case 26: // $if_then42
      $quality=10;
      __label__ = 27; break;
    case 27: // $if_end43
      var $87=$quality;
      var $88=$st;
      var $mode=(($88)|0);
      var $89=HEAP32[(($mode)>>2)];
      var $mode44=(($89)|0);
      var $90=HEAP32[(($mode44)>>2)];
      var $91=$90;
      var $quality_map=(($91+100)|0);
      var $arrayidx=(($quality_map+($87<<2))|0);
      var $92=HEAP32[(($arrayidx)>>2)];
      var $93=$st;
      var $submodeID45=(($93+212)|0);
      HEAP32[(($submodeID45)>>2)]=$92;
      var $94=$st;
      var $submodeSelect46=(($94+216)|0);
      HEAP32[(($submodeSelect46)>>2)]=$92;
      __label__ = 87; break;
    case 28: // $sw_bb47
      var $95=$ptr_addr;
      var $96=$95;
      var $97=HEAP32[(($96)>>2)];
      var $98=$st;
      var $complexity=(($98+192)|0);
      HEAP32[(($complexity)>>2)]=$97;
      var $99=$st;
      var $complexity48=(($99+192)|0);
      var $100=HEAP32[(($complexity48)>>2)];
      var $cmp49=(($100)|0) < 0;
      if ($cmp49) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $if_then51
      var $101=$st;
      var $complexity52=(($101+192)|0);
      HEAP32[(($complexity52)>>2)]=0;
      __label__ = 30; break;
    case 30: // $if_end53
      __label__ = 87; break;
    case 31: // $sw_bb54
      var $102=$st;
      var $complexity55=(($102+192)|0);
      var $103=HEAP32[(($complexity55)>>2)];
      var $104=$ptr_addr;
      var $105=$104;
      HEAP32[(($105)>>2)]=$103;
      __label__ = 87; break;
    case 32: // $sw_bb56
      HEAP32[(($i57)>>2)]=10;
      var $106=$ptr_addr;
      var $107=$106;
      var $108=HEAP32[(($107)>>2)];
      $target59=$108;
      __label__ = 33; break;
    case 33: // $while_cond60
      var $109=HEAP32[(($i57)>>2)];
      var $cmp61=(($109)|0) >= 0;
      if ($cmp61) { __label__ = 34; break; } else { __label__ = 37; break; }
    case 34: // $while_body63
      var $110=$st;
      var $111=$110;
      var $112=$i57;
      var $call64=_speex_encoder_ctl($111, 4, $112);
      var $113=$st;
      var $114=$113;
      var $115=$rate58;
      var $call65=_speex_encoder_ctl($114, 19, $115);
      var $116=HEAP32[(($rate58)>>2)];
      var $117=$target59;
      var $cmp66=(($116)|0) <= (($117)|0);
      if ($cmp66) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then68
      __label__ = 37; break;
    case 36: // $if_end69
      var $118=HEAP32[(($i57)>>2)];
      var $dec70=(($118-1)|0);
      HEAP32[(($i57)>>2)]=$dec70;
      __label__ = 33; break;
    case 37: // $while_end71
      __label__ = 87; break;
    case 38: // $sw_bb72
      var $119=$st;
      var $submodeID73=(($119+212)|0);
      var $120=HEAP32[(($submodeID73)>>2)];
      var $121=$st;
      var $submodes=(($121+208)|0);
      var $122=HEAP32[(($submodes)>>2)];
      var $arrayidx74=(($122+($120<<2))|0);
      var $123=HEAP32[(($arrayidx74)>>2)];
      var $tobool75=(($123)|0)!=0;
      if ($tobool75) { __label__ = 39; break; } else { __label__ = 40; break; }
    case 39: // $if_then76
      var $124=$st;
      var $sampling_rate=(($124+196)|0);
      var $125=HEAP32[(($sampling_rate)>>2)];
      var $126=$st;
      var $submodeID77=(($126+212)|0);
      var $127=HEAP32[(($submodeID77)>>2)];
      var $128=$st;
      var $submodes78=(($128+208)|0);
      var $129=HEAP32[(($submodes78)>>2)];
      var $arrayidx79=(($129+($127<<2))|0);
      var $130=HEAP32[(($arrayidx79)>>2)];
      var $bits_per_frame=(($130+52)|0);
      var $131=HEAP32[(($bits_per_frame)>>2)];
      var $mul=(($125*$131)|0);
      var $132=$st;
      var $frameSize80=(($132+8)|0);
      var $133=HEAP32[(($frameSize80)>>2)];
      var $div=(((($mul)|0)/(($133)|0))|0);
      var $134=$ptr_addr;
      var $135=$134;
      HEAP32[(($135)>>2)]=$div;
      __label__ = 41; break;
    case 40: // $if_else
      var $136=$st;
      var $sampling_rate81=(($136+196)|0);
      var $137=HEAP32[(($sampling_rate81)>>2)];
      var $mul82=(($137*5)|0);
      var $138=$st;
      var $frameSize83=(($138+8)|0);
      var $139=HEAP32[(($frameSize83)>>2)];
      var $div84=(((($mul82)|0)/(($139)|0))|0);
      var $140=$ptr_addr;
      var $141=$140;
      HEAP32[(($141)>>2)]=$div84;
      __label__ = 41; break;
    case 41: // $if_end85
      __label__ = 87; break;
    case 42: // $sw_bb86
      var $142=$ptr_addr;
      var $143=$142;
      var $144=HEAP32[(($143)>>2)];
      var $145=$st;
      var $sampling_rate87=(($145+196)|0);
      HEAP32[(($sampling_rate87)>>2)]=$144;
      __label__ = 87; break;
    case 43: // $sw_bb88
      var $146=$st;
      var $sampling_rate89=(($146+196)|0);
      var $147=HEAP32[(($sampling_rate89)>>2)];
      var $148=$ptr_addr;
      var $149=$148;
      HEAP32[(($149)>>2)]=$147;
      __label__ = 87; break;
    case 44: // $sw_bb90
      var $150=$st;
      var $bounded_pitch=(($150+40)|0);
      HEAP32[(($bounded_pitch)>>2)]=1;
      var $151=$st;
      var $first=(($151+4)|0);
      HEAP32[(($first)>>2)]=1;
      $i91=0;
      __label__ = 45; break;
    case 45: // $for_cond
      var $152=$i91;
      var $153=$st;
      var $lpcSize=(($153+24)|0);
      var $154=HEAP32[(($lpcSize)>>2)];
      var $cmp92=(($152)|0) < (($154)|0);
      if ($cmp92) { __label__ = 46; break; } else { __label__ = 48; break; }
    case 46: // $for_body
      var $155=$i91;
      var $add=(($155+1)|0);
      var $conv94=(($add)|0);
      var $mul95=$conv94*3.1415927410125732;
      var $156=$st;
      var $lpcSize96=(($156+24)|0);
      var $157=HEAP32[(($lpcSize96)>>2)];
      var $add97=(($157+1)|0);
      var $conv98=(($add97)|0);
      var $div99=$mul95/$conv98;
      var $158=$i91;
      var $159=$st;
      var $old_lsp=(($159+100)|0);
      var $160=HEAP32[(($old_lsp)>>2)];
      var $arrayidx100=(($160+($158<<2))|0);
      HEAPF32[(($arrayidx100)>>2)]=$div99;
      __label__ = 47; break;
    case 47: // $for_inc
      var $161=$i91;
      var $inc=(($161+1)|0);
      $i91=$inc;
      __label__ = 45; break;
    case 48: // $for_end
      $i91=0;
      __label__ = 49; break;
    case 49: // $for_cond101
      var $162=$i91;
      var $163=$st;
      var $lpcSize102=(($163+24)|0);
      var $164=HEAP32[(($lpcSize102)>>2)];
      var $cmp103=(($162)|0) < (($164)|0);
      if ($cmp103) { __label__ = 50; break; } else { __label__ = 52; break; }
    case 50: // $for_body105
      var $165=$i91;
      var $166=$st;
      var $mem_exc=(($166+120)|0);
      var $167=HEAP32[(($mem_exc)>>2)];
      var $arrayidx106=(($167+($165<<2))|0);
      HEAPF32[(($arrayidx106)>>2)]=0;
      var $168=$i91;
      var $169=$st;
      var $mem_sp=(($169+108)|0);
      var $170=HEAP32[(($mem_sp)>>2)];
      var $arrayidx107=(($170+($168<<2))|0);
      HEAPF32[(($arrayidx107)>>2)]=0;
      var $171=$i91;
      var $172=$st;
      var $mem_sw_whole=(($172+116)|0);
      var $173=HEAP32[(($mem_sw_whole)>>2)];
      var $arrayidx108=(($173+($171<<2))|0);
      HEAPF32[(($arrayidx108)>>2)]=0;
      var $174=$i91;
      var $175=$st;
      var $mem_sw=(($175+112)|0);
      var $176=HEAP32[(($mem_sw)>>2)];
      var $arrayidx109=(($176+($174<<2))|0);
      HEAPF32[(($arrayidx109)>>2)]=0;
      __label__ = 51; break;
    case 51: // $for_inc110
      var $177=$i91;
      var $inc111=(($177+1)|0);
      $i91=$inc111;
      __label__ = 49; break;
    case 52: // $for_end112
      $i91=0;
      __label__ = 53; break;
    case 53: // $for_cond113
      var $178=$i91;
      var $179=$st;
      var $frameSize114=(($179+8)|0);
      var $180=HEAP32[(($frameSize114)>>2)];
      var $181=$st;
      var $max_pitch=(($181+32)|0);
      var $182=HEAP32[(($max_pitch)>>2)];
      var $add115=(($180+$182)|0);
      var $add116=(($add115+1)|0);
      var $cmp117=(($178)|0) < (($add116)|0);
      if ($cmp117) { __label__ = 54; break; } else { __label__ = 56; break; }
    case 54: // $for_body119
      var $183=$i91;
      var $184=$st;
      var $swBuf=(($184+84)|0);
      var $185=HEAP32[(($swBuf)>>2)];
      var $arrayidx120=(($185+($183<<2))|0);
      HEAPF32[(($arrayidx120)>>2)]=0;
      var $186=$i91;
      var $187=$st;
      var $excBuf=(($187+76)|0);
      var $188=HEAP32[(($excBuf)>>2)];
      var $arrayidx121=(($188+($186<<2))|0);
      HEAPF32[(($arrayidx121)>>2)]=0;
      __label__ = 55; break;
    case 55: // $for_inc122
      var $189=$i91;
      var $inc123=(($189+1)|0);
      $i91=$inc123;
      __label__ = 53; break;
    case 56: // $for_end124
      $i91=0;
      __label__ = 57; break;
    case 57: // $for_cond125
      var $190=$i91;
      var $191=$st;
      var $windowSize=(($191+20)|0);
      var $192=HEAP32[(($windowSize)>>2)];
      var $193=$st;
      var $frameSize126=(($193+8)|0);
      var $194=HEAP32[(($frameSize126)>>2)];
      var $sub=(($192-$194)|0);
      var $cmp127=(($190)|0) < (($sub)|0);
      if ($cmp127) { __label__ = 58; break; } else { __label__ = 60; break; }
    case 58: // $for_body129
      var $195=$i91;
      var $196=$st;
      var $winBuf=(($196+72)|0);
      var $197=HEAP32[(($winBuf)>>2)];
      var $arrayidx130=(($197+($195<<2))|0);
      HEAPF32[(($arrayidx130)>>2)]=0;
      __label__ = 59; break;
    case 59: // $for_inc131
      var $198=$i91;
      var $inc132=(($198+1)|0);
      $i91=$inc132;
      __label__ = 57; break;
    case 60: // $for_end133
      __label__ = 87; break;
    case 61: // $sw_bb134
      var $199=$ptr_addr;
      var $200=$199;
      var $201=HEAP32[(($200)>>2)];
      var $202=$st;
      var $encode_submode=(($202+204)|0);
      HEAP32[(($encode_submode)>>2)]=$201;
      __label__ = 87; break;
    case 62: // $sw_bb135
      var $203=$st;
      var $encode_submode136=(($203+204)|0);
      var $204=HEAP32[(($encode_submode136)>>2)];
      var $205=$ptr_addr;
      var $206=$205;
      HEAP32[(($206)>>2)]=$204;
      __label__ = 87; break;
    case 63: // $sw_bb137
      var $207=$st;
      var $windowSize138=(($207+20)|0);
      var $208=HEAP32[(($windowSize138)>>2)];
      var $209=$st;
      var $frameSize139=(($209+8)|0);
      var $210=HEAP32[(($frameSize139)>>2)];
      var $sub140=(($208-$210)|0);
      var $211=$ptr_addr;
      var $212=$211;
      HEAP32[(($212)>>2)]=$sub140;
      __label__ = 87; break;
    case 64: // $sw_bb141
      var $213=$ptr_addr;
      var $214=$213;
      var $215=HEAP32[(($214)>>2)];
      var $216=$st;
      var $plc_tuning=(($216+200)|0);
      HEAP32[(($plc_tuning)>>2)]=$215;
      var $217=$st;
      var $plc_tuning142=(($217+200)|0);
      var $218=HEAP32[(($plc_tuning142)>>2)];
      var $cmp143=(($218)|0) > 100;
      if ($cmp143) { __label__ = 65; break; } else { __label__ = 66; break; }
    case 65: // $if_then145
      var $219=$st;
      var $plc_tuning146=(($219+200)|0);
      HEAP32[(($plc_tuning146)>>2)]=100;
      __label__ = 66; break;
    case 66: // $if_end147
      __label__ = 87; break;
    case 67: // $sw_bb148
      var $220=$st;
      var $plc_tuning149=(($220+200)|0);
      var $221=HEAP32[(($plc_tuning149)>>2)];
      var $222=$ptr_addr;
      var $223=$222;
      HEAP32[(($223)>>2)]=$221;
      __label__ = 87; break;
    case 68: // $sw_bb150
      var $224=$ptr_addr;
      var $225=$224;
      var $226=HEAP32[(($225)>>2)];
      var $227=$st;
      var $vbr_max=(($227+160)|0);
      HEAP32[(($vbr_max)>>2)]=$226;
      __label__ = 87; break;
    case 69: // $sw_bb151
      var $228=$st;
      var $vbr_max152=(($228+160)|0);
      var $229=HEAP32[(($vbr_max152)>>2)];
      var $230=$ptr_addr;
      var $231=$230;
      HEAP32[(($231)>>2)]=$229;
      __label__ = 87; break;
    case 70: // $sw_bb153
      var $232=$ptr_addr;
      var $233=$232;
      var $234=HEAP32[(($233)>>2)];
      var $235=$st;
      var $highpass_enabled=(($235+224)|0);
      HEAP32[(($highpass_enabled)>>2)]=$234;
      __label__ = 87; break;
    case 71: // $sw_bb154
      var $236=$st;
      var $highpass_enabled155=(($236+224)|0);
      var $237=HEAP32[(($highpass_enabled155)>>2)];
      var $238=$ptr_addr;
      var $239=$238;
      HEAP32[(($239)>>2)]=$237;
      __label__ = 87; break;
    case 72: // $sw_bb156
      var $240=$ptr_addr;
      var $241=$240;
      $g=$241;
      $i157=0;
      __label__ = 73; break;
    case 73: // $for_cond158
      var $242=$i157;
      var $243=$st;
      var $nbSubframes=(($243+16)|0);
      var $244=HEAP32[(($nbSubframes)>>2)];
      var $cmp159=(($242)|0) < (($244)|0);
      if ($cmp159) { __label__ = 74; break; } else { __label__ = 76; break; }
    case 74: // $for_body161
      var $245=$i157;
      var $246=$st;
      var $pi_gain=(($246+136)|0);
      var $247=HEAP32[(($pi_gain)>>2)];
      var $arrayidx162=(($247+($245<<2))|0);
      var $248=HEAPF32[(($arrayidx162)>>2)];
      var $249=$i157;
      var $250=$g;
      var $arrayidx163=(($250+($249<<2))|0);
      HEAPF32[(($arrayidx163)>>2)]=$248;
      __label__ = 75; break;
    case 75: // $for_inc164
      var $251=$i157;
      var $inc165=(($251+1)|0);
      $i157=$inc165;
      __label__ = 73; break;
    case 76: // $for_end166
      __label__ = 87; break;
    case 77: // $sw_bb167
      $i168=0;
      __label__ = 78; break;
    case 78: // $for_cond169
      var $252=$i168;
      var $253=$st;
      var $nbSubframes170=(($253+16)|0);
      var $254=HEAP32[(($nbSubframes170)>>2)];
      var $cmp171=(($252)|0) < (($254)|0);
      if ($cmp171) { __label__ = 79; break; } else { __label__ = 81; break; }
    case 79: // $for_body173
      var $255=$st;
      var $exc=(($255+80)|0);
      var $256=HEAP32[(($exc)>>2)];
      var $257=$i168;
      var $258=$st;
      var $subframeSize=(($258+12)|0);
      var $259=HEAP32[(($subframeSize)>>2)];
      var $mul174=(($257*$259)|0);
      var $add_ptr=(($256+($mul174<<2))|0);
      var $260=$st;
      var $subframeSize175=(($260+12)|0);
      var $261=HEAP32[(($subframeSize175)>>2)];
      var $call176=_compute_rms16($add_ptr, $261);
      var $262=$i168;
      var $263=$ptr_addr;
      var $264=$263;
      var $arrayidx177=(($264+($262<<2))|0);
      HEAPF32[(($arrayidx177)>>2)]=$call176;
      __label__ = 80; break;
    case 80: // $for_inc178
      var $265=$i168;
      var $inc179=(($265+1)|0);
      $i168=$inc179;
      __label__ = 78; break;
    case 81: // $for_end180
      __label__ = 87; break;
    case 82: // $sw_bb181
      var $266=$st;
      var $relative_quality=(($266+152)|0);
      var $267=HEAPF32[(($relative_quality)>>2)];
      var $268=$ptr_addr;
      var $269=$268;
      HEAPF32[(($269)>>2)]=$267;
      __label__ = 87; break;
    case 83: // $sw_bb182
      var $270=$ptr_addr;
      var $271=$270;
      var $272=$st;
      var $innov_rms_save=(($272+140)|0);
      HEAP32[(($innov_rms_save)>>2)]=$271;
      __label__ = 87; break;
    case 84: // $sw_bb183
      var $273=$ptr_addr;
      var $274=$273;
      var $275=HEAP32[(($274)>>2)];
      var $276=$st;
      var $isWideband=(($276+220)|0);
      HEAP32[(($isWideband)>>2)]=$275;
      __label__ = 87; break;
    case 85: // $sw_bb184
      var $277=$st;
      var $stack=(($277+68)|0);
      var $278=HEAP32[(($stack)>>2)];
      var $279=$ptr_addr;
      var $280=$279;
      HEAP32[(($280)>>2)]=$278;
      __label__ = 87; break;
    case 86: // $sw_default
      var $281=$request_addr;
      _speex_warning_int57(((STRING_TABLE.__str838)|0), $281);
      $retval=-1;
      __label__ = 88; break;
    case 87: // $sw_epilog
      $retval=0;
      __label__ = 88; break;
    case 88: // $return
      var $282=$retval;
      STACKTOP = __stackBase__;
      return $282;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_encoder_ctl["X"]=1;

function _speex_warning_int57($str, $val) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  var $val_addr;
  $str_addr=$str;
  $val_addr=$val;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $3=$val_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str9)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,HEAP32[((tempInt+4)>>2)]=$3,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _compute_quant_weights($qlsp, $quant_weight, $order) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $qlsp_addr;
      var $quant_weight_addr;
      var $order_addr;
      var $i;
      var $tmp1;
      var $tmp2;
      $qlsp_addr=$qlsp;
      $quant_weight_addr=$quant_weight;
      $order_addr=$order;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 12; break; }
    case 2: // $for_body
      var $2=$i;
      var $cmp1=(($2)|0)==0;
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      var $3=$i;
      var $4=$qlsp_addr;
      var $arrayidx=(($4+($3<<2))|0);
      var $5=HEAPF32[(($arrayidx)>>2)];
      $tmp1=$5;
      __label__ = 5; break;
    case 4: // $if_else
      var $6=$i;
      var $7=$qlsp_addr;
      var $arrayidx2=(($7+($6<<2))|0);
      var $8=HEAPF32[(($arrayidx2)>>2)];
      var $9=$i;
      var $sub=(($9-1)|0);
      var $10=$qlsp_addr;
      var $arrayidx3=(($10+($sub<<2))|0);
      var $11=HEAPF32[(($arrayidx3)>>2)];
      var $sub4=$8-$11;
      $tmp1=$sub4;
      __label__ = 5; break;
    case 5: // $if_end
      var $12=$i;
      var $13=$order_addr;
      var $sub5=(($13-1)|0);
      var $cmp6=(($12)|0)==(($sub5)|0);
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then7
      var $14=$i;
      var $15=$qlsp_addr;
      var $arrayidx8=(($15+($14<<2))|0);
      var $16=HEAPF32[(($arrayidx8)>>2)];
      var $conv=$16;
      var $sub9=3.141592653589793-$conv;
      var $conv10=$sub9;
      $tmp2=$conv10;
      __label__ = 8; break;
    case 7: // $if_else11
      var $17=$i;
      var $add=(($17+1)|0);
      var $18=$qlsp_addr;
      var $arrayidx12=(($18+($add<<2))|0);
      var $19=HEAPF32[(($arrayidx12)>>2)];
      var $20=$i;
      var $21=$qlsp_addr;
      var $arrayidx13=(($21+($20<<2))|0);
      var $22=HEAPF32[(($arrayidx13)>>2)];
      var $sub14=$19-$22;
      $tmp2=$sub14;
      __label__ = 8; break;
    case 8: // $if_end15
      var $23=$tmp2;
      var $24=$tmp1;
      var $cmp16=$23 < $24;
      if ($cmp16) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then18
      var $25=$tmp2;
      $tmp1=$25;
      __label__ = 10; break;
    case 10: // $if_end19
      var $26=$tmp1;
      var $conv20=$26;
      var $add21=$conv20+0.04;
      var $div=10/$add21;
      var $conv22=$div;
      var $27=$i;
      var $28=$quant_weight_addr;
      var $arrayidx23=(($28+($27<<2))|0);
      HEAPF32[(($arrayidx23)>>2)]=$conv22;
      __label__ = 11; break;
    case 11: // $for_inc
      var $29=$i;
      var $inc=(($29+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 12: // $for_end
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_compute_quant_weights["X"]=1;

function _nb_decoder_ctl($state, $request, $ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $request_addr;
      var $ptr_addr;
      var $st;
      var $c;
      var $c34;
      var $i;
      var $ret;
      var $i80;
      var $g;
      var $i91;
      $state_addr=$state;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$state_addr;
      var $1=$0;
      $st=$1;
      var $2=$request_addr;
      if ($2 == 8 || $2 == 6) {
        __label__ = 1; break;
      }
      else if ($2 == 9 || $2 == 7) {
        __label__ = 2; break;
      }
      else if ($2 == 0) {
        __label__ = 3; break;
      }
      else if ($2 == 1) {
        __label__ = 4; break;
      }
      else if ($2 == 3) {
        __label__ = 5; break;
      }
      else if ($2 == 19) {
        __label__ = 6; break;
      }
      else if ($2 == 24) {
        __label__ = 10; break;
      }
      else if ($2 == 25) {
        __label__ = 11; break;
      }
      else if ($2 == 20) {
        __label__ = 12; break;
      }
      else if ($2 == 22) {
        __label__ = 13; break;
      }
      else if ($2 == 26) {
        __label__ = 14; break;
      }
      else if ($2 == 36) {
        __label__ = 23; break;
      }
      else if ($2 == 37) {
        __label__ = 24; break;
      }
      else if ($2 == 39) {
        __label__ = 25; break;
      }
      else if ($2 == 44) {
        __label__ = 26; break;
      }
      else if ($2 == 45) {
        __label__ = 27; break;
      }
      else if ($2 == 47) {
        __label__ = 28; break;
      }
      else if ($2 == 100) {
        __label__ = 33; break;
      }
      else if ($2 == 101) {
        __label__ = 38; break;
      }
      else if ($2 == 103) {
        __label__ = 43; break;
      }
      else if ($2 == 104) {
        __label__ = 44; break;
      }
      else if ($2 == 105) {
        __label__ = 45; break;
      }
      else if ($2 == 106) {
        __label__ = 46; break;
      }
      else {
      __label__ = 47; break;
      }
      
    case 1: // $sw_bb
      var $3=$ptr_addr;
      var $4=$3;
      var $5=HEAP32[(($4)>>2)];
      var $6=$st;
      var $submodeID=(($6+132)|0);
      HEAP32[(($submodeID)>>2)]=$5;
      __label__ = 48; break;
    case 2: // $sw_bb1
      var $7=$st;
      var $submodeID2=(($7+132)|0);
      var $8=HEAP32[(($submodeID2)>>2)];
      var $9=$ptr_addr;
      var $10=$9;
      HEAP32[(($10)>>2)]=$8;
      __label__ = 48; break;
    case 3: // $sw_bb3
      var $11=$ptr_addr;
      var $12=$11;
      var $13=HEAP32[(($12)>>2)];
      var $14=$st;
      var $lpc_enh_enabled=(($14+136)|0);
      HEAP32[(($lpc_enh_enabled)>>2)]=$13;
      __label__ = 48; break;
    case 4: // $sw_bb4
      var $15=$st;
      var $lpc_enh_enabled5=(($15+136)|0);
      var $16=HEAP32[(($lpc_enh_enabled5)>>2)];
      var $17=$ptr_addr;
      var $18=$17;
      HEAP32[(($18)>>2)]=$16;
      __label__ = 48; break;
    case 5: // $sw_bb6
      var $19=$st;
      var $frameSize=(($19+12)|0);
      var $20=HEAP32[(($frameSize)>>2)];
      var $21=$ptr_addr;
      var $22=$21;
      HEAP32[(($22)>>2)]=$20;
      __label__ = 48; break;
    case 6: // $sw_bb7
      var $23=$st;
      var $submodeID8=(($23+132)|0);
      var $24=HEAP32[(($submodeID8)>>2)];
      var $25=$st;
      var $submodes=(($25+128)|0);
      var $26=HEAP32[(($submodes)>>2)];
      var $arrayidx=(($26+($24<<2))|0);
      var $27=HEAP32[(($arrayidx)>>2)];
      var $tobool=(($27)|0)!=0;
      if ($tobool) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      var $28=$st;
      var $sampling_rate=(($28+36)|0);
      var $29=HEAP32[(($sampling_rate)>>2)];
      var $30=$st;
      var $submodeID9=(($30+132)|0);
      var $31=HEAP32[(($submodeID9)>>2)];
      var $32=$st;
      var $submodes10=(($32+128)|0);
      var $33=HEAP32[(($submodes10)>>2)];
      var $arrayidx11=(($33+($31<<2))|0);
      var $34=HEAP32[(($arrayidx11)>>2)];
      var $bits_per_frame=(($34+52)|0);
      var $35=HEAP32[(($bits_per_frame)>>2)];
      var $mul=(($29*$35)|0);
      var $36=$st;
      var $frameSize12=(($36+12)|0);
      var $37=HEAP32[(($frameSize12)>>2)];
      var $div=(((($mul)|0)/(($37)|0))|0);
      var $38=$ptr_addr;
      var $39=$38;
      HEAP32[(($39)>>2)]=$div;
      __label__ = 9; break;
    case 8: // $if_else
      var $40=$st;
      var $sampling_rate13=(($40+36)|0);
      var $41=HEAP32[(($sampling_rate13)>>2)];
      var $mul14=(($41*5)|0);
      var $42=$st;
      var $frameSize15=(($42+12)|0);
      var $43=HEAP32[(($frameSize15)>>2)];
      var $div16=(((($mul14)|0)/(($43)|0))|0);
      var $44=$ptr_addr;
      var $45=$44;
      HEAP32[(($45)>>2)]=$div16;
      __label__ = 9; break;
    case 9: // $if_end
      __label__ = 48; break;
    case 10: // $sw_bb17
      var $46=$ptr_addr;
      var $47=$46;
      var $48=HEAP32[(($47)>>2)];
      var $49=$st;
      var $sampling_rate18=(($49+36)|0);
      HEAP32[(($sampling_rate18)>>2)]=$48;
      __label__ = 48; break;
    case 11: // $sw_bb19
      var $50=$st;
      var $sampling_rate20=(($50+36)|0);
      var $51=HEAP32[(($sampling_rate20)>>2)];
      var $52=$ptr_addr;
      var $53=$52;
      HEAP32[(($53)>>2)]=$51;
      __label__ = 48; break;
    case 12: // $sw_bb21
      var $54=$ptr_addr;
      var $55=$54;
      $c=$55;
      var $56=$c;
      var $func=(($56+4)|0);
      var $57=HEAP32[(($func)>>2)];
      var $58=$c;
      var $callback_id=(($58)|0);
      var $59=HEAP32[(($callback_id)>>2)];
      var $60=$st;
      var $speex_callbacks=(($60+140)|0);
      var $arrayidx22=(($speex_callbacks+$59*20)|0);
      var $func23=(($arrayidx22+4)|0);
      HEAP32[(($func23)>>2)]=$57;
      var $61=$c;
      var $data=(($61+8)|0);
      var $62=HEAP32[(($data)>>2)];
      var $63=$c;
      var $callback_id24=(($63)|0);
      var $64=HEAP32[(($callback_id24)>>2)];
      var $65=$st;
      var $speex_callbacks25=(($65+140)|0);
      var $arrayidx26=(($speex_callbacks25+$64*20)|0);
      var $data27=(($arrayidx26+8)|0);
      HEAP32[(($data27)>>2)]=$62;
      var $66=$c;
      var $callback_id28=(($66)|0);
      var $67=HEAP32[(($callback_id28)>>2)];
      var $68=$c;
      var $callback_id29=(($68)|0);
      var $69=HEAP32[(($callback_id29)>>2)];
      var $70=$st;
      var $speex_callbacks30=(($70+140)|0);
      var $arrayidx31=(($speex_callbacks30+$69*20)|0);
      var $callback_id32=(($arrayidx31)|0);
      HEAP32[(($callback_id32)>>2)]=$67;
      __label__ = 48; break;
    case 13: // $sw_bb33
      var $71=$ptr_addr;
      var $72=$71;
      $c34=$72;
      var $73=$c34;
      var $func35=(($73+4)|0);
      var $74=HEAP32[(($func35)>>2)];
      var $75=$st;
      var $user_callback=(($75+460)|0);
      var $func36=(($user_callback+4)|0);
      HEAP32[(($func36)>>2)]=$74;
      var $76=$c34;
      var $data37=(($76+8)|0);
      var $77=HEAP32[(($data37)>>2)];
      var $78=$st;
      var $user_callback38=(($78+460)|0);
      var $data39=(($user_callback38+8)|0);
      HEAP32[(($data39)>>2)]=$77;
      var $79=$c34;
      var $callback_id40=(($79)|0);
      var $80=HEAP32[(($callback_id40)>>2)];
      var $81=$st;
      var $user_callback41=(($81+460)|0);
      var $callback_id42=(($user_callback41)|0);
      HEAP32[(($callback_id42)>>2)]=$80;
      __label__ = 48; break;
    case 14: // $sw_bb43
      $i=0;
      __label__ = 15; break;
    case 15: // $for_cond
      var $82=$i;
      var $83=$st;
      var $lpcSize=(($83+24)|0);
      var $84=HEAP32[(($lpcSize)>>2)];
      var $cmp=(($82)|0) < (($84)|0);
      if ($cmp) { __label__ = 16; break; } else { __label__ = 18; break; }
    case 16: // $for_body
      var $85=$i;
      var $86=$st;
      var $mem_sp=(($86+64)|0);
      var $87=HEAP32[(($mem_sp)>>2)];
      var $arrayidx44=(($87+($85<<2))|0);
      HEAPF32[(($arrayidx44)>>2)]=0;
      __label__ = 17; break;
    case 17: // $for_inc
      var $88=$i;
      var $inc=(($88+1)|0);
      $i=$inc;
      __label__ = 15; break;
    case 18: // $for_end
      $i=0;
      __label__ = 19; break;
    case 19: // $for_cond45
      var $89=$i;
      var $90=$st;
      var $frameSize46=(($90+12)|0);
      var $91=HEAP32[(($frameSize46)>>2)];
      var $92=$st;
      var $max_pitch=(($92+32)|0);
      var $93=HEAP32[(($max_pitch)>>2)];
      var $add=(($91+$93)|0);
      var $add47=(($add+1)|0);
      var $cmp48=(($89)|0) < (($add47)|0);
      if ($cmp48) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body49
      var $94=$i;
      var $95=$st;
      var $excBuf=(($95+48)|0);
      var $96=HEAP32[(($excBuf)>>2)];
      var $arrayidx50=(($96+($94<<2))|0);
      HEAPF32[(($arrayidx50)>>2)]=0;
      __label__ = 21; break;
    case 21: // $for_inc51
      var $97=$i;
      var $inc52=(($97+1)|0);
      $i=$inc52;
      __label__ = 19; break;
    case 22: // $for_end53
      __label__ = 48; break;
    case 23: // $sw_bb54
      var $98=$ptr_addr;
      var $99=$98;
      var $100=HEAP32[(($99)>>2)];
      var $101=$st;
      var $encode_submode=(($101+124)|0);
      HEAP32[(($encode_submode)>>2)]=$100;
      __label__ = 48; break;
    case 24: // $sw_bb55
      var $102=$st;
      var $encode_submode56=(($102+124)|0);
      var $103=HEAP32[(($encode_submode56)>>2)];
      var $104=$ptr_addr;
      var $105=$104;
      HEAP32[(($105)>>2)]=$103;
      __label__ = 48; break;
    case 25: // $sw_bb57
      var $106=$st;
      var $subframeSize=(($106+16)|0);
      var $107=HEAP32[(($subframeSize)>>2)];
      var $108=$ptr_addr;
      var $109=$108;
      HEAP32[(($109)>>2)]=$107;
      __label__ = 48; break;
    case 26: // $sw_bb58
      var $110=$ptr_addr;
      var $111=$110;
      var $112=HEAP32[(($111)>>2)];
      var $113=$st;
      var $highpass_enabled=(($113+504)|0);
      HEAP32[(($highpass_enabled)>>2)]=$112;
      __label__ = 48; break;
    case 27: // $sw_bb59
      var $114=$st;
      var $highpass_enabled60=(($114+504)|0);
      var $115=HEAP32[(($highpass_enabled60)>>2)];
      var $116=$ptr_addr;
      var $117=$116;
      HEAP32[(($117)>>2)]=$115;
      __label__ = 48; break;
    case 28: // $sw_bb61
      var $118=$st;
      var $level=(($118+84)|0);
      var $119=HEAPF32[(($level)>>2)];
      var $120=$st;
      var $min_level=(($120+92)|0);
      var $121=HEAPF32[(($min_level)>>2)];
      var $div62=$119/$121;
      var $conv=$div62;
      var $call=_log($conv);
      var $122=$st;
      var $max_level=(($122+88)|0);
      var $123=HEAPF32[(($max_level)>>2)];
      var $124=$st;
      var $min_level63=(($124+92)|0);
      var $125=HEAPF32[(($min_level63)>>2)];
      var $div64=$123/$125;
      var $conv65=$div64;
      var $call66=_log($conv65);
      var $div67=$call/$call66;
      var $conv68=$div67;
      $ret=$conv68;
      var $126=$ret;
      var $cmp69=$126 > 1;
      if ($cmp69) { __label__ = 29; break; } else { __label__ = 30; break; }
    case 29: // $if_then71
      $ret=1;
      __label__ = 30; break;
    case 30: // $if_end72
      var $127=$ret;
      var $cmp73=$127 > 0;
      if ($cmp73) { __label__ = 32; break; } else { __label__ = 31; break; }
    case 31: // $if_then75
      $ret=0;
      __label__ = 32; break;
    case 32: // $if_end76
      var $128=$ret;
      var $mul77=$128*100;
      var $conv78=(($mul77)|0);
      var $129=$ptr_addr;
      var $130=$129;
      HEAP32[(($130)>>2)]=$conv78;
      __label__ = 48; break;
    case 33: // $sw_bb79
      var $131=$ptr_addr;
      var $132=$131;
      $g=$132;
      $i80=0;
      __label__ = 34; break;
    case 34: // $for_cond81
      var $133=$i80;
      var $134=$st;
      var $nbSubframes=(($134+20)|0);
      var $135=HEAP32[(($nbSubframes)>>2)];
      var $cmp82=(($133)|0) < (($135)|0);
      if ($cmp82) { __label__ = 35; break; } else { __label__ = 37; break; }
    case 35: // $for_body84
      var $136=$i80;
      var $137=$st;
      var $pi_gain=(($137+76)|0);
      var $138=HEAP32[(($pi_gain)>>2)];
      var $arrayidx85=(($138+($136<<2))|0);
      var $139=HEAPF32[(($arrayidx85)>>2)];
      var $140=$i80;
      var $141=$g;
      var $arrayidx86=(($141+($140<<2))|0);
      HEAPF32[(($arrayidx86)>>2)]=$139;
      __label__ = 36; break;
    case 36: // $for_inc87
      var $142=$i80;
      var $inc88=(($142+1)|0);
      $i80=$inc88;
      __label__ = 34; break;
    case 37: // $for_end89
      __label__ = 48; break;
    case 38: // $sw_bb90
      $i91=0;
      __label__ = 39; break;
    case 39: // $for_cond92
      var $143=$i91;
      var $144=$st;
      var $nbSubframes93=(($144+20)|0);
      var $145=HEAP32[(($nbSubframes93)>>2)];
      var $cmp94=(($143)|0) < (($145)|0);
      if ($cmp94) { __label__ = 40; break; } else { __label__ = 42; break; }
    case 40: // $for_body96
      var $146=$st;
      var $exc=(($146+52)|0);
      var $147=HEAP32[(($exc)>>2)];
      var $148=$i91;
      var $149=$st;
      var $subframeSize97=(($149+16)|0);
      var $150=HEAP32[(($subframeSize97)>>2)];
      var $mul98=(($148*$150)|0);
      var $add_ptr=(($147+($mul98<<2))|0);
      var $151=$st;
      var $subframeSize99=(($151+16)|0);
      var $152=HEAP32[(($subframeSize99)>>2)];
      var $call100=_compute_rms16($add_ptr, $152);
      var $153=$i91;
      var $154=$ptr_addr;
      var $155=$154;
      var $arrayidx101=(($155+($153<<2))|0);
      HEAPF32[(($arrayidx101)>>2)]=$call100;
      __label__ = 41; break;
    case 41: // $for_inc102
      var $156=$i91;
      var $inc103=(($156+1)|0);
      $i91=$inc103;
      __label__ = 39; break;
    case 42: // $for_end104
      __label__ = 48; break;
    case 43: // $sw_bb105
      var $157=$st;
      var $dtx_enabled=(($157+496)|0);
      var $158=HEAP32[(($dtx_enabled)>>2)];
      var $159=$ptr_addr;
      var $160=$159;
      HEAP32[(($160)>>2)]=$158;
      __label__ = 48; break;
    case 44: // $sw_bb106
      var $161=$ptr_addr;
      var $162=$161;
      var $163=$st;
      var $innov_save=(($163+80)|0);
      HEAP32[(($innov_save)>>2)]=$162;
      __label__ = 48; break;
    case 45: // $sw_bb107
      var $164=$ptr_addr;
      var $165=$164;
      var $166=HEAP32[(($165)>>2)];
      var $167=$st;
      var $isWideband=(($167+500)|0);
      HEAP32[(($isWideband)>>2)]=$166;
      __label__ = 48; break;
    case 46: // $sw_bb108
      var $168=$st;
      var $stack=(($168+44)|0);
      var $169=HEAP32[(($stack)>>2)];
      var $170=$ptr_addr;
      var $171=$170;
      HEAP32[(($171)>>2)]=$169;
      __label__ = 48; break;
    case 47: // $sw_default
      var $172=$request_addr;
      _speex_warning_int57(((STRING_TABLE.__str838)|0), $172);
      $retval=-1;
      __label__ = 49; break;
    case 48: // $sw_epilog
      $retval=0;
      __label__ = 49; break;
    case 49: // $return
      var $173=$retval;
      ;
      return $173;
    default: assert(0, "bad label: " + __label__);
  }
}
_nb_decoder_ctl["X"]=1;

function _lsp_quant_nb($lsp, $qlsp, $order, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $qlsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      var $quant_weight=__stackBase__;
      $lsp_addr=$lsp;
      $qlsp_addr=$qlsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$lsp_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $6=$qlsp_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$4;
      __label__ = 3; break;
    case 3: // $for_inc
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $8=$qlsp_addr;
      var $arraydecay=(($quant_weight)|0);
      var $9=$order_addr;
      _compute_quant_weights($8, $arraydecay, $9);
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $10=$i;
      var $11=$order_addr;
      var $cmp3=(($10)|0) < (($11)|0);
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body4
      var $12=$i;
      var $13=$qlsp_addr;
      var $arrayidx5=(($13+($12<<2))|0);
      var $14=HEAPF32[(($arrayidx5)>>2)];
      var $conv=$14;
      var $15=$i;
      var $conv6=(($15)|0);
      var $mul=$conv6*0.25;
      var $add=$mul+0.25;
      var $sub=$conv-$add;
      var $conv7=$sub;
      var $16=$i;
      var $17=$qlsp_addr;
      var $arrayidx8=(($17+($16<<2))|0);
      HEAPF32[(($arrayidx8)>>2)]=$conv7;
      __label__ = 7; break;
    case 7: // $for_inc9
      var $18=$i;
      var $inc10=(($18+1)|0);
      $i=$inc10;
      __label__ = 5; break;
    case 8: // $for_end11
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond12
      var $19=$i;
      var $20=$order_addr;
      var $cmp13=(($19)|0) < (($20)|0);
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body15
      var $21=$i;
      var $22=$qlsp_addr;
      var $arrayidx16=(($22+($21<<2))|0);
      var $23=HEAPF32[(($arrayidx16)>>2)];
      var $conv17=$23;
      var $mul18=$conv17*256;
      var $conv19=$mul18;
      var $24=$i;
      var $25=$qlsp_addr;
      var $arrayidx20=(($25+($24<<2))|0);
      HEAPF32[(($arrayidx20)>>2)]=$conv19;
      __label__ = 11; break;
    case 11: // $for_inc21
      var $26=$i;
      var $inc22=(($26+1)|0);
      $i=$inc22;
      __label__ = 9; break;
    case 12: // $for_end23
      var $27=$qlsp_addr;
      var $28=$order_addr;
      var $call=_lsp_quant($27, ((STRING_TABLE._cdbk_nb)|0), 64, $28);
      $id=$call;
      var $29=$bits_addr;
      var $30=$id;
      _speex_bits_pack($29, $30, 6);
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond24
      var $31=$i;
      var $32=$order_addr;
      var $cmp25=(($31)|0) < (($32)|0);
      if ($cmp25) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body27
      var $33=$i;
      var $34=$qlsp_addr;
      var $arrayidx28=(($34+($33<<2))|0);
      var $35=HEAPF32[(($arrayidx28)>>2)];
      var $mul29=$35*2;
      HEAPF32[(($arrayidx28)>>2)]=$mul29;
      __label__ = 15; break;
    case 15: // $for_inc30
      var $36=$i;
      var $inc31=(($36+1)|0);
      $i=$inc31;
      __label__ = 13; break;
    case 16: // $for_end32
      var $37=$qlsp_addr;
      var $arraydecay33=(($quant_weight)|0);
      var $call34=_lsp_weight_quant($37, $arraydecay33, ((STRING_TABLE._cdbk_nb_low1)|0), 64, 5);
      $id=$call34;
      var $38=$bits_addr;
      var $39=$id;
      _speex_bits_pack($38, $39, 6);
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond35
      var $40=$i;
      var $cmp36=(($40)|0) < 5;
      if ($cmp36) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body38
      var $41=$i;
      var $42=$qlsp_addr;
      var $arrayidx39=(($42+($41<<2))|0);
      var $43=HEAPF32[(($arrayidx39)>>2)];
      var $mul40=$43*2;
      HEAPF32[(($arrayidx39)>>2)]=$mul40;
      __label__ = 19; break;
    case 19: // $for_inc41
      var $44=$i;
      var $inc42=(($44+1)|0);
      $i=$inc42;
      __label__ = 17; break;
    case 20: // $for_end43
      var $45=$qlsp_addr;
      var $arraydecay44=(($quant_weight)|0);
      var $call45=_lsp_weight_quant($45, $arraydecay44, ((STRING_TABLE._cdbk_nb_low2)|0), 64, 5);
      $id=$call45;
      var $46=$bits_addr;
      var $47=$id;
      _speex_bits_pack($46, $47, 6);
      var $48=$qlsp_addr;
      var $add_ptr=(($48+20)|0);
      var $arraydecay46=(($quant_weight)|0);
      var $add_ptr47=(($arraydecay46+20)|0);
      var $call48=_lsp_weight_quant($add_ptr, $add_ptr47, ((STRING_TABLE._cdbk_nb_high1)|0), 64, 5);
      $id=$call48;
      var $49=$bits_addr;
      var $50=$id;
      _speex_bits_pack($49, $50, 6);
      $i=5;
      __label__ = 21; break;
    case 21: // $for_cond49
      var $51=$i;
      var $cmp50=(($51)|0) < 10;
      if ($cmp50) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body52
      var $52=$i;
      var $53=$qlsp_addr;
      var $arrayidx53=(($53+($52<<2))|0);
      var $54=HEAPF32[(($arrayidx53)>>2)];
      var $mul54=$54*2;
      HEAPF32[(($arrayidx53)>>2)]=$mul54;
      __label__ = 23; break;
    case 23: // $for_inc55
      var $55=$i;
      var $inc56=(($55+1)|0);
      $i=$inc56;
      __label__ = 21; break;
    case 24: // $for_end57
      var $56=$qlsp_addr;
      var $add_ptr58=(($56+20)|0);
      var $arraydecay59=(($quant_weight)|0);
      var $add_ptr60=(($arraydecay59+20)|0);
      var $call61=_lsp_weight_quant($add_ptr58, $add_ptr60, ((STRING_TABLE._cdbk_nb_high2)|0), 64, 5);
      $id=$call61;
      var $57=$bits_addr;
      var $58=$id;
      _speex_bits_pack($57, $58, 6);
      $i=0;
      __label__ = 25; break;
    case 25: // $for_cond62
      var $59=$i;
      var $60=$order_addr;
      var $cmp63=(($59)|0) < (($60)|0);
      if ($cmp63) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body65
      var $61=$i;
      var $62=$qlsp_addr;
      var $arrayidx66=(($62+($61<<2))|0);
      var $63=HEAPF32[(($arrayidx66)>>2)];
      var $conv67=$63;
      var $mul68=$conv67*0.00097656;
      var $conv69=$mul68;
      var $64=$i;
      var $65=$qlsp_addr;
      var $arrayidx70=(($65+($64<<2))|0);
      HEAPF32[(($arrayidx70)>>2)]=$conv69;
      __label__ = 27; break;
    case 27: // $for_inc71
      var $66=$i;
      var $inc72=(($66+1)|0);
      $i=$inc72;
      __label__ = 25; break;
    case 28: // $for_end73
      $i=0;
      __label__ = 29; break;
    case 29: // $for_cond74
      var $67=$i;
      var $68=$order_addr;
      var $cmp75=(($67)|0) < (($68)|0);
      if ($cmp75) { __label__ = 30; break; } else { __label__ = 32; break; }
    case 30: // $for_body77
      var $69=$i;
      var $70=$lsp_addr;
      var $arrayidx78=(($70+($69<<2))|0);
      var $71=HEAPF32[(($arrayidx78)>>2)];
      var $72=$i;
      var $73=$qlsp_addr;
      var $arrayidx79=(($73+($72<<2))|0);
      var $74=HEAPF32[(($arrayidx79)>>2)];
      var $sub80=$71-$74;
      var $75=$i;
      var $76=$qlsp_addr;
      var $arrayidx81=(($76+($75<<2))|0);
      HEAPF32[(($arrayidx81)>>2)]=$sub80;
      __label__ = 31; break;
    case 31: // $for_inc82
      var $77=$i;
      var $inc83=(($77+1)|0);
      $i=$inc83;
      __label__ = 29; break;
    case 32: // $for_end84
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_quant_nb["X"]=1;

function _lsp_quant($x, $cdbk, $nbVec, $nbDim) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $cdbk_addr;
      var $nbVec_addr;
      var $nbDim_addr;
      var $i;
      var $j;
      var $dist;
      var $tmp;
      var $best_dist;
      var $best_id;
      var $ptr;
      $x_addr=$x;
      $cdbk_addr=$cdbk;
      $nbVec_addr=$nbVec;
      $nbDim_addr=$nbDim;
      $best_dist=999999986991104;
      $best_id=0;
      var $0=$cdbk_addr;
      $ptr=$0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $1=$i;
      var $2=$nbVec_addr;
      var $cmp=(($1)|0) < (($2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 10; break; }
    case 2: // $for_body
      $dist=0;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond4
      var $3=$j;
      var $4=$nbDim_addr;
      var $cmp5=(($3)|0) < (($4)|0);
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body6
      var $5=$j;
      var $6=$x_addr;
      var $arrayidx=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx)>>2)];
      var $8=$ptr;
      var $incdec_ptr=(($8+1)|0);
      $ptr=$incdec_ptr;
      var $9=HEAP8[($8)];
      var $conv=(($9 << 24) >> 24);
      var $sub=$7-$conv;
      $tmp=$sub;
      var $10=$dist;
      var $11=$tmp;
      var $12=$tmp;
      var $mul=$11*$12;
      var $add=$10+$mul;
      $dist=$add;
      __label__ = 5; break;
    case 5: // $for_inc
      var $13=$j;
      var $inc=(($13+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $14=$dist;
      var $15=$best_dist;
      var $cmp7=$14 < $15;
      if ($cmp7) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      var $16=$dist;
      $best_dist=$16;
      var $17=$i;
      $best_id=$17;
      __label__ = 8; break;
    case 8: // $if_end
      __label__ = 9; break;
    case 9: // $for_inc9
      var $18=$i;
      var $inc10=(($18+1)|0);
      $i=$inc10;
      __label__ = 1; break;
    case 10: // $for_end11
      $j=0;
      __label__ = 11; break;
    case 11: // $for_cond12
      var $19=$j;
      var $20=$nbDim_addr;
      var $cmp13=(($19)|0) < (($20)|0);
      if ($cmp13) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body15
      var $21=$j;
      var $22=$x_addr;
      var $arrayidx16=(($22+($21<<2))|0);
      var $23=HEAPF32[(($arrayidx16)>>2)];
      var $24=$best_id;
      var $25=$nbDim_addr;
      var $mul17=(($24*$25)|0);
      var $26=$j;
      var $add18=(($mul17+$26)|0);
      var $27=$cdbk_addr;
      var $arrayidx19=(($27+$add18)|0);
      var $28=HEAP8[($arrayidx19)];
      var $conv20=(($28 << 24) >> 24);
      var $sub21=$23-$conv20;
      var $29=$j;
      var $30=$x_addr;
      var $arrayidx22=(($30+($29<<2))|0);
      HEAPF32[(($arrayidx22)>>2)]=$sub21;
      __label__ = 13; break;
    case 13: // $for_inc23
      var $31=$j;
      var $inc24=(($31+1)|0);
      $j=$inc24;
      __label__ = 11; break;
    case 14: // $for_end25
      var $32=$best_id;
      ;
      return $32;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_quant["X"]=1;

function _lsp_weight_quant($x, $weight, $cdbk, $nbVec, $nbDim) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $x_addr;
      var $weight_addr;
      var $cdbk_addr;
      var $nbVec_addr;
      var $nbDim_addr;
      var $i;
      var $j;
      var $dist;
      var $tmp;
      var $best_dist;
      var $best_id;
      var $ptr;
      $x_addr=$x;
      $weight_addr=$weight;
      $cdbk_addr=$cdbk;
      $nbVec_addr=$nbVec;
      $nbDim_addr=$nbDim;
      $best_dist=999999986991104;
      $best_id=0;
      var $0=$cdbk_addr;
      $ptr=$0;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $1=$i;
      var $2=$nbVec_addr;
      var $cmp=(($1)|0) < (($2)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 10; break; }
    case 2: // $for_body
      $dist=0;
      $j=0;
      __label__ = 3; break;
    case 3: // $for_cond4
      var $3=$j;
      var $4=$nbDim_addr;
      var $cmp5=(($3)|0) < (($4)|0);
      if ($cmp5) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body6
      var $5=$j;
      var $6=$x_addr;
      var $arrayidx=(($6+($5<<2))|0);
      var $7=HEAPF32[(($arrayidx)>>2)];
      var $8=$ptr;
      var $incdec_ptr=(($8+1)|0);
      $ptr=$incdec_ptr;
      var $9=HEAP8[($8)];
      var $conv=(($9 << 24) >> 24);
      var $sub=$7-$conv;
      $tmp=$sub;
      var $10=$dist;
      var $11=$j;
      var $12=$weight_addr;
      var $arrayidx7=(($12+($11<<2))|0);
      var $13=HEAPF32[(($arrayidx7)>>2)];
      var $14=$tmp;
      var $15=$tmp;
      var $mul=$14*$15;
      var $mul8=$13*$mul;
      var $add=$10+$mul8;
      $dist=$add;
      __label__ = 5; break;
    case 5: // $for_inc
      var $16=$j;
      var $inc=(($16+1)|0);
      $j=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $17=$dist;
      var $18=$best_dist;
      var $cmp9=$17 < $18;
      if ($cmp9) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then
      var $19=$dist;
      $best_dist=$19;
      var $20=$i;
      $best_id=$20;
      __label__ = 8; break;
    case 8: // $if_end
      __label__ = 9; break;
    case 9: // $for_inc11
      var $21=$i;
      var $inc12=(($21+1)|0);
      $i=$inc12;
      __label__ = 1; break;
    case 10: // $for_end13
      $j=0;
      __label__ = 11; break;
    case 11: // $for_cond14
      var $22=$j;
      var $23=$nbDim_addr;
      var $cmp15=(($22)|0) < (($23)|0);
      if ($cmp15) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body17
      var $24=$j;
      var $25=$x_addr;
      var $arrayidx18=(($25+($24<<2))|0);
      var $26=HEAPF32[(($arrayidx18)>>2)];
      var $27=$best_id;
      var $28=$nbDim_addr;
      var $mul19=(($27*$28)|0);
      var $29=$j;
      var $add20=(($mul19+$29)|0);
      var $30=$cdbk_addr;
      var $arrayidx21=(($30+$add20)|0);
      var $31=HEAP8[($arrayidx21)];
      var $conv22=(($31 << 24) >> 24);
      var $sub23=$26-$conv22;
      var $32=$j;
      var $33=$x_addr;
      var $arrayidx24=(($33+($32<<2))|0);
      HEAPF32[(($arrayidx24)>>2)]=$sub23;
      __label__ = 13; break;
    case 13: // $for_inc25
      var $34=$j;
      var $inc26=(($34+1)|0);
      $j=$inc26;
      __label__ = 11; break;
    case 14: // $for_end27
      var $35=$best_id;
      ;
      return $35;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_weight_quant["X"]=1;

function _lsp_unquant_nb($lsp, $order, $bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      $lsp_addr=$lsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $conv=(($2)|0);
      var $mul=$conv*0.25;
      var $add=$mul+0.25;
      var $conv1=$add;
      var $3=$i;
      var $4=$lsp_addr;
      var $arrayidx=(($4+($3<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$conv1;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $6=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($6, 6);
      $id=$call;
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $7=$i;
      var $cmp3=(($7)|0) < 10;
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body5
      var $8=$i;
      var $9=$lsp_addr;
      var $arrayidx6=(($9+($8<<2))|0);
      var $10=HEAPF32[(($arrayidx6)>>2)];
      var $conv7=$10;
      var $11=$id;
      var $mul8=(($11*10)|0);
      var $12=$i;
      var $add9=(($mul8+$12)|0);
      var $arrayidx10=(((STRING_TABLE._cdbk_nb)+$add9)|0);
      var $13=HEAP8[($arrayidx10)];
      var $conv11=(($13 << 24) >> 24);
      var $conv12=(($conv11)|0);
      var $mul13=$conv12*0.0039062;
      var $add14=$conv7+$mul13;
      var $conv15=$add14;
      var $14=$i;
      var $15=$lsp_addr;
      var $arrayidx16=(($15+($14<<2))|0);
      HEAPF32[(($arrayidx16)>>2)]=$conv15;
      __label__ = 7; break;
    case 7: // $for_inc17
      var $16=$i;
      var $inc18=(($16+1)|0);
      $i=$inc18;
      __label__ = 5; break;
    case 8: // $for_end19
      var $17=$bits_addr;
      var $call20=_speex_bits_unpack_unsigned($17, 6);
      $id=$call20;
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond21
      var $18=$i;
      var $cmp22=(($18)|0) < 5;
      if ($cmp22) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body24
      var $19=$i;
      var $20=$lsp_addr;
      var $arrayidx25=(($20+($19<<2))|0);
      var $21=HEAPF32[(($arrayidx25)>>2)];
      var $conv26=$21;
      var $22=$id;
      var $mul27=(($22*5)|0);
      var $23=$i;
      var $add28=(($mul27+$23)|0);
      var $arrayidx29=(((STRING_TABLE._cdbk_nb_low1)+$add28)|0);
      var $24=HEAP8[($arrayidx29)];
      var $conv30=(($24 << 24) >> 24);
      var $conv31=(($conv30)|0);
      var $mul32=$conv31*0.0019531;
      var $add33=$conv26+$mul32;
      var $conv34=$add33;
      var $25=$i;
      var $26=$lsp_addr;
      var $arrayidx35=(($26+($25<<2))|0);
      HEAPF32[(($arrayidx35)>>2)]=$conv34;
      __label__ = 11; break;
    case 11: // $for_inc36
      var $27=$i;
      var $inc37=(($27+1)|0);
      $i=$inc37;
      __label__ = 9; break;
    case 12: // $for_end38
      var $28=$bits_addr;
      var $call39=_speex_bits_unpack_unsigned($28, 6);
      $id=$call39;
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond40
      var $29=$i;
      var $cmp41=(($29)|0) < 5;
      if ($cmp41) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body43
      var $30=$i;
      var $31=$lsp_addr;
      var $arrayidx44=(($31+($30<<2))|0);
      var $32=HEAPF32[(($arrayidx44)>>2)];
      var $conv45=$32;
      var $33=$id;
      var $mul46=(($33*5)|0);
      var $34=$i;
      var $add47=(($mul46+$34)|0);
      var $arrayidx48=(((STRING_TABLE._cdbk_nb_low2)+$add47)|0);
      var $35=HEAP8[($arrayidx48)];
      var $conv49=(($35 << 24) >> 24);
      var $conv50=(($conv49)|0);
      var $mul51=$conv50*0.00097656;
      var $add52=$conv45+$mul51;
      var $conv53=$add52;
      var $36=$i;
      var $37=$lsp_addr;
      var $arrayidx54=(($37+($36<<2))|0);
      HEAPF32[(($arrayidx54)>>2)]=$conv53;
      __label__ = 15; break;
    case 15: // $for_inc55
      var $38=$i;
      var $inc56=(($38+1)|0);
      $i=$inc56;
      __label__ = 13; break;
    case 16: // $for_end57
      var $39=$bits_addr;
      var $call58=_speex_bits_unpack_unsigned($39, 6);
      $id=$call58;
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond59
      var $40=$i;
      var $cmp60=(($40)|0) < 5;
      if ($cmp60) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body62
      var $41=$i;
      var $add63=(($41+5)|0);
      var $42=$lsp_addr;
      var $arrayidx64=(($42+($add63<<2))|0);
      var $43=HEAPF32[(($arrayidx64)>>2)];
      var $conv65=$43;
      var $44=$id;
      var $mul66=(($44*5)|0);
      var $45=$i;
      var $add67=(($mul66+$45)|0);
      var $arrayidx68=(((STRING_TABLE._cdbk_nb_high1)+$add67)|0);
      var $46=HEAP8[($arrayidx68)];
      var $conv69=(($46 << 24) >> 24);
      var $conv70=(($conv69)|0);
      var $mul71=$conv70*0.0019531;
      var $add72=$conv65+$mul71;
      var $conv73=$add72;
      var $47=$i;
      var $add74=(($47+5)|0);
      var $48=$lsp_addr;
      var $arrayidx75=(($48+($add74<<2))|0);
      HEAPF32[(($arrayidx75)>>2)]=$conv73;
      __label__ = 19; break;
    case 19: // $for_inc76
      var $49=$i;
      var $inc77=(($49+1)|0);
      $i=$inc77;
      __label__ = 17; break;
    case 20: // $for_end78
      var $50=$bits_addr;
      var $call79=_speex_bits_unpack_unsigned($50, 6);
      $id=$call79;
      $i=0;
      __label__ = 21; break;
    case 21: // $for_cond80
      var $51=$i;
      var $cmp81=(($51)|0) < 5;
      if ($cmp81) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body83
      var $52=$i;
      var $add84=(($52+5)|0);
      var $53=$lsp_addr;
      var $arrayidx85=(($53+($add84<<2))|0);
      var $54=HEAPF32[(($arrayidx85)>>2)];
      var $conv86=$54;
      var $55=$id;
      var $mul87=(($55*5)|0);
      var $56=$i;
      var $add88=(($mul87+$56)|0);
      var $arrayidx89=(((STRING_TABLE._cdbk_nb_high2)+$add88)|0);
      var $57=HEAP8[($arrayidx89)];
      var $conv90=(($57 << 24) >> 24);
      var $conv91=(($conv90)|0);
      var $mul92=$conv91*0.00097656;
      var $add93=$conv86+$mul92;
      var $conv94=$add93;
      var $58=$i;
      var $add95=(($58+5)|0);
      var $59=$lsp_addr;
      var $arrayidx96=(($59+($add95<<2))|0);
      HEAPF32[(($arrayidx96)>>2)]=$conv94;
      __label__ = 23; break;
    case 23: // $for_inc97
      var $60=$i;
      var $inc98=(($60+1)|0);
      $i=$inc98;
      __label__ = 21; break;
    case 24: // $for_end99
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_unquant_nb["X"]=1;

function _lsp_quant_lbr($lsp, $qlsp, $order, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $qlsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      var $quant_weight=__stackBase__;
      $lsp_addr=$lsp;
      $qlsp_addr=$qlsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$lsp_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $6=$qlsp_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$4;
      __label__ = 3; break;
    case 3: // $for_inc
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $8=$qlsp_addr;
      var $arraydecay=(($quant_weight)|0);
      var $9=$order_addr;
      _compute_quant_weights($8, $arraydecay, $9);
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $10=$i;
      var $11=$order_addr;
      var $cmp3=(($10)|0) < (($11)|0);
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body4
      var $12=$i;
      var $13=$qlsp_addr;
      var $arrayidx5=(($13+($12<<2))|0);
      var $14=HEAPF32[(($arrayidx5)>>2)];
      var $conv=$14;
      var $15=$i;
      var $conv6=(($15)|0);
      var $mul=$conv6*0.25;
      var $add=$mul+0.25;
      var $sub=$conv-$add;
      var $conv7=$sub;
      var $16=$i;
      var $17=$qlsp_addr;
      var $arrayidx8=(($17+($16<<2))|0);
      HEAPF32[(($arrayidx8)>>2)]=$conv7;
      __label__ = 7; break;
    case 7: // $for_inc9
      var $18=$i;
      var $inc10=(($18+1)|0);
      $i=$inc10;
      __label__ = 5; break;
    case 8: // $for_end11
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond12
      var $19=$i;
      var $20=$order_addr;
      var $cmp13=(($19)|0) < (($20)|0);
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body15
      var $21=$i;
      var $22=$qlsp_addr;
      var $arrayidx16=(($22+($21<<2))|0);
      var $23=HEAPF32[(($arrayidx16)>>2)];
      var $conv17=$23;
      var $mul18=$conv17*256;
      var $conv19=$mul18;
      var $24=$i;
      var $25=$qlsp_addr;
      var $arrayidx20=(($25+($24<<2))|0);
      HEAPF32[(($arrayidx20)>>2)]=$conv19;
      __label__ = 11; break;
    case 11: // $for_inc21
      var $26=$i;
      var $inc22=(($26+1)|0);
      $i=$inc22;
      __label__ = 9; break;
    case 12: // $for_end23
      var $27=$qlsp_addr;
      var $28=$order_addr;
      var $call=_lsp_quant($27, ((STRING_TABLE._cdbk_nb)|0), 64, $28);
      $id=$call;
      var $29=$bits_addr;
      var $30=$id;
      _speex_bits_pack($29, $30, 6);
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond24
      var $31=$i;
      var $32=$order_addr;
      var $cmp25=(($31)|0) < (($32)|0);
      if ($cmp25) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body27
      var $33=$i;
      var $34=$qlsp_addr;
      var $arrayidx28=(($34+($33<<2))|0);
      var $35=HEAPF32[(($arrayidx28)>>2)];
      var $mul29=$35*2;
      HEAPF32[(($arrayidx28)>>2)]=$mul29;
      __label__ = 15; break;
    case 15: // $for_inc30
      var $36=$i;
      var $inc31=(($36+1)|0);
      $i=$inc31;
      __label__ = 13; break;
    case 16: // $for_end32
      var $37=$qlsp_addr;
      var $arraydecay33=(($quant_weight)|0);
      var $call34=_lsp_weight_quant($37, $arraydecay33, ((STRING_TABLE._cdbk_nb_low1)|0), 64, 5);
      $id=$call34;
      var $38=$bits_addr;
      var $39=$id;
      _speex_bits_pack($38, $39, 6);
      var $40=$qlsp_addr;
      var $add_ptr=(($40+20)|0);
      var $arraydecay35=(($quant_weight)|0);
      var $add_ptr36=(($arraydecay35+20)|0);
      var $call37=_lsp_weight_quant($add_ptr, $add_ptr36, ((STRING_TABLE._cdbk_nb_high1)|0), 64, 5);
      $id=$call37;
      var $41=$bits_addr;
      var $42=$id;
      _speex_bits_pack($41, $42, 6);
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond38
      var $43=$i;
      var $44=$order_addr;
      var $cmp39=(($43)|0) < (($44)|0);
      if ($cmp39) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body41
      var $45=$i;
      var $46=$qlsp_addr;
      var $arrayidx42=(($46+($45<<2))|0);
      var $47=HEAPF32[(($arrayidx42)>>2)];
      var $conv43=$47;
      var $mul44=$conv43*0.0019531;
      var $conv45=$mul44;
      var $48=$i;
      var $49=$qlsp_addr;
      var $arrayidx46=(($49+($48<<2))|0);
      HEAPF32[(($arrayidx46)>>2)]=$conv45;
      __label__ = 19; break;
    case 19: // $for_inc47
      var $50=$i;
      var $inc48=(($50+1)|0);
      $i=$inc48;
      __label__ = 17; break;
    case 20: // $for_end49
      $i=0;
      __label__ = 21; break;
    case 21: // $for_cond50
      var $51=$i;
      var $52=$order_addr;
      var $cmp51=(($51)|0) < (($52)|0);
      if ($cmp51) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body53
      var $53=$i;
      var $54=$lsp_addr;
      var $arrayidx54=(($54+($53<<2))|0);
      var $55=HEAPF32[(($arrayidx54)>>2)];
      var $56=$i;
      var $57=$qlsp_addr;
      var $arrayidx55=(($57+($56<<2))|0);
      var $58=HEAPF32[(($arrayidx55)>>2)];
      var $sub56=$55-$58;
      var $59=$i;
      var $60=$qlsp_addr;
      var $arrayidx57=(($60+($59<<2))|0);
      HEAPF32[(($arrayidx57)>>2)]=$sub56;
      __label__ = 23; break;
    case 23: // $for_inc58
      var $61=$i;
      var $inc59=(($61+1)|0);
      $i=$inc59;
      __label__ = 21; break;
    case 24: // $for_end60
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_quant_lbr["X"]=1;

function _lsp_unquant_lbr($lsp, $order, $bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      $lsp_addr=$lsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $conv=(($2)|0);
      var $mul=$conv*0.25;
      var $add=$mul+0.25;
      var $conv1=$add;
      var $3=$i;
      var $4=$lsp_addr;
      var $arrayidx=(($4+($3<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$conv1;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $6=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($6, 6);
      $id=$call;
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $7=$i;
      var $cmp3=(($7)|0) < 10;
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body5
      var $8=$id;
      var $mul6=(($8*10)|0);
      var $9=$i;
      var $add7=(($mul6+$9)|0);
      var $arrayidx8=(((STRING_TABLE._cdbk_nb)+$add7)|0);
      var $10=HEAP8[($arrayidx8)];
      var $conv9=(($10 << 24) >> 24);
      var $conv10=(($conv9)|0);
      var $mul11=$conv10*0.0039062;
      var $11=$i;
      var $12=$lsp_addr;
      var $arrayidx12=(($12+($11<<2))|0);
      var $13=HEAPF32[(($arrayidx12)>>2)];
      var $conv13=$13;
      var $add14=$conv13+$mul11;
      var $conv15=$add14;
      HEAPF32[(($arrayidx12)>>2)]=$conv15;
      __label__ = 7; break;
    case 7: // $for_inc16
      var $14=$i;
      var $inc17=(($14+1)|0);
      $i=$inc17;
      __label__ = 5; break;
    case 8: // $for_end18
      var $15=$bits_addr;
      var $call19=_speex_bits_unpack_unsigned($15, 6);
      $id=$call19;
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond20
      var $16=$i;
      var $cmp21=(($16)|0) < 5;
      if ($cmp21) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body23
      var $17=$id;
      var $mul24=(($17*5)|0);
      var $18=$i;
      var $add25=(($mul24+$18)|0);
      var $arrayidx26=(((STRING_TABLE._cdbk_nb_low1)+$add25)|0);
      var $19=HEAP8[($arrayidx26)];
      var $conv27=(($19 << 24) >> 24);
      var $conv28=(($conv27)|0);
      var $mul29=$conv28*0.0019531;
      var $20=$i;
      var $21=$lsp_addr;
      var $arrayidx30=(($21+($20<<2))|0);
      var $22=HEAPF32[(($arrayidx30)>>2)];
      var $conv31=$22;
      var $add32=$conv31+$mul29;
      var $conv33=$add32;
      HEAPF32[(($arrayidx30)>>2)]=$conv33;
      __label__ = 11; break;
    case 11: // $for_inc34
      var $23=$i;
      var $inc35=(($23+1)|0);
      $i=$inc35;
      __label__ = 9; break;
    case 12: // $for_end36
      var $24=$bits_addr;
      var $call37=_speex_bits_unpack_unsigned($24, 6);
      $id=$call37;
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond38
      var $25=$i;
      var $cmp39=(($25)|0) < 5;
      if ($cmp39) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body41
      var $26=$id;
      var $mul42=(($26*5)|0);
      var $27=$i;
      var $add43=(($mul42+$27)|0);
      var $arrayidx44=(((STRING_TABLE._cdbk_nb_high1)+$add43)|0);
      var $28=HEAP8[($arrayidx44)];
      var $conv45=(($28 << 24) >> 24);
      var $conv46=(($conv45)|0);
      var $mul47=$conv46*0.0019531;
      var $29=$i;
      var $add48=(($29+5)|0);
      var $30=$lsp_addr;
      var $arrayidx49=(($30+($add48<<2))|0);
      var $31=HEAPF32[(($arrayidx49)>>2)];
      var $conv50=$31;
      var $add51=$conv50+$mul47;
      var $conv52=$add51;
      HEAPF32[(($arrayidx49)>>2)]=$conv52;
      __label__ = 15; break;
    case 15: // $for_inc53
      var $32=$i;
      var $inc54=(($32+1)|0);
      $i=$inc54;
      __label__ = 13; break;
    case 16: // $for_end55
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_unquant_lbr["X"]=1;

function _lsp_quant_high($lsp, $qlsp, $order, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $qlsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      var $quant_weight=__stackBase__;
      $lsp_addr=$lsp;
      $qlsp_addr=$qlsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $3=$lsp_addr;
      var $arrayidx=(($3+($2<<2))|0);
      var $4=HEAPF32[(($arrayidx)>>2)];
      var $5=$i;
      var $6=$qlsp_addr;
      var $arrayidx1=(($6+($5<<2))|0);
      HEAPF32[(($arrayidx1)>>2)]=$4;
      __label__ = 3; break;
    case 3: // $for_inc
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $8=$qlsp_addr;
      var $arraydecay=(($quant_weight)|0);
      var $9=$order_addr;
      _compute_quant_weights($8, $arraydecay, $9);
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $10=$i;
      var $11=$order_addr;
      var $cmp3=(($10)|0) < (($11)|0);
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body4
      var $12=$i;
      var $13=$qlsp_addr;
      var $arrayidx5=(($13+($12<<2))|0);
      var $14=HEAPF32[(($arrayidx5)>>2)];
      var $conv=$14;
      var $15=$i;
      var $conv6=(($15)|0);
      var $mul=$conv6*0.3125;
      var $add=$mul+0.75;
      var $sub=$conv-$add;
      var $conv7=$sub;
      var $16=$i;
      var $17=$qlsp_addr;
      var $arrayidx8=(($17+($16<<2))|0);
      HEAPF32[(($arrayidx8)>>2)]=$conv7;
      __label__ = 7; break;
    case 7: // $for_inc9
      var $18=$i;
      var $inc10=(($18+1)|0);
      $i=$inc10;
      __label__ = 5; break;
    case 8: // $for_end11
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond12
      var $19=$i;
      var $20=$order_addr;
      var $cmp13=(($19)|0) < (($20)|0);
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body15
      var $21=$i;
      var $22=$qlsp_addr;
      var $arrayidx16=(($22+($21<<2))|0);
      var $23=HEAPF32[(($arrayidx16)>>2)];
      var $conv17=$23;
      var $mul18=$conv17*256;
      var $conv19=$mul18;
      var $24=$i;
      var $25=$qlsp_addr;
      var $arrayidx20=(($25+($24<<2))|0);
      HEAPF32[(($arrayidx20)>>2)]=$conv19;
      __label__ = 11; break;
    case 11: // $for_inc21
      var $26=$i;
      var $inc22=(($26+1)|0);
      $i=$inc22;
      __label__ = 9; break;
    case 12: // $for_end23
      var $27=$qlsp_addr;
      var $28=$order_addr;
      var $call=_lsp_quant($27, ((STRING_TABLE._high_lsp_cdbk)|0), 64, $28);
      $id=$call;
      var $29=$bits_addr;
      var $30=$id;
      _speex_bits_pack($29, $30, 6);
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond24
      var $31=$i;
      var $32=$order_addr;
      var $cmp25=(($31)|0) < (($32)|0);
      if ($cmp25) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body27
      var $33=$i;
      var $34=$qlsp_addr;
      var $arrayidx28=(($34+($33<<2))|0);
      var $35=HEAPF32[(($arrayidx28)>>2)];
      var $mul29=$35*2;
      HEAPF32[(($arrayidx28)>>2)]=$mul29;
      __label__ = 15; break;
    case 15: // $for_inc30
      var $36=$i;
      var $inc31=(($36+1)|0);
      $i=$inc31;
      __label__ = 13; break;
    case 16: // $for_end32
      var $37=$qlsp_addr;
      var $arraydecay33=(($quant_weight)|0);
      var $38=$order_addr;
      var $call34=_lsp_weight_quant($37, $arraydecay33, ((STRING_TABLE._high_lsp_cdbk2)|0), 64, $38);
      $id=$call34;
      var $39=$bits_addr;
      var $40=$id;
      _speex_bits_pack($39, $40, 6);
      $i=0;
      __label__ = 17; break;
    case 17: // $for_cond35
      var $41=$i;
      var $42=$order_addr;
      var $cmp36=(($41)|0) < (($42)|0);
      if ($cmp36) { __label__ = 18; break; } else { __label__ = 20; break; }
    case 18: // $for_body38
      var $43=$i;
      var $44=$qlsp_addr;
      var $arrayidx39=(($44+($43<<2))|0);
      var $45=HEAPF32[(($arrayidx39)>>2)];
      var $conv40=$45;
      var $mul41=$conv40*0.0019531;
      var $conv42=$mul41;
      var $46=$i;
      var $47=$qlsp_addr;
      var $arrayidx43=(($47+($46<<2))|0);
      HEAPF32[(($arrayidx43)>>2)]=$conv42;
      __label__ = 19; break;
    case 19: // $for_inc44
      var $48=$i;
      var $inc45=(($48+1)|0);
      $i=$inc45;
      __label__ = 17; break;
    case 20: // $for_end46
      $i=0;
      __label__ = 21; break;
    case 21: // $for_cond47
      var $49=$i;
      var $50=$order_addr;
      var $cmp48=(($49)|0) < (($50)|0);
      if ($cmp48) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body50
      var $51=$i;
      var $52=$lsp_addr;
      var $arrayidx51=(($52+($51<<2))|0);
      var $53=HEAPF32[(($arrayidx51)>>2)];
      var $54=$i;
      var $55=$qlsp_addr;
      var $arrayidx52=(($55+($54<<2))|0);
      var $56=HEAPF32[(($arrayidx52)>>2)];
      var $sub53=$53-$56;
      var $57=$i;
      var $58=$qlsp_addr;
      var $arrayidx54=(($58+($57<<2))|0);
      HEAPF32[(($arrayidx54)>>2)]=$sub53;
      __label__ = 23; break;
    case 23: // $for_inc55
      var $59=$i;
      var $inc56=(($59+1)|0);
      $i=$inc56;
      __label__ = 21; break;
    case 24: // $for_end57
      STACKTOP = __stackBase__;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_quant_high["X"]=1;

function _lsp_unquant_high($lsp, $order, $bits) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $lsp_addr;
      var $order_addr;
      var $bits_addr;
      var $i;
      var $id;
      $lsp_addr=$lsp;
      $order_addr=$order;
      $bits_addr=$bits;
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $1=$order_addr;
      var $cmp=(($0)|0) < (($1)|0);
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $2=$i;
      var $conv=(($2)|0);
      var $mul=$conv*0.3125;
      var $add=$mul+0.75;
      var $conv1=$add;
      var $3=$i;
      var $4=$lsp_addr;
      var $arrayidx=(($4+($3<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$conv1;
      __label__ = 3; break;
    case 3: // $for_inc
      var $5=$i;
      var $inc=(($5+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      var $6=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($6, 6);
      $id=$call;
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $7=$i;
      var $8=$order_addr;
      var $cmp3=(($7)|0) < (($8)|0);
      if ($cmp3) { __label__ = 6; break; } else { __label__ = 8; break; }
    case 6: // $for_body5
      var $9=$id;
      var $10=$order_addr;
      var $mul6=(($9*$10)|0);
      var $11=$i;
      var $add7=(($mul6+$11)|0);
      var $arrayidx8=(((STRING_TABLE._high_lsp_cdbk)+$add7)|0);
      var $12=HEAP8[($arrayidx8)];
      var $conv9=(($12 << 24) >> 24);
      var $conv10=(($conv9)|0);
      var $mul11=$conv10*0.0039062;
      var $13=$i;
      var $14=$lsp_addr;
      var $arrayidx12=(($14+($13<<2))|0);
      var $15=HEAPF32[(($arrayidx12)>>2)];
      var $conv13=$15;
      var $add14=$conv13+$mul11;
      var $conv15=$add14;
      HEAPF32[(($arrayidx12)>>2)]=$conv15;
      __label__ = 7; break;
    case 7: // $for_inc16
      var $16=$i;
      var $inc17=(($16+1)|0);
      $i=$inc17;
      __label__ = 5; break;
    case 8: // $for_end18
      var $17=$bits_addr;
      var $call19=_speex_bits_unpack_unsigned($17, 6);
      $id=$call19;
      $i=0;
      __label__ = 9; break;
    case 9: // $for_cond20
      var $18=$i;
      var $19=$order_addr;
      var $cmp21=(($18)|0) < (($19)|0);
      if ($cmp21) { __label__ = 10; break; } else { __label__ = 12; break; }
    case 10: // $for_body23
      var $20=$id;
      var $21=$order_addr;
      var $mul24=(($20*$21)|0);
      var $22=$i;
      var $add25=(($mul24+$22)|0);
      var $arrayidx26=(((STRING_TABLE._high_lsp_cdbk2)+$add25)|0);
      var $23=HEAP8[($arrayidx26)];
      var $conv27=(($23 << 24) >> 24);
      var $conv28=(($conv27)|0);
      var $mul29=$conv28*0.0019531;
      var $24=$i;
      var $25=$lsp_addr;
      var $arrayidx30=(($25+($24<<2))|0);
      var $26=HEAPF32[(($arrayidx30)>>2)];
      var $conv31=$26;
      var $add32=$conv31+$mul29;
      var $conv33=$add32;
      HEAPF32[(($arrayidx30)>>2)]=$conv33;
      __label__ = 11; break;
    case 11: // $for_inc34
      var $27=$i;
      var $inc35=(($27+1)|0);
      $i=$inc35;
      __label__ = 9; break;
    case 12: // $for_end36
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_lsp_unquant_high["X"]=1;

function _sb_encoder_init($m) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $i;
      var $tmp=__stackBase__;
      var $st;
      var $mode;
      $m_addr=$m;
      var $call=_speex_alloc78(172);
      var $0=$call;
      $st=$0;
      var $1=$st;
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $if_then
      $retval=0;
      __label__ = 7; break;
    case 2: // $if_end
      var $2=$m_addr;
      var $3=$st;
      var $mode3=(($3)|0);
      HEAP32[(($mode3)>>2)]=$2;
      var $4=$m_addr;
      var $mode4=(($4)|0);
      var $5=HEAP32[(($mode4)>>2)];
      var $6=$5;
      $mode=$6;
      var $7=$mode;
      var $nb_mode=(($7)|0);
      var $8=HEAP32[(($nb_mode)>>2)];
      var $call5=_speex_encoder_init($8);
      var $9=$st;
      var $st_low=(($9+4)|0);
      HEAP32[(($st_low)>>2)]=$call5;
      var $10=$st;
      var $stack=(($10+48)|0);
      HEAP32[(($stack)>>2)]=0;
      var $11=$mode;
      var $frameSize=(($11+4)|0);
      var $12=HEAP32[(($frameSize)>>2)];
      var $mul=((($12<<1))|0);
      var $13=$st;
      var $full_frame_size=(($13+8)|0);
      HEAP32[(($full_frame_size)>>2)]=$mul;
      var $14=$mode;
      var $frameSize6=(($14+4)|0);
      var $15=HEAP32[(($frameSize6)>>2)];
      var $16=$st;
      var $frame_size=(($16+12)|0);
      HEAP32[(($frame_size)>>2)]=$15;
      var $17=$mode;
      var $subframeSize=(($17+8)|0);
      var $18=HEAP32[(($subframeSize)>>2)];
      var $19=$st;
      var $subframeSize7=(($19+16)|0);
      HEAP32[(($subframeSize7)>>2)]=$18;
      var $20=$mode;
      var $frameSize8=(($20+4)|0);
      var $21=HEAP32[(($frameSize8)>>2)];
      var $22=$mode;
      var $subframeSize9=(($22+8)|0);
      var $23=HEAP32[(($subframeSize9)>>2)];
      var $div=(((($21)|0)/(($23)|0))|0);
      var $24=$st;
      var $nbSubframes=(($24+20)|0);
      HEAP32[(($nbSubframes)>>2)]=$div;
      var $25=$st;
      var $frame_size10=(($25+12)|0);
      var $26=HEAP32[(($frame_size10)>>2)];
      var $27=$st;
      var $subframeSize11=(($27+16)|0);
      var $28=HEAP32[(($subframeSize11)>>2)];
      var $add=(($26+$28)|0);
      var $29=$st;
      var $windowSize=(($29+24)|0);
      HEAP32[(($windowSize)>>2)]=$add;
      var $30=$mode;
      var $lpcSize=(($30+12)|0);
      var $31=HEAP32[(($lpcSize)>>2)];
      var $32=$st;
      var $lpcSize12=(($32+28)|0);
      HEAP32[(($lpcSize12)>>2)]=$31;
      var $33=$st;
      var $encode_submode=(($33+148)|0);
      HEAP32[(($encode_submode)>>2)]=1;
      var $34=$mode;
      var $submodes=(($34+32)|0);
      var $arraydecay=(($submodes)|0);
      var $35=$st;
      var $submodes13=(($35+152)|0);
      HEAP32[(($submodes13)>>2)]=$arraydecay;
      var $36=$mode;
      var $defaultSubmode=(($36+64)|0);
      var $37=HEAP32[(($defaultSubmode)>>2)];
      var $38=$st;
      var $submodeID=(($38+156)|0);
      HEAP32[(($submodeID)>>2)]=$37;
      var $39=$st;
      var $submodeSelect=(($39+160)|0);
      HEAP32[(($submodeSelect)>>2)]=$37;
      HEAP32[(($tmp)>>2)]=9;
      var $40=$st;
      var $st_low14=(($40+4)|0);
      var $41=HEAP32[(($st_low14)>>2)];
      var $42=$tmp;
      var $call15=_speex_encoder_ctl($41, 4, $42);
      HEAP32[(($tmp)>>2)]=1;
      var $43=$st;
      var $st_low16=(($43+4)|0);
      var $44=HEAP32[(($st_low16)>>2)];
      var $45=$tmp;
      var $call17=_speex_encoder_ctl($44, 105, $45);
      var $46=$mode;
      var $lpc_floor=(($46+24)|0);
      var $47=HEAPF32[(($lpc_floor)>>2)];
      var $48=$st;
      var $lpc_floor18=(($48+36)|0);
      HEAPF32[(($lpc_floor18)>>2)]=$47;
      var $49=$mode;
      var $gamma1=(($49+16)|0);
      var $50=HEAPF32[(($gamma1)>>2)];
      var $51=$st;
      var $gamma119=(($51+40)|0);
      HEAPF32[(($gamma119)>>2)]=$50;
      var $52=$mode;
      var $gamma2=(($52+20)|0);
      var $53=HEAPF32[(($gamma2)>>2)];
      var $54=$st;
      var $gamma220=(($54+44)|0);
      HEAPF32[(($gamma220)>>2)]=$53;
      var $55=$st;
      var $first=(($55+32)|0);
      HEAP32[(($first)>>2)]=1;
      var $56=$st;
      var $windowSize21=(($56+24)|0);
      var $57=HEAP32[(($windowSize21)>>2)];
      var $58=$st;
      var $frame_size22=(($58+12)|0);
      var $59=HEAP32[(($frame_size22)>>2)];
      var $sub=(($57-$59)|0);
      var $mul23=((($sub<<2))|0);
      var $call24=_speex_alloc78($mul23);
      var $60=$call24;
      var $61=$st;
      var $high=(($61+52)|0);
      HEAP32[(($high)>>2)]=$60;
      var $call25=_speex_alloc78(256);
      var $62=$call25;
      var $63=$st;
      var $h0_mem=(($63+56)|0);
      HEAP32[(($h0_mem)>>2)]=$62;
      var $call26=_speex_alloc78(256);
      var $64=$call26;
      var $65=$st;
      var $h1_mem=(($65+60)|0);
      HEAP32[(($h1_mem)>>2)]=$64;
      var $66=$st;
      var $window=(($66+64)|0);
      HEAP32[(($window)>>2)]=((_lpc_window)|0);
      var $67=$st;
      var $lagWindow=(($67+68)|0);
      HEAP32[(($lagWindow)>>2)]=((_lag_window)|0);
      var $68=$st;
      var $lpcSize27=(($68+28)|0);
      var $69=HEAP32[(($lpcSize27)>>2)];
      var $mul28=((($69<<2))|0);
      var $call29=_speex_alloc78($mul28);
      var $70=$call29;
      var $71=$st;
      var $old_lsp=(($71+72)|0);
      HEAP32[(($old_lsp)>>2)]=$70;
      var $72=$st;
      var $lpcSize30=(($72+28)|0);
      var $73=HEAP32[(($lpcSize30)>>2)];
      var $mul31=((($73<<2))|0);
      var $call32=_speex_alloc78($mul31);
      var $74=$call32;
      var $75=$st;
      var $old_qlsp=(($75+76)|0);
      HEAP32[(($old_qlsp)>>2)]=$74;
      var $76=$st;
      var $lpcSize33=(($76+28)|0);
      var $77=HEAP32[(($lpcSize33)>>2)];
      var $mul34=((($77<<2))|0);
      var $call35=_speex_alloc78($mul34);
      var $78=$call35;
      var $79=$st;
      var $interp_qlpc=(($79+80)|0);
      HEAP32[(($interp_qlpc)>>2)]=$78;
      var $80=$st;
      var $nbSubframes36=(($80+20)|0);
      var $81=HEAP32[(($nbSubframes36)>>2)];
      var $mul37=((($81<<2))|0);
      var $call38=_speex_alloc78($mul37);
      var $82=$call38;
      var $83=$st;
      var $pi_gain=(($83+96)|0);
      HEAP32[(($pi_gain)>>2)]=$82;
      var $84=$st;
      var $nbSubframes39=(($84+20)|0);
      var $85=HEAP32[(($nbSubframes39)>>2)];
      var $mul40=((($85<<2))|0);
      var $call41=_speex_alloc78($mul40);
      var $86=$call41;
      var $87=$st;
      var $exc_rms=(($87+100)|0);
      HEAP32[(($exc_rms)>>2)]=$86;
      var $88=$st;
      var $innov_rms_save=(($88+104)|0);
      HEAP32[(($innov_rms_save)>>2)]=0;
      var $89=$st;
      var $lpcSize42=(($89+28)|0);
      var $90=HEAP32[(($lpcSize42)>>2)];
      var $mul43=((($90<<2))|0);
      var $call44=_speex_alloc78($mul43);
      var $91=$call44;
      var $92=$st;
      var $mem_sp=(($92+84)|0);
      HEAP32[(($mem_sp)>>2)]=$91;
      var $93=$st;
      var $lpcSize45=(($93+28)|0);
      var $94=HEAP32[(($lpcSize45)>>2)];
      var $mul46=((($94<<2))|0);
      var $call47=_speex_alloc78($mul46);
      var $95=$call47;
      var $96=$st;
      var $mem_sp2=(($96+88)|0);
      HEAP32[(($mem_sp2)>>2)]=$95;
      var $97=$st;
      var $lpcSize48=(($97+28)|0);
      var $98=HEAP32[(($lpcSize48)>>2)];
      var $mul49=((($98<<2))|0);
      var $call50=_speex_alloc78($mul49);
      var $99=$call50;
      var $100=$st;
      var $mem_sw=(($100+92)|0);
      HEAP32[(($mem_sw)>>2)]=$99;
      $i=0;
      __label__ = 3; break;
    case 3: // $for_cond
      var $101=$i;
      var $102=$st;
      var $lpcSize51=(($102+28)|0);
      var $103=HEAP32[(($lpcSize51)>>2)];
      var $cmp=(($101)|0) < (($103)|0);
      if ($cmp) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $for_body
      var $104=$i;
      var $add52=(($104+1)|0);
      var $conv=(($add52)|0);
      var $mul53=$conv*3.1415927410125732;
      var $105=$st;
      var $lpcSize54=(($105+28)|0);
      var $106=HEAP32[(($lpcSize54)>>2)];
      var $add55=(($106+1)|0);
      var $conv56=(($add55)|0);
      var $div57=$mul53/$conv56;
      var $107=$i;
      var $108=$st;
      var $old_lsp58=(($108+72)|0);
      var $109=HEAP32[(($old_lsp58)>>2)];
      var $arrayidx=(($109+($107<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$div57;
      __label__ = 5; break;
    case 5: // $for_inc
      var $110=$i;
      var $inc=(($110+1)|0);
      $i=$inc;
      __label__ = 3; break;
    case 6: // $for_end
      var $111=$st;
      var $vbr_quality=(($111+108)|0);
      HEAPF32[(($vbr_quality)>>2)]=8;
      var $112=$st;
      var $vbr_enabled=(($112+112)|0);
      HEAP32[(($vbr_enabled)>>2)]=0;
      var $113=$st;
      var $vbr_max=(($113+116)|0);
      HEAP32[(($vbr_max)>>2)]=0;
      var $114=$st;
      var $vbr_max_high=(($114+120)|0);
      HEAP32[(($vbr_max_high)>>2)]=20000;
      var $115=$st;
      var $vad_enabled=(($115+140)|0);
      HEAP32[(($vad_enabled)>>2)]=0;
      var $116=$st;
      var $abr_enabled=(($116+124)|0);
      HEAP32[(($abr_enabled)>>2)]=0;
      var $117=$st;
      var $relative_quality=(($117+144)|0);
      HEAPF32[(($relative_quality)>>2)]=0;
      var $118=$st;
      var $complexity=(($118+164)|0);
      HEAP32[(($complexity)>>2)]=2;
      var $119=$st;
      var $st_low59=(($119+4)|0);
      var $120=HEAP32[(($st_low59)>>2)];
      var $121=$st;
      var $sampling_rate=(($121+168)|0);
      var $122=$sampling_rate;
      var $call60=_speex_encoder_ctl($120, 25, $122);
      var $123=$st;
      var $sampling_rate61=(($123+168)|0);
      var $124=HEAP32[(($sampling_rate61)>>2)];
      var $mul62=((($124<<1))|0);
      HEAP32[(($sampling_rate61)>>2)]=$mul62;
      var $125=$st;
      var $126=$125;
      $retval=$126;
      __label__ = 7; break;
    case 7: // $return
      var $127=$retval;
      STACKTOP = __stackBase__;
      return $127;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_encoder_init["X"]=1;

function _speex_alloc78($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_calloc($0, 1);
  ;
  return $call;
}


function _sb_encoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  var $st;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  $st=$1;
  var $2=$st;
  var $st_low=(($2+4)|0);
  var $3=HEAP32[(($st_low)>>2)];
  _speex_encoder_destroy($3);
  var $4=$st;
  var $high=(($4+52)|0);
  var $5=HEAP32[(($high)>>2)];
  var $6=$5;
  _speex_free81($6);
  var $7=$st;
  var $h0_mem=(($7+56)|0);
  var $8=HEAP32[(($h0_mem)>>2)];
  var $9=$8;
  _speex_free81($9);
  var $10=$st;
  var $h1_mem=(($10+60)|0);
  var $11=HEAP32[(($h1_mem)>>2)];
  var $12=$11;
  _speex_free81($12);
  var $13=$st;
  var $old_lsp=(($13+72)|0);
  var $14=HEAP32[(($old_lsp)>>2)];
  var $15=$14;
  _speex_free81($15);
  var $16=$st;
  var $old_qlsp=(($16+76)|0);
  var $17=HEAP32[(($old_qlsp)>>2)];
  var $18=$17;
  _speex_free81($18);
  var $19=$st;
  var $interp_qlpc=(($19+80)|0);
  var $20=HEAP32[(($interp_qlpc)>>2)];
  var $21=$20;
  _speex_free81($21);
  var $22=$st;
  var $pi_gain=(($22+96)|0);
  var $23=HEAP32[(($pi_gain)>>2)];
  var $24=$23;
  _speex_free81($24);
  var $25=$st;
  var $exc_rms=(($25+100)|0);
  var $26=HEAP32[(($exc_rms)>>2)];
  var $27=$26;
  _speex_free81($27);
  var $28=$st;
  var $mem_sp=(($28+84)|0);
  var $29=HEAP32[(($mem_sp)>>2)];
  var $30=$29;
  _speex_free81($30);
  var $31=$st;
  var $mem_sp2=(($31+88)|0);
  var $32=HEAP32[(($mem_sp2)>>2)];
  var $33=$32;
  _speex_free81($33);
  var $34=$st;
  var $mem_sw=(($34+92)|0);
  var $35=HEAP32[(($mem_sw)>>2)];
  var $36=$35;
  _speex_free81($36);
  var $37=$st;
  var $38=$37;
  _speex_free81($38);
  ;
  return;
}
_sb_encoder_destroy["X"]=1;

function _speex_free81($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _free($0);
  ;
  return;
}


function _sb_encode($state, $vin, $bits) {
  var __stackBase__  = STACKTOP; STACKTOP += 12; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $vin_addr;
      var $bits_addr;
      var $st;
      var $i;
      var $roots;
      var $sub;
      var $stack;
      var $low;
      var $high;
      var $mode;
      var $dtx=__stackBase__;
      var $in;
      var $e_low;
      var $e_high;
      var $saved_stack;
      var $saved_stack64;
      var $ratio;
      var $qual_change;
      var $modeid=__stackBase__+4;
      var $v1;
      var $thresh;
      var $bitrate=__stackBase__+8;
      var $modeid276;
      var $cleanup_dest_slot;
      var $sp;
      var $filter_ratio;
      var $offset;
      var $rl;
      var $rh;
      var $eh;
      var $saved_stack372;
      var $g;
      var $el;
      var $quant;
      var $gc;
      var $scale;
      var $el453;
      var $qgc;
      var $tmp_stack;
      var $saved_stack567;
      $state_addr=$state;
      $vin_addr=$vin;
      $bits_addr=$bits;
      var $0=$vin_addr;
      var $1=$0;
      $in=$1;
      $e_low=0;
      $e_high=0;
      var $2=$state_addr;
      var $3=$2;
      $st=$3;
      var $4=$st;
      var $stack1=(($4+48)|0);
      var $5=HEAP32[(($stack1)>>2)];
      $stack=$5;
      var $6=$st;
      var $mode2=(($6)|0);
      var $7=HEAP32[(($mode2)>>2)];
      var $mode3=(($7)|0);
      var $8=HEAP32[(($mode3)>>2)];
      var $9=$8;
      $mode=$9;
      var $10=$in;
      $low=$10;
      var $11=$in;
      var $12=$st;
      var $frame_size=(($12+12)|0);
      var $13=HEAP32[(($frame_size)>>2)];
      var $add_ptr=(($11+($13<<2))|0);
      $high=$add_ptr;
      var $14=$in;
      var $15=$low;
      var $16=$high;
      var $17=$st;
      var $full_frame_size=(($17+8)|0);
      var $18=HEAP32[(($full_frame_size)>>2)];
      var $19=$st;
      var $h0_mem=(($19+56)|0);
      var $20=HEAP32[(($h0_mem)>>2)];
      var $21=$stack;
      _qmf_decomp($14, ((_h0)|0), $15, $16, $18, 64, $20, $21);
      var $22=$st;
      var $vbr_enabled=(($22+112)|0);
      var $23=HEAP32[(($vbr_enabled)>>2)];
      var $tobool=(($23)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $lor_lhs_false
      var $24=$st;
      var $vad_enabled=(($24+140)|0);
      var $25=HEAP32[(($vad_enabled)>>2)];
      var $tobool4=(($25)|0)!=0;
      if ($tobool4) { __label__ = 2; break; } else { __label__ = 3; break; }
    case 2: // $if_then
      var $26=$low;
      var $27=$st;
      var $frame_size5=(($27+12)|0);
      var $28=HEAP32[(($frame_size5)>>2)];
      var $call=_compute_rms16($26, $28);
      $e_low=$call;
      var $29=$high;
      var $30=$st;
      var $frame_size6=(($30+12)|0);
      var $31=HEAP32[(($frame_size6)>>2)];
      var $call7=_compute_rms16($29, $31);
      $e_high=$call7;
      __label__ = 3; break;
    case 3: // $if_end
      var $32=$st;
      var $nbSubframes=(($32+20)|0);
      var $33=HEAP32[(($nbSubframes)>>2)];
      var $34=_llvm_stacksave();
      $saved_stack=$34;
      var $vla=STACKTOP;STACKTOP += $33*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $35=$st;
      var $st_low=(($35+4)|0);
      var $36=HEAP32[(($st_low)>>2)];
      var $37=$vla;
      var $call8=_speex_encoder_ctl($36, 104, $37);
      var $38=$st;
      var $st_low9=(($38+4)|0);
      var $39=HEAP32[(($st_low9)>>2)];
      var $40=$low;
      var $41=$bits_addr;
      var $call10=_speex_encode_native($39, $40, $41);
      var $42=$high;
      var $43=$st;
      var $windowSize=(($43+24)|0);
      var $44=HEAP32[(($windowSize)>>2)];
      var $45=$st;
      var $frame_size11=(($45+12)|0);
      var $46=HEAP32[(($frame_size11)>>2)];
      var $sub12=(($44-$46)|0);
      var $idx_neg=(((-$sub12))|0);
      var $add_ptr13=(($42+($idx_neg<<2))|0);
      $high=$add_ptr13;
      var $47=$high;
      var $48=$47;
      var $49=$st;
      var $high14=(($49+52)|0);
      var $50=HEAP32[(($high14)>>2)];
      var $51=$50;
      var $52=$st;
      var $windowSize15=(($52+24)|0);
      var $53=HEAP32[(($windowSize15)>>2)];
      var $54=$st;
      var $frame_size16=(($54+12)|0);
      var $55=HEAP32[(($frame_size16)>>2)];
      var $sub17=(($53-$55)|0);
      var $mul=((($sub17<<2))|0);
      var $56=$high;
      var $57=$st;
      var $high18=(($57+52)|0);
      var $58=HEAP32[(($high18)>>2)];
      var $sub_ptr_lhs_cast=$56;
      var $sub_ptr_rhs_cast=$58;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/4)|0);
      var $mul19=((0)|0);
      var $add=(($mul+$mul19)|0);
      assert($add % 1 === 0, 'memcpy given ' + $add + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($48, $51, $add, 1);
      var $59=$st;
      var $high20=(($59+52)|0);
      var $60=HEAP32[(($high20)>>2)];
      var $61=$60;
      var $62=$st;
      var $frame_size21=(($62+12)|0);
      var $63=HEAP32[(($frame_size21)>>2)];
      var $64=$high;
      var $arrayidx=(($64+($63<<2))|0);
      var $65=$arrayidx;
      var $66=$st;
      var $windowSize22=(($66+24)|0);
      var $67=HEAP32[(($windowSize22)>>2)];
      var $68=$st;
      var $frame_size23=(($68+12)|0);
      var $69=HEAP32[(($frame_size23)>>2)];
      var $sub24=(($67-$69)|0);
      var $mul25=((($sub24<<2))|0);
      var $70=$st;
      var $high26=(($70+52)|0);
      var $71=HEAP32[(($high26)>>2)];
      var $72=$st;
      var $frame_size27=(($72+12)|0);
      var $73=HEAP32[(($frame_size27)>>2)];
      var $74=$high;
      var $arrayidx28=(($74+($73<<2))|0);
      var $sub_ptr_lhs_cast29=$71;
      var $sub_ptr_rhs_cast30=$arrayidx28;
      var $sub_ptr_sub31=(($sub_ptr_lhs_cast29-$sub_ptr_rhs_cast30)|0);
      var $sub_ptr_div32=(((($sub_ptr_sub31)|0)/4)|0);
      var $mul33=((0)|0);
      var $add34=(($mul25+$mul33)|0);
      assert($add34 % 1 === 0, 'memcpy given ' + $add34 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($61, $65, $add34, 1);
      var $75=$st;
      var $nbSubframes35=(($75+20)|0);
      var $76=HEAP32[(($nbSubframes35)>>2)];
      var $vla36=STACKTOP;STACKTOP += $76*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $77=$st;
      var $nbSubframes37=(($77+20)|0);
      var $78=HEAP32[(($nbSubframes37)>>2)];
      var $vla38=STACKTOP;STACKTOP += $78*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $79=$st;
      var $st_low39=(($79+4)|0);
      var $80=HEAP32[(($st_low39)>>2)];
      var $81=$vla36;
      var $call40=_speex_encoder_ctl($80, 100, $81);
      var $82=$st;
      var $st_low41=(($82+4)|0);
      var $83=HEAP32[(($st_low41)>>2)];
      var $84=$vla38;
      var $call42=_speex_encoder_ctl($83, 101, $84);
      var $85=$st;
      var $st_low43=(($85+4)|0);
      var $86=HEAP32[(($st_low43)>>2)];
      var $87=$dtx;
      var $call44=_speex_encoder_ctl($86, 9, $87);
      var $88=HEAP32[(($dtx)>>2)];
      var $cmp=(($88)|0)==0;
      if ($cmp) { __label__ = 4; break; } else { __label__ = 5; break; }
    case 4: // $if_then45
      HEAP32[(($dtx)>>2)]=1;
      __label__ = 6; break;
    case 5: // $if_else
      HEAP32[(($dtx)>>2)]=0;
      __label__ = 6; break;
    case 6: // $if_end46
      var $89=$st;
      var $lpcSize=(($89+28)|0);
      var $90=HEAP32[(($lpcSize)>>2)];
      var $vla47=STACKTOP;STACKTOP += $90*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $91=$st;
      var $lpcSize48=(($91+28)|0);
      var $92=HEAP32[(($lpcSize48)>>2)];
      var $vla49=STACKTOP;STACKTOP += $92*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $93=$st;
      var $lpcSize50=(($93+28)|0);
      var $94=HEAP32[(($lpcSize50)>>2)];
      var $vla51=STACKTOP;STACKTOP += $94*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $95=$st;
      var $lpcSize52=(($95+28)|0);
      var $96=HEAP32[(($lpcSize52)>>2)];
      var $vla53=STACKTOP;STACKTOP += $96*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $97=$st;
      var $lpcSize54=(($97+28)|0);
      var $98=HEAP32[(($lpcSize54)>>2)];
      var $vla55=STACKTOP;STACKTOP += $98*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $99=$st;
      var $lpcSize56=(($99+28)|0);
      var $100=HEAP32[(($lpcSize56)>>2)];
      var $vla57=STACKTOP;STACKTOP += $100*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $101=$st;
      var $lpcSize58=(($101+28)|0);
      var $102=HEAP32[(($lpcSize58)>>2)];
      var $vla59=STACKTOP;STACKTOP += $102*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $103=$st;
      var $lpcSize60=(($103+28)|0);
      var $104=HEAP32[(($lpcSize60)>>2)];
      var $vla61=STACKTOP;STACKTOP += $104*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $105=$st;
      var $lpcSize62=(($105+28)|0);
      var $106=HEAP32[(($lpcSize62)>>2)];
      var $add63=(($106+1)|0);
      var $107=_llvm_stacksave();
      $saved_stack64=$107;
      var $vla65=STACKTOP;STACKTOP += $add63*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $108=$st;
      var $windowSize66=(($108+24)|0);
      var $109=HEAP32[(($windowSize66)>>2)];
      var $vla67=STACKTOP;STACKTOP += $109*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $110=$st;
      var $subframeSize=(($110+16)|0);
      var $111=HEAP32[(($subframeSize)>>2)];
      var $cmp68=(($111)|0)==80;
      if ($cmp68) { __label__ = 7; break; } else { __label__ = 12; break; }
    case 7: // $if_then69
      $i=0;
      __label__ = 8; break;
    case 8: // $for_cond
      var $112=$i;
      var $113=$st;
      var $windowSize70=(($113+24)|0);
      var $114=HEAP32[(($windowSize70)>>2)];
      var $cmp71=(($112)|0) < (($114)|0);
      if ($cmp71) { __label__ = 9; break; } else { __label__ = 11; break; }
    case 9: // $for_body
      var $115=$i;
      var $116=$high;
      var $arrayidx72=(($116+($115<<2))|0);
      var $117=HEAPF32[(($arrayidx72)>>2)];
      var $118=$i;
      var $shr=$118 >> 1;
      var $119=$st;
      var $window=(($119+64)|0);
      var $120=HEAP32[(($window)>>2)];
      var $arrayidx73=(($120+($shr<<2))|0);
      var $121=HEAPF32[(($arrayidx73)>>2)];
      var $mul74=$117*$121;
      var $122=$i;
      var $arrayidx75=(($vla67+($122<<2))|0);
      HEAPF32[(($arrayidx75)>>2)]=$mul74;
      __label__ = 10; break;
    case 10: // $for_inc
      var $123=$i;
      var $inc=(($123+1)|0);
      $i=$inc;
      __label__ = 8; break;
    case 11: // $for_end
      __label__ = 17; break;
    case 12: // $if_else76
      $i=0;
      __label__ = 13; break;
    case 13: // $for_cond77
      var $124=$i;
      var $125=$st;
      var $windowSize78=(($125+24)|0);
      var $126=HEAP32[(($windowSize78)>>2)];
      var $cmp79=(($124)|0) < (($126)|0);
      if ($cmp79) { __label__ = 14; break; } else { __label__ = 16; break; }
    case 14: // $for_body80
      var $127=$i;
      var $128=$high;
      var $arrayidx81=(($128+($127<<2))|0);
      var $129=HEAPF32[(($arrayidx81)>>2)];
      var $130=$i;
      var $131=$st;
      var $window82=(($131+64)|0);
      var $132=HEAP32[(($window82)>>2)];
      var $arrayidx83=(($132+($130<<2))|0);
      var $133=HEAPF32[(($arrayidx83)>>2)];
      var $mul84=$129*$133;
      var $134=$i;
      var $arrayidx85=(($vla67+($134<<2))|0);
      HEAPF32[(($arrayidx85)>>2)]=$mul84;
      __label__ = 15; break;
    case 15: // $for_inc86
      var $135=$i;
      var $inc87=(($135+1)|0);
      $i=$inc87;
      __label__ = 13; break;
    case 16: // $for_end88
      __label__ = 17; break;
    case 17: // $if_end89
      var $136=$st;
      var $lpcSize90=(($136+28)|0);
      var $137=HEAP32[(($lpcSize90)>>2)];
      var $add91=(($137+1)|0);
      var $138=$st;
      var $windowSize92=(($138+24)|0);
      var $139=HEAP32[(($windowSize92)>>2)];
      __spx_autocorr($vla67, $vla65, $add91, $139);
      var $arrayidx93=(($vla65)|0);
      var $140=HEAPF32[(($arrayidx93)>>2)];
      var $arrayidx94=(($vla65)|0);
      var $141=HEAPF32[(($arrayidx94)>>2)];
      var $142=$st;
      var $lpc_floor=(($142+36)|0);
      var $143=HEAPF32[(($lpc_floor)>>2)];
      var $mul95=$141*$143;
      var $add96=$140+$mul95;
      var $arrayidx97=(($vla65)|0);
      HEAPF32[(($arrayidx97)>>2)]=$add96;
      $i=0;
      __label__ = 18; break;
    case 18: // $for_cond98
      var $144=$i;
      var $145=$st;
      var $lpcSize99=(($145+28)|0);
      var $146=HEAP32[(($lpcSize99)>>2)];
      var $add100=(($146+1)|0);
      var $cmp101=(($144)|0) < (($add100)|0);
      if ($cmp101) { __label__ = 19; break; } else { __label__ = 21; break; }
    case 19: // $for_body102
      var $147=$i;
      var $arrayidx103=(($vla65+($147<<2))|0);
      var $148=HEAPF32[(($arrayidx103)>>2)];
      var $149=$i;
      var $150=$st;
      var $lagWindow=(($150+68)|0);
      var $151=HEAP32[(($lagWindow)>>2)];
      var $arrayidx104=(($151+($149<<2))|0);
      var $152=HEAPF32[(($arrayidx104)>>2)];
      var $mul105=$148*$152;
      var $153=$i;
      var $arrayidx106=(($vla65+($153<<2))|0);
      HEAPF32[(($arrayidx106)>>2)]=$mul105;
      __label__ = 20; break;
    case 20: // $for_inc107
      var $154=$i;
      var $inc108=(($154+1)|0);
      $i=$inc108;
      __label__ = 18; break;
    case 21: // $for_end109
      var $155=$st;
      var $lpcSize110=(($155+28)|0);
      var $156=HEAP32[(($lpcSize110)>>2)];
      var $call111=__spx_lpc($vla47, $vla65, $156);
      var $157=$saved_stack64;
      _llvm_stackrestore($157);
      var $158=$st;
      var $lpcSize112=(($158+28)|0);
      var $159=HEAP32[(($lpcSize112)>>2)];
      var $160=$stack;
      var $call113=_lpc_to_lsp($vla47, $159, $vla55, 10, 0.20000000298023224, $160);
      $roots=$call113;
      var $161=$roots;
      var $162=$st;
      var $lpcSize114=(($162+28)|0);
      var $163=HEAP32[(($lpcSize114)>>2)];
      var $cmp115=(($161)|0)!=(($163)|0);
      if ($cmp115) { __label__ = 22; break; } else { __label__ = 29; break; }
    case 22: // $if_then116
      var $164=$st;
      var $lpcSize117=(($164+28)|0);
      var $165=HEAP32[(($lpcSize117)>>2)];
      var $166=$stack;
      var $call118=_lpc_to_lsp($vla47, $165, $vla55, 10, 0.05000000074505806, $166);
      $roots=$call118;
      var $167=$roots;
      var $168=$st;
      var $lpcSize119=(($168+28)|0);
      var $169=HEAP32[(($lpcSize119)>>2)];
      var $cmp120=(($167)|0)!=(($169)|0);
      if ($cmp120) { __label__ = 23; break; } else { __label__ = 28; break; }
    case 23: // $if_then121
      $i=0;
      __label__ = 24; break;
    case 24: // $for_cond122
      var $170=$i;
      var $171=$st;
      var $lpcSize123=(($171+28)|0);
      var $172=HEAP32[(($lpcSize123)>>2)];
      var $cmp124=(($170)|0) < (($172)|0);
      if ($cmp124) { __label__ = 25; break; } else { __label__ = 27; break; }
    case 25: // $for_body125
      var $173=$i;
      var $174=$st;
      var $old_lsp=(($174+72)|0);
      var $175=HEAP32[(($old_lsp)>>2)];
      var $arrayidx126=(($175+($173<<2))|0);
      var $176=HEAPF32[(($arrayidx126)>>2)];
      var $177=$i;
      var $arrayidx127=(($vla55+($177<<2))|0);
      HEAPF32[(($arrayidx127)>>2)]=$176;
      __label__ = 26; break;
    case 26: // $for_inc128
      var $178=$i;
      var $inc129=(($178+1)|0);
      $i=$inc129;
      __label__ = 24; break;
    case 27: // $for_end130
      __label__ = 28; break;
    case 28: // $if_end131
      __label__ = 29; break;
    case 29: // $if_end132
      var $179=$st;
      var $vbr_enabled133=(($179+112)|0);
      var $180=HEAP32[(($vbr_enabled133)>>2)];
      var $tobool134=(($180)|0)!=0;
      if ($tobool134) { __label__ = 31; break; } else { __label__ = 30; break; }
    case 30: // $lor_lhs_false135
      var $181=$st;
      var $vad_enabled136=(($181+140)|0);
      var $182=HEAP32[(($vad_enabled136)>>2)];
      var $tobool137=(($182)|0)!=0;
      if ($tobool137) { __label__ = 31; break; } else { __label__ = 68; break; }
    case 31: // $land_lhs_true
      var $183=HEAP32[(($dtx)>>2)];
      var $tobool138=(($183)|0)!=0;
      if ($tobool138) { __label__ = 68; break; } else { __label__ = 32; break; }
    case 32: // $if_then139
      var $184=$st;
      var $abr_enabled=(($184+124)|0);
      var $185=HEAP32[(($abr_enabled)>>2)];
      var $tobool140=(($185)|0)!=0;
      if ($tobool140) { __label__ = 33; break; } else { __label__ = 44; break; }
    case 33: // $if_then141
      $qual_change=0;
      var $186=$st;
      var $abr_drift2=(($186+132)|0);
      var $187=HEAPF32[(($abr_drift2)>>2)];
      var $188=$st;
      var $abr_drift=(($188+128)|0);
      var $189=HEAPF32[(($abr_drift)>>2)];
      var $mul142=$187*$189;
      var $cmp143=$mul142 > 0;
      if ($cmp143) { __label__ = 34; break; } else { __label__ = 39; break; }
    case 34: // $if_then144
      var $190=$st;
      var $abr_drift145=(($190+128)|0);
      var $191=HEAPF32[(($abr_drift145)>>2)];
      var $conv=$191;
      var $mul146=$conv*-0.00001;
      var $192=$st;
      var $abr_count=(($192+136)|0);
      var $193=HEAPF32[(($abr_count)>>2)];
      var $add147=$193+1;
      var $conv148=$add147;
      var $div=$mul146/$conv148;
      var $conv149=$div;
      $qual_change=$conv149;
      var $194=$qual_change;
      var $conv150=$194;
      var $cmp151=$conv150 > 0.1;
      if ($cmp151) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then153
      $qual_change=0.10000000149011612;
      __label__ = 36; break;
    case 36: // $if_end154
      var $195=$qual_change;
      var $conv155=$195;
      var $cmp156=$conv155 < -0.1;
      if ($cmp156) { __label__ = 37; break; } else { __label__ = 38; break; }
    case 37: // $if_then158
      $qual_change=-0.10000000149011612;
      __label__ = 38; break;
    case 38: // $if_end159
      __label__ = 39; break;
    case 39: // $if_end160
      var $196=$qual_change;
      var $197=$st;
      var $vbr_quality=(($197+108)|0);
      var $198=HEAPF32[(($vbr_quality)>>2)];
      var $add161=$198+$196;
      HEAPF32[(($vbr_quality)>>2)]=$add161;
      var $199=$st;
      var $vbr_quality162=(($199+108)|0);
      var $200=HEAPF32[(($vbr_quality162)>>2)];
      var $cmp163=$200 > 10;
      if ($cmp163) { __label__ = 40; break; } else { __label__ = 41; break; }
    case 40: // $if_then165
      var $201=$st;
      var $vbr_quality166=(($201+108)|0);
      HEAPF32[(($vbr_quality166)>>2)]=10;
      __label__ = 41; break;
    case 41: // $if_end167
      var $202=$st;
      var $vbr_quality168=(($202+108)|0);
      var $203=HEAPF32[(($vbr_quality168)>>2)];
      var $cmp169=$203 < 0;
      if ($cmp169) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $if_then171
      var $204=$st;
      var $vbr_quality172=(($204+108)|0);
      HEAPF32[(($vbr_quality172)>>2)]=0;
      __label__ = 43; break;
    case 43: // $if_end173
      __label__ = 44; break;
    case 44: // $if_end174
      var $205=$e_high;
      var $add175=$205+1;
      var $206=$e_low;
      var $add176=$206+1;
      var $div177=$add175/$add176;
      var $conv178=$div177;
      var $call179=_log($conv178);
      var $mul180=$call179*2;
      var $conv181=$mul180;
      $ratio=$conv181;
      var $207=$st;
      var $st_low182=(($207+4)|0);
      var $208=HEAP32[(($st_low182)>>2)];
      var $209=$st;
      var $relative_quality=(($209+144)|0);
      var $210=$relative_quality;
      var $call183=_speex_encoder_ctl($208, 29, $210);
      var $211=$ratio;
      var $cmp184=$211 < -4;
      if ($cmp184) { __label__ = 45; break; } else { __label__ = 46; break; }
    case 45: // $if_then186
      $ratio=-4;
      __label__ = 46; break;
    case 46: // $if_end187
      var $212=$ratio;
      var $cmp188=$212 > 2;
      if ($cmp188) { __label__ = 47; break; } else { __label__ = 48; break; }
    case 47: // $if_then190
      $ratio=2;
      __label__ = 48; break;
    case 48: // $if_end191
      var $213=$st;
      var $vbr_enabled192=(($213+112)|0);
      var $214=HEAP32[(($vbr_enabled192)>>2)];
      var $tobool193=(($214)|0)!=0;
      if ($tobool193) { __label__ = 49; break; } else { __label__ = 63; break; }
    case 49: // $if_then194
      var $215=$mode;
      var $nb_modes=(($215+160)|0);
      var $216=HEAP32[(($nb_modes)>>2)];
      var $sub195=(($216-1)|0);
      HEAP32[(($modeid)>>2)]=$sub195;
      var $217=$ratio;
      var $add196=$217+2;
      var $conv197=$add196;
      var $mul198=$conv197;
      var $218=$st;
      var $relative_quality199=(($218+144)|0);
      var $219=HEAPF32[(($relative_quality199)>>2)];
      var $conv200=$219;
      var $add201=$conv200+$mul198;
      var $conv202=$add201;
      HEAPF32[(($relative_quality199)>>2)]=$conv202;
      var $220=$st;
      var $relative_quality203=(($220+144)|0);
      var $221=HEAPF32[(($relative_quality203)>>2)];
      var $cmp204=$221 < -1;
      if ($cmp204) { __label__ = 50; break; } else { __label__ = 51; break; }
    case 50: // $if_then206
      var $222=$st;
      var $relative_quality207=(($222+144)|0);
      HEAPF32[(($relative_quality207)>>2)]=-1;
      __label__ = 51; break;
    case 51: // $if_end208
      __label__ = 52; break;
    case 52: // $while_cond
      var $223=HEAP32[(($modeid)>>2)];
      var $tobool209=(($223)|0)!=0;
      if ($tobool209) { __label__ = 53; break; } else { __label__ = 60; break; }
    case 53: // $while_body
      var $224=$st;
      var $vbr_quality210=(($224+108)|0);
      var $225=HEAPF32[(($vbr_quality210)>>2)];
      var $conv211=$225;
      var $call212=_floor($conv211);
      var $conv213=(($call212)|0);
      $v1=$conv213;
      var $226=$v1;
      var $cmp214=(($226)|0)==10;
      if ($cmp214) { __label__ = 54; break; } else { __label__ = 55; break; }
    case 54: // $if_then216
      var $227=$v1;
      var $228=HEAP32[(($modeid)>>2)];
      var $229=$mode;
      var $vbr_thresh=(($229+156)|0);
      var $230=HEAP32[(($vbr_thresh)>>2)];
      var $arrayidx217=(($230+$228*44)|0);
      var $arrayidx218=(($arrayidx217+($227<<2))|0);
      var $231=HEAPF32[(($arrayidx218)>>2)];
      $thresh=$231;
      __label__ = 56; break;
    case 55: // $if_else219
      var $232=$st;
      var $vbr_quality220=(($232+108)|0);
      var $233=HEAPF32[(($vbr_quality220)>>2)];
      var $234=$v1;
      var $conv221=(($234)|0);
      var $sub222=$233-$conv221;
      var $235=$v1;
      var $add223=(($235+1)|0);
      var $236=HEAP32[(($modeid)>>2)];
      var $237=$mode;
      var $vbr_thresh224=(($237+156)|0);
      var $238=HEAP32[(($vbr_thresh224)>>2)];
      var $arrayidx225=(($238+$236*44)|0);
      var $arrayidx226=(($arrayidx225+($add223<<2))|0);
      var $239=HEAPF32[(($arrayidx226)>>2)];
      var $mul227=$sub222*$239;
      var $240=$v1;
      var $add228=(($240+1)|0);
      var $conv229=(($add228)|0);
      var $241=$st;
      var $vbr_quality230=(($241+108)|0);
      var $242=HEAPF32[(($vbr_quality230)>>2)];
      var $sub231=$conv229-$242;
      var $243=$v1;
      var $244=HEAP32[(($modeid)>>2)];
      var $245=$mode;
      var $vbr_thresh232=(($245+156)|0);
      var $246=HEAP32[(($vbr_thresh232)>>2)];
      var $arrayidx233=(($246+$244*44)|0);
      var $arrayidx234=(($arrayidx233+($243<<2))|0);
      var $247=HEAPF32[(($arrayidx234)>>2)];
      var $mul235=$sub231*$247;
      var $add236=$mul227+$mul235;
      $thresh=$add236;
      __label__ = 56; break;
    case 56: // $if_end237
      var $248=$st;
      var $relative_quality238=(($248+144)|0);
      var $249=HEAPF32[(($relative_quality238)>>2)];
      var $250=$thresh;
      var $cmp239=$249 >= $250;
      if ($cmp239) { __label__ = 57; break; } else { __label__ = 59; break; }
    case 57: // $land_lhs_true241
      var $251=$st;
      var $sampling_rate=(($251+168)|0);
      var $252=HEAP32[(($sampling_rate)>>2)];
      var $253=HEAP32[(($modeid)>>2)];
      var $254=$st;
      var $submodes=(($254+152)|0);
      var $255=HEAP32[(($submodes)>>2)];
      var $arrayidx242=(($255+($253<<2))|0);
      var $256=HEAP32[(($arrayidx242)>>2)];
      var $bits_per_frame=(($256+52)|0);
      var $257=HEAP32[(($bits_per_frame)>>2)];
      var $mul243=(($252*$257)|0);
      var $258=$st;
      var $full_frame_size244=(($258+8)|0);
      var $259=HEAP32[(($full_frame_size244)>>2)];
      var $div245=(((($mul243)|0)/(($259)|0))|0);
      var $260=$st;
      var $vbr_max_high=(($260+120)|0);
      var $261=HEAP32[(($vbr_max_high)>>2)];
      var $cmp246=(($div245)|0) <= (($261)|0);
      if ($cmp246) { __label__ = 58; break; } else { __label__ = 59; break; }
    case 58: // $if_then248
      __label__ = 60; break;
    case 59: // $if_end249
      var $262=HEAP32[(($modeid)>>2)];
      var $dec=(($262-1)|0);
      HEAP32[(($modeid)>>2)]=$dec;
      __label__ = 52; break;
    case 60: // $while_end
      var $263=$state_addr;
      var $264=$modeid;
      var $call250=_speex_encoder_ctl($263, 10, $264);
      var $265=$st;
      var $abr_enabled251=(($265+124)|0);
      var $266=HEAP32[(($abr_enabled251)>>2)];
      var $tobool252=(($266)|0)!=0;
      if ($tobool252) { __label__ = 61; break; } else { __label__ = 62; break; }
    case 61: // $if_then253
      var $267=$state_addr;
      var $268=$bitrate;
      var $call254=_speex_encoder_ctl($267, 19, $268);
      var $269=HEAP32[(($bitrate)>>2)];
      var $270=$st;
      var $abr_enabled255=(($270+124)|0);
      var $271=HEAP32[(($abr_enabled255)>>2)];
      var $sub256=(($269-$271)|0);
      var $conv257=(($sub256)|0);
      var $272=$st;
      var $abr_drift258=(($272+128)|0);
      var $273=HEAPF32[(($abr_drift258)>>2)];
      var $add259=$273+$conv257;
      HEAPF32[(($abr_drift258)>>2)]=$add259;
      var $274=$st;
      var $abr_drift2260=(($274+132)|0);
      var $275=HEAPF32[(($abr_drift2260)>>2)];
      var $conv261=$275;
      var $mul262=$conv261*0.95;
      var $276=HEAP32[(($bitrate)>>2)];
      var $277=$st;
      var $abr_enabled263=(($277+124)|0);
      var $278=HEAP32[(($abr_enabled263)>>2)];
      var $sub264=(($276-$278)|0);
      var $conv265=(($sub264)|0);
      var $mul266=$conv265*0.05;
      var $add267=$mul262+$mul266;
      var $conv268=$add267;
      var $279=$st;
      var $abr_drift2269=(($279+132)|0);
      HEAPF32[(($abr_drift2269)>>2)]=$conv268;
      var $280=$st;
      var $abr_count270=(($280+136)|0);
      var $281=HEAPF32[(($abr_count270)>>2)];
      var $conv271=$281;
      var $add272=$conv271+1;
      var $conv273=$add272;
      HEAPF32[(($abr_count270)>>2)]=$conv273;
      __label__ = 62; break;
    case 62: // $if_end274
      __label__ = 67; break;
    case 63: // $if_else275
      var $282=$st;
      var $relative_quality277=(($282+144)|0);
      var $283=HEAPF32[(($relative_quality277)>>2)];
      var $conv278=$283;
      var $cmp279=$conv278 < 2;
      if ($cmp279) { __label__ = 64; break; } else { __label__ = 65; break; }
    case 64: // $if_then281
      $modeid276=1;
      __label__ = 66; break;
    case 65: // $if_else282
      var $284=$st;
      var $submodeSelect=(($284+160)|0);
      var $285=HEAP32[(($submodeSelect)>>2)];
      $modeid276=$285;
      __label__ = 66; break;
    case 66: // $if_end283
      var $286=$modeid276;
      var $287=$st;
      var $submodeID=(($287+156)|0);
      HEAP32[(($submodeID)>>2)]=$286;
      __label__ = 67; break;
    case 67: // $if_end284
      __label__ = 68; break;
    case 68: // $if_end285
      var $288=$st;
      var $encode_submode=(($288+148)|0);
      var $289=HEAP32[(($encode_submode)>>2)];
      var $tobool286=(($289)|0)!=0;
      if ($tobool286) { __label__ = 69; break; } else { __label__ = 73; break; }
    case 69: // $if_then287
      var $290=$bits_addr;
      _speex_bits_pack($290, 1, 1);
      var $291=HEAP32[(($dtx)>>2)];
      var $tobool288=(($291)|0)!=0;
      if ($tobool288) { __label__ = 70; break; } else { __label__ = 71; break; }
    case 70: // $if_then289
      var $292=$bits_addr;
      _speex_bits_pack($292, 0, 3);
      __label__ = 72; break;
    case 71: // $if_else290
      var $293=$bits_addr;
      var $294=$st;
      var $submodeID291=(($294+156)|0);
      var $295=HEAP32[(($submodeID291)>>2)];
      _speex_bits_pack($293, $295, 3);
      __label__ = 72; break;
    case 72: // $if_end292
      __label__ = 73; break;
    case 73: // $if_end293
      var $296=HEAP32[(($dtx)>>2)];
      var $tobool294=(($296)|0)!=0;
      if ($tobool294) { __label__ = 75; break; } else { __label__ = 74; break; }
    case 74: // $lor_lhs_false295
      var $297=$st;
      var $submodeID296=(($297+156)|0);
      var $298=HEAP32[(($submodeID296)>>2)];
      var $299=$st;
      var $submodes297=(($299+152)|0);
      var $300=HEAP32[(($submodes297)>>2)];
      var $arrayidx298=(($300+($298<<2))|0);
      var $301=HEAP32[(($arrayidx298)>>2)];
      var $cmp299=(($301)|0)==0;
      if ($cmp299) { __label__ = 75; break; } else { __label__ = 86; break; }
    case 75: // $if_then301
      $i=0;
      __label__ = 76; break;
    case 76: // $for_cond302
      var $302=$i;
      var $303=$st;
      var $frame_size303=(($303+12)|0);
      var $304=HEAP32[(($frame_size303)>>2)];
      var $cmp304=(($302)|0) < (($304)|0);
      if ($cmp304) { __label__ = 77; break; } else { __label__ = 79; break; }
    case 77: // $for_body306
      var $305=$i;
      var $306=$high;
      var $arrayidx307=(($306+($305<<2))|0);
      HEAPF32[(($arrayidx307)>>2)]=1.0000000036274937e-15;
      __label__ = 78; break;
    case 78: // $for_inc308
      var $307=$i;
      var $inc309=(($307+1)|0);
      $i=$inc309;
      __label__ = 76; break;
    case 79: // $for_end310
      $i=0;
      __label__ = 80; break;
    case 80: // $for_cond311
      var $308=$i;
      var $309=$st;
      var $lpcSize312=(($309+28)|0);
      var $310=HEAP32[(($lpcSize312)>>2)];
      var $cmp313=(($308)|0) < (($310)|0);
      if ($cmp313) { __label__ = 81; break; } else { __label__ = 83; break; }
    case 81: // $for_body315
      var $311=$i;
      var $312=$st;
      var $mem_sw=(($312+92)|0);
      var $313=HEAP32[(($mem_sw)>>2)];
      var $arrayidx316=(($313+($311<<2))|0);
      HEAPF32[(($arrayidx316)>>2)]=0;
      __label__ = 82; break;
    case 82: // $for_inc317
      var $314=$i;
      var $inc318=(($314+1)|0);
      $i=$inc318;
      __label__ = 80; break;
    case 83: // $for_end319
      var $315=$st;
      var $first=(($315+32)|0);
      HEAP32[(($first)>>2)]=1;
      var $316=$high;
      var $317=$st;
      var $interp_qlpc=(($317+80)|0);
      var $318=HEAP32[(($interp_qlpc)>>2)];
      var $319=$high;
      var $320=$st;
      var $frame_size320=(($320+12)|0);
      var $321=HEAP32[(($frame_size320)>>2)];
      var $322=$st;
      var $lpcSize321=(($322+28)|0);
      var $323=HEAP32[(($lpcSize321)>>2)];
      var $324=$st;
      var $mem_sp=(($324+84)|0);
      var $325=HEAP32[(($mem_sp)>>2)];
      var $326=$stack;
      _iir_mem16($316, $318, $319, $321, $323, $325, $326);
      var $327=HEAP32[(($dtx)>>2)];
      var $tobool322=(($327)|0)!=0;
      if ($tobool322) { __label__ = 84; break; } else { __label__ = 85; break; }
    case 84: // $if_then323
      $retval=0;
      $cleanup_dest_slot=1;
      __label__ = 166; break;
    case 85: // $if_else324
      $retval=1;
      $cleanup_dest_slot=1;
      __label__ = 166; break;
    case 86: // $if_end325
      var $328=$st;
      var $submodeID326=(($328+156)|0);
      var $329=HEAP32[(($submodeID326)>>2)];
      var $330=$st;
      var $submodes327=(($330+152)|0);
      var $331=HEAP32[(($submodes327)>>2)];
      var $arrayidx328=(($331+($329<<2))|0);
      var $332=HEAP32[(($arrayidx328)>>2)];
      var $lsp_quant=(($332+16)|0);
      var $333=HEAP32[(($lsp_quant)>>2)];
      var $334=$st;
      var $lpcSize329=(($334+28)|0);
      var $335=HEAP32[(($lpcSize329)>>2)];
      var $336=$bits_addr;
      FUNCTION_TABLE[$333]($vla55, $vla57, $335, $336);
      var $337=$st;
      var $first330=(($337+32)|0);
      var $338=HEAP32[(($first330)>>2)];
      var $tobool331=(($338)|0)!=0;
      if ($tobool331) { __label__ = 87; break; } else { __label__ = 96; break; }
    case 87: // $if_then332
      $i=0;
      __label__ = 88; break;
    case 88: // $for_cond333
      var $339=$i;
      var $340=$st;
      var $lpcSize334=(($340+28)|0);
      var $341=HEAP32[(($lpcSize334)>>2)];
      var $cmp335=(($339)|0) < (($341)|0);
      if ($cmp335) { __label__ = 89; break; } else { __label__ = 91; break; }
    case 89: // $for_body337
      var $342=$i;
      var $arrayidx338=(($vla55+($342<<2))|0);
      var $343=HEAPF32[(($arrayidx338)>>2)];
      var $344=$i;
      var $345=$st;
      var $old_lsp339=(($345+72)|0);
      var $346=HEAP32[(($old_lsp339)>>2)];
      var $arrayidx340=(($346+($344<<2))|0);
      HEAPF32[(($arrayidx340)>>2)]=$343;
      __label__ = 90; break;
    case 90: // $for_inc341
      var $347=$i;
      var $inc342=(($347+1)|0);
      $i=$inc342;
      __label__ = 88; break;
    case 91: // $for_end343
      $i=0;
      __label__ = 92; break;
    case 92: // $for_cond344
      var $348=$i;
      var $349=$st;
      var $lpcSize345=(($349+28)|0);
      var $350=HEAP32[(($lpcSize345)>>2)];
      var $cmp346=(($348)|0) < (($350)|0);
      if ($cmp346) { __label__ = 93; break; } else { __label__ = 95; break; }
    case 93: // $for_body348
      var $351=$i;
      var $arrayidx349=(($vla57+($351<<2))|0);
      var $352=HEAPF32[(($arrayidx349)>>2)];
      var $353=$i;
      var $354=$st;
      var $old_qlsp=(($354+76)|0);
      var $355=HEAP32[(($old_qlsp)>>2)];
      var $arrayidx350=(($355+($353<<2))|0);
      HEAPF32[(($arrayidx350)>>2)]=$352;
      __label__ = 94; break;
    case 94: // $for_inc351
      var $356=$i;
      var $inc352=(($356+1)|0);
      $i=$inc352;
      __label__ = 92; break;
    case 95: // $for_end353
      __label__ = 96; break;
    case 96: // $if_end354
      var $357=$st;
      var $lpcSize355=(($357+28)|0);
      var $358=HEAP32[(($lpcSize355)>>2)];
      var $vla356=STACKTOP;STACKTOP += $358*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $359=$st;
      var $subframeSize357=(($359+16)|0);
      var $360=HEAP32[(($subframeSize357)>>2)];
      var $vla358=STACKTOP;STACKTOP += $360*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $361=$st;
      var $subframeSize359=(($361+16)|0);
      var $362=HEAP32[(($subframeSize359)>>2)];
      var $vla360=STACKTOP;STACKTOP += $362*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $363=$st;
      var $subframeSize361=(($363+16)|0);
      var $364=HEAP32[(($subframeSize361)>>2)];
      var $vla362=STACKTOP;STACKTOP += $364*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $sub=0;
      __label__ = 97; break;
    case 97: // $for_cond363
      var $365=$sub;
      var $366=$st;
      var $nbSubframes364=(($366+20)|0);
      var $367=HEAP32[(($nbSubframes364)>>2)];
      var $cmp365=(($365)|0) < (($367)|0);
      if ($cmp365) { __label__ = 98; break; } else { __label__ = 157; break; }
    case 98: // $for_body367
      $eh=0;
      var $368=$st;
      var $subframeSize368=(($368+16)|0);
      var $369=HEAP32[(($subframeSize368)>>2)];
      var $370=$sub;
      var $mul369=(($369*$370)|0);
      $offset=$mul369;
      var $371=$high;
      var $372=$offset;
      var $add_ptr370=(($371+($372<<2))|0);
      $sp=$add_ptr370;
      var $373=$st;
      var $subframeSize371=(($373+16)|0);
      var $374=HEAP32[(($subframeSize371)>>2)];
      var $375=_llvm_stacksave();
      $saved_stack372=$375;
      var $vla373=STACKTOP;STACKTOP += $374*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $376=$st;
      var $subframeSize374=(($376+16)|0);
      var $377=HEAP32[(($subframeSize374)>>2)];
      var $vla375=STACKTOP;STACKTOP += $377*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $378=$st;
      var $subframeSize376=(($378+16)|0);
      var $379=HEAP32[(($subframeSize376)>>2)];
      var $vla377=STACKTOP;STACKTOP += $379*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $380=$st;
      var $old_lsp378=(($380+72)|0);
      var $381=HEAP32[(($old_lsp378)>>2)];
      var $382=$st;
      var $lpcSize379=(($382+28)|0);
      var $383=HEAP32[(($lpcSize379)>>2)];
      var $384=$sub;
      var $385=$st;
      var $nbSubframes380=(($385+20)|0);
      var $386=HEAP32[(($nbSubframes380)>>2)];
      _lsp_interpolate($381, $vla55, $vla59, $383, $384, $386);
      var $387=$st;
      var $old_qlsp381=(($387+76)|0);
      var $388=HEAP32[(($old_qlsp381)>>2)];
      var $389=$st;
      var $lpcSize382=(($389+28)|0);
      var $390=HEAP32[(($lpcSize382)>>2)];
      var $391=$sub;
      var $392=$st;
      var $nbSubframes383=(($392+20)|0);
      var $393=HEAP32[(($nbSubframes383)>>2)];
      _lsp_interpolate($388, $vla57, $vla61, $390, $391, $393);
      var $394=$st;
      var $lpcSize384=(($394+28)|0);
      var $395=HEAP32[(($lpcSize384)>>2)];
      _lsp_enforce_margin($vla59, $395, 0.05000000074505806);
      var $396=$st;
      var $lpcSize385=(($396+28)|0);
      var $397=HEAP32[(($lpcSize385)>>2)];
      _lsp_enforce_margin($vla61, $397, 0.05000000074505806);
      var $398=$st;
      var $lpcSize386=(($398+28)|0);
      var $399=HEAP32[(($lpcSize386)>>2)];
      var $400=$stack;
      _lsp_to_lpc($vla59, $vla49, $399, $400);
      var $401=$st;
      var $interp_qlpc387=(($401+80)|0);
      var $402=HEAP32[(($interp_qlpc387)>>2)];
      var $403=$st;
      var $lpcSize388=(($403+28)|0);
      var $404=HEAP32[(($lpcSize388)>>2)];
      var $405=$stack;
      _lsp_to_lpc($vla61, $402, $404, $405);
      var $406=$st;
      var $gamma1=(($406+40)|0);
      var $407=HEAPF32[(($gamma1)>>2)];
      var $408=$st;
      var $lpcSize389=(($408+28)|0);
      var $409=HEAP32[(($lpcSize389)>>2)];
      _bw_lpc($407, $vla49, $vla51, $409);
      var $410=$st;
      var $gamma2=(($410+44)|0);
      var $411=HEAPF32[(($gamma2)>>2)];
      var $412=$st;
      var $lpcSize390=(($412+28)|0);
      var $413=HEAP32[(($lpcSize390)>>2)];
      _bw_lpc($411, $vla49, $vla53, $413);
      var $414=$sub;
      var $415=$st;
      var $pi_gain=(($415+96)|0);
      var $416=HEAP32[(($pi_gain)>>2)];
      var $arrayidx391=(($416+($414<<2))|0);
      HEAPF32[(($arrayidx391)>>2)]=1;
      $rh=1;
      $i=0;
      __label__ = 99; break;
    case 99: // $for_cond392
      var $417=$i;
      var $418=$st;
      var $lpcSize393=(($418+28)|0);
      var $419=HEAP32[(($lpcSize393)>>2)];
      var $cmp394=(($417)|0) < (($419)|0);
      if ($cmp394) { __label__ = 100; break; } else { __label__ = 102; break; }
    case 100: // $for_body396
      var $420=$i;
      var $add397=(($420+1)|0);
      var $421=$st;
      var $interp_qlpc398=(($421+80)|0);
      var $422=HEAP32[(($interp_qlpc398)>>2)];
      var $arrayidx399=(($422+($add397<<2))|0);
      var $423=HEAPF32[(($arrayidx399)>>2)];
      var $424=$i;
      var $425=$st;
      var $interp_qlpc400=(($425+80)|0);
      var $426=HEAP32[(($interp_qlpc400)>>2)];
      var $arrayidx401=(($426+($424<<2))|0);
      var $427=HEAPF32[(($arrayidx401)>>2)];
      var $sub402=$423-$427;
      var $428=$rh;
      var $add403=$428+$sub402;
      $rh=$add403;
      var $429=$i;
      var $430=$st;
      var $interp_qlpc404=(($430+80)|0);
      var $431=HEAP32[(($interp_qlpc404)>>2)];
      var $arrayidx405=(($431+($429<<2))|0);
      var $432=HEAPF32[(($arrayidx405)>>2)];
      var $433=$i;
      var $add406=(($433+1)|0);
      var $434=$st;
      var $interp_qlpc407=(($434+80)|0);
      var $435=HEAP32[(($interp_qlpc407)>>2)];
      var $arrayidx408=(($435+($add406<<2))|0);
      var $436=HEAPF32[(($arrayidx408)>>2)];
      var $add409=$432+$436;
      var $437=$sub;
      var $438=$st;
      var $pi_gain410=(($438+96)|0);
      var $439=HEAP32[(($pi_gain410)>>2)];
      var $arrayidx411=(($439+($437<<2))|0);
      var $440=HEAPF32[(($arrayidx411)>>2)];
      var $add412=$440+$add409;
      HEAPF32[(($arrayidx411)>>2)]=$add412;
      __label__ = 101; break;
    case 101: // $for_inc413
      var $441=$i;
      var $add414=(($441+2)|0);
      $i=$add414;
      __label__ = 99; break;
    case 102: // $for_end415
      var $442=$sub;
      var $arrayidx416=(($vla36+($442<<2))|0);
      var $443=HEAPF32[(($arrayidx416)>>2)];
      $rl=$443;
      var $444=$rl;
      var $conv417=$444;
      var $add418=$conv417+0.01;
      var $445=$rh;
      var $conv419=$445;
      var $add420=$conv419+0.01;
      var $div421=$add418/$add420;
      var $conv422=$div421;
      $filter_ratio=$conv422;
      var $446=$sp;
      var $447=$st;
      var $interp_qlpc423=(($447+80)|0);
      var $448=HEAP32[(($interp_qlpc423)>>2)];
      var $449=$st;
      var $subframeSize424=(($449+16)|0);
      var $450=HEAP32[(($subframeSize424)>>2)];
      var $451=$st;
      var $lpcSize425=(($451+28)|0);
      var $452=HEAP32[(($lpcSize425)>>2)];
      var $453=$st;
      var $mem_sp2=(($453+88)|0);
      var $454=HEAP32[(($mem_sp2)>>2)];
      var $455=$stack;
      _fir_mem16($446, $448, $vla373, $450, $452, $454, $455);
      var $456=$st;
      var $subframeSize426=(($456+16)|0);
      var $457=HEAP32[(($subframeSize426)>>2)];
      var $call427=_compute_rms16($vla373, $457);
      $eh=$call427;
      var $458=$st;
      var $submodeID428=(($458+156)|0);
      var $459=HEAP32[(($submodeID428)>>2)];
      var $460=$st;
      var $submodes429=(($460+152)|0);
      var $461=HEAP32[(($submodes429)>>2)];
      var $arrayidx430=(($461+($459<<2))|0);
      var $462=HEAP32[(($arrayidx430)>>2)];
      var $innovation_quant=(($462+36)|0);
      var $463=HEAP32[(($innovation_quant)>>2)];
      var $tobool431=(($463)|0)!=0;
      if ($tobool431) { __label__ = 110; break; } else { __label__ = 103; break; }
    case 103: // $if_then432
      var $464=$sub;
      var $arrayidx433=(($vla+($464<<2))|0);
      var $465=HEAPF32[(($arrayidx433)>>2)];
      $el=$465;
      var $466=$filter_ratio;
      var $467=$eh;
      var $mul434=$466*$467;
      var $468=$el;
      var $add435=$468+1;
      var $div436=$mul434/$add435;
      $g=$div436;
      var $469=$g;
      var $call437=_scal_quant($469, ((_fold_quant_bound)|0), 32);
      $quant=$call437;
      var $470=$quant;
      var $cmp438=(($470)|0) < 0;
      if ($cmp438) { __label__ = 104; break; } else { __label__ = 105; break; }
    case 104: // $if_then440
      $quant=0;
      __label__ = 105; break;
    case 105: // $if_end441
      var $471=$quant;
      var $cmp442=(($471)|0) > 31;
      if ($cmp442) { __label__ = 106; break; } else { __label__ = 107; break; }
    case 106: // $if_then444
      $quant=31;
      __label__ = 107; break;
    case 107: // $if_end445
      var $472=$bits_addr;
      var $473=$quant;
      _speex_bits_pack($472, $473, 5);
      var $474=$st;
      var $innov_rms_save=(($474+104)|0);
      var $475=HEAP32[(($innov_rms_save)>>2)];
      var $tobool446=(($475)|0)!=0;
      if ($tobool446) { __label__ = 108; break; } else { __label__ = 109; break; }
    case 108: // $if_then447
      var $476=$eh;
      var $477=$sub;
      var $478=$st;
      var $innov_rms_save448=(($478+104)|0);
      var $479=HEAP32[(($innov_rms_save448)>>2)];
      var $arrayidx449=(($479+($477<<2))|0);
      HEAPF32[(($arrayidx449)>>2)]=$476;
      __label__ = 109; break;
    case 109: // $if_end450
      var $480=$eh;
      var $481=$sub;
      var $482=$st;
      var $exc_rms=(($482+100)|0);
      var $483=HEAP32[(($exc_rms)>>2)];
      var $arrayidx451=(($483+($481<<2))|0);
      HEAPF32[(($arrayidx451)>>2)]=$480;
      __label__ = 151; break;
    case 110: // $if_else452
      var $484=$sub;
      var $arrayidx454=(($vla38+($484<<2))|0);
      var $485=HEAPF32[(($arrayidx454)>>2)];
      $el453=$485;
      var $486=$filter_ratio;
      var $487=$eh;
      var $add455=$487+1;
      var $mul456=$486*$add455;
      var $488=$el453;
      var $add457=$488+1;
      var $div458=$mul456/$add457;
      $gc=$div458;
      var $489=$st;
      var $subframeSize459=(($489+16)|0);
      var $490=HEAP32[(($subframeSize459)>>2)];
      var $cmp460=(($490)|0)==80;
      if ($cmp460) { __label__ = 111; break; } else { __label__ = 112; break; }
    case 111: // $if_then462
      var $491=$gc;
      var $mul463=$491*0.7071099877357483;
      $gc=$mul463;
      __label__ = 112; break;
    case 112: // $if_end464
      var $492=$gc;
      var $call465=_scal_quant($492, ((_gc_quant_bound)|0), 16);
      $qgc=$call465;
      var $493=$bits_addr;
      var $494=$qgc;
      _speex_bits_pack($493, $494, 4);
      var $495=$qgc;
      var $arrayidx466=((_gc_quant_bound+($495<<2))|0);
      var $496=HEAPF32[(($arrayidx466)>>2)];
      var $conv467=$496;
      var $mul468=$conv467*0.8736;
      var $conv469=$mul468;
      $gc=$conv469;
      var $497=$st;
      var $subframeSize470=(($497+16)|0);
      var $498=HEAP32[(($subframeSize470)>>2)];
      var $cmp471=(($498)|0)==80;
      if ($cmp471) { __label__ = 113; break; } else { __label__ = 114; break; }
    case 113: // $if_then473
      var $499=$gc;
      var $mul474=$499*1.414199948310852;
      $gc=$mul474;
      __label__ = 114; break;
    case 114: // $if_end475
      var $500=$gc;
      var $501=$filter_ratio;
      var $div476=$500/$501;
      var $502=$el453;
      var $add477=$502+1;
      var $mul478=$div476*$add477;
      $scale=$mul478;
      var $503=$st;
      var $interp_qlpc479=(($503+80)|0);
      var $504=HEAP32[(($interp_qlpc479)>>2)];
      var $505=$st;
      var $subframeSize480=(($505+16)|0);
      var $506=HEAP32[(($subframeSize480)>>2)];
      var $507=$st;
      var $lpcSize481=(($507+28)|0);
      var $508=HEAP32[(($lpcSize481)>>2)];
      var $509=$stack;
      _compute_impulse_response($504, $vla51, $vla53, $vla358, $506, $508, $509);
      $i=0;
      __label__ = 115; break;
    case 115: // $for_cond482
      var $510=$i;
      var $511=$st;
      var $subframeSize483=(($511+16)|0);
      var $512=HEAP32[(($subframeSize483)>>2)];
      var $cmp484=(($510)|0) < (($512)|0);
      if ($cmp484) { __label__ = 116; break; } else { __label__ = 118; break; }
    case 116: // $for_body486
      var $513=$i;
      var $arrayidx487=(($vla375+($513<<2))|0);
      HEAPF32[(($arrayidx487)>>2)]=1.0000000036274937e-15;
      __label__ = 117; break;
    case 117: // $for_inc488
      var $514=$i;
      var $inc489=(($514+1)|0);
      $i=$inc489;
      __label__ = 115; break;
    case 118: // $for_end490
      $i=0;
      __label__ = 119; break;
    case 119: // $for_cond491
      var $515=$i;
      var $516=$st;
      var $lpcSize492=(($516+28)|0);
      var $517=HEAP32[(($lpcSize492)>>2)];
      var $cmp493=(($515)|0) < (($517)|0);
      if ($cmp493) { __label__ = 120; break; } else { __label__ = 122; break; }
    case 120: // $for_body495
      var $518=$i;
      var $519=$st;
      var $mem_sp496=(($519+84)|0);
      var $520=HEAP32[(($mem_sp496)>>2)];
      var $arrayidx497=(($520+($518<<2))|0);
      var $521=HEAPF32[(($arrayidx497)>>2)];
      var $522=$i;
      var $arrayidx498=(($vla356+($522<<2))|0);
      HEAPF32[(($arrayidx498)>>2)]=$521;
      __label__ = 121; break;
    case 121: // $for_inc499
      var $523=$i;
      var $inc500=(($523+1)|0);
      $i=$inc500;
      __label__ = 119; break;
    case 122: // $for_end501
      var $524=$st;
      var $interp_qlpc502=(($524+80)|0);
      var $525=HEAP32[(($interp_qlpc502)>>2)];
      var $526=$st;
      var $subframeSize503=(($526+16)|0);
      var $527=HEAP32[(($subframeSize503)>>2)];
      var $528=$st;
      var $lpcSize504=(($528+28)|0);
      var $529=HEAP32[(($lpcSize504)>>2)];
      var $530=$stack;
      _iir_mem16($vla375, $525, $vla375, $527, $529, $vla356, $530);
      $i=0;
      __label__ = 123; break;
    case 123: // $for_cond505
      var $531=$i;
      var $532=$st;
      var $lpcSize506=(($532+28)|0);
      var $533=HEAP32[(($lpcSize506)>>2)];
      var $cmp507=(($531)|0) < (($533)|0);
      if ($cmp507) { __label__ = 124; break; } else { __label__ = 126; break; }
    case 124: // $for_body509
      var $534=$i;
      var $535=$st;
      var $mem_sw510=(($535+92)|0);
      var $536=HEAP32[(($mem_sw510)>>2)];
      var $arrayidx511=(($536+($534<<2))|0);
      var $537=HEAPF32[(($arrayidx511)>>2)];
      var $538=$i;
      var $arrayidx512=(($vla356+($538<<2))|0);
      HEAPF32[(($arrayidx512)>>2)]=$537;
      __label__ = 125; break;
    case 125: // $for_inc513
      var $539=$i;
      var $inc514=(($539+1)|0);
      $i=$inc514;
      __label__ = 123; break;
    case 126: // $for_end515
      var $540=$st;
      var $subframeSize516=(($540+16)|0);
      var $541=HEAP32[(($subframeSize516)>>2)];
      var $542=$st;
      var $lpcSize517=(($542+28)|0);
      var $543=HEAP32[(($lpcSize517)>>2)];
      var $544=$stack;
      _filter_mem16($vla375, $vla51, $vla53, $vla375, $541, $543, $vla356, $544);
      $i=0;
      __label__ = 127; break;
    case 127: // $for_cond518
      var $545=$i;
      var $546=$st;
      var $lpcSize519=(($546+28)|0);
      var $547=HEAP32[(($lpcSize519)>>2)];
      var $cmp520=(($545)|0) < (($547)|0);
      if ($cmp520) { __label__ = 128; break; } else { __label__ = 130; break; }
    case 128: // $for_body522
      var $548=$i;
      var $549=$st;
      var $mem_sw523=(($549+92)|0);
      var $550=HEAP32[(($mem_sw523)>>2)];
      var $arrayidx524=(($550+($548<<2))|0);
      var $551=HEAPF32[(($arrayidx524)>>2)];
      var $552=$i;
      var $arrayidx525=(($vla356+($552<<2))|0);
      HEAPF32[(($arrayidx525)>>2)]=$551;
      __label__ = 129; break;
    case 129: // $for_inc526
      var $553=$i;
      var $inc527=(($553+1)|0);
      $i=$inc527;
      __label__ = 127; break;
    case 130: // $for_end528
      var $554=$sp;
      var $555=$st;
      var $subframeSize529=(($555+16)|0);
      var $556=HEAP32[(($subframeSize529)>>2)];
      var $557=$st;
      var $lpcSize530=(($557+28)|0);
      var $558=HEAP32[(($lpcSize530)>>2)];
      var $559=$stack;
      _filter_mem16($554, $vla51, $vla53, $vla377, $556, $558, $vla356, $559);
      $i=0;
      __label__ = 131; break;
    case 131: // $for_cond531
      var $560=$i;
      var $561=$st;
      var $subframeSize532=(($561+16)|0);
      var $562=HEAP32[(($subframeSize532)>>2)];
      var $cmp533=(($560)|0) < (($562)|0);
      if ($cmp533) { __label__ = 132; break; } else { __label__ = 134; break; }
    case 132: // $for_body535
      var $563=$i;
      var $arrayidx536=(($vla377+($563<<2))|0);
      var $564=HEAPF32[(($arrayidx536)>>2)];
      var $565=$i;
      var $arrayidx537=(($vla375+($565<<2))|0);
      var $566=HEAPF32[(($arrayidx537)>>2)];
      var $sub538=$564-$566;
      var $567=$i;
      var $arrayidx539=(($vla362+($567<<2))|0);
      HEAPF32[(($arrayidx539)>>2)]=$sub538;
      __label__ = 133; break;
    case 133: // $for_inc540
      var $568=$i;
      var $inc541=(($568+1)|0);
      $i=$inc541;
      __label__ = 131; break;
    case 134: // $for_end542
      var $569=$scale;
      var $570=$st;
      var $subframeSize543=(($570+16)|0);
      var $571=HEAP32[(($subframeSize543)>>2)];
      _signal_div($vla362, $vla362, $569, $571);
      var $572=$vla360;
      var $573=$st;
      var $subframeSize544=(($573+16)|0);
      var $574=HEAP32[(($subframeSize544)>>2)];
      var $mul545=((($574<<2))|0);
      _memset($572, 0, $mul545, 1);
      var $575=$st;
      var $submodeID546=(($575+156)|0);
      var $576=HEAP32[(($submodeID546)>>2)];
      var $577=$st;
      var $submodes547=(($577+152)|0);
      var $578=HEAP32[(($submodes547)>>2)];
      var $arrayidx548=(($578+($576<<2))|0);
      var $579=HEAP32[(($arrayidx548)>>2)];
      var $innovation_quant549=(($579+36)|0);
      var $580=HEAP32[(($innovation_quant549)>>2)];
      var $581=$st;
      var $interp_qlpc550=(($581+80)|0);
      var $582=HEAP32[(($interp_qlpc550)>>2)];
      var $583=$st;
      var $submodeID551=(($583+156)|0);
      var $584=HEAP32[(($submodeID551)>>2)];
      var $585=$st;
      var $submodes552=(($585+152)|0);
      var $586=HEAP32[(($submodes552)>>2)];
      var $arrayidx553=(($586+($584<<2))|0);
      var $587=HEAP32[(($arrayidx553)>>2)];
      var $innovation_params=(($587+44)|0);
      var $588=HEAP32[(($innovation_params)>>2)];
      var $589=$st;
      var $lpcSize554=(($589+28)|0);
      var $590=HEAP32[(($lpcSize554)>>2)];
      var $591=$st;
      var $subframeSize555=(($591+16)|0);
      var $592=HEAP32[(($subframeSize555)>>2)];
      var $593=$bits_addr;
      var $594=$stack;
      var $595=$st;
      var $complexity=(($595+164)|0);
      var $596=HEAP32[(($complexity)>>2)];
      var $597=$st;
      var $submodeID556=(($597+156)|0);
      var $598=HEAP32[(($submodeID556)>>2)];
      var $599=$st;
      var $submodes557=(($599+152)|0);
      var $600=HEAP32[(($submodes557)>>2)];
      var $arrayidx558=(($600+($598<<2))|0);
      var $601=HEAP32[(($arrayidx558)>>2)];
      var $double_codebook=(($601+12)|0);
      var $602=HEAP32[(($double_codebook)>>2)];
      FUNCTION_TABLE[$580]($vla362, $582, $vla51, $vla53, $588, $590, $592, $vla360, $vla358, $593, $594, $596, $602);
      var $603=$scale;
      var $604=$st;
      var $subframeSize559=(($604+16)|0);
      var $605=HEAP32[(($subframeSize559)>>2)];
      _signal_mul($vla360, $vla360, $603, $605);
      var $606=$st;
      var $submodeID560=(($606+156)|0);
      var $607=HEAP32[(($submodeID560)>>2)];
      var $608=$st;
      var $submodes561=(($608+152)|0);
      var $609=HEAP32[(($submodes561)>>2)];
      var $arrayidx562=(($609+($607<<2))|0);
      var $610=HEAP32[(($arrayidx562)>>2)];
      var $double_codebook563=(($610+12)|0);
      var $611=HEAP32[(($double_codebook563)>>2)];
      var $tobool564=(($611)|0)!=0;
      if ($tobool564) { __label__ = 135; break; } else { __label__ = 144; break; }
    case 135: // $if_then565
      var $612=$stack;
      $tmp_stack=$612;
      var $613=$st;
      var $subframeSize566=(($613+16)|0);
      var $614=HEAP32[(($subframeSize566)>>2)];
      var $615=_llvm_stacksave();
      $saved_stack567=$615;
      var $vla568=STACKTOP;STACKTOP += $614*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $616=$vla568;
      var $617=$st;
      var $subframeSize569=(($617+16)|0);
      var $618=HEAP32[(($subframeSize569)>>2)];
      var $mul570=((($618<<2))|0);
      _memset($616, 0, $mul570, 1);
      $i=0;
      __label__ = 136; break;
    case 136: // $for_cond571
      var $619=$i;
      var $620=$st;
      var $subframeSize572=(($620+16)|0);
      var $621=HEAP32[(($subframeSize572)>>2)];
      var $cmp573=(($619)|0) < (($621)|0);
      if ($cmp573) { __label__ = 137; break; } else { __label__ = 139; break; }
    case 137: // $for_body575
      var $622=$i;
      var $arrayidx576=(($vla362+($622<<2))|0);
      var $623=HEAPF32[(($arrayidx576)>>2)];
      var $mul577=$623*2.5;
      var $624=$i;
      var $arrayidx578=(($vla362+($624<<2))|0);
      HEAPF32[(($arrayidx578)>>2)]=$mul577;
      __label__ = 138; break;
    case 138: // $for_inc579
      var $625=$i;
      var $inc580=(($625+1)|0);
      $i=$inc580;
      __label__ = 136; break;
    case 139: // $for_end581
      var $626=$st;
      var $submodeID582=(($626+156)|0);
      var $627=HEAP32[(($submodeID582)>>2)];
      var $628=$st;
      var $submodes583=(($628+152)|0);
      var $629=HEAP32[(($submodes583)>>2)];
      var $arrayidx584=(($629+($627<<2))|0);
      var $630=HEAP32[(($arrayidx584)>>2)];
      var $innovation_quant585=(($630+36)|0);
      var $631=HEAP32[(($innovation_quant585)>>2)];
      var $632=$st;
      var $interp_qlpc586=(($632+80)|0);
      var $633=HEAP32[(($interp_qlpc586)>>2)];
      var $634=$st;
      var $submodeID587=(($634+156)|0);
      var $635=HEAP32[(($submodeID587)>>2)];
      var $636=$st;
      var $submodes588=(($636+152)|0);
      var $637=HEAP32[(($submodes588)>>2)];
      var $arrayidx589=(($637+($635<<2))|0);
      var $638=HEAP32[(($arrayidx589)>>2)];
      var $innovation_params590=(($638+44)|0);
      var $639=HEAP32[(($innovation_params590)>>2)];
      var $640=$st;
      var $lpcSize591=(($640+28)|0);
      var $641=HEAP32[(($lpcSize591)>>2)];
      var $642=$st;
      var $subframeSize592=(($642+16)|0);
      var $643=HEAP32[(($subframeSize592)>>2)];
      var $644=$bits_addr;
      var $645=$stack;
      var $646=$st;
      var $complexity593=(($646+164)|0);
      var $647=HEAP32[(($complexity593)>>2)];
      FUNCTION_TABLE[$631]($vla362, $633, $vla51, $vla53, $639, $641, $643, $vla568, $vla358, $644, $645, $647, 0);
      var $648=$scale;
      var $mul594=$648*0.4000000059604645;
      var $649=$st;
      var $subframeSize595=(($649+16)|0);
      var $650=HEAP32[(($subframeSize595)>>2)];
      _signal_mul($vla568, $vla568, $mul594, $650);
      $i=0;
      __label__ = 140; break;
    case 140: // $for_cond596
      var $651=$i;
      var $652=$st;
      var $subframeSize597=(($652+16)|0);
      var $653=HEAP32[(($subframeSize597)>>2)];
      var $cmp598=(($651)|0) < (($653)|0);
      if ($cmp598) { __label__ = 141; break; } else { __label__ = 143; break; }
    case 141: // $for_body600
      var $654=$i;
      var $arrayidx601=(($vla360+($654<<2))|0);
      var $655=HEAPF32[(($arrayidx601)>>2)];
      var $656=$i;
      var $arrayidx602=(($vla568+($656<<2))|0);
      var $657=HEAPF32[(($arrayidx602)>>2)];
      var $add603=$655+$657;
      var $658=$i;
      var $arrayidx604=(($vla360+($658<<2))|0);
      HEAPF32[(($arrayidx604)>>2)]=$add603;
      __label__ = 142; break;
    case 142: // $for_inc605
      var $659=$i;
      var $inc606=(($659+1)|0);
      $i=$inc606;
      __label__ = 140; break;
    case 143: // $for_end607
      var $660=$tmp_stack;
      $stack=$660;
      var $661=$saved_stack567;
      _llvm_stackrestore($661);
      __label__ = 144; break;
    case 144: // $if_end608
      $i=0;
      __label__ = 145; break;
    case 145: // $for_cond609
      var $662=$i;
      var $663=$st;
      var $subframeSize610=(($663+16)|0);
      var $664=HEAP32[(($subframeSize610)>>2)];
      var $cmp611=(($662)|0) < (($664)|0);
      if ($cmp611) { __label__ = 146; break; } else { __label__ = 148; break; }
    case 146: // $for_body613
      var $665=$i;
      var $arrayidx614=(($vla360+($665<<2))|0);
      var $666=HEAPF32[(($arrayidx614)>>2)];
      var $667=$i;
      var $arrayidx615=(($vla373+($667<<2))|0);
      HEAPF32[(($arrayidx615)>>2)]=$666;
      __label__ = 147; break;
    case 147: // $for_inc616
      var $668=$i;
      var $inc617=(($668+1)|0);
      $i=$inc617;
      __label__ = 145; break;
    case 148: // $for_end618
      var $669=$st;
      var $innov_rms_save619=(($669+104)|0);
      var $670=HEAP32[(($innov_rms_save619)>>2)];
      var $tobool620=(($670)|0)!=0;
      if ($tobool620) { __label__ = 149; break; } else { __label__ = 150; break; }
    case 149: // $if_then621
      var $671=$st;
      var $subframeSize622=(($671+16)|0);
      var $672=HEAP32[(($subframeSize622)>>2)];
      var $call623=_compute_rms($vla360, $672);
      var $mul624=$call623*0.7071099877357483;
      var $673=$sub;
      var $674=$st;
      var $innov_rms_save625=(($674+104)|0);
      var $675=HEAP32[(($innov_rms_save625)>>2)];
      var $arrayidx626=(($675+($673<<2))|0);
      HEAPF32[(($arrayidx626)>>2)]=$mul624;
      __label__ = 150; break;
    case 150: // $if_end627
      var $676=$st;
      var $subframeSize628=(($676+16)|0);
      var $677=HEAP32[(($subframeSize628)>>2)];
      var $call629=_compute_rms16($vla373, $677);
      var $678=$sub;
      var $679=$st;
      var $exc_rms630=(($679+100)|0);
      var $680=HEAP32[(($exc_rms630)>>2)];
      var $arrayidx631=(($680+($678<<2))|0);
      HEAPF32[(($arrayidx631)>>2)]=$call629;
      __label__ = 151; break;
    case 151: // $if_end632
      $i=0;
      __label__ = 152; break;
    case 152: // $for_cond633
      var $681=$i;
      var $682=$st;
      var $lpcSize634=(($682+28)|0);
      var $683=HEAP32[(($lpcSize634)>>2)];
      var $cmp635=(($681)|0) < (($683)|0);
      if ($cmp635) { __label__ = 153; break; } else { __label__ = 155; break; }
    case 153: // $for_body637
      var $684=$i;
      var $685=$st;
      var $mem_sp638=(($685+84)|0);
      var $686=HEAP32[(($mem_sp638)>>2)];
      var $arrayidx639=(($686+($684<<2))|0);
      var $687=HEAPF32[(($arrayidx639)>>2)];
      var $688=$i;
      var $arrayidx640=(($vla356+($688<<2))|0);
      HEAPF32[(($arrayidx640)>>2)]=$687;
      __label__ = 154; break;
    case 154: // $for_inc641
      var $689=$i;
      var $inc642=(($689+1)|0);
      $i=$inc642;
      __label__ = 152; break;
    case 155: // $for_end643
      var $690=$st;
      var $interp_qlpc644=(($690+80)|0);
      var $691=HEAP32[(($interp_qlpc644)>>2)];
      var $692=$sp;
      var $693=$st;
      var $subframeSize645=(($693+16)|0);
      var $694=HEAP32[(($subframeSize645)>>2)];
      var $695=$st;
      var $lpcSize646=(($695+28)|0);
      var $696=HEAP32[(($lpcSize646)>>2)];
      var $697=$st;
      var $mem_sp647=(($697+84)|0);
      var $698=HEAP32[(($mem_sp647)>>2)];
      var $699=$stack;
      _iir_mem16($vla373, $691, $692, $694, $696, $698, $699);
      var $700=$sp;
      var $701=$st;
      var $subframeSize648=(($701+16)|0);
      var $702=HEAP32[(($subframeSize648)>>2)];
      var $703=$st;
      var $lpcSize649=(($703+28)|0);
      var $704=HEAP32[(($lpcSize649)>>2)];
      var $705=$st;
      var $mem_sw650=(($705+92)|0);
      var $706=HEAP32[(($mem_sw650)>>2)];
      var $707=$stack;
      _filter_mem16($700, $vla51, $vla53, $vla377, $702, $704, $706, $707);
      var $708=$saved_stack372;
      _llvm_stackrestore($708);
      __label__ = 156; break;
    case 156: // $for_inc651
      var $709=$sub;
      var $inc652=(($709+1)|0);
      $sub=$inc652;
      __label__ = 97; break;
    case 157: // $for_end653
      $i=0;
      __label__ = 158; break;
    case 158: // $for_cond654
      var $710=$i;
      var $711=$st;
      var $lpcSize655=(($711+28)|0);
      var $712=HEAP32[(($lpcSize655)>>2)];
      var $cmp656=(($710)|0) < (($712)|0);
      if ($cmp656) { __label__ = 159; break; } else { __label__ = 161; break; }
    case 159: // $for_body658
      var $713=$i;
      var $arrayidx659=(($vla55+($713<<2))|0);
      var $714=HEAPF32[(($arrayidx659)>>2)];
      var $715=$i;
      var $716=$st;
      var $old_lsp660=(($716+72)|0);
      var $717=HEAP32[(($old_lsp660)>>2)];
      var $arrayidx661=(($717+($715<<2))|0);
      HEAPF32[(($arrayidx661)>>2)]=$714;
      __label__ = 160; break;
    case 160: // $for_inc662
      var $718=$i;
      var $inc663=(($718+1)|0);
      $i=$inc663;
      __label__ = 158; break;
    case 161: // $for_end664
      $i=0;
      __label__ = 162; break;
    case 162: // $for_cond665
      var $719=$i;
      var $720=$st;
      var $lpcSize666=(($720+28)|0);
      var $721=HEAP32[(($lpcSize666)>>2)];
      var $cmp667=(($719)|0) < (($721)|0);
      if ($cmp667) { __label__ = 163; break; } else { __label__ = 165; break; }
    case 163: // $for_body669
      var $722=$i;
      var $arrayidx670=(($vla57+($722<<2))|0);
      var $723=HEAPF32[(($arrayidx670)>>2)];
      var $724=$i;
      var $725=$st;
      var $old_qlsp671=(($725+76)|0);
      var $726=HEAP32[(($old_qlsp671)>>2)];
      var $arrayidx672=(($726+($724<<2))|0);
      HEAPF32[(($arrayidx672)>>2)]=$723;
      __label__ = 164; break;
    case 164: // $for_inc673
      var $727=$i;
      var $inc674=(($727+1)|0);
      $i=$inc674;
      __label__ = 162; break;
    case 165: // $for_end675
      var $728=$st;
      var $first676=(($728+32)|0);
      HEAP32[(($first676)>>2)]=0;
      $retval=1;
      $cleanup_dest_slot=1;
      __label__ = 166; break;
    case 166: // $cleanup
      var $729=$saved_stack;
      _llvm_stackrestore($729);
      var $730=$retval;
      STACKTOP = __stackBase__;
      return $730;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_encode["X"]=1;

function _sb_decoder_init($m) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $tmp=__stackBase__;
      var $st;
      var $mode;
      $m_addr=$m;
      var $call=_speex_alloc78(100);
      var $0=$call;
      $st=$0;
      var $1=$st;
      var $tobool=(($1)|0)!=0;
      if ($tobool) { __label__ = 2; break; } else { __label__ = 1; break; }
    case 1: // $if_then
      $retval=0;
      __label__ = 3; break;
    case 2: // $if_end
      var $2=$m_addr;
      var $3=$st;
      var $mode3=(($3)|0);
      HEAP32[(($mode3)>>2)]=$2;
      var $4=$m_addr;
      var $mode4=(($4)|0);
      var $5=HEAP32[(($mode4)>>2)];
      var $6=$5;
      $mode=$6;
      var $7=$st;
      var $encode_submode=(($7+88)|0);
      HEAP32[(($encode_submode)>>2)]=1;
      var $8=$mode;
      var $nb_mode=(($8)|0);
      var $9=HEAP32[(($nb_mode)>>2)];
      var $call5=_speex_decoder_init($9);
      var $10=$st;
      var $st_low=(($10+4)|0);
      HEAP32[(($st_low)>>2)]=$call5;
      var $11=$st;
      var $stack=(($11+40)|0);
      HEAP32[(($stack)>>2)]=0;
      var $12=$mode;
      var $frameSize=(($12+4)|0);
      var $13=HEAP32[(($frameSize)>>2)];
      var $mul=((($13<<1))|0);
      var $14=$st;
      var $full_frame_size=(($14+8)|0);
      HEAP32[(($full_frame_size)>>2)]=$mul;
      var $15=$mode;
      var $frameSize6=(($15+4)|0);
      var $16=HEAP32[(($frameSize6)>>2)];
      var $17=$st;
      var $frame_size=(($17+12)|0);
      HEAP32[(($frame_size)>>2)]=$16;
      var $18=$mode;
      var $subframeSize=(($18+8)|0);
      var $19=HEAP32[(($subframeSize)>>2)];
      var $20=$st;
      var $subframeSize7=(($20+16)|0);
      HEAP32[(($subframeSize7)>>2)]=$19;
      var $21=$mode;
      var $frameSize8=(($21+4)|0);
      var $22=HEAP32[(($frameSize8)>>2)];
      var $23=$mode;
      var $subframeSize9=(($23+8)|0);
      var $24=HEAP32[(($subframeSize9)>>2)];
      var $div=(((($22)|0)/(($24)|0))|0);
      var $25=$st;
      var $nbSubframes=(($25+20)|0);
      HEAP32[(($nbSubframes)>>2)]=$div;
      var $26=$mode;
      var $lpcSize=(($26+12)|0);
      var $27=HEAP32[(($lpcSize)>>2)];
      var $28=$st;
      var $lpcSize10=(($28+24)|0);
      HEAP32[(($lpcSize10)>>2)]=$27;
      var $29=$st;
      var $st_low11=(($29+4)|0);
      var $30=HEAP32[(($st_low11)>>2)];
      var $31=$st;
      var $sampling_rate=(($31+32)|0);
      var $32=$sampling_rate;
      var $call12=_speex_decoder_ctl($30, 25, $32);
      var $33=$st;
      var $sampling_rate13=(($33+32)|0);
      var $34=HEAP32[(($sampling_rate13)>>2)];
      var $mul14=((($34<<1))|0);
      HEAP32[(($sampling_rate13)>>2)]=$mul14;
      HEAP32[(($tmp)>>2)]=1;
      var $35=$st;
      var $st_low15=(($35+4)|0);
      var $36=HEAP32[(($st_low15)>>2)];
      var $37=$tmp;
      var $call16=_speex_decoder_ctl($36, 105, $37);
      var $38=$mode;
      var $submodes=(($38+32)|0);
      var $arraydecay=(($submodes)|0);
      var $39=$st;
      var $submodes17=(($39+92)|0);
      HEAP32[(($submodes17)>>2)]=$arraydecay;
      var $40=$mode;
      var $defaultSubmode=(($40+64)|0);
      var $41=HEAP32[(($defaultSubmode)>>2)];
      var $42=$st;
      var $submodeID=(($42+96)|0);
      HEAP32[(($submodeID)>>2)]=$41;
      var $43=$st;
      var $first=(($43+28)|0);
      HEAP32[(($first)>>2)]=1;
      var $call18=_speex_alloc78(256);
      var $44=$call18;
      var $45=$st;
      var $g0_mem=(($45+44)|0);
      HEAP32[(($g0_mem)>>2)]=$44;
      var $call19=_speex_alloc78(256);
      var $46=$call19;
      var $47=$st;
      var $g1_mem=(($47+48)|0);
      HEAP32[(($g1_mem)>>2)]=$46;
      var $48=$st;
      var $subframeSize20=(($48+16)|0);
      var $49=HEAP32[(($subframeSize20)>>2)];
      var $mul21=((($49<<2))|0);
      var $call22=_speex_alloc78($mul21);
      var $50=$call22;
      var $51=$st;
      var $excBuf=(($51+52)|0);
      HEAP32[(($excBuf)>>2)]=$50;
      var $52=$st;
      var $lpcSize23=(($52+24)|0);
      var $53=HEAP32[(($lpcSize23)>>2)];
      var $mul24=((($53<<2))|0);
      var $call25=_speex_alloc78($mul24);
      var $54=$call25;
      var $55=$st;
      var $old_qlsp=(($55+56)|0);
      HEAP32[(($old_qlsp)>>2)]=$54;
      var $56=$st;
      var $lpcSize26=(($56+24)|0);
      var $57=HEAP32[(($lpcSize26)>>2)];
      var $mul27=((($57<<2))|0);
      var $call28=_speex_alloc78($mul27);
      var $58=$call28;
      var $59=$st;
      var $interp_qlpc=(($59+60)|0);
      HEAP32[(($interp_qlpc)>>2)]=$58;
      var $60=$st;
      var $nbSubframes29=(($60+20)|0);
      var $61=HEAP32[(($nbSubframes29)>>2)];
      var $mul30=((($61<<2))|0);
      var $call31=_speex_alloc78($mul30);
      var $62=$call31;
      var $63=$st;
      var $pi_gain=(($63+68)|0);
      HEAP32[(($pi_gain)>>2)]=$62;
      var $64=$st;
      var $nbSubframes32=(($64+20)|0);
      var $65=HEAP32[(($nbSubframes32)>>2)];
      var $mul33=((($65<<2))|0);
      var $call34=_speex_alloc78($mul33);
      var $66=$call34;
      var $67=$st;
      var $exc_rms=(($67+72)|0);
      HEAP32[(($exc_rms)>>2)]=$66;
      var $68=$st;
      var $lpcSize35=(($68+24)|0);
      var $69=HEAP32[(($lpcSize35)>>2)];
      var $mul36=((($69<<1))|0);
      var $mul37=((($mul36<<2))|0);
      var $call38=_speex_alloc78($mul37);
      var $70=$call38;
      var $71=$st;
      var $mem_sp=(($71+64)|0);
      HEAP32[(($mem_sp)>>2)]=$70;
      var $72=$st;
      var $innov_save=(($72+76)|0);
      HEAP32[(($innov_save)>>2)]=0;
      var $73=$st;
      var $lpc_enh_enabled=(($73+36)|0);
      HEAP32[(($lpc_enh_enabled)>>2)]=0;
      var $74=$st;
      var $seed=(($74+84)|0);
      HEAP32[(($seed)>>2)]=1000;
      var $75=$st;
      var $76=$75;
      $retval=$76;
      __label__ = 3; break;
    case 3: // $return
      var $77=$retval;
      STACKTOP = __stackBase__;
      return $77;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_decoder_init["X"]=1;

function _sb_decoder_destroy($state) {
  ;
  var __label__;

  var $state_addr;
  var $st;
  $state_addr=$state;
  var $0=$state_addr;
  var $1=$0;
  $st=$1;
  var $2=$st;
  var $st_low=(($2+4)|0);
  var $3=HEAP32[(($st_low)>>2)];
  _speex_decoder_destroy($3);
  var $4=$st;
  var $g0_mem=(($4+44)|0);
  var $5=HEAP32[(($g0_mem)>>2)];
  var $6=$5;
  _speex_free81($6);
  var $7=$st;
  var $g1_mem=(($7+48)|0);
  var $8=HEAP32[(($g1_mem)>>2)];
  var $9=$8;
  _speex_free81($9);
  var $10=$st;
  var $excBuf=(($10+52)|0);
  var $11=HEAP32[(($excBuf)>>2)];
  var $12=$11;
  _speex_free81($12);
  var $13=$st;
  var $old_qlsp=(($13+56)|0);
  var $14=HEAP32[(($old_qlsp)>>2)];
  var $15=$14;
  _speex_free81($15);
  var $16=$st;
  var $interp_qlpc=(($16+60)|0);
  var $17=HEAP32[(($interp_qlpc)>>2)];
  var $18=$17;
  _speex_free81($18);
  var $19=$st;
  var $pi_gain=(($19+68)|0);
  var $20=HEAP32[(($pi_gain)>>2)];
  var $21=$20;
  _speex_free81($21);
  var $22=$st;
  var $exc_rms=(($22+72)|0);
  var $23=HEAP32[(($exc_rms)>>2)];
  var $24=$23;
  _speex_free81($24);
  var $25=$st;
  var $mem_sp=(($25+64)|0);
  var $26=HEAP32[(($mem_sp)>>2)];
  var $27=$26;
  _speex_free81($27);
  var $28=$state_addr;
  _speex_free81($28);
  ;
  return;
}
_sb_decoder_destroy["X"]=1;

function _sb_decode($state, $bits, $vout) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $bits_addr;
      var $vout_addr;
      var $i;
      var $sub;
      var $st;
      var $wideband;
      var $ret;
      var $stack;
      var $dtx=__stackBase__;
      var $mode;
      var $out;
      var $low_innov_alias;
      var $exc_ener_sum;
      var $saved_stack;
      var $innov_save;
      var $sp;
      var $filter_ratio;
      var $el;
      var $offset;
      var $rl;
      var $rh;
      var $saved_stack88;
      var $g;
      var $quant;
      var $gc;
      var $scale;
      var $qgc;
      var $tmp_stack;
      var $saved_stack197;
      var $cleanup_dest_slot;
      $state_addr=$state;
      $bits_addr=$bits;
      $vout_addr=$vout;
      var $0=$vout_addr;
      var $1=$0;
      $out=$1;
      $exc_ener_sum=0;
      var $2=$state_addr;
      var $3=$2;
      $st=$3;
      var $4=$st;
      var $stack1=(($4+40)|0);
      var $5=HEAP32[(($stack1)>>2)];
      $stack=$5;
      var $6=$st;
      var $mode2=(($6)|0);
      var $7=HEAP32[(($mode2)>>2)];
      var $mode3=(($7)|0);
      var $8=HEAP32[(($mode3)>>2)];
      var $9=$8;
      $mode=$9;
      var $10=$out;
      var $11=$st;
      var $frame_size=(($11+12)|0);
      var $12=HEAP32[(($frame_size)>>2)];
      var $add_ptr=(($10+($12<<2))|0);
      $low_innov_alias=$add_ptr;
      var $13=$st;
      var $st_low=(($13+4)|0);
      var $14=HEAP32[(($st_low)>>2)];
      var $15=$low_innov_alias;
      var $16=$15;
      var $call=_speex_decoder_ctl($14, 104, $16);
      var $17=$st;
      var $st_low4=(($17+4)|0);
      var $18=HEAP32[(($st_low4)>>2)];
      var $19=$bits_addr;
      var $20=$out;
      var $call5=_speex_decode_native($18, $19, $20);
      $ret=$call5;
      var $21=$st;
      var $st_low6=(($21+4)|0);
      var $22=HEAP32[(($st_low6)>>2)];
      var $23=$dtx;
      var $call7=_speex_decoder_ctl($22, 103, $23);
      var $24=$ret;
      var $cmp=(($24)|0)!=0;
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $25=$ret;
      $retval=$25;
      __label__ = 73; break;
    case 2: // $if_end
      var $26=$bits_addr;
      var $tobool=(($26)|0)!=0;
      if ($tobool) { __label__ = 4; break; } else { __label__ = 3; break; }
    case 3: // $if_then8
      var $27=$st;
      var $28=$out;
      var $29=HEAP32[(($dtx)>>2)];
      var $30=$stack;
      _sb_decode_lost($27, $28, $29, $30);
      $retval=0;
      __label__ = 73; break;
    case 4: // $if_end9
      var $31=$st;
      var $encode_submode=(($31+88)|0);
      var $32=HEAP32[(($encode_submode)>>2)];
      var $tobool10=(($32)|0)!=0;
      if ($tobool10) { __label__ = 5; break; } else { __label__ = 15; break; }
    case 5: // $if_then11
      var $33=$bits_addr;
      var $call12=_speex_bits_remaining($33);
      var $cmp13=(($call12)|0) > 0;
      if ($cmp13) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $if_then14
      var $34=$bits_addr;
      var $call15=_speex_bits_peek($34);
      $wideband=$call15;
      __label__ = 8; break;
    case 7: // $if_else
      $wideband=0;
      __label__ = 8; break;
    case 8: // $if_end16
      var $35=$wideband;
      var $tobool17=(($35)|0)!=0;
      if ($tobool17) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then18
      var $36=$bits_addr;
      var $call19=_speex_bits_unpack_unsigned($36, 1);
      $wideband=$call19;
      var $37=$bits_addr;
      var $call20=_speex_bits_unpack_unsigned($37, 3);
      var $38=$st;
      var $submodeID=(($38+96)|0);
      HEAP32[(($submodeID)>>2)]=$call20;
      __label__ = 11; break;
    case 10: // $if_else21
      var $39=$st;
      var $submodeID22=(($39+96)|0);
      HEAP32[(($submodeID22)>>2)]=0;
      __label__ = 11; break;
    case 11: // $if_end23
      var $40=$st;
      var $submodeID24=(($40+96)|0);
      var $41=HEAP32[(($submodeID24)>>2)];
      var $cmp25=(($41)|0)!=0;
      if ($cmp25) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $land_lhs_true
      var $42=$st;
      var $submodeID26=(($42+96)|0);
      var $43=HEAP32[(($submodeID26)>>2)];
      var $44=$st;
      var $submodes=(($44+92)|0);
      var $45=HEAP32[(($submodes)>>2)];
      var $arrayidx=(($45+($43<<2))|0);
      var $46=HEAP32[(($arrayidx)>>2)];
      var $cmp27=(($46)|0)==0;
      if ($cmp27) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then28
      _speex_notify90(((STRING_TABLE.__str72)|0));
      $retval=-2;
      __label__ = 73; break;
    case 14: // $if_end29
      __label__ = 15; break;
    case 15: // $if_end30
      var $47=$st;
      var $submodeID31=(($47+96)|0);
      var $48=HEAP32[(($submodeID31)>>2)];
      var $49=$st;
      var $submodes32=(($49+92)|0);
      var $50=HEAP32[(($submodes32)>>2)];
      var $arrayidx33=(($50+($48<<2))|0);
      var $51=HEAP32[(($arrayidx33)>>2)];
      var $cmp34=(($51)|0)==0;
      if ($cmp34) { __label__ = 16; break; } else { __label__ = 23; break; }
    case 16: // $if_then35
      var $52=HEAP32[(($dtx)>>2)];
      var $tobool36=(($52)|0)!=0;
      if ($tobool36) { __label__ = 17; break; } else { __label__ = 18; break; }
    case 17: // $if_then37
      var $53=$st;
      var $54=$out;
      var $55=$stack;
      _sb_decode_lost($53, $54, 1, $55);
      $retval=0;
      __label__ = 73; break;
    case 18: // $if_end38
      $i=0;
      __label__ = 19; break;
    case 19: // $for_cond
      var $56=$i;
      var $57=$st;
      var $frame_size39=(($57+12)|0);
      var $58=HEAP32[(($frame_size39)>>2)];
      var $cmp40=(($56)|0) < (($58)|0);
      if ($cmp40) { __label__ = 20; break; } else { __label__ = 22; break; }
    case 20: // $for_body
      var $59=$st;
      var $frame_size41=(($59+12)|0);
      var $60=HEAP32[(($frame_size41)>>2)];
      var $61=$i;
      var $add=(($60+$61)|0);
      var $62=$out;
      var $arrayidx42=(($62+($add<<2))|0);
      HEAPF32[(($arrayidx42)>>2)]=1.0000000036274937e-15;
      __label__ = 21; break;
    case 21: // $for_inc
      var $63=$i;
      var $inc=(($63+1)|0);
      $i=$inc;
      __label__ = 19; break;
    case 22: // $for_end
      var $64=$st;
      var $first=(($64+28)|0);
      HEAP32[(($first)>>2)]=1;
      var $65=$out;
      var $66=$st;
      var $frame_size43=(($66+12)|0);
      var $67=HEAP32[(($frame_size43)>>2)];
      var $add_ptr44=(($65+($67<<2))|0);
      var $68=$st;
      var $interp_qlpc=(($68+60)|0);
      var $69=HEAP32[(($interp_qlpc)>>2)];
      var $70=$out;
      var $71=$st;
      var $frame_size45=(($71+12)|0);
      var $72=HEAP32[(($frame_size45)>>2)];
      var $add_ptr46=(($70+($72<<2))|0);
      var $73=$st;
      var $frame_size47=(($73+12)|0);
      var $74=HEAP32[(($frame_size47)>>2)];
      var $75=$st;
      var $lpcSize=(($75+24)|0);
      var $76=HEAP32[(($lpcSize)>>2)];
      var $77=$st;
      var $mem_sp=(($77+64)|0);
      var $78=HEAP32[(($mem_sp)>>2)];
      var $79=$stack;
      _iir_mem16($add_ptr44, $69, $add_ptr46, $74, $76, $78, $79);
      var $80=$out;
      var $81=$out;
      var $82=$st;
      var $frame_size48=(($82+12)|0);
      var $83=HEAP32[(($frame_size48)>>2)];
      var $add_ptr49=(($81+($83<<2))|0);
      var $84=$out;
      var $85=$st;
      var $full_frame_size=(($85+8)|0);
      var $86=HEAP32[(($full_frame_size)>>2)];
      var $87=$st;
      var $g0_mem=(($87+44)|0);
      var $88=HEAP32[(($g0_mem)>>2)];
      var $89=$st;
      var $g1_mem=(($89+48)|0);
      var $90=HEAP32[(($g1_mem)>>2)];
      var $91=$stack;
      _qmf_synth($80, $add_ptr49, ((_h0)|0), $84, $86, 64, $88, $90, $91);
      $retval=0;
      __label__ = 73; break;
    case 23: // $if_end50
      var $92=$st;
      var $nbSubframes=(($92+20)|0);
      var $93=HEAP32[(($nbSubframes)>>2)];
      var $94=_llvm_stacksave();
      $saved_stack=$94;
      var $vla=STACKTOP;STACKTOP += $93*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $95=$st;
      var $nbSubframes51=(($95+20)|0);
      var $96=HEAP32[(($nbSubframes51)>>2)];
      var $vla52=STACKTOP;STACKTOP += $96*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $97=$st;
      var $st_low53=(($97+4)|0);
      var $98=HEAP32[(($st_low53)>>2)];
      var $99=$vla;
      var $call54=_speex_decoder_ctl($98, 100, $99);
      var $100=$st;
      var $st_low55=(($100+4)|0);
      var $101=HEAP32[(($st_low55)>>2)];
      var $102=$vla52;
      var $call56=_speex_decoder_ctl($101, 101, $102);
      var $103=$st;
      var $lpcSize57=(($103+24)|0);
      var $104=HEAP32[(($lpcSize57)>>2)];
      var $vla58=STACKTOP;STACKTOP += $104*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $105=$st;
      var $lpcSize59=(($105+24)|0);
      var $106=HEAP32[(($lpcSize59)>>2)];
      var $vla60=STACKTOP;STACKTOP += $106*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $107=$st;
      var $submodeID61=(($107+96)|0);
      var $108=HEAP32[(($submodeID61)>>2)];
      var $109=$st;
      var $submodes62=(($109+92)|0);
      var $110=HEAP32[(($submodes62)>>2)];
      var $arrayidx63=(($110+($108<<2))|0);
      var $111=HEAP32[(($arrayidx63)>>2)];
      var $lsp_unquant=(($111+20)|0);
      var $112=HEAP32[(($lsp_unquant)>>2)];
      var $113=$st;
      var $lpcSize64=(($113+24)|0);
      var $114=HEAP32[(($lpcSize64)>>2)];
      var $115=$bits_addr;
      FUNCTION_TABLE[$112]($vla58, $114, $115);
      var $116=$st;
      var $first65=(($116+28)|0);
      var $117=HEAP32[(($first65)>>2)];
      var $tobool66=(($117)|0)!=0;
      if ($tobool66) { __label__ = 24; break; } else { __label__ = 29; break; }
    case 24: // $if_then67
      $i=0;
      __label__ = 25; break;
    case 25: // $for_cond68
      var $118=$i;
      var $119=$st;
      var $lpcSize69=(($119+24)|0);
      var $120=HEAP32[(($lpcSize69)>>2)];
      var $cmp70=(($118)|0) < (($120)|0);
      if ($cmp70) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body71
      var $121=$i;
      var $arrayidx72=(($vla58+($121<<2))|0);
      var $122=HEAPF32[(($arrayidx72)>>2)];
      var $123=$i;
      var $124=$st;
      var $old_qlsp=(($124+56)|0);
      var $125=HEAP32[(($old_qlsp)>>2)];
      var $arrayidx73=(($125+($123<<2))|0);
      HEAPF32[(($arrayidx73)>>2)]=$122;
      __label__ = 27; break;
    case 27: // $for_inc74
      var $126=$i;
      var $inc75=(($126+1)|0);
      $i=$inc75;
      __label__ = 25; break;
    case 28: // $for_end76
      __label__ = 29; break;
    case 29: // $if_end77
      var $127=$st;
      var $lpcSize78=(($127+24)|0);
      var $128=HEAP32[(($lpcSize78)>>2)];
      var $vla79=STACKTOP;STACKTOP += $128*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      $sub=0;
      __label__ = 30; break;
    case 30: // $for_cond80
      var $129=$sub;
      var $130=$st;
      var $nbSubframes81=(($130+20)|0);
      var $131=HEAP32[(($nbSubframes81)>>2)];
      var $cmp82=(($129)|0) < (($131)|0);
      if ($cmp82) { __label__ = 31; break; } else { __label__ = 68; break; }
    case 31: // $for_body83
      $innov_save=0;
      $el=0;
      $rl=0;
      $rh=0;
      var $132=$st;
      var $subframeSize=(($132+16)|0);
      var $133=HEAP32[(($subframeSize)>>2)];
      var $134=$sub;
      var $mul=(($133*$134)|0);
      $offset=$mul;
      var $135=$out;
      var $136=$st;
      var $frame_size84=(($136+12)|0);
      var $137=HEAP32[(($frame_size84)>>2)];
      var $add_ptr85=(($135+($137<<2))|0);
      var $138=$offset;
      var $add_ptr86=(($add_ptr85+($138<<2))|0);
      $sp=$add_ptr86;
      var $139=$st;
      var $subframeSize87=(($139+16)|0);
      var $140=HEAP32[(($subframeSize87)>>2)];
      var $141=_llvm_stacksave();
      $saved_stack88=$141;
      var $vla89=STACKTOP;STACKTOP += $140*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $142=$st;
      var $innov_save90=(($142+76)|0);
      var $143=HEAP32[(($innov_save90)>>2)];
      var $tobool91=(($143)|0)!=0;
      if ($tobool91) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: // $if_then92
      var $144=$st;
      var $innov_save93=(($144+76)|0);
      var $145=HEAP32[(($innov_save93)>>2)];
      var $146=$offset;
      var $mul94=((($146<<1))|0);
      var $add_ptr95=(($145+($mul94<<2))|0);
      $innov_save=$add_ptr95;
      var $147=$innov_save;
      var $148=$147;
      var $149=$st;
      var $subframeSize96=(($149+16)|0);
      var $150=HEAP32[(($subframeSize96)>>2)];
      var $mul97=((($150<<1))|0);
      var $mul98=((($mul97<<2))|0);
      _memset($148, 0, $mul98, 1);
      __label__ = 33; break;
    case 33: // $if_end99
      var $151=$st;
      var $old_qlsp100=(($151+56)|0);
      var $152=HEAP32[(($old_qlsp100)>>2)];
      var $153=$st;
      var $lpcSize101=(($153+24)|0);
      var $154=HEAP32[(($lpcSize101)>>2)];
      var $155=$sub;
      var $156=$st;
      var $nbSubframes102=(($156+20)|0);
      var $157=HEAP32[(($nbSubframes102)>>2)];
      _lsp_interpolate($152, $vla58, $vla60, $154, $155, $157);
      var $158=$st;
      var $lpcSize103=(($158+24)|0);
      var $159=HEAP32[(($lpcSize103)>>2)];
      _lsp_enforce_margin($vla60, $159, 0.05000000074505806);
      var $160=$st;
      var $lpcSize104=(($160+24)|0);
      var $161=HEAP32[(($lpcSize104)>>2)];
      var $162=$stack;
      _lsp_to_lpc($vla60, $vla79, $161, $162);
      var $163=$sub;
      var $164=$st;
      var $pi_gain=(($164+68)|0);
      var $165=HEAP32[(($pi_gain)>>2)];
      var $arrayidx105=(($165+($163<<2))|0);
      HEAPF32[(($arrayidx105)>>2)]=1;
      $rh=1;
      $i=0;
      __label__ = 34; break;
    case 34: // $for_cond106
      var $166=$i;
      var $167=$st;
      var $lpcSize107=(($167+24)|0);
      var $168=HEAP32[(($lpcSize107)>>2)];
      var $cmp108=(($166)|0) < (($168)|0);
      if ($cmp108) { __label__ = 35; break; } else { __label__ = 37; break; }
    case 35: // $for_body109
      var $169=$i;
      var $add110=(($169+1)|0);
      var $arrayidx111=(($vla79+($add110<<2))|0);
      var $170=HEAPF32[(($arrayidx111)>>2)];
      var $171=$i;
      var $arrayidx112=(($vla79+($171<<2))|0);
      var $172=HEAPF32[(($arrayidx112)>>2)];
      var $sub113=$170-$172;
      var $173=$rh;
      var $add114=$173+$sub113;
      $rh=$add114;
      var $174=$i;
      var $arrayidx115=(($vla79+($174<<2))|0);
      var $175=HEAPF32[(($arrayidx115)>>2)];
      var $176=$i;
      var $add116=(($176+1)|0);
      var $arrayidx117=(($vla79+($add116<<2))|0);
      var $177=HEAPF32[(($arrayidx117)>>2)];
      var $add118=$175+$177;
      var $178=$sub;
      var $179=$st;
      var $pi_gain119=(($179+68)|0);
      var $180=HEAP32[(($pi_gain119)>>2)];
      var $arrayidx120=(($180+($178<<2))|0);
      var $181=HEAPF32[(($arrayidx120)>>2)];
      var $add121=$181+$add118;
      HEAPF32[(($arrayidx120)>>2)]=$add121;
      __label__ = 36; break;
    case 36: // $for_inc122
      var $182=$i;
      var $add123=(($182+2)|0);
      $i=$add123;
      __label__ = 34; break;
    case 37: // $for_end124
      var $183=$sub;
      var $arrayidx125=(($vla+($183<<2))|0);
      var $184=HEAPF32[(($arrayidx125)>>2)];
      $rl=$184;
      var $185=$rl;
      var $conv=$185;
      var $add126=$conv+0.01;
      var $186=$rh;
      var $conv127=$186;
      var $add128=$conv127+0.01;
      var $div=$add126/$add128;
      var $conv129=$div;
      $filter_ratio=$conv129;
      var $187=$vla89;
      var $188=$st;
      var $subframeSize130=(($188+16)|0);
      var $189=HEAP32[(($subframeSize130)>>2)];
      var $mul131=((($189<<2))|0);
      _memset($187, 0, $mul131, 1);
      var $190=$st;
      var $submodeID132=(($190+96)|0);
      var $191=HEAP32[(($submodeID132)>>2)];
      var $192=$st;
      var $submodes133=(($192+92)|0);
      var $193=HEAP32[(($submodes133)>>2)];
      var $arrayidx134=(($193+($191<<2))|0);
      var $194=HEAP32[(($arrayidx134)>>2)];
      var $innovation_unquant=(($194+40)|0);
      var $195=HEAP32[(($innovation_unquant)>>2)];
      var $tobool135=(($195)|0)!=0;
      if ($tobool135) { __label__ = 43; break; } else { __label__ = 38; break; }
    case 38: // $if_then136
      var $196=$bits_addr;
      var $call137=_speex_bits_unpack_unsigned($196, 5);
      $quant=$call137;
      var $197=$quant;
      var $sub138=(($197-10)|0);
      var $conv139=(($sub138)|0);
      var $mul140=$conv139*0.125;
      var $conv141=$mul140;
      var $call142=_exp($conv141);
      var $conv143=$call142;
      $g=$conv143;
      var $198=$g;
      var $199=$filter_ratio;
      var $div144=$198/$199;
      $g=$div144;
      $i=0;
      __label__ = 39; break;
    case 39: // $for_cond145
      var $200=$i;
      var $201=$st;
      var $subframeSize146=(($201+16)|0);
      var $202=HEAP32[(($subframeSize146)>>2)];
      var $cmp147=(($200)|0) < (($202)|0);
      if ($cmp147) { __label__ = 40; break; } else { __label__ = 42; break; }
    case 40: // $for_body149
      var $203=$mode;
      var $folding_gain=(($203+28)|0);
      var $204=HEAPF32[(($folding_gain)>>2)];
      var $205=$offset;
      var $206=$i;
      var $add150=(($205+$206)|0);
      var $207=$low_innov_alias;
      var $arrayidx151=(($207+($add150<<2))|0);
      var $208=HEAPF32[(($arrayidx151)>>2)];
      var $mul152=$204*$208;
      var $209=$g;
      var $mul153=$mul152*$209;
      var $210=$i;
      var $arrayidx154=(($vla89+($210<<2))|0);
      HEAPF32[(($arrayidx154)>>2)]=$mul153;
      var $211=$mode;
      var $folding_gain155=(($211+28)|0);
      var $212=HEAPF32[(($folding_gain155)>>2)];
      var $213=$offset;
      var $214=$i;
      var $add156=(($213+$214)|0);
      var $add157=(($add156+1)|0);
      var $215=$low_innov_alias;
      var $arrayidx158=(($215+($add157<<2))|0);
      var $216=HEAPF32[(($arrayidx158)>>2)];
      var $mul159=$212*$216;
      var $217=$g;
      var $mul160=$mul159*$217;
      var $sub161=(-$mul160);
      var $218=$i;
      var $add162=(($218+1)|0);
      var $arrayidx163=(($vla89+($add162<<2))|0);
      HEAPF32[(($arrayidx163)>>2)]=$sub161;
      __label__ = 41; break;
    case 41: // $for_inc164
      var $219=$i;
      var $add165=(($219+2)|0);
      $i=$add165;
      __label__ = 39; break;
    case 42: // $for_end166
      __label__ = 52; break;
    case 43: // $if_else167
      var $220=$bits_addr;
      var $call168=_speex_bits_unpack_unsigned($220, 4);
      $qgc=$call168;
      var $221=$sub;
      var $arrayidx169=(($vla52+($221<<2))|0);
      var $222=HEAPF32[(($arrayidx169)>>2)];
      $el=$222;
      var $223=$qgc;
      var $arrayidx170=((_gc_quant_bound+($223<<2))|0);
      var $224=HEAPF32[(($arrayidx170)>>2)];
      var $conv171=$224;
      var $mul172=$conv171*0.8736;
      var $conv173=$mul172;
      $gc=$conv173;
      var $225=$st;
      var $subframeSize174=(($225+16)|0);
      var $226=HEAP32[(($subframeSize174)>>2)];
      var $cmp175=(($226)|0)==80;
      if ($cmp175) { __label__ = 44; break; } else { __label__ = 45; break; }
    case 44: // $if_then177
      var $227=$gc;
      var $mul178=$227*1.414199948310852;
      $gc=$mul178;
      __label__ = 45; break;
    case 45: // $if_end179
      var $228=$gc;
      var $229=$el;
      var $mul180=$228*$229;
      var $230=$filter_ratio;
      var $div181=$mul180/$230;
      $scale=$div181;
      var $231=$st;
      var $submodeID182=(($231+96)|0);
      var $232=HEAP32[(($submodeID182)>>2)];
      var $233=$st;
      var $submodes183=(($233+92)|0);
      var $234=HEAP32[(($submodes183)>>2)];
      var $arrayidx184=(($234+($232<<2))|0);
      var $235=HEAP32[(($arrayidx184)>>2)];
      var $innovation_unquant185=(($235+40)|0);
      var $236=HEAP32[(($innovation_unquant185)>>2)];
      var $237=$st;
      var $submodeID186=(($237+96)|0);
      var $238=HEAP32[(($submodeID186)>>2)];
      var $239=$st;
      var $submodes187=(($239+92)|0);
      var $240=HEAP32[(($submodes187)>>2)];
      var $arrayidx188=(($240+($238<<2))|0);
      var $241=HEAP32[(($arrayidx188)>>2)];
      var $innovation_params=(($241+44)|0);
      var $242=HEAP32[(($innovation_params)>>2)];
      var $243=$st;
      var $subframeSize189=(($243+16)|0);
      var $244=HEAP32[(($subframeSize189)>>2)];
      var $245=$bits_addr;
      var $246=$stack;
      var $247=$st;
      var $seed=(($247+84)|0);
      FUNCTION_TABLE[$236]($vla89, $242, $244, $245, $246, $seed);
      var $248=$scale;
      var $249=$st;
      var $subframeSize190=(($249+16)|0);
      var $250=HEAP32[(($subframeSize190)>>2)];
      _signal_mul($vla89, $vla89, $248, $250);
      var $251=$st;
      var $submodeID191=(($251+96)|0);
      var $252=HEAP32[(($submodeID191)>>2)];
      var $253=$st;
      var $submodes192=(($253+92)|0);
      var $254=HEAP32[(($submodes192)>>2)];
      var $arrayidx193=(($254+($252<<2))|0);
      var $255=HEAP32[(($arrayidx193)>>2)];
      var $double_codebook=(($255+12)|0);
      var $256=HEAP32[(($double_codebook)>>2)];
      var $tobool194=(($256)|0)!=0;
      if ($tobool194) { __label__ = 46; break; } else { __label__ = 51; break; }
    case 46: // $if_then195
      var $257=$stack;
      $tmp_stack=$257;
      var $258=$st;
      var $subframeSize196=(($258+16)|0);
      var $259=HEAP32[(($subframeSize196)>>2)];
      var $260=_llvm_stacksave();
      $saved_stack197=$260;
      var $vla198=STACKTOP;STACKTOP += $259*4;STACKTOP = ((((STACKTOP)+3)>>2)<<2);assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack");
      var $261=$vla198;
      var $262=$st;
      var $subframeSize199=(($262+16)|0);
      var $263=HEAP32[(($subframeSize199)>>2)];
      var $mul200=((($263<<2))|0);
      _memset($261, 0, $mul200, 1);
      var $264=$st;
      var $submodeID201=(($264+96)|0);
      var $265=HEAP32[(($submodeID201)>>2)];
      var $266=$st;
      var $submodes202=(($266+92)|0);
      var $267=HEAP32[(($submodes202)>>2)];
      var $arrayidx203=(($267+($265<<2))|0);
      var $268=HEAP32[(($arrayidx203)>>2)];
      var $innovation_unquant204=(($268+40)|0);
      var $269=HEAP32[(($innovation_unquant204)>>2)];
      var $270=$st;
      var $submodeID205=(($270+96)|0);
      var $271=HEAP32[(($submodeID205)>>2)];
      var $272=$st;
      var $submodes206=(($272+92)|0);
      var $273=HEAP32[(($submodes206)>>2)];
      var $arrayidx207=(($273+($271<<2))|0);
      var $274=HEAP32[(($arrayidx207)>>2)];
      var $innovation_params208=(($274+44)|0);
      var $275=HEAP32[(($innovation_params208)>>2)];
      var $276=$st;
      var $subframeSize209=(($276+16)|0);
      var $277=HEAP32[(($subframeSize209)>>2)];
      var $278=$bits_addr;
      var $279=$stack;
      var $280=$st;
      var $seed210=(($280+84)|0);
      FUNCTION_TABLE[$269]($vla198, $275, $277, $278, $279, $seed210);
      var $281=$scale;
      var $mul211=$281*0.4000000059604645;
      var $282=$st;
      var $subframeSize212=(($282+16)|0);
      var $283=HEAP32[(($subframeSize212)>>2)];
      _signal_mul($vla198, $vla198, $mul211, $283);
      $i=0;
      __label__ = 47; break;
    case 47: // $for_cond213
      var $284=$i;
      var $285=$st;
      var $subframeSize214=(($285+16)|0);
      var $286=HEAP32[(($subframeSize214)>>2)];
      var $cmp215=(($284)|0) < (($286)|0);
      if ($cmp215) { __label__ = 48; break; } else { __label__ = 50; break; }
    case 48: // $for_body217
      var $287=$i;
      var $arrayidx218=(($vla89+($287<<2))|0);
      var $288=HEAPF32[(($arrayidx218)>>2)];
      var $289=$i;
      var $arrayidx219=(($vla198+($289<<2))|0);
      var $290=HEAPF32[(($arrayidx219)>>2)];
      var $add220=$288+$290;
      var $291=$i;
      var $arrayidx221=(($vla89+($291<<2))|0);
      HEAPF32[(($arrayidx221)>>2)]=$add220;
      __label__ = 49; break;
    case 49: // $for_inc222
      var $292=$i;
      var $inc223=(($292+1)|0);
      $i=$inc223;
      __label__ = 47; break;
    case 50: // $for_end224
      var $293=$tmp_stack;
      $stack=$293;
      var $294=$saved_stack197;
      _llvm_stackrestore($294);
      __label__ = 51; break;
    case 51: // $if_end225
      __label__ = 52; break;
    case 52: // $if_end226
      var $295=$st;
      var $innov_save227=(($295+76)|0);
      var $296=HEAP32[(($innov_save227)>>2)];
      var $tobool228=(($296)|0)!=0;
      if ($tobool228) { __label__ = 53; break; } else { __label__ = 58; break; }
    case 53: // $if_then229
      $i=0;
      __label__ = 54; break;
    case 54: // $for_cond230
      var $297=$i;
      var $298=$st;
      var $subframeSize231=(($298+16)|0);
      var $299=HEAP32[(($subframeSize231)>>2)];
      var $cmp232=(($297)|0) < (($299)|0);
      if ($cmp232) { __label__ = 55; break; } else { __label__ = 57; break; }
    case 55: // $for_body234
      var $300=$i;
      var $arrayidx235=(($vla89+($300<<2))|0);
      var $301=HEAPF32[(($arrayidx235)>>2)];
      var $302=$i;
      var $mul236=((($302<<1))|0);
      var $303=$innov_save;
      var $arrayidx237=(($303+($mul236<<2))|0);
      HEAPF32[(($arrayidx237)>>2)]=$301;
      __label__ = 56; break;
    case 56: // $for_inc238
      var $304=$i;
      var $inc239=(($304+1)|0);
      $i=$inc239;
      __label__ = 54; break;
    case 57: // $for_end240
      __label__ = 58; break;
    case 58: // $if_end241
      var $305=$st;
      var $excBuf=(($305+52)|0);
      var $306=HEAP32[(($excBuf)>>2)];
      var $307=$st;
      var $interp_qlpc242=(($307+60)|0);
      var $308=HEAP32[(($interp_qlpc242)>>2)];
      var $309=$sp;
      var $310=$st;
      var $subframeSize243=(($310+16)|0);
      var $311=HEAP32[(($subframeSize243)>>2)];
      var $312=$st;
      var $lpcSize244=(($312+24)|0);
      var $313=HEAP32[(($lpcSize244)>>2)];
      var $314=$st;
      var $mem_sp245=(($314+64)|0);
      var $315=HEAP32[(($mem_sp245)>>2)];
      var $316=$stack;
      _iir_mem16($306, $308, $309, $311, $313, $315, $316);
      $i=0;
      __label__ = 59; break;
    case 59: // $for_cond246
      var $317=$i;
      var $318=$st;
      var $subframeSize247=(($318+16)|0);
      var $319=HEAP32[(($subframeSize247)>>2)];
      var $cmp248=(($317)|0) < (($319)|0);
      if ($cmp248) { __label__ = 60; break; } else { __label__ = 62; break; }
    case 60: // $for_body250
      var $320=$i;
      var $arrayidx251=(($vla89+($320<<2))|0);
      var $321=HEAPF32[(($arrayidx251)>>2)];
      var $322=$i;
      var $323=$st;
      var $excBuf252=(($323+52)|0);
      var $324=HEAP32[(($excBuf252)>>2)];
      var $arrayidx253=(($324+($322<<2))|0);
      HEAPF32[(($arrayidx253)>>2)]=$321;
      __label__ = 61; break;
    case 61: // $for_inc254
      var $325=$i;
      var $inc255=(($325+1)|0);
      $i=$inc255;
      __label__ = 59; break;
    case 62: // $for_end256
      $i=0;
      __label__ = 63; break;
    case 63: // $for_cond257
      var $326=$i;
      var $327=$st;
      var $lpcSize258=(($327+24)|0);
      var $328=HEAP32[(($lpcSize258)>>2)];
      var $cmp259=(($326)|0) < (($328)|0);
      if ($cmp259) { __label__ = 64; break; } else { __label__ = 66; break; }
    case 64: // $for_body261
      var $329=$i;
      var $arrayidx262=(($vla79+($329<<2))|0);
      var $330=HEAPF32[(($arrayidx262)>>2)];
      var $331=$i;
      var $332=$st;
      var $interp_qlpc263=(($332+60)|0);
      var $333=HEAP32[(($interp_qlpc263)>>2)];
      var $arrayidx264=(($333+($331<<2))|0);
      HEAPF32[(($arrayidx264)>>2)]=$330;
      __label__ = 65; break;
    case 65: // $for_inc265
      var $334=$i;
      var $inc266=(($334+1)|0);
      $i=$inc266;
      __label__ = 63; break;
    case 66: // $for_end267
      var $335=$st;
      var $excBuf268=(($335+52)|0);
      var $336=HEAP32[(($excBuf268)>>2)];
      var $337=$st;
      var $subframeSize269=(($337+16)|0);
      var $338=HEAP32[(($subframeSize269)>>2)];
      var $call270=_compute_rms16($336, $338);
      var $339=$sub;
      var $340=$st;
      var $exc_rms=(($340+72)|0);
      var $341=HEAP32[(($exc_rms)>>2)];
      var $arrayidx271=(($341+($339<<2))|0);
      HEAPF32[(($arrayidx271)>>2)]=$call270;
      var $342=$exc_ener_sum;
      var $343=$sub;
      var $344=$st;
      var $exc_rms272=(($344+72)|0);
      var $345=HEAP32[(($exc_rms272)>>2)];
      var $arrayidx273=(($345+($343<<2))|0);
      var $346=HEAPF32[(($arrayidx273)>>2)];
      var $347=$sub;
      var $348=$st;
      var $exc_rms274=(($348+72)|0);
      var $349=HEAP32[(($exc_rms274)>>2)];
      var $arrayidx275=(($349+($347<<2))|0);
      var $350=HEAPF32[(($arrayidx275)>>2)];
      var $mul276=$346*$350;
      var $351=$st;
      var $nbSubframes277=(($351+20)|0);
      var $352=HEAP32[(($nbSubframes277)>>2)];
      var $conv278=(($352)|0);
      var $div279=$mul276/$conv278;
      var $add280=$342+$div279;
      $exc_ener_sum=$add280;
      var $353=$saved_stack88;
      _llvm_stackrestore($353);
      __label__ = 67; break;
    case 67: // $for_inc281
      var $354=$sub;
      var $inc282=(($354+1)|0);
      $sub=$inc282;
      __label__ = 30; break;
    case 68: // $for_end283
      var $355=$exc_ener_sum;
      var $conv284=$355;
      var $call285=_sqrt($conv284);
      var $conv286=$call285;
      var $356=$st;
      var $last_ener=(($356+80)|0);
      HEAPF32[(($last_ener)>>2)]=$conv286;
      var $357=$out;
      var $358=$out;
      var $359=$st;
      var $frame_size287=(($359+12)|0);
      var $360=HEAP32[(($frame_size287)>>2)];
      var $add_ptr288=(($358+($360<<2))|0);
      var $361=$out;
      var $362=$st;
      var $full_frame_size289=(($362+8)|0);
      var $363=HEAP32[(($full_frame_size289)>>2)];
      var $364=$st;
      var $g0_mem290=(($364+44)|0);
      var $365=HEAP32[(($g0_mem290)>>2)];
      var $366=$st;
      var $g1_mem291=(($366+48)|0);
      var $367=HEAP32[(($g1_mem291)>>2)];
      var $368=$stack;
      _qmf_synth($357, $add_ptr288, ((_h0)|0), $361, $363, 64, $365, $367, $368);
      $i=0;
      __label__ = 69; break;
    case 69: // $for_cond292
      var $369=$i;
      var $370=$st;
      var $lpcSize293=(($370+24)|0);
      var $371=HEAP32[(($lpcSize293)>>2)];
      var $cmp294=(($369)|0) < (($371)|0);
      if ($cmp294) { __label__ = 70; break; } else { __label__ = 72; break; }
    case 70: // $for_body296
      var $372=$i;
      var $arrayidx297=(($vla58+($372<<2))|0);
      var $373=HEAPF32[(($arrayidx297)>>2)];
      var $374=$i;
      var $375=$st;
      var $old_qlsp298=(($375+56)|0);
      var $376=HEAP32[(($old_qlsp298)>>2)];
      var $arrayidx299=(($376+($374<<2))|0);
      HEAPF32[(($arrayidx299)>>2)]=$373;
      __label__ = 71; break;
    case 71: // $for_inc300
      var $377=$i;
      var $inc301=(($377+1)|0);
      $i=$inc301;
      __label__ = 69; break;
    case 72: // $for_end302
      var $378=$st;
      var $first303=(($378+28)|0);
      HEAP32[(($first303)>>2)]=0;
      $retval=0;
      $cleanup_dest_slot=1;
      var $379=$saved_stack;
      _llvm_stackrestore($379);
      __label__ = 73; break;
    case 73: // $return
      var $380=$retval;
      STACKTOP = __stackBase__;
      return $380;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_decode["X"]=1;

function _sb_decode_lost($st, $out, $dtx, $stack) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $st_addr;
      var $out_addr;
      var $dtx_addr;
      var $stack_addr;
      var $i;
      var $saved_modeid;
      $st_addr=$st;
      $out_addr=$out;
      $dtx_addr=$dtx;
      $stack_addr=$stack;
      $saved_modeid=0;
      var $0=$dtx_addr;
      var $tobool=(($0)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $1=$st_addr;
      var $submodeID=(($1+96)|0);
      var $2=HEAP32[(($submodeID)>>2)];
      $saved_modeid=$2;
      var $3=$st_addr;
      var $submodeID1=(($3+96)|0);
      HEAP32[(($submodeID1)>>2)]=1;
      __label__ = 3; break;
    case 2: // $if_else
      var $4=$st_addr;
      var $interp_qlpc=(($4+60)|0);
      var $5=HEAP32[(($interp_qlpc)>>2)];
      var $6=$st_addr;
      var $interp_qlpc2=(($6+60)|0);
      var $7=HEAP32[(($interp_qlpc2)>>2)];
      var $8=$st_addr;
      var $lpcSize=(($8+24)|0);
      var $9=HEAP32[(($lpcSize)>>2)];
      _bw_lpc(0.9900000095367432, $5, $7, $9);
      __label__ = 3; break;
    case 3: // $if_end
      var $10=$st_addr;
      var $first=(($10+28)|0);
      HEAP32[(($first)>>2)]=1;
      var $11=$dtx_addr;
      var $tobool3=(($11)|0)!=0;
      if ($tobool3) { __label__ = 5; break; } else { __label__ = 4; break; }
    case 4: // $if_then4
      var $12=$st_addr;
      var $last_ener=(($12+80)|0);
      var $13=HEAPF32[(($last_ener)>>2)];
      var $mul=$13*0.8999999761581421;
      var $14=$st_addr;
      var $last_ener5=(($14+80)|0);
      HEAPF32[(($last_ener5)>>2)]=$mul;
      __label__ = 5; break;
    case 5: // $if_end6
      $i=0;
      __label__ = 6; break;
    case 6: // $for_cond
      var $15=$i;
      var $16=$st_addr;
      var $frame_size=(($16+12)|0);
      var $17=HEAP32[(($frame_size)>>2)];
      var $cmp=(($15)|0) < (($17)|0);
      if ($cmp) { __label__ = 7; break; } else { __label__ = 9; break; }
    case 7: // $for_body
      var $18=$st_addr;
      var $last_ener7=(($18+80)|0);
      var $19=HEAPF32[(($last_ener7)>>2)];
      var $20=$st_addr;
      var $seed=(($20+84)|0);
      var $call=_speex_rand96($19, $seed);
      var $21=$i;
      var $22=$st_addr;
      var $frame_size8=(($22+12)|0);
      var $23=HEAP32[(($frame_size8)>>2)];
      var $add=(($21+$23)|0);
      var $24=$out_addr;
      var $arrayidx=(($24+($add<<2))|0);
      HEAPF32[(($arrayidx)>>2)]=$call;
      __label__ = 8; break;
    case 8: // $for_inc
      var $25=$i;
      var $inc=(($25+1)|0);
      $i=$inc;
      __label__ = 6; break;
    case 9: // $for_end
      var $26=$out_addr;
      var $27=$st_addr;
      var $frame_size9=(($27+12)|0);
      var $28=HEAP32[(($frame_size9)>>2)];
      var $add_ptr=(($26+($28<<2))|0);
      var $29=$st_addr;
      var $interp_qlpc10=(($29+60)|0);
      var $30=HEAP32[(($interp_qlpc10)>>2)];
      var $31=$out_addr;
      var $32=$st_addr;
      var $frame_size11=(($32+12)|0);
      var $33=HEAP32[(($frame_size11)>>2)];
      var $add_ptr12=(($31+($33<<2))|0);
      var $34=$st_addr;
      var $frame_size13=(($34+12)|0);
      var $35=HEAP32[(($frame_size13)>>2)];
      var $36=$st_addr;
      var $lpcSize14=(($36+24)|0);
      var $37=HEAP32[(($lpcSize14)>>2)];
      var $38=$st_addr;
      var $mem_sp=(($38+64)|0);
      var $39=HEAP32[(($mem_sp)>>2)];
      var $40=$stack_addr;
      _iir_mem16($add_ptr, $30, $add_ptr12, $35, $37, $39, $40);
      var $41=$out_addr;
      var $42=$out_addr;
      var $43=$st_addr;
      var $frame_size15=(($43+12)|0);
      var $44=HEAP32[(($frame_size15)>>2)];
      var $add_ptr16=(($42+($44<<2))|0);
      var $45=$out_addr;
      var $46=$st_addr;
      var $full_frame_size=(($46+8)|0);
      var $47=HEAP32[(($full_frame_size)>>2)];
      var $48=$st_addr;
      var $g0_mem=(($48+44)|0);
      var $49=HEAP32[(($g0_mem)>>2)];
      var $50=$st_addr;
      var $g1_mem=(($50+48)|0);
      var $51=HEAP32[(($g1_mem)>>2)];
      var $52=$stack_addr;
      _qmf_synth($41, $add_ptr16, ((_h0)|0), $45, $47, 64, $49, $51, $52);
      var $53=$dtx_addr;
      var $tobool17=(($53)|0)!=0;
      if ($tobool17) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then18
      var $54=$saved_modeid;
      var $55=$st_addr;
      var $submodeID19=(($55+96)|0);
      HEAP32[(($submodeID19)>>2)]=$54;
      __label__ = 11; break;
    case 11: // $if_end20
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_decode_lost["X"]=1;

function _speex_notify90($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str375)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _sb_encoder_ctl($state, $request, $ptr) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $request_addr;
      var $ptr_addr;
      var $st;
      var $q=__stackBase__;
      var $qual=__stackBase__+4;
      var $i=__stackBase__+8;
      var $rate=__stackBase__+12;
      var $target;
      var $vbr_qual=__stackBase__+16;
      var $nb_qual=__stackBase__+20;
      var $quality;
      var $i96=__stackBase__+24;
      var $rate97=__stackBase__+28;
      var $target98;
      var $tmp=__stackBase__+32;
      var $i137;
      var $low_rate=__stackBase__+36;
      var $i227;
      var $g;
      var $i240;
      $state_addr=$state;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$state_addr;
      var $1=$0;
      $st=$1;
      var $2=$request_addr;
      if ($2 == 3) {
        __label__ = 1; break;
      }
      else if ($2 == 10) {
        __label__ = 2; break;
      }
      else if ($2 == 8) {
        __label__ = 3; break;
      }
      else if ($2 == 34) {
        __label__ = 4; break;
      }
      else if ($2 == 35) {
        __label__ = 5; break;
      }
      else if ($2 == 9) {
        __label__ = 6; break;
      }
      else if ($2 == 6) {
        __label__ = 7; break;
      }
      else if ($2 == 12) {
        __label__ = 8; break;
      }
      else if ($2 == 13) {
        __label__ = 9; break;
      }
      else if ($2 == 30) {
        __label__ = 10; break;
      }
      else if ($2 == 31) {
        __label__ = 11; break;
      }
      else if ($2 == 14) {
        __label__ = 12; break;
      }
      else if ($2 == 15) {
        __label__ = 17; break;
      }
      else if ($2 == 32) {
        __label__ = 18; break;
      }
      else if ($2 == 33) {
        __label__ = 28; break;
      }
      else if ($2 == 4) {
        __label__ = 29; break;
      }
      else if ($2 == 16) {
        __label__ = 34; break;
      }
      else if ($2 == 17) {
        __label__ = 37; break;
      }
      else if ($2 == 18) {
        __label__ = 38; break;
      }
      else if ($2 == 19) {
        __label__ = 44; break;
      }
      else if ($2 == 24) {
        __label__ = 48; break;
      }
      else if ($2 == 25) {
        __label__ = 49; break;
      }
      else if ($2 == 26) {
        __label__ = 50; break;
      }
      else if ($2 == 36) {
        __label__ = 63; break;
      }
      else if ($2 == 37) {
        __label__ = 64; break;
      }
      else if ($2 == 39) {
        __label__ = 65; break;
      }
      else if ($2 == 40) {
        __label__ = 66; break;
      }
      else if ($2 == 41) {
        __label__ = 67; break;
      }
      else if ($2 == 42) {
        __label__ = 68; break;
      }
      else if ($2 == 43) {
        __label__ = 80; break;
      }
      else if ($2 == 44) {
        __label__ = 81; break;
      }
      else if ($2 == 45) {
        __label__ = 82; break;
      }
      else if ($2 == 100) {
        __label__ = 83; break;
      }
      else if ($2 == 101) {
        __label__ = 88; break;
      }
      else if ($2 == 29) {
        __label__ = 93; break;
      }
      else if ($2 == 104) {
        __label__ = 94; break;
      }
      else if ($2 == 105) {
        __label__ = 95; break;
      }
      else if ($2 == 106) {
        __label__ = 96; break;
      }
      else {
      __label__ = 97; break;
      }
      
    case 1: // $sw_bb
      var $3=$st;
      var $full_frame_size=(($3+8)|0);
      var $4=HEAP32[(($full_frame_size)>>2)];
      var $5=$ptr_addr;
      var $6=$5;
      HEAP32[(($6)>>2)]=$4;
      __label__ = 98; break;
    case 2: // $sw_bb1
      var $7=$ptr_addr;
      var $8=$7;
      var $9=HEAP32[(($8)>>2)];
      var $10=$st;
      var $submodeID=(($10+156)|0);
      HEAP32[(($submodeID)>>2)]=$9;
      var $11=$st;
      var $submodeSelect=(($11+160)|0);
      HEAP32[(($submodeSelect)>>2)]=$9;
      __label__ = 98; break;
    case 3: // $sw_bb2
      var $12=$st;
      var $st_low=(($12+4)|0);
      var $13=HEAP32[(($st_low)>>2)];
      var $14=$ptr_addr;
      var $call=_speex_encoder_ctl($13, 8, $14);
      __label__ = 98; break;
    case 4: // $sw_bb3
      var $15=$st;
      var $st_low4=(($15+4)|0);
      var $16=HEAP32[(($st_low4)>>2)];
      var $17=$ptr_addr;
      var $call5=_speex_encoder_ctl($16, 34, $17);
      __label__ = 98; break;
    case 5: // $sw_bb6
      var $18=$st;
      var $st_low7=(($18+4)|0);
      var $19=HEAP32[(($st_low7)>>2)];
      var $20=$ptr_addr;
      var $call8=_speex_encoder_ctl($19, 35, $20);
      __label__ = 98; break;
    case 6: // $sw_bb9
      var $21=$st;
      var $st_low10=(($21+4)|0);
      var $22=HEAP32[(($st_low10)>>2)];
      var $23=$ptr_addr;
      var $call11=_speex_encoder_ctl($22, 9, $23);
      __label__ = 98; break;
    case 7: // $sw_bb12
      var $24=$st;
      var $25=$24;
      var $26=$ptr_addr;
      var $call13=_speex_encoder_ctl($25, 4, $26);
      __label__ = 98; break;
    case 8: // $sw_bb14
      var $27=$ptr_addr;
      var $28=$27;
      var $29=HEAP32[(($28)>>2)];
      var $30=$st;
      var $vbr_enabled=(($30+112)|0);
      HEAP32[(($vbr_enabled)>>2)]=$29;
      var $31=$st;
      var $st_low15=(($31+4)|0);
      var $32=HEAP32[(($st_low15)>>2)];
      var $33=$ptr_addr;
      var $call16=_speex_encoder_ctl($32, 12, $33);
      __label__ = 98; break;
    case 9: // $sw_bb17
      var $34=$st;
      var $vbr_enabled18=(($34+112)|0);
      var $35=HEAP32[(($vbr_enabled18)>>2)];
      var $36=$ptr_addr;
      var $37=$36;
      HEAP32[(($37)>>2)]=$35;
      __label__ = 98; break;
    case 10: // $sw_bb19
      var $38=$ptr_addr;
      var $39=$38;
      var $40=HEAP32[(($39)>>2)];
      var $41=$st;
      var $vad_enabled=(($41+140)|0);
      HEAP32[(($vad_enabled)>>2)]=$40;
      var $42=$st;
      var $st_low20=(($42+4)|0);
      var $43=HEAP32[(($st_low20)>>2)];
      var $44=$ptr_addr;
      var $call21=_speex_encoder_ctl($43, 30, $44);
      __label__ = 98; break;
    case 11: // $sw_bb22
      var $45=$st;
      var $vad_enabled23=(($45+140)|0);
      var $46=HEAP32[(($vad_enabled23)>>2)];
      var $47=$ptr_addr;
      var $48=$47;
      HEAP32[(($48)>>2)]=$46;
      __label__ = 98; break;
    case 12: // $sw_bb24
      var $49=$ptr_addr;
      var $50=$49;
      var $51=HEAPF32[(($50)>>2)];
      var $conv=$51;
      var $add=$conv+0.6;
      var $conv25=$add;
      HEAPF32[(($qual)>>2)]=$conv25;
      var $52=$ptr_addr;
      var $53=$52;
      var $54=HEAPF32[(($53)>>2)];
      var $55=$st;
      var $vbr_quality=(($55+108)|0);
      HEAPF32[(($vbr_quality)>>2)]=$54;
      var $56=HEAPF32[(($qual)>>2)];
      var $cmp=$56 > 10;
      if ($cmp) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then
      HEAPF32[(($qual)>>2)]=10;
      __label__ = 14; break;
    case 14: // $if_end
      var $57=$ptr_addr;
      var $58=$57;
      var $59=HEAPF32[(($58)>>2)];
      var $conv27=$59;
      var $add28=$conv27+0.5;
      var $call29=_floor($add28);
      var $conv30=(($call29)|0);
      HEAP32[(($q)>>2)]=$conv30;
      var $60=HEAP32[(($q)>>2)];
      var $cmp31=(($60)|0) > 10;
      if ($cmp31) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then33
      HEAP32[(($q)>>2)]=10;
      __label__ = 16; break;
    case 16: // $if_end34
      var $61=$st;
      var $st_low35=(($61+4)|0);
      var $62=HEAP32[(($st_low35)>>2)];
      var $63=$qual;
      var $call36=_speex_encoder_ctl($62, 14, $63);
      var $64=$state_addr;
      var $65=$q;
      var $call37=_speex_encoder_ctl($64, 4, $65);
      __label__ = 98; break;
    case 17: // $sw_bb38
      var $66=$st;
      var $vbr_quality39=(($66+108)|0);
      var $67=HEAPF32[(($vbr_quality39)>>2)];
      var $68=$ptr_addr;
      var $69=$68;
      HEAPF32[(($69)>>2)]=$67;
      __label__ = 98; break;
    case 18: // $sw_bb40
      var $70=$ptr_addr;
      var $71=$70;
      var $72=HEAP32[(($71)>>2)];
      var $73=$st;
      var $abr_enabled=(($73+124)|0);
      HEAP32[(($abr_enabled)>>2)]=$72;
      var $74=$st;
      var $abr_enabled41=(($74+124)|0);
      var $75=HEAP32[(($abr_enabled41)>>2)];
      var $cmp42=(($75)|0)!=0;
      var $conv43=(($cmp42)&1);
      var $76=$st;
      var $vbr_enabled44=(($76+112)|0);
      HEAP32[(($vbr_enabled44)>>2)]=$conv43;
      var $77=$st;
      var $st_low45=(($77+4)|0);
      var $78=HEAP32[(($st_low45)>>2)];
      var $79=$st;
      var $vbr_enabled46=(($79+112)|0);
      var $80=$vbr_enabled46;
      var $call47=_speex_encoder_ctl($78, 12, $80);
      var $81=$st;
      var $vbr_enabled48=(($81+112)|0);
      var $82=HEAP32[(($vbr_enabled48)>>2)];
      var $tobool=(($82)|0)!=0;
      if ($tobool) { __label__ = 19; break; } else { __label__ = 27; break; }
    case 19: // $if_then49
      HEAP32[(($i)>>2)]=10;
      var $83=$ptr_addr;
      var $84=$83;
      var $85=HEAP32[(($84)>>2)];
      $target=$85;
      __label__ = 20; break;
    case 20: // $while_cond
      var $86=HEAP32[(($i)>>2)];
      var $cmp50=(($86)|0) >= 0;
      if ($cmp50) { __label__ = 21; break; } else { __label__ = 24; break; }
    case 21: // $while_body
      var $87=$st;
      var $88=$87;
      var $89=$i;
      var $call52=_speex_encoder_ctl($88, 4, $89);
      var $90=$st;
      var $91=$90;
      var $92=$rate;
      var $call53=_speex_encoder_ctl($91, 19, $92);
      var $93=HEAP32[(($rate)>>2)];
      var $94=$target;
      var $cmp54=(($93)|0) <= (($94)|0);
      if ($cmp54) { __label__ = 22; break; } else { __label__ = 23; break; }
    case 22: // $if_then56
      __label__ = 24; break;
    case 23: // $if_end57
      var $95=HEAP32[(($i)>>2)];
      var $dec=(($95-1)|0);
      HEAP32[(($i)>>2)]=$dec;
      __label__ = 20; break;
    case 24: // $while_end
      var $96=HEAP32[(($i)>>2)];
      var $conv58=(($96)|0);
      HEAPF32[(($vbr_qual)>>2)]=$conv58;
      var $97=HEAPF32[(($vbr_qual)>>2)];
      var $cmp59=$97 < 0;
      if ($cmp59) { __label__ = 25; break; } else { __label__ = 26; break; }
    case 25: // $if_then61
      HEAPF32[(($vbr_qual)>>2)]=0;
      __label__ = 26; break;
    case 26: // $if_end62
      var $98=$st;
      var $99=$98;
      var $100=$vbr_qual;
      var $call63=_speex_encoder_ctl($99, 14, $100);
      var $101=$st;
      var $abr_count=(($101+136)|0);
      HEAPF32[(($abr_count)>>2)]=0;
      var $102=$st;
      var $abr_drift=(($102+128)|0);
      HEAPF32[(($abr_drift)>>2)]=0;
      var $103=$st;
      var $abr_drift2=(($103+132)|0);
      HEAPF32[(($abr_drift2)>>2)]=0;
      __label__ = 27; break;
    case 27: // $if_end64
      __label__ = 98; break;
    case 28: // $sw_bb65
      var $104=$st;
      var $abr_enabled66=(($104+124)|0);
      var $105=HEAP32[(($abr_enabled66)>>2)];
      var $106=$ptr_addr;
      var $107=$106;
      HEAP32[(($107)>>2)]=$105;
      __label__ = 98; break;
    case 29: // $sw_bb67
      var $108=$ptr_addr;
      var $109=$108;
      var $110=HEAP32[(($109)>>2)];
      $quality=$110;
      var $111=$quality;
      var $cmp68=(($111)|0) < 0;
      if ($cmp68) { __label__ = 30; break; } else { __label__ = 31; break; }
    case 30: // $if_then70
      $quality=0;
      __label__ = 31; break;
    case 31: // $if_end71
      var $112=$quality;
      var $cmp72=(($112)|0) > 10;
      if ($cmp72) { __label__ = 32; break; } else { __label__ = 33; break; }
    case 32: // $if_then74
      $quality=10;
      __label__ = 33; break;
    case 33: // $if_end75
      var $113=$quality;
      var $114=$st;
      var $mode=(($114)|0);
      var $115=HEAP32[(($mode)>>2)];
      var $mode76=(($115)|0);
      var $116=HEAP32[(($mode76)>>2)];
      var $117=$116;
      var $quality_map=(($117+112)|0);
      var $arrayidx=(($quality_map+($113<<2))|0);
      var $118=HEAP32[(($arrayidx)>>2)];
      var $119=$st;
      var $submodeID77=(($119+156)|0);
      HEAP32[(($submodeID77)>>2)]=$118;
      var $120=$st;
      var $submodeSelect78=(($120+160)|0);
      HEAP32[(($submodeSelect78)>>2)]=$118;
      var $121=$quality;
      var $122=$st;
      var $mode79=(($122)|0);
      var $123=HEAP32[(($mode79)>>2)];
      var $mode80=(($123)|0);
      var $124=HEAP32[(($mode80)>>2)];
      var $125=$124;
      var $low_quality_map=(($125+68)|0);
      var $arrayidx81=(($low_quality_map+($121<<2))|0);
      var $126=HEAP32[(($arrayidx81)>>2)];
      HEAP32[(($nb_qual)>>2)]=$126;
      var $127=$st;
      var $st_low82=(($127+4)|0);
      var $128=HEAP32[(($st_low82)>>2)];
      var $129=$nb_qual;
      var $call83=_speex_encoder_ctl($128, 6, $129);
      __label__ = 98; break;
    case 34: // $sw_bb84
      var $130=$st;
      var $st_low85=(($130+4)|0);
      var $131=HEAP32[(($st_low85)>>2)];
      var $132=$ptr_addr;
      var $call86=_speex_encoder_ctl($131, 16, $132);
      var $133=$ptr_addr;
      var $134=$133;
      var $135=HEAP32[(($134)>>2)];
      var $136=$st;
      var $complexity=(($136+164)|0);
      HEAP32[(($complexity)>>2)]=$135;
      var $137=$st;
      var $complexity87=(($137+164)|0);
      var $138=HEAP32[(($complexity87)>>2)];
      var $cmp88=(($138)|0) < 1;
      if ($cmp88) { __label__ = 35; break; } else { __label__ = 36; break; }
    case 35: // $if_then90
      var $139=$st;
      var $complexity91=(($139+164)|0);
      HEAP32[(($complexity91)>>2)]=1;
      __label__ = 36; break;
    case 36: // $if_end92
      __label__ = 98; break;
    case 37: // $sw_bb93
      var $140=$st;
      var $complexity94=(($140+164)|0);
      var $141=HEAP32[(($complexity94)>>2)];
      var $142=$ptr_addr;
      var $143=$142;
      HEAP32[(($143)>>2)]=$141;
      __label__ = 98; break;
    case 38: // $sw_bb95
      HEAP32[(($i96)>>2)]=10;
      var $144=$ptr_addr;
      var $145=$144;
      var $146=HEAP32[(($145)>>2)];
      $target98=$146;
      __label__ = 39; break;
    case 39: // $while_cond99
      var $147=HEAP32[(($i96)>>2)];
      var $cmp100=(($147)|0) >= 0;
      if ($cmp100) { __label__ = 40; break; } else { __label__ = 43; break; }
    case 40: // $while_body102
      var $148=$st;
      var $149=$148;
      var $150=$i96;
      var $call103=_speex_encoder_ctl($149, 4, $150);
      var $151=$st;
      var $152=$151;
      var $153=$rate97;
      var $call104=_speex_encoder_ctl($152, 19, $153);
      var $154=HEAP32[(($rate97)>>2)];
      var $155=$target98;
      var $cmp105=(($154)|0) <= (($155)|0);
      if ($cmp105) { __label__ = 41; break; } else { __label__ = 42; break; }
    case 41: // $if_then107
      __label__ = 43; break;
    case 42: // $if_end108
      var $156=HEAP32[(($i96)>>2)];
      var $dec109=(($156-1)|0);
      HEAP32[(($i96)>>2)]=$dec109;
      __label__ = 39; break;
    case 43: // $while_end110
      __label__ = 98; break;
    case 44: // $sw_bb111
      var $157=$st;
      var $st_low112=(($157+4)|0);
      var $158=HEAP32[(($st_low112)>>2)];
      var $159=$request_addr;
      var $160=$ptr_addr;
      var $call113=_speex_encoder_ctl($158, $159, $160);
      var $161=$st;
      var $submodeID114=(($161+156)|0);
      var $162=HEAP32[(($submodeID114)>>2)];
      var $163=$st;
      var $submodes=(($163+152)|0);
      var $164=HEAP32[(($submodes)>>2)];
      var $arrayidx115=(($164+($162<<2))|0);
      var $165=HEAP32[(($arrayidx115)>>2)];
      var $tobool116=(($165)|0)!=0;
      if ($tobool116) { __label__ = 45; break; } else { __label__ = 46; break; }
    case 45: // $if_then117
      var $166=$st;
      var $sampling_rate=(($166+168)|0);
      var $167=HEAP32[(($sampling_rate)>>2)];
      var $168=$st;
      var $submodeID118=(($168+156)|0);
      var $169=HEAP32[(($submodeID118)>>2)];
      var $170=$st;
      var $submodes119=(($170+152)|0);
      var $171=HEAP32[(($submodes119)>>2)];
      var $arrayidx120=(($171+($169<<2))|0);
      var $172=HEAP32[(($arrayidx120)>>2)];
      var $bits_per_frame=(($172+52)|0);
      var $173=HEAP32[(($bits_per_frame)>>2)];
      var $mul=(($167*$173)|0);
      var $174=$st;
      var $full_frame_size121=(($174+8)|0);
      var $175=HEAP32[(($full_frame_size121)>>2)];
      var $div=(((($mul)|0)/(($175)|0))|0);
      var $176=$ptr_addr;
      var $177=$176;
      var $178=HEAP32[(($177)>>2)];
      var $add122=(($178+$div)|0);
      HEAP32[(($177)>>2)]=$add122;
      __label__ = 47; break;
    case 46: // $if_else
      var $179=$st;
      var $sampling_rate123=(($179+168)|0);
      var $180=HEAP32[(($sampling_rate123)>>2)];
      var $mul124=((($180<<2))|0);
      var $181=$st;
      var $full_frame_size125=(($181+8)|0);
      var $182=HEAP32[(($full_frame_size125)>>2)];
      var $div126=(((($mul124)|0)/(($182)|0))|0);
      var $183=$ptr_addr;
      var $184=$183;
      var $185=HEAP32[(($184)>>2)];
      var $add127=(($185+$div126)|0);
      HEAP32[(($184)>>2)]=$add127;
      __label__ = 47; break;
    case 47: // $if_end128
      __label__ = 98; break;
    case 48: // $sw_bb129
      var $186=$ptr_addr;
      var $187=$186;
      var $188=HEAP32[(($187)>>2)];
      HEAP32[(($tmp)>>2)]=$188;
      var $189=HEAP32[(($tmp)>>2)];
      var $190=$st;
      var $sampling_rate130=(($190+168)|0);
      HEAP32[(($sampling_rate130)>>2)]=$189;
      var $191=HEAP32[(($tmp)>>2)];
      var $shr=$191 >> 1;
      HEAP32[(($tmp)>>2)]=$shr;
      var $192=$st;
      var $st_low131=(($192+4)|0);
      var $193=HEAP32[(($st_low131)>>2)];
      var $194=$tmp;
      var $call132=_speex_encoder_ctl($193, 24, $194);
      __label__ = 98; break;
    case 49: // $sw_bb133
      var $195=$st;
      var $sampling_rate134=(($195+168)|0);
      var $196=HEAP32[(($sampling_rate134)>>2)];
      var $197=$ptr_addr;
      var $198=$197;
      HEAP32[(($198)>>2)]=$196;
      __label__ = 98; break;
    case 50: // $sw_bb135
      var $199=$st;
      var $first=(($199+32)|0);
      HEAP32[(($first)>>2)]=1;
      $i137=0;
      __label__ = 51; break;
    case 51: // $for_cond
      var $200=$i137;
      var $201=$st;
      var $lpcSize=(($201+28)|0);
      var $202=HEAP32[(($lpcSize)>>2)];
      var $cmp138=(($200)|0) < (($202)|0);
      if ($cmp138) { __label__ = 52; break; } else { __label__ = 54; break; }
    case 52: // $for_body
      var $203=$i137;
      var $add140=(($203+1)|0);
      var $conv141=(($add140)|0);
      var $mul142=$conv141*3.1415927410125732;
      var $204=$st;
      var $lpcSize143=(($204+28)|0);
      var $205=HEAP32[(($lpcSize143)>>2)];
      var $add144=(($205+1)|0);
      var $conv145=(($add144)|0);
      var $div146=$mul142/$conv145;
      var $206=$i137;
      var $207=$st;
      var $old_lsp=(($207+72)|0);
      var $208=HEAP32[(($old_lsp)>>2)];
      var $arrayidx147=(($208+($206<<2))|0);
      HEAPF32[(($arrayidx147)>>2)]=$div146;
      __label__ = 53; break;
    case 53: // $for_inc
      var $209=$i137;
      var $inc=(($209+1)|0);
      $i137=$inc;
      __label__ = 51; break;
    case 54: // $for_end
      $i137=0;
      __label__ = 55; break;
    case 55: // $for_cond148
      var $210=$i137;
      var $211=$st;
      var $lpcSize149=(($211+28)|0);
      var $212=HEAP32[(($lpcSize149)>>2)];
      var $cmp150=(($210)|0) < (($212)|0);
      if ($cmp150) { __label__ = 56; break; } else { __label__ = 58; break; }
    case 56: // $for_body152
      var $213=$i137;
      var $214=$st;
      var $mem_sp2=(($214+88)|0);
      var $215=HEAP32[(($mem_sp2)>>2)];
      var $arrayidx153=(($215+($213<<2))|0);
      HEAPF32[(($arrayidx153)>>2)]=0;
      var $216=$i137;
      var $217=$st;
      var $mem_sp=(($217+84)|0);
      var $218=HEAP32[(($mem_sp)>>2)];
      var $arrayidx154=(($218+($216<<2))|0);
      HEAPF32[(($arrayidx154)>>2)]=0;
      var $219=$i137;
      var $220=$st;
      var $mem_sw=(($220+92)|0);
      var $221=HEAP32[(($mem_sw)>>2)];
      var $arrayidx155=(($221+($219<<2))|0);
      HEAPF32[(($arrayidx155)>>2)]=0;
      __label__ = 57; break;
    case 57: // $for_inc156
      var $222=$i137;
      var $inc157=(($222+1)|0);
      $i137=$inc157;
      __label__ = 55; break;
    case 58: // $for_end158
      $i137=0;
      __label__ = 59; break;
    case 59: // $for_cond159
      var $223=$i137;
      var $cmp160=(($223)|0) < 64;
      if ($cmp160) { __label__ = 60; break; } else { __label__ = 62; break; }
    case 60: // $for_body162
      var $224=$i137;
      var $225=$st;
      var $h1_mem=(($225+60)|0);
      var $226=HEAP32[(($h1_mem)>>2)];
      var $arrayidx163=(($226+($224<<2))|0);
      HEAPF32[(($arrayidx163)>>2)]=0;
      var $227=$i137;
      var $228=$st;
      var $h0_mem=(($228+56)|0);
      var $229=HEAP32[(($h0_mem)>>2)];
      var $arrayidx164=(($229+($227<<2))|0);
      HEAPF32[(($arrayidx164)>>2)]=0;
      __label__ = 61; break;
    case 61: // $for_inc165
      var $230=$i137;
      var $inc166=(($230+1)|0);
      $i137=$inc166;
      __label__ = 59; break;
    case 62: // $for_end167
      __label__ = 98; break;
    case 63: // $sw_bb168
      var $231=$ptr_addr;
      var $232=$231;
      var $233=HEAP32[(($232)>>2)];
      var $234=$st;
      var $encode_submode=(($234+148)|0);
      HEAP32[(($encode_submode)>>2)]=$233;
      var $235=$st;
      var $st_low169=(($235+4)|0);
      var $236=HEAP32[(($st_low169)>>2)];
      var $237=$ptr_addr;
      var $call170=_speex_encoder_ctl($236, 36, $237);
      __label__ = 98; break;
    case 64: // $sw_bb171
      var $238=$st;
      var $encode_submode172=(($238+148)|0);
      var $239=HEAP32[(($encode_submode172)>>2)];
      var $240=$ptr_addr;
      var $241=$240;
      HEAP32[(($241)>>2)]=$239;
      __label__ = 98; break;
    case 65: // $sw_bb173
      var $242=$st;
      var $st_low174=(($242+4)|0);
      var $243=HEAP32[(($st_low174)>>2)];
      var $244=$ptr_addr;
      var $call175=_speex_encoder_ctl($243, 39, $244);
      var $245=$ptr_addr;
      var $246=$245;
      var $247=HEAP32[(($246)>>2)];
      var $mul176=((($247<<1))|0);
      var $add177=(($mul176+64)|0);
      var $sub=(($add177-1)|0);
      var $248=$ptr_addr;
      var $249=$248;
      HEAP32[(($249)>>2)]=$sub;
      __label__ = 98; break;
    case 66: // $sw_bb178
      var $250=$st;
      var $st_low179=(($250+4)|0);
      var $251=HEAP32[(($st_low179)>>2)];
      var $252=$ptr_addr;
      var $call180=_speex_encoder_ctl($251, 40, $252);
      __label__ = 98; break;
    case 67: // $sw_bb181
      var $253=$st;
      var $st_low182=(($253+4)|0);
      var $254=HEAP32[(($st_low182)>>2)];
      var $255=$ptr_addr;
      var $call183=_speex_encoder_ctl($254, 41, $255);
      __label__ = 98; break;
    case 68: // $sw_bb184
      var $256=$ptr_addr;
      var $257=$256;
      var $258=HEAP32[(($257)>>2)];
      var $259=$st;
      var $vbr_max=(($259+116)|0);
      HEAP32[(($vbr_max)>>2)]=$258;
      var $260=$st;
      var $vbr_max186=(($260+116)|0);
      var $261=HEAP32[(($vbr_max186)>>2)];
      var $cmp187=(($261)|0) >= 42200;
      if ($cmp187) { __label__ = 69; break; } else { __label__ = 70; break; }
    case 69: // $if_then189
      var $262=$st;
      var $vbr_max_high=(($262+120)|0);
      HEAP32[(($vbr_max_high)>>2)]=17600;
      __label__ = 77; break;
    case 70: // $if_else190
      var $263=$st;
      var $vbr_max191=(($263+116)|0);
      var $264=HEAP32[(($vbr_max191)>>2)];
      var $cmp192=(($264)|0) >= 27800;
      if ($cmp192) { __label__ = 71; break; } else { __label__ = 72; break; }
    case 71: // $if_then194
      var $265=$st;
      var $vbr_max_high195=(($265+120)|0);
      HEAP32[(($vbr_max_high195)>>2)]=9600;
      __label__ = 76; break;
    case 72: // $if_else196
      var $266=$st;
      var $vbr_max197=(($266+116)|0);
      var $267=HEAP32[(($vbr_max197)>>2)];
      var $cmp198=(($267)|0) > 20600;
      if ($cmp198) { __label__ = 73; break; } else { __label__ = 74; break; }
    case 73: // $if_then200
      var $268=$st;
      var $vbr_max_high201=(($268+120)|0);
      HEAP32[(($vbr_max_high201)>>2)]=5600;
      __label__ = 75; break;
    case 74: // $if_else202
      var $269=$st;
      var $vbr_max_high203=(($269+120)|0);
      HEAP32[(($vbr_max_high203)>>2)]=1800;
      __label__ = 75; break;
    case 75: // $if_end204
      __label__ = 76; break;
    case 76: // $if_end205
      __label__ = 77; break;
    case 77: // $if_end206
      var $270=$st;
      var $subframeSize=(($270+16)|0);
      var $271=HEAP32[(($subframeSize)>>2)];
      var $cmp207=(($271)|0)==80;
      if ($cmp207) { __label__ = 78; break; } else { __label__ = 79; break; }
    case 78: // $if_then209
      var $272=$st;
      var $vbr_max_high210=(($272+120)|0);
      HEAP32[(($vbr_max_high210)>>2)]=1800;
      __label__ = 79; break;
    case 79: // $if_end211
      var $273=$st;
      var $vbr_max212=(($273+116)|0);
      var $274=HEAP32[(($vbr_max212)>>2)];
      var $275=$st;
      var $vbr_max_high213=(($275+120)|0);
      var $276=HEAP32[(($vbr_max_high213)>>2)];
      var $sub214=(($274-$276)|0);
      HEAP32[(($low_rate)>>2)]=$sub214;
      var $277=$st;
      var $st_low215=(($277+4)|0);
      var $278=HEAP32[(($st_low215)>>2)];
      var $279=$low_rate;
      var $call216=_speex_encoder_ctl($278, 42, $279);
      __label__ = 98; break;
    case 80: // $sw_bb217
      var $280=$st;
      var $vbr_max218=(($280+116)|0);
      var $281=HEAP32[(($vbr_max218)>>2)];
      var $282=$ptr_addr;
      var $283=$282;
      HEAP32[(($283)>>2)]=$281;
      __label__ = 98; break;
    case 81: // $sw_bb219
      var $284=$st;
      var $st_low220=(($284+4)|0);
      var $285=HEAP32[(($st_low220)>>2)];
      var $286=$ptr_addr;
      var $call221=_speex_encoder_ctl($285, 44, $286);
      __label__ = 98; break;
    case 82: // $sw_bb222
      var $287=$st;
      var $st_low223=(($287+4)|0);
      var $288=HEAP32[(($st_low223)>>2)];
      var $289=$ptr_addr;
      var $call224=_speex_encoder_ctl($288, 45, $289);
      __label__ = 98; break;
    case 83: // $sw_bb225
      var $290=$ptr_addr;
      var $291=$290;
      $g=$291;
      $i227=0;
      __label__ = 84; break;
    case 84: // $for_cond229
      var $292=$i227;
      var $293=$st;
      var $nbSubframes=(($293+20)|0);
      var $294=HEAP32[(($nbSubframes)>>2)];
      var $cmp230=(($292)|0) < (($294)|0);
      if ($cmp230) { __label__ = 85; break; } else { __label__ = 87; break; }
    case 85: // $for_body232
      var $295=$i227;
      var $296=$st;
      var $pi_gain=(($296+96)|0);
      var $297=HEAP32[(($pi_gain)>>2)];
      var $arrayidx233=(($297+($295<<2))|0);
      var $298=HEAPF32[(($arrayidx233)>>2)];
      var $299=$i227;
      var $300=$g;
      var $arrayidx234=(($300+($299<<2))|0);
      HEAPF32[(($arrayidx234)>>2)]=$298;
      __label__ = 86; break;
    case 86: // $for_inc235
      var $301=$i227;
      var $inc236=(($301+1)|0);
      $i227=$inc236;
      __label__ = 84; break;
    case 87: // $for_end237
      __label__ = 98; break;
    case 88: // $sw_bb238
      $i240=0;
      __label__ = 89; break;
    case 89: // $for_cond241
      var $302=$i240;
      var $303=$st;
      var $nbSubframes242=(($303+20)|0);
      var $304=HEAP32[(($nbSubframes242)>>2)];
      var $cmp243=(($302)|0) < (($304)|0);
      if ($cmp243) { __label__ = 90; break; } else { __label__ = 92; break; }
    case 90: // $for_body245
      var $305=$i240;
      var $306=$st;
      var $exc_rms=(($306+100)|0);
      var $307=HEAP32[(($exc_rms)>>2)];
      var $arrayidx246=(($307+($305<<2))|0);
      var $308=HEAPF32[(($arrayidx246)>>2)];
      var $309=$i240;
      var $310=$ptr_addr;
      var $311=$310;
      var $arrayidx247=(($311+($309<<2))|0);
      HEAPF32[(($arrayidx247)>>2)]=$308;
      __label__ = 91; break;
    case 91: // $for_inc248
      var $312=$i240;
      var $inc249=(($312+1)|0);
      $i240=$inc249;
      __label__ = 89; break;
    case 92: // $for_end250
      __label__ = 98; break;
    case 93: // $sw_bb251
      var $313=$st;
      var $relative_quality=(($313+144)|0);
      var $314=HEAPF32[(($relative_quality)>>2)];
      var $315=$ptr_addr;
      var $316=$315;
      HEAPF32[(($316)>>2)]=$314;
      __label__ = 98; break;
    case 94: // $sw_bb252
      var $317=$ptr_addr;
      var $318=$317;
      var $319=$st;
      var $innov_rms_save=(($319+104)|0);
      HEAP32[(($innov_rms_save)>>2)]=$318;
      __label__ = 98; break;
    case 95: // $sw_bb253
      var $320=$st;
      var $st_low254=(($320+4)|0);
      var $321=HEAP32[(($st_low254)>>2)];
      var $322=$ptr_addr;
      var $call255=_speex_encoder_ctl($321, 105, $322);
      __label__ = 98; break;
    case 96: // $sw_bb256
      var $323=$st;
      var $stack=(($323+48)|0);
      var $324=HEAP32[(($stack)>>2)];
      var $325=$ptr_addr;
      var $326=$325;
      HEAP32[(($326)>>2)]=$324;
      __label__ = 98; break;
    case 97: // $sw_default
      var $327=$request_addr;
      _speex_warning_int93(((STRING_TABLE.__str173)|0), $327);
      $retval=-1;
      __label__ = 99; break;
    case 98: // $sw_epilog
      $retval=0;
      __label__ = 99; break;
    case 99: // $return
      var $328=$retval;
      STACKTOP = __stackBase__;
      return $328;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_encoder_ctl["X"]=1;

function _speex_warning_int93($str, $val) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  var $val_addr;
  $str_addr=$str;
  $val_addr=$val;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $3=$val_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str274)|0), (tempInt=STACKTOP,STACKTOP += 8,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,HEAP32[((tempInt+4)>>2)]=$3,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_rand96($std, $seed) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $std_addr;
  var $seed_addr;
  var $jflone;
  var $jflmsk;
  var $ran=__stackBase__;
  $std_addr=$std;
  $seed_addr=$seed;
  $jflone=1065353216;
  $jflmsk=8388607;
  var $0=$seed_addr;
  var $1=HEAP32[(($0)>>2)];
  var $mul=(($1*1664525)|0);
  var $add=(($mul+1013904223)|0);
  var $2=$seed_addr;
  HEAP32[(($2)>>2)]=$add;
  var $3=$seed_addr;
  var $4=HEAP32[(($3)>>2)];
  var $and=8388607 & $4;
  var $or=1065353216 | $and;
  var $i=$ran;
  HEAP32[(($i)>>2)]=$or;
  var $f=$ran;
  var $5=HEAPF32[(($f)>>2)];
  var $conv=$5;
  var $sub=$conv-1.5;
  var $conv1=$sub;
  HEAPF32[(($f)>>2)]=$conv1;
  var $6=$std_addr;
  var $conv2=$6;
  var $mul3=$conv2*3.4642;
  var $f4=$ran;
  var $7=HEAPF32[(($f4)>>2)];
  var $conv5=$7;
  var $mul6=$mul3*$conv5;
  var $conv7=$mul6;
  STACKTOP = __stackBase__;
  return $conv7;
}


function _sb_decoder_ctl($state, $request, $ptr) {
  var __stackBase__  = STACKTOP; STACKTOP += 8; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $state_addr;
      var $request_addr;
      var $ptr_addr;
      var $st;
      var $nb_qual=__stackBase__;
      var $quality;
      var $tmp=__stackBase__+4;
      var $i;
      var $i83;
      var $g;
      var $i95;
      $state_addr=$state;
      $request_addr=$request;
      $ptr_addr=$ptr;
      var $0=$state_addr;
      var $1=$0;
      $st=$1;
      var $2=$request_addr;
      if ($2 == 10) {
        __label__ = 1; break;
      }
      else if ($2 == 8) {
        __label__ = 2; break;
      }
      else if ($2 == 9) {
        __label__ = 3; break;
      }
      else if ($2 == 3) {
        __label__ = 4; break;
      }
      else if ($2 == 0) {
        __label__ = 5; break;
      }
      else if ($2 == 1) {
        __label__ = 6; break;
      }
      else if ($2 == 6 || $2 == 4) {
        __label__ = 7; break;
      }
      else if ($2 == 19) {
        __label__ = 12; break;
      }
      else if ($2 == 24) {
        __label__ = 16; break;
      }
      else if ($2 == 25) {
        __label__ = 17; break;
      }
      else if ($2 == 20) {
        __label__ = 18; break;
      }
      else if ($2 == 22) {
        __label__ = 19; break;
      }
      else if ($2 == 26) {
        __label__ = 20; break;
      }
      else if ($2 == 36) {
        __label__ = 29; break;
      }
      else if ($2 == 37) {
        __label__ = 30; break;
      }
      else if ($2 == 39) {
        __label__ = 31; break;
      }
      else if ($2 == 44) {
        __label__ = 32; break;
      }
      else if ($2 == 45) {
        __label__ = 33; break;
      }
      else if ($2 == 47) {
        __label__ = 34; break;
      }
      else if ($2 == 100) {
        __label__ = 35; break;
      }
      else if ($2 == 101) {
        __label__ = 40; break;
      }
      else if ($2 == 103) {
        __label__ = 45; break;
      }
      else if ($2 == 104) {
        __label__ = 46; break;
      }
      else if ($2 == 105) {
        __label__ = 47; break;
      }
      else if ($2 == 106) {
        __label__ = 48; break;
      }
      else {
      __label__ = 49; break;
      }
      
    case 1: // $sw_bb
      var $3=$ptr_addr;
      var $4=$3;
      var $5=HEAP32[(($4)>>2)];
      var $6=$st;
      var $submodeID=(($6+96)|0);
      HEAP32[(($submodeID)>>2)]=$5;
      __label__ = 50; break;
    case 2: // $sw_bb1
      var $7=$st;
      var $st_low=(($7+4)|0);
      var $8=HEAP32[(($st_low)>>2)];
      var $9=$ptr_addr;
      var $call=_speex_decoder_ctl($8, 8, $9);
      __label__ = 50; break;
    case 3: // $sw_bb2
      var $10=$st;
      var $st_low3=(($10+4)|0);
      var $11=HEAP32[(($st_low3)>>2)];
      var $12=$ptr_addr;
      var $call4=_speex_decoder_ctl($11, 9, $12);
      __label__ = 50; break;
    case 4: // $sw_bb5
      var $13=$st;
      var $full_frame_size=(($13+8)|0);
      var $14=HEAP32[(($full_frame_size)>>2)];
      var $15=$ptr_addr;
      var $16=$15;
      HEAP32[(($16)>>2)]=$14;
      __label__ = 50; break;
    case 5: // $sw_bb6
      var $17=$st;
      var $st_low7=(($17+4)|0);
      var $18=HEAP32[(($st_low7)>>2)];
      var $19=$request_addr;
      var $20=$ptr_addr;
      var $call8=_speex_decoder_ctl($18, $19, $20);
      var $21=$ptr_addr;
      var $22=$21;
      var $23=HEAP32[(($22)>>2)];
      var $24=$st;
      var $lpc_enh_enabled=(($24+36)|0);
      HEAP32[(($lpc_enh_enabled)>>2)]=$23;
      __label__ = 50; break;
    case 6: // $sw_bb9
      var $25=$st;
      var $lpc_enh_enabled10=(($25+36)|0);
      var $26=HEAP32[(($lpc_enh_enabled10)>>2)];
      var $27=$ptr_addr;
      var $28=$27;
      HEAP32[(($28)>>2)]=$26;
      __label__ = 50; break;
    case 7: // $sw_bb11
      var $29=$ptr_addr;
      var $30=$29;
      var $31=HEAP32[(($30)>>2)];
      $quality=$31;
      var $32=$quality;
      var $cmp=(($32)|0) < 0;
      if ($cmp) { __label__ = 8; break; } else { __label__ = 9; break; }
    case 8: // $if_then
      $quality=0;
      __label__ = 9; break;
    case 9: // $if_end
      var $33=$quality;
      var $cmp12=(($33)|0) > 10;
      if ($cmp12) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then13
      $quality=10;
      __label__ = 11; break;
    case 11: // $if_end14
      var $34=$quality;
      var $35=$st;
      var $mode=(($35)|0);
      var $36=HEAP32[(($mode)>>2)];
      var $mode15=(($36)|0);
      var $37=HEAP32[(($mode15)>>2)];
      var $38=$37;
      var $quality_map=(($38+112)|0);
      var $arrayidx=(($quality_map+($34<<2))|0);
      var $39=HEAP32[(($arrayidx)>>2)];
      var $40=$st;
      var $submodeID16=(($40+96)|0);
      HEAP32[(($submodeID16)>>2)]=$39;
      var $41=$quality;
      var $42=$st;
      var $mode17=(($42)|0);
      var $43=HEAP32[(($mode17)>>2)];
      var $mode18=(($43)|0);
      var $44=HEAP32[(($mode18)>>2)];
      var $45=$44;
      var $low_quality_map=(($45+68)|0);
      var $arrayidx19=(($low_quality_map+($41<<2))|0);
      var $46=HEAP32[(($arrayidx19)>>2)];
      HEAP32[(($nb_qual)>>2)]=$46;
      var $47=$st;
      var $st_low20=(($47+4)|0);
      var $48=HEAP32[(($st_low20)>>2)];
      var $49=$nb_qual;
      var $call21=_speex_decoder_ctl($48, 6, $49);
      __label__ = 50; break;
    case 12: // $sw_bb22
      var $50=$st;
      var $st_low23=(($50+4)|0);
      var $51=HEAP32[(($st_low23)>>2)];
      var $52=$request_addr;
      var $53=$ptr_addr;
      var $call24=_speex_decoder_ctl($51, $52, $53);
      var $54=$st;
      var $submodeID25=(($54+96)|0);
      var $55=HEAP32[(($submodeID25)>>2)];
      var $56=$st;
      var $submodes=(($56+92)|0);
      var $57=HEAP32[(($submodes)>>2)];
      var $arrayidx26=(($57+($55<<2))|0);
      var $58=HEAP32[(($arrayidx26)>>2)];
      var $tobool=(($58)|0)!=0;
      if ($tobool) { __label__ = 13; break; } else { __label__ = 14; break; }
    case 13: // $if_then27
      var $59=$st;
      var $sampling_rate=(($59+32)|0);
      var $60=HEAP32[(($sampling_rate)>>2)];
      var $61=$st;
      var $submodeID28=(($61+96)|0);
      var $62=HEAP32[(($submodeID28)>>2)];
      var $63=$st;
      var $submodes29=(($63+92)|0);
      var $64=HEAP32[(($submodes29)>>2)];
      var $arrayidx30=(($64+($62<<2))|0);
      var $65=HEAP32[(($arrayidx30)>>2)];
      var $bits_per_frame=(($65+52)|0);
      var $66=HEAP32[(($bits_per_frame)>>2)];
      var $mul=(($60*$66)|0);
      var $67=$st;
      var $full_frame_size31=(($67+8)|0);
      var $68=HEAP32[(($full_frame_size31)>>2)];
      var $div=(((($mul)|0)/(($68)|0))|0);
      var $69=$ptr_addr;
      var $70=$69;
      var $71=HEAP32[(($70)>>2)];
      var $add=(($71+$div)|0);
      HEAP32[(($70)>>2)]=$add;
      __label__ = 15; break;
    case 14: // $if_else
      var $72=$st;
      var $sampling_rate32=(($72+32)|0);
      var $73=HEAP32[(($sampling_rate32)>>2)];
      var $mul33=((($73<<2))|0);
      var $74=$st;
      var $full_frame_size34=(($74+8)|0);
      var $75=HEAP32[(($full_frame_size34)>>2)];
      var $div35=(((($mul33)|0)/(($75)|0))|0);
      var $76=$ptr_addr;
      var $77=$76;
      var $78=HEAP32[(($77)>>2)];
      var $add36=(($78+$div35)|0);
      HEAP32[(($77)>>2)]=$add36;
      __label__ = 15; break;
    case 15: // $if_end37
      __label__ = 50; break;
    case 16: // $sw_bb38
      var $79=$ptr_addr;
      var $80=$79;
      var $81=HEAP32[(($80)>>2)];
      HEAP32[(($tmp)>>2)]=$81;
      var $82=HEAP32[(($tmp)>>2)];
      var $83=$st;
      var $sampling_rate39=(($83+32)|0);
      HEAP32[(($sampling_rate39)>>2)]=$82;
      var $84=HEAP32[(($tmp)>>2)];
      var $shr=$84 >> 1;
      HEAP32[(($tmp)>>2)]=$shr;
      var $85=$st;
      var $st_low40=(($85+4)|0);
      var $86=HEAP32[(($st_low40)>>2)];
      var $87=$tmp;
      var $call41=_speex_decoder_ctl($86, 24, $87);
      __label__ = 50; break;
    case 17: // $sw_bb42
      var $88=$st;
      var $sampling_rate43=(($88+32)|0);
      var $89=HEAP32[(($sampling_rate43)>>2)];
      var $90=$ptr_addr;
      var $91=$90;
      HEAP32[(($91)>>2)]=$89;
      __label__ = 50; break;
    case 18: // $sw_bb44
      var $92=$st;
      var $st_low45=(($92+4)|0);
      var $93=HEAP32[(($st_low45)>>2)];
      var $94=$ptr_addr;
      var $call46=_speex_decoder_ctl($93, 20, $94);
      __label__ = 50; break;
    case 19: // $sw_bb47
      var $95=$st;
      var $st_low48=(($95+4)|0);
      var $96=HEAP32[(($st_low48)>>2)];
      var $97=$ptr_addr;
      var $call49=_speex_decoder_ctl($96, 22, $97);
      __label__ = 50; break;
    case 20: // $sw_bb50
      $i=0;
      __label__ = 21; break;
    case 21: // $for_cond
      var $98=$i;
      var $99=$st;
      var $lpcSize=(($99+24)|0);
      var $100=HEAP32[(($lpcSize)>>2)];
      var $mul52=((($100<<1))|0);
      var $cmp53=(($98)|0) < (($mul52)|0);
      if ($cmp53) { __label__ = 22; break; } else { __label__ = 24; break; }
    case 22: // $for_body
      var $101=$i;
      var $102=$st;
      var $mem_sp=(($102+64)|0);
      var $103=HEAP32[(($mem_sp)>>2)];
      var $arrayidx54=(($103+($101<<2))|0);
      HEAPF32[(($arrayidx54)>>2)]=0;
      __label__ = 23; break;
    case 23: // $for_inc
      var $104=$i;
      var $inc=(($104+1)|0);
      $i=$inc;
      __label__ = 21; break;
    case 24: // $for_end
      $i=0;
      __label__ = 25; break;
    case 25: // $for_cond55
      var $105=$i;
      var $cmp56=(($105)|0) < 64;
      if ($cmp56) { __label__ = 26; break; } else { __label__ = 28; break; }
    case 26: // $for_body57
      var $106=$i;
      var $107=$st;
      var $g1_mem=(($107+48)|0);
      var $108=HEAP32[(($g1_mem)>>2)];
      var $arrayidx58=(($108+($106<<2))|0);
      HEAPF32[(($arrayidx58)>>2)]=0;
      var $109=$i;
      var $110=$st;
      var $g0_mem=(($110+44)|0);
      var $111=HEAP32[(($g0_mem)>>2)];
      var $arrayidx59=(($111+($109<<2))|0);
      HEAPF32[(($arrayidx59)>>2)]=0;
      __label__ = 27; break;
    case 27: // $for_inc60
      var $112=$i;
      var $inc61=(($112+1)|0);
      $i=$inc61;
      __label__ = 25; break;
    case 28: // $for_end62
      var $113=$st;
      var $last_ener=(($113+80)|0);
      HEAPF32[(($last_ener)>>2)]=0;
      __label__ = 50; break;
    case 29: // $sw_bb63
      var $114=$ptr_addr;
      var $115=$114;
      var $116=HEAP32[(($115)>>2)];
      var $117=$st;
      var $encode_submode=(($117+88)|0);
      HEAP32[(($encode_submode)>>2)]=$116;
      var $118=$st;
      var $st_low64=(($118+4)|0);
      var $119=HEAP32[(($st_low64)>>2)];
      var $120=$ptr_addr;
      var $call65=_speex_decoder_ctl($119, 36, $120);
      __label__ = 50; break;
    case 30: // $sw_bb66
      var $121=$st;
      var $encode_submode67=(($121+88)|0);
      var $122=HEAP32[(($encode_submode67)>>2)];
      var $123=$ptr_addr;
      var $124=$123;
      HEAP32[(($124)>>2)]=$122;
      __label__ = 50; break;
    case 31: // $sw_bb68
      var $125=$st;
      var $st_low69=(($125+4)|0);
      var $126=HEAP32[(($st_low69)>>2)];
      var $127=$ptr_addr;
      var $call70=_speex_decoder_ctl($126, 39, $127);
      var $128=$ptr_addr;
      var $129=$128;
      var $130=HEAP32[(($129)>>2)];
      var $mul71=((($130<<1))|0);
      var $131=$ptr_addr;
      var $132=$131;
      HEAP32[(($132)>>2)]=$mul71;
      __label__ = 50; break;
    case 32: // $sw_bb72
      var $133=$st;
      var $st_low73=(($133+4)|0);
      var $134=HEAP32[(($st_low73)>>2)];
      var $135=$ptr_addr;
      var $call74=_speex_decoder_ctl($134, 44, $135);
      __label__ = 50; break;
    case 33: // $sw_bb75
      var $136=$st;
      var $st_low76=(($136+4)|0);
      var $137=HEAP32[(($st_low76)>>2)];
      var $138=$ptr_addr;
      var $call77=_speex_decoder_ctl($137, 45, $138);
      __label__ = 50; break;
    case 34: // $sw_bb78
      var $139=$st;
      var $st_low79=(($139+4)|0);
      var $140=HEAP32[(($st_low79)>>2)];
      var $141=$ptr_addr;
      var $call80=_speex_decoder_ctl($140, 47, $141);
      __label__ = 50; break;
    case 35: // $sw_bb81
      var $142=$ptr_addr;
      var $143=$142;
      $g=$143;
      $i83=0;
      __label__ = 36; break;
    case 36: // $for_cond85
      var $144=$i83;
      var $145=$st;
      var $nbSubframes=(($145+20)|0);
      var $146=HEAP32[(($nbSubframes)>>2)];
      var $cmp86=(($144)|0) < (($146)|0);
      if ($cmp86) { __label__ = 37; break; } else { __label__ = 39; break; }
    case 37: // $for_body87
      var $147=$i83;
      var $148=$st;
      var $pi_gain=(($148+68)|0);
      var $149=HEAP32[(($pi_gain)>>2)];
      var $arrayidx88=(($149+($147<<2))|0);
      var $150=HEAPF32[(($arrayidx88)>>2)];
      var $151=$i83;
      var $152=$g;
      var $arrayidx89=(($152+($151<<2))|0);
      HEAPF32[(($arrayidx89)>>2)]=$150;
      __label__ = 38; break;
    case 38: // $for_inc90
      var $153=$i83;
      var $inc91=(($153+1)|0);
      $i83=$inc91;
      __label__ = 36; break;
    case 39: // $for_end92
      __label__ = 50; break;
    case 40: // $sw_bb93
      $i95=0;
      __label__ = 41; break;
    case 41: // $for_cond96
      var $154=$i95;
      var $155=$st;
      var $nbSubframes97=(($155+20)|0);
      var $156=HEAP32[(($nbSubframes97)>>2)];
      var $cmp98=(($154)|0) < (($156)|0);
      if ($cmp98) { __label__ = 42; break; } else { __label__ = 44; break; }
    case 42: // $for_body99
      var $157=$i95;
      var $158=$st;
      var $exc_rms=(($158+72)|0);
      var $159=HEAP32[(($exc_rms)>>2)];
      var $arrayidx100=(($159+($157<<2))|0);
      var $160=HEAPF32[(($arrayidx100)>>2)];
      var $161=$i95;
      var $162=$ptr_addr;
      var $163=$162;
      var $arrayidx101=(($163+($161<<2))|0);
      HEAPF32[(($arrayidx101)>>2)]=$160;
      __label__ = 43; break;
    case 43: // $for_inc102
      var $164=$i95;
      var $inc103=(($164+1)|0);
      $i95=$inc103;
      __label__ = 41; break;
    case 44: // $for_end104
      __label__ = 50; break;
    case 45: // $sw_bb105
      var $165=$st;
      var $st_low106=(($165+4)|0);
      var $166=HEAP32[(($st_low106)>>2)];
      var $167=$ptr_addr;
      var $call107=_speex_decoder_ctl($166, 103, $167);
      __label__ = 50; break;
    case 46: // $sw_bb108
      var $168=$ptr_addr;
      var $169=$168;
      var $170=$st;
      var $innov_save=(($170+76)|0);
      HEAP32[(($innov_save)>>2)]=$169;
      __label__ = 50; break;
    case 47: // $sw_bb109
      var $171=$st;
      var $st_low110=(($171+4)|0);
      var $172=HEAP32[(($st_low110)>>2)];
      var $173=$ptr_addr;
      var $call111=_speex_decoder_ctl($172, 105, $173);
      __label__ = 50; break;
    case 48: // $sw_bb112
      var $174=$st;
      var $stack=(($174+40)|0);
      var $175=HEAP32[(($stack)>>2)];
      var $176=$ptr_addr;
      var $177=$176;
      HEAP32[(($177)>>2)]=$175;
      __label__ = 50; break;
    case 49: // $sw_default
      var $178=$request_addr;
      _speex_warning_int93(((STRING_TABLE.__str173)|0), $178);
      $retval=-1;
      __label__ = 51; break;
    case 50: // $sw_epilog
      $retval=0;
      __label__ = 51; break;
    case 51: // $return
      var $179=$retval;
      STACKTOP = __stackBase__;
      return $179;
    default: assert(0, "bad label: " + __label__);
  }
}
_sb_decoder_ctl["X"]=1;

function _speex_inband_handler($bits, $callback_list, $state) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $bits_addr;
      var $callback_list_addr;
      var $state_addr;
      var $id;
      var $callback;
      var $adv;
      $bits_addr=$bits;
      $callback_list_addr=$callback_list;
      $state_addr=$state;
      var $0=$bits_addr;
      var $call=_speex_bits_unpack_unsigned($0, 4);
      $id=$call;
      var $1=$callback_list_addr;
      var $2=$id;
      var $add_ptr=(($1+$2*20)|0);
      $callback=$add_ptr;
      var $3=$callback;
      var $func=(($3+4)|0);
      var $4=HEAP32[(($func)>>2)];
      var $tobool=(($4)|0)!=0;
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; }
    case 1: // $if_then
      var $5=$callback;
      var $func1=(($5+4)|0);
      var $6=HEAP32[(($func1)>>2)];
      var $7=$bits_addr;
      var $8=$state_addr;
      var $9=$callback;
      var $data=(($9+8)|0);
      var $10=HEAP32[(($data)>>2)];
      var $call2=FUNCTION_TABLE[$6]($7, $8, $10);
      $retval=$call2;
      __label__ = 19; break;
    case 2: // $if_else
      var $11=$id;
      var $cmp=(($11)|0) < 2;
      if ($cmp) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then3
      $adv=1;
      __label__ = 17; break;
    case 4: // $if_else4
      var $12=$id;
      var $cmp5=(($12)|0) < 8;
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 6; break; }
    case 5: // $if_then6
      $adv=4;
      __label__ = 16; break;
    case 6: // $if_else7
      var $13=$id;
      var $cmp8=(($13)|0) < 10;
      if ($cmp8) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then9
      $adv=8;
      __label__ = 15; break;
    case 8: // $if_else10
      var $14=$id;
      var $cmp11=(($14)|0) < 12;
      if ($cmp11) { __label__ = 9; break; } else { __label__ = 10; break; }
    case 9: // $if_then12
      $adv=16;
      __label__ = 14; break;
    case 10: // $if_else13
      var $15=$id;
      var $cmp14=(($15)|0) < 14;
      if ($cmp14) { __label__ = 11; break; } else { __label__ = 12; break; }
    case 11: // $if_then15
      $adv=32;
      __label__ = 13; break;
    case 12: // $if_else16
      $adv=64;
      __label__ = 13; break;
    case 13: // $if_end
      __label__ = 14; break;
    case 14: // $if_end17
      __label__ = 15; break;
    case 15: // $if_end18
      __label__ = 16; break;
    case 16: // $if_end19
      __label__ = 17; break;
    case 17: // $if_end20
      var $16=$bits_addr;
      var $17=$adv;
      _speex_bits_advance($16, $17);
      __label__ = 18; break;
    case 18: // $if_end21
      $retval=0;
      __label__ = 19; break;
    case 19: // $return
      var $18=$retval;
      ;
      return $18;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_inband_handler["X"]=1;

function _speex_std_mode_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $m=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 4);
  HEAP32[(($m)>>2)]=$call;
  var $1=$data_addr;
  var $2=$m;
  var $call1=_speex_encoder_ctl($1, 6, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_low_mode_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $m=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 4);
  HEAP32[(($m)>>2)]=$call;
  var $1=$data_addr;
  var $2=$m;
  var $call1=_speex_encoder_ctl($1, 8, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_high_mode_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $m=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 4);
  HEAP32[(($m)>>2)]=$call;
  var $1=$data_addr;
  var $2=$m;
  var $call1=_speex_encoder_ctl($1, 10, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_vbr_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $vbr=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 1);
  HEAP32[(($vbr)>>2)]=$call;
  var $1=$data_addr;
  var $2=$vbr;
  var $call1=_speex_encoder_ctl($1, 12, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_enh_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $enh=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 1);
  HEAP32[(($enh)>>2)]=$call;
  var $1=$data_addr;
  var $2=$enh;
  var $call1=_speex_decoder_ctl($1, 0, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_vbr_quality_request_handler($bits, $state, $data) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $qual=__stackBase__;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 4);
  var $conv=(($call)>>>0);
  HEAPF32[(($qual)>>2)]=$conv;
  var $1=$data_addr;
  var $2=$qual;
  var $call1=_speex_encoder_ctl($1, 14, $2);
  STACKTOP = __stackBase__;
  return 0;
}


function _speex_std_char_handler($bits, $state, $data) {
  ;
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $ch;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 8);
  var $conv=(($call) & 255);
  $ch=$conv;
  var $1=$ch;
  var $conv1=(($1)&255);
  var $2=$data_addr;
  __speex_putc($conv1, $2);
  ;
  return 0;
}


function __speex_putc($ch, $file) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $ch_addr;
  var $file_addr;
  var $f;
  $ch_addr=$ch;
  $file_addr=$file;
  var $0=$file_addr;
  var $1=$0;
  $f=$1;
  var $2=$f;
  var $3=$ch_addr;
  var $call=_fprintf($2, ((STRING_TABLE.__str97)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$3,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_default_user_handler($bits, $state, $data) {
  ;
  var __label__;

  var $bits_addr;
  var $state_addr;
  var $data_addr;
  var $req_size;
  $bits_addr=$bits;
  $state_addr=$state;
  $data_addr=$data;
  var $0=$bits_addr;
  var $call=_speex_bits_unpack_unsigned($0, 4);
  $req_size=$call;
  var $1=$bits_addr;
  var $2=$req_size;
  var $mul=((($2<<3))|0);
  var $add=(($mul+5)|0);
  _speex_bits_advance($1, $add);
  ;
  return 0;
}


function _speex_init_header($header, $rate, $nb_channels, $m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $header_addr;
      var $rate_addr;
      var $nb_channels_addr;
      var $m_addr;
      var $i;
      var $h;
      $header_addr=$header;
      $rate_addr=$rate;
      $nb_channels_addr=$nb_channels;
      $m_addr=$m;
      $h=((STRING_TABLE.__str102)|0);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $cmp=(($0)|0) < 8;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; }
    case 2: // $for_body
      var $1=$i;
      var $2=$h;
      var $arrayidx=(($2+$1)|0);
      var $3=HEAP8[($arrayidx)];
      var $4=$i;
      var $5=$header_addr;
      var $speex_string=(($5)|0);
      var $arrayidx1=(($speex_string+$4)|0);
      HEAP8[($arrayidx1)]=$3;
      __label__ = 3; break;
    case 3: // $for_inc
      var $6=$i;
      var $inc=(($6+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 4: // $for_end
      $i=0;
      __label__ = 5; break;
    case 5: // $for_cond2
      var $7=$i;
      var $cmp3=(($7)|0) < 19;
      if ($cmp3) { __label__ = 6; break; } else { var $10 = 0;__label__ = 7; break; }
    case 6: // $land_rhs
      var $8=$i;
      var $arrayidx4=((STRING_TABLE.__str1103+$8)|0);
      var $9=HEAP8[($arrayidx4)];
      var $conv=(($9 << 24) >> 24);
      var $tobool=(($conv)|0)!=0;
      var $10 = $tobool;__label__ = 7; break;
    case 7: // $land_end
      var $10;
      if ($10) { __label__ = 8; break; } else { __label__ = 10; break; }
    case 8: // $for_body5
      var $11=$i;
      var $arrayidx6=((STRING_TABLE.__str1103+$11)|0);
      var $12=HEAP8[($arrayidx6)];
      var $13=$i;
      var $14=$header_addr;
      var $speex_version=(($14+8)|0);
      var $arrayidx7=(($speex_version+$13)|0);
      HEAP8[($arrayidx7)]=$12;
      __label__ = 9; break;
    case 9: // $for_inc8
      var $15=$i;
      var $inc9=(($15+1)|0);
      $i=$inc9;
      __label__ = 5; break;
    case 10: // $for_end10
      __label__ = 11; break;
    case 11: // $for_cond11
      var $16=$i;
      var $cmp12=(($16)|0) < 20;
      if ($cmp12) { __label__ = 12; break; } else { __label__ = 14; break; }
    case 12: // $for_body14
      var $17=$i;
      var $18=$header_addr;
      var $speex_version15=(($18+8)|0);
      var $arrayidx16=(($speex_version15+$17)|0);
      HEAP8[($arrayidx16)]=0;
      __label__ = 13; break;
    case 13: // $for_inc17
      var $19=$i;
      var $inc18=(($19+1)|0);
      $i=$inc18;
      __label__ = 11; break;
    case 14: // $for_end19
      var $20=$header_addr;
      var $speex_version_id=(($20+28)|0);
      HEAP32[(($speex_version_id)>>2)]=1;
      var $21=$header_addr;
      var $header_size=(($21+32)|0);
      HEAP32[(($header_size)>>2)]=80;
      var $22=$rate_addr;
      var $23=$header_addr;
      var $rate20=(($23+36)|0);
      HEAP32[(($rate20)>>2)]=$22;
      var $24=$m_addr;
      var $modeID=(($24+12)|0);
      var $25=HEAP32[(($modeID)>>2)];
      var $26=$header_addr;
      var $mode=(($26+40)|0);
      HEAP32[(($mode)>>2)]=$25;
      var $27=$m_addr;
      var $bitstream_version=(($27+16)|0);
      var $28=HEAP32[(($bitstream_version)>>2)];
      var $29=$header_addr;
      var $mode_bitstream_version=(($29+44)|0);
      HEAP32[(($mode_bitstream_version)>>2)]=$28;
      var $30=$m_addr;
      var $modeID21=(($30+12)|0);
      var $31=HEAP32[(($modeID21)>>2)];
      var $cmp22=(($31)|0) < 0;
      if ($cmp22) { __label__ = 15; break; } else { __label__ = 16; break; }
    case 15: // $if_then
      _speex_warning110(((STRING_TABLE.__str2104)|0));
      __label__ = 16; break;
    case 16: // $if_end
      var $32=$nb_channels_addr;
      var $33=$header_addr;
      var $nb_channels24=(($33+48)|0);
      HEAP32[(($nb_channels24)>>2)]=$32;
      var $34=$header_addr;
      var $bitrate=(($34+52)|0);
      HEAP32[(($bitrate)>>2)]=-1;
      var $35=$m_addr;
      var $36=$header_addr;
      var $frame_size=(($36+56)|0);
      var $37=$frame_size;
      var $call=_speex_mode_query($35, 0, $37);
      var $38=$header_addr;
      var $vbr=(($38+60)|0);
      HEAP32[(($vbr)>>2)]=0;
      var $39=$header_addr;
      var $frames_per_packet=(($39+64)|0);
      HEAP32[(($frames_per_packet)>>2)]=0;
      var $40=$header_addr;
      var $extra_headers=(($40+68)|0);
      HEAP32[(($extra_headers)>>2)]=0;
      var $41=$header_addr;
      var $reserved1=(($41+72)|0);
      HEAP32[(($reserved1)>>2)]=0;
      var $42=$header_addr;
      var $reserved2=(($42+76)|0);
      HEAP32[(($reserved2)>>2)]=0;
      ;
      return;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_init_header["X"]=1;

function _speex_warning110($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str7109)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _le_int($i) {
  ;
  var __label__;

  var $i_addr;
  $i_addr=$i;
  var $0=$i_addr;
  ;
  return $0;
}


function _speex_header_to_packet($header, $size) {
  ;
  var __label__;

  var $header_addr;
  var $size_addr;
  var $le_header;
  $header_addr=$header;
  $size_addr=$size;
  var $call=_speex_alloc111(80);
  var $0=$call;
  $le_header=$0;
  var $1=$le_header;
  var $2=$1;
  var $3=$header_addr;
  var $4=$3;
  var $5=$le_header;
  var $6=$header_addr;
  var $sub_ptr_lhs_cast=$5;
  var $sub_ptr_rhs_cast=$6;
  var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
  var $sub_ptr_div=(((($sub_ptr_sub)|0)/80)|0);
  var $mul=((0)|0);
  var $add=(($mul+80)|0);
  assert($add % 1 === 0, 'memcpy given ' + $add + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($2, $4, $add, 1);
  var $7=$le_header;
  var $speex_version_id=(($7+28)|0);
  var $8=HEAP32[(($speex_version_id)>>2)];
  var $call1=_le_int($8);
  var $9=$le_header;
  var $speex_version_id2=(($9+28)|0);
  HEAP32[(($speex_version_id2)>>2)]=$call1;
  var $10=$le_header;
  var $header_size=(($10+32)|0);
  var $11=HEAP32[(($header_size)>>2)];
  var $call3=_le_int($11);
  var $12=$le_header;
  var $header_size4=(($12+32)|0);
  HEAP32[(($header_size4)>>2)]=$call3;
  var $13=$le_header;
  var $rate=(($13+36)|0);
  var $14=HEAP32[(($rate)>>2)];
  var $call5=_le_int($14);
  var $15=$le_header;
  var $rate6=(($15+36)|0);
  HEAP32[(($rate6)>>2)]=$call5;
  var $16=$le_header;
  var $mode=(($16+40)|0);
  var $17=HEAP32[(($mode)>>2)];
  var $call7=_le_int($17);
  var $18=$le_header;
  var $mode8=(($18+40)|0);
  HEAP32[(($mode8)>>2)]=$call7;
  var $19=$le_header;
  var $mode_bitstream_version=(($19+44)|0);
  var $20=HEAP32[(($mode_bitstream_version)>>2)];
  var $call9=_le_int($20);
  var $21=$le_header;
  var $mode_bitstream_version10=(($21+44)|0);
  HEAP32[(($mode_bitstream_version10)>>2)]=$call9;
  var $22=$le_header;
  var $nb_channels=(($22+48)|0);
  var $23=HEAP32[(($nb_channels)>>2)];
  var $call11=_le_int($23);
  var $24=$le_header;
  var $nb_channels12=(($24+48)|0);
  HEAP32[(($nb_channels12)>>2)]=$call11;
  var $25=$le_header;
  var $bitrate=(($25+52)|0);
  var $26=HEAP32[(($bitrate)>>2)];
  var $call13=_le_int($26);
  var $27=$le_header;
  var $bitrate14=(($27+52)|0);
  HEAP32[(($bitrate14)>>2)]=$call13;
  var $28=$le_header;
  var $frame_size=(($28+56)|0);
  var $29=HEAP32[(($frame_size)>>2)];
  var $call15=_le_int($29);
  var $30=$le_header;
  var $frame_size16=(($30+56)|0);
  HEAP32[(($frame_size16)>>2)]=$call15;
  var $31=$le_header;
  var $vbr=(($31+60)|0);
  var $32=HEAP32[(($vbr)>>2)];
  var $call17=_le_int($32);
  var $33=$le_header;
  var $vbr18=(($33+60)|0);
  HEAP32[(($vbr18)>>2)]=$call17;
  var $34=$le_header;
  var $frames_per_packet=(($34+64)|0);
  var $35=HEAP32[(($frames_per_packet)>>2)];
  var $call19=_le_int($35);
  var $36=$le_header;
  var $frames_per_packet20=(($36+64)|0);
  HEAP32[(($frames_per_packet20)>>2)]=$call19;
  var $37=$le_header;
  var $extra_headers=(($37+68)|0);
  var $38=HEAP32[(($extra_headers)>>2)];
  var $call21=_le_int($38);
  var $39=$le_header;
  var $extra_headers22=(($39+68)|0);
  HEAP32[(($extra_headers22)>>2)]=$call21;
  var $40=$size_addr;
  HEAP32[(($40)>>2)]=80;
  var $41=$le_header;
  var $42=$41;
  ;
  return $42;
}
_speex_header_to_packet["X"]=1;

function _speex_alloc111($size) {
  ;
  var __label__;

  var $size_addr;
  $size_addr=$size;
  var $0=$size_addr;
  var $call=_calloc($0, 1);
  ;
  return $call;
}


function _speex_packet_to_header($packet, $size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $packet_addr;
      var $size_addr;
      var $i;
      var $le_header;
      var $h;
      $packet_addr=$packet;
      $size_addr=$size;
      $h=((STRING_TABLE.__str102)|0);
      $i=0;
      __label__ = 1; break;
    case 1: // $for_cond
      var $0=$i;
      var $cmp=(($0)|0) < 8;
      if ($cmp) { __label__ = 2; break; } else { __label__ = 6; break; }
    case 2: // $for_body
      var $1=$i;
      var $2=$packet_addr;
      var $arrayidx=(($2+$1)|0);
      var $3=HEAP8[($arrayidx)];
      var $conv=(($3 << 24) >> 24);
      var $4=$i;
      var $5=$h;
      var $arrayidx1=(($5+$4)|0);
      var $6=HEAP8[($arrayidx1)];
      var $conv2=(($6 << 24) >> 24);
      var $cmp3=(($conv)|0)!=(($conv2)|0);
      if ($cmp3) { __label__ = 3; break; } else { __label__ = 4; break; }
    case 3: // $if_then
      _speex_notify112(((STRING_TABLE.__str3105)|0));
      $retval=0;
      __label__ = 16; break;
    case 4: // $if_end
      __label__ = 5; break;
    case 5: // $for_inc
      var $7=$i;
      var $inc=(($7+1)|0);
      $i=$inc;
      __label__ = 1; break;
    case 6: // $for_end
      var $8=$size_addr;
      var $cmp5=(($8)|0) < 80;
      if ($cmp5) { __label__ = 7; break; } else { __label__ = 8; break; }
    case 7: // $if_then7
      _speex_notify112(((STRING_TABLE.__str4106)|0));
      $retval=0;
      __label__ = 16; break;
    case 8: // $if_end8
      var $call=_speex_alloc111(80);
      var $9=$call;
      $le_header=$9;
      var $10=$le_header;
      var $11=$10;
      var $12=$packet_addr;
      var $13=$12;
      var $14=$13;
      var $15=$le_header;
      var $16=$packet_addr;
      var $17=$16;
      var $sub_ptr_lhs_cast=$15;
      var $sub_ptr_rhs_cast=$17;
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0);
      var $sub_ptr_div=(((($sub_ptr_sub)|0)/80)|0);
      var $mul=((0)|0);
      var $add=(($mul+80)|0);
      assert($add % 1 === 0, 'memcpy given ' + $add + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($11, $14, $add, 1);
      var $18=$le_header;
      var $speex_version_id=(($18+28)|0);
      var $19=HEAP32[(($speex_version_id)>>2)];
      var $call9=_le_int($19);
      var $20=$le_header;
      var $speex_version_id10=(($20+28)|0);
      HEAP32[(($speex_version_id10)>>2)]=$call9;
      var $21=$le_header;
      var $header_size=(($21+32)|0);
      var $22=HEAP32[(($header_size)>>2)];
      var $call11=_le_int($22);
      var $23=$le_header;
      var $header_size12=(($23+32)|0);
      HEAP32[(($header_size12)>>2)]=$call11;
      var $24=$le_header;
      var $rate=(($24+36)|0);
      var $25=HEAP32[(($rate)>>2)];
      var $call13=_le_int($25);
      var $26=$le_header;
      var $rate14=(($26+36)|0);
      HEAP32[(($rate14)>>2)]=$call13;
      var $27=$le_header;
      var $mode=(($27+40)|0);
      var $28=HEAP32[(($mode)>>2)];
      var $call15=_le_int($28);
      var $29=$le_header;
      var $mode16=(($29+40)|0);
      HEAP32[(($mode16)>>2)]=$call15;
      var $30=$le_header;
      var $mode_bitstream_version=(($30+44)|0);
      var $31=HEAP32[(($mode_bitstream_version)>>2)];
      var $call17=_le_int($31);
      var $32=$le_header;
      var $mode_bitstream_version18=(($32+44)|0);
      HEAP32[(($mode_bitstream_version18)>>2)]=$call17;
      var $33=$le_header;
      var $nb_channels=(($33+48)|0);
      var $34=HEAP32[(($nb_channels)>>2)];
      var $call19=_le_int($34);
      var $35=$le_header;
      var $nb_channels20=(($35+48)|0);
      HEAP32[(($nb_channels20)>>2)]=$call19;
      var $36=$le_header;
      var $bitrate=(($36+52)|0);
      var $37=HEAP32[(($bitrate)>>2)];
      var $call21=_le_int($37);
      var $38=$le_header;
      var $bitrate22=(($38+52)|0);
      HEAP32[(($bitrate22)>>2)]=$call21;
      var $39=$le_header;
      var $frame_size=(($39+56)|0);
      var $40=HEAP32[(($frame_size)>>2)];
      var $call23=_le_int($40);
      var $41=$le_header;
      var $frame_size24=(($41+56)|0);
      HEAP32[(($frame_size24)>>2)]=$call23;
      var $42=$le_header;
      var $vbr=(($42+60)|0);
      var $43=HEAP32[(($vbr)>>2)];
      var $call25=_le_int($43);
      var $44=$le_header;
      var $vbr26=(($44+60)|0);
      HEAP32[(($vbr26)>>2)]=$call25;
      var $45=$le_header;
      var $frames_per_packet=(($45+64)|0);
      var $46=HEAP32[(($frames_per_packet)>>2)];
      var $call27=_le_int($46);
      var $47=$le_header;
      var $frames_per_packet28=(($47+64)|0);
      HEAP32[(($frames_per_packet28)>>2)]=$call27;
      var $48=$le_header;
      var $extra_headers=(($48+68)|0);
      var $49=HEAP32[(($extra_headers)>>2)];
      var $call29=_le_int($49);
      var $50=$le_header;
      var $extra_headers30=(($50+68)|0);
      HEAP32[(($extra_headers30)>>2)]=$call29;
      var $51=$le_header;
      var $mode31=(($51+40)|0);
      var $52=HEAP32[(($mode31)>>2)];
      var $cmp32=(($52)|0) >= 3;
      if ($cmp32) { __label__ = 10; break; } else { __label__ = 9; break; }
    case 9: // $lor_lhs_false
      var $53=$le_header;
      var $mode34=(($53+40)|0);
      var $54=HEAP32[(($mode34)>>2)];
      var $cmp35=(($54)|0) < 0;
      if ($cmp35) { __label__ = 10; break; } else { __label__ = 11; break; }
    case 10: // $if_then37
      _speex_notify112(((STRING_TABLE.__str5107)|0));
      var $55=$le_header;
      var $56=$55;
      _speex_free113($56);
      $retval=0;
      __label__ = 16; break;
    case 11: // $if_end38
      var $57=$le_header;
      var $nb_channels39=(($57+48)|0);
      var $58=HEAP32[(($nb_channels39)>>2)];
      var $cmp40=(($58)|0) > 2;
      if ($cmp40) { __label__ = 12; break; } else { __label__ = 13; break; }
    case 12: // $if_then42
      var $59=$le_header;
      var $nb_channels43=(($59+48)|0);
      HEAP32[(($nb_channels43)>>2)]=2;
      __label__ = 13; break;
    case 13: // $if_end44
      var $60=$le_header;
      var $nb_channels45=(($60+48)|0);
      var $61=HEAP32[(($nb_channels45)>>2)];
      var $cmp46=(($61)|0) < 1;
      if ($cmp46) { __label__ = 14; break; } else { __label__ = 15; break; }
    case 14: // $if_then48
      var $62=$le_header;
      var $nb_channels49=(($62+48)|0);
      HEAP32[(($nb_channels49)>>2)]=1;
      __label__ = 15; break;
    case 15: // $if_end50
      var $63=$le_header;
      $retval=$63;
      __label__ = 16; break;
    case 16: // $return
      var $64=$retval;
      ;
      return $64;
    default: assert(0, "bad label: " + __label__);
  }
}
_speex_packet_to_header["X"]=1;

function _speex_notify112($str) {
  var __stackBase__  = STACKTOP; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $str_addr;
  $str_addr=$str;
  var $0=HEAP32[((__impure_ptr)>>2)];
  var $_stderr=(($0+12)|0);
  var $1=HEAP32[(($_stderr)>>2)];
  var $2=$str_addr;
  var $call=_fprintf($1, ((STRING_TABLE.__str6108)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$2,tempInt));
  STACKTOP = __stackBase__;
  return;
}


function _speex_free113($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _free($0);
  ;
  return;
}


function _speex_header_free($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr;
  _speex_free113($0);
  ;
  return;
}


function _malloc($bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bytes_addr;
      var $mem;
      var $nb;
      var $idx;
      var $smallbits;
      var $b;
      var $p;
      var $F;
      var $b33;
      var $p34;
      var $r;
      var $rsize;
      var $i;
      var $leftbits;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $F68;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F102;
      var $rsize157;
      var $p159;
      var $r163;
      var $dvs;
      var $rsize185;
      var $p187;
      var $r188;
      $bytes_addr=$bytes;
      var $0=$bytes_addr; //@line 4628 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) <= 244; //@line 4628 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 36; break; } //@line 4628 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$bytes_addr; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($1)>>>0) < 11; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_true
      var $cond = 16;__label__ = 4; break; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_false
      var $2=$bytes_addr; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($2+4)|0); //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add2=(($add+7)|0); //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$add2 & -8; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and;__label__ = 4; break; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_end
      var $cond; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nb=$cond; //@line 4631 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$nb; //@line 4632 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$3 >>> 3; //@line 4632 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $idx=$shr; //@line 4632 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=HEAPU32[((((__gm_)|0))>>2)]; //@line 4633 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$idx; //@line 4633 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr3=$4 >>> (($5)>>>0); //@line 4633 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $smallbits=$shr3; //@line 4633 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$smallbits; //@line 4635 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and4=$6 & 3; //@line 4635 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp5=(($and4)|0)!=0; //@line 4635 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp5) { __label__ = 5; break; } else { __label__ = 12; break; } //@line 4635 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then6
      var $7=$smallbits; //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$7 ^ -1; //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and7=$neg & 1; //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$idx; //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add8=(($8+$and7)|0); //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $idx=$add8; //@line 4637 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$idx; //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$9 << 1; //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=((((__gm_+40)|0)+($shl<<2))|0); //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$arrayidx; //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$10; //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $b=$11; //@line 4638 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$b; //@line 4639 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($12+8)|0); //@line 4639 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($fd)>>2)]; //@line 4639 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$13; //@line 4639 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$p; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd9=(($14+8)|0); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($fd9)>>2)]; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$15; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$b; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$F; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp10=(($16)|0)==(($17)|0); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp10) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then11
      var $18=$idx; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl12=1 << $18; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg13=$shl12 ^ -1; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[((((__gm_)|0))>>2)]; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and14=$19 & $neg13; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and14; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_else
      var $20=$F; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$20; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp15=(($21)>>>0) >= (($22)>>>0); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp15)&1); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then16
      var $23=$F; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$b; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd17=(($24+8)|0); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd17)>>2)]=$23; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$b; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$F; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($26+12)|0); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$25; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_else18
      _abort(); //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4641 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      __label__ = 11; break;
    case 11: // $if_end19
      var $27=$idx; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl20=$27 << 3; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$shl20 | 1; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or21=$or | 2; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$p; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($28+4)|0); //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or21; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$p; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$29; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$idx; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl22=$31 << 3; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($30+$shl22)|0); //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$add_ptr; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head23=(($32+4)|0); //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=HEAP32[(($head23)>>2)]; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or24=$33 | 1; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head23)>>2)]=$or24; //@line 4642 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$p; //@line 4643 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$34; //@line 4643 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr25=(($35+8)|0); //@line 4643 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr25; //@line 4643 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4645 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_else26
      var $36=$nb; //@line 4648 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4648 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($36)>>>0) > (($37)>>>0); //@line 4648 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 13; break; } else { __label__ = 34; break; } //@line 4648 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then29
      var $38=$smallbits; //@line 4649 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp30=(($38)|0)!=0; //@line 4649 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp30) { __label__ = 14; break; } else { __label__ = 29; break; } //@line 4649 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then32
      var $39=$smallbits; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$idx; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl35=$39 << $40; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$idx; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl36=1 << $41; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl37=$shl36 << 1; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$idx; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl38=1 << $42; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl39=$shl38 << 1; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$shl39))|0); //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or40=$shl37 | $sub; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and41=$shl35 & $or40; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leftbits=$and41; //@line 4653 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$leftbits; //@line 4654 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$leftbits; //@line 4654 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub42=(((-$44))|0); //@line 4654 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and43=$43 & $sub42; //@line 4654 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and43; //@line 4654 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$leastbit; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub44=(($45-1)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$sub44; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr45=$46 >>> 12; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and46=$shr45 & 16; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and46; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$47; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr47=$49 >>> (($48)>>>0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr47; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr48=$50 >>> 5; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and49=$shr48 & 8; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and49; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$N; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add50=(($51+$and49)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add50; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr51=$53 >>> (($52)>>>0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr51; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr52=$54 >>> 2; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and53=$shr52 & 4; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and53; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$N; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add54=(($55+$and53)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add54; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr55=$57 >>> (($56)>>>0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr55; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr56=$58 >>> 1; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and57=$shr56 & 2; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and57; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$N; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add58=(($59+$and57)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add58; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr59=$61 >>> (($60)>>>0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr59; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr60=$62 >>> 1; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and61=$shr60 & 1; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and61; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$N; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add62=(($63+$and61)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add62; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$K; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr63=$65 >>> (($64)>>>0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr63; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$N; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$Y; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add64=(($66+$67)|0); //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$add64; //@line 4655 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$i; //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl65=$68 << 1; //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx66=((((__gm_+40)|0)+($shl65<<2))|0); //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=$arrayidx66; //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $b33=$70; //@line 4656 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$b33; //@line 4657 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd67=(($71+8)|0); //@line 4657 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($fd67)>>2)]; //@line 4657 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p34=$72; //@line 4657 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$p34; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd69=(($73+8)|0); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[(($fd69)>>2)]; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F68=$74; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$b33; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$F68; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp70=(($75)|0)==(($76)|0); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp70) { __label__ = 15; break; } else { __label__ = 16; break; } //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then72
      var $77=$i; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl73=1 << $77; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg74=$shl73 ^ -1; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[((((__gm_)|0))>>2)]; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and75=$78 & $neg74; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and75; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_else76
      var $79=$F68; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$79; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp77=(($80)>>>0) >= (($81)>>>0); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv78=(($cmp77)&1); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval79=(($conv78)==(1)); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool80=(($expval79)|0)!=0; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool80) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then81
      var $82=$F68; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83=$b33; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd82=(($83+8)|0); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd82)>>2)]=$82; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$b33; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$F68; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk83=(($85+12)|0); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk83)>>2)]=$84; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_else84
      _abort(); //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4659 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end85
      __label__ = 20; break;
    case 20: // $if_end86
      var $86=$i; //@line 4660 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl87=$86 << 3; //@line 4660 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $87=$nb; //@line 4660 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub88=(($shl87-$87)|0); //@line 4660 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub88; //@line 4660 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$nb; //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or89=$88 | 1; //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or90=$or89 | 2; //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=$p34; //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head91=(($89+4)|0); //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head91)>>2)]=$or90; //@line 4665 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $90=$p34; //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=$90; //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=$nb; //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr92=(($91+$92)|0); //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=$add_ptr92; //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r=$93; //@line 4666 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=$rsize; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or93=$94 | 1; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=$r; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head94=(($95+4)|0); //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head94)>>2)]=$or93; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=$rsize; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$r; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=$97; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$rsize; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr95=(($98+$99)|0); //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$add_ptr95; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($100)|0); //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$96; //@line 4667 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $DVS=$101; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=$DVS; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($102)|0)!=0; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp96) { __label__ = 21; break; } else { __label__ = 28; break; } //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_then98
      var $103=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $DV=$103; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$DVS; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr99=$104 >>> 3; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr99; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$I; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl100=$105 << 1; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx101=((((__gm_+40)|0)+($shl100<<2))|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$arrayidx101; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$107; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=$B; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F102=$108; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $109=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$I; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl103=1 << $110; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and104=$109 & $shl103; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool105=(($and104)|0)!=0; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool105) { __label__ = 23; break; } else { __label__ = 22; break; } //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_then106
      var $111=$I; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl107=1 << $111; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[((((__gm_)|0))>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or108=$112 | $shl107; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$or108; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_else109
      var $113=$B; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd110=(($113+8)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($fd110)>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $115=$114; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp111=(($115)>>>0) >= (($116)>>>0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv112=(($cmp111)&1); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval113=(($conv112)==(1)); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool114=(($expval113)|0)!=0; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool114) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then115
      var $117=$B; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd116=(($117+8)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=HEAP32[(($fd116)>>2)]; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F102=$118; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else117
      _abort(); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end118
      __label__ = 27; break;
    case 27: // $if_end119
      var $119=$DV; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$B; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd120=(($120+8)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd120)>>2)]=$119; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$DV; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=$F102; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk121=(($122+12)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk121)>>2)]=$121; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $123=$F102; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $124=$DV; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd122=(($124+8)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd122)>>2)]=$123; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$B; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$DV; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk123=(($126+12)|0); //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk123)>>2)]=$125; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_end124
      var $127=$rsize; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$127; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$r; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$128; //@line 4668 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=$p34; //@line 4670 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=$129; //@line 4670 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr125=(($130+8)|0); //@line 4670 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr125; //@line 4670 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_else126
      var $131=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($131)|0)!=0; //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 30; break; } else { __label__ = 32; break; } //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $land_lhs_true
      var $132=$nb; //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call=_tmalloc_small(__gm_, $132); //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call; //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp129=(($call)|0)!=0; //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp129) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 4675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then131
      __label__ = 52; break; //@line 4677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_end132
      __label__ = 33; break;
    case 33: // $if_end133
      __label__ = 34; break; //@line 4679 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_end134
      __label__ = 35; break;
    case 35: // $if_end135
      __label__ = 43; break; //@line 4680 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else136
      var $133=$bytes_addr; //@line 4681 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp137=(($133)>>>0) >= 4294967232; //@line 4681 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp137) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 4681 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then139
      $nb=-1; //@line 4682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 42; break; //@line 4682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else140
      var $134=$bytes_addr; //@line 4684 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add141=(($134+4)|0); //@line 4684 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add142=(($add141+7)|0); //@line 4684 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and143=$add142 & -8; //@line 4684 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nb=$and143; //@line 4684 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($135)|0)!=0; //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 39; break; } else { __label__ = 41; break; } //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $land_lhs_true146
      var $136=$nb; //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call147=_tmalloc_large(__gm_, $136); //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call147; //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($call147)|0)!=0; //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 40; break; } else { __label__ = 41; break; } //@line 4685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then150
      __label__ = 52; break; //@line 4687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_end151
      __label__ = 42; break;
    case 42: // $if_end152
      __label__ = 43; break;
    case 43: // $if_end153
      var $137=$nb; //@line 4691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $138=HEAPU32[((((__gm_+8)|0))>>2)]; //@line 4691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp154=(($137)>>>0) <= (($138)>>>0); //@line 4691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp154) { __label__ = 44; break; } else { __label__ = 48; break; } //@line 4691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then156
      var $139=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4692 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$nb; //@line 4692 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub158=(($139-$140)|0); //@line 4692 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize157=$sub158; //@line 4692 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4693 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p159=$141; //@line 4693 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$rsize157; //@line 4694 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp160=(($142)>>>0) >= 16; //@line 4694 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp160) { __label__ = 45; break; } else { __label__ = 46; break; } //@line 4694 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_then162
      var $143=$p159; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=$143; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $145=$nb; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr164=(($144+$145)|0); //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=$add_ptr164; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$146; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r163=$146; //@line 4695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=$rsize157; //@line 4696 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$147; //@line 4696 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $148=$rsize157; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or165=$148 | 1; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=$r163; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head166=(($149+4)|0); //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head166)>>2)]=$or165; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $150=$rsize157; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=$r163; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $152=$151; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=$rsize157; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr167=(($152+$153)|0); //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$add_ptr167; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot168=(($154)|0); //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot168)>>2)]=$150; //@line 4697 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=$nb; //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or169=$155 | 1; //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or170=$or169 | 2; //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$p159; //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head171=(($156+4)|0); //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head171)>>2)]=$or170; //@line 4698 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_else172
      var $157=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4701 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $dvs=$157; //@line 4701 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4702 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$dvs; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or173=$158 | 1; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or174=$or173 | 2; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=$p159; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head175=(($159+4)|0); //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head175)>>2)]=$or174; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $160=$p159; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$160; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=$dvs; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr176=(($161+$162)|0); //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=$add_ptr176; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head177=(($163+4)|0); //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $164=HEAP32[(($head177)>>2)]; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or178=$164 | 1; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head177)>>2)]=$or178; //@line 4704 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break;
    case 47: // $if_end179
      var $165=$p159; //@line 4706 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$165; //@line 4706 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr180=(($166+8)|0); //@line 4706 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr180; //@line 4706 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_else181
      var $167=$nb; //@line 4711 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=HEAPU32[((((__gm_+12)|0))>>2)]; //@line 4711 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp182=(($167)>>>0) < (($168)>>>0); //@line 4711 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp182) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 4711 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_then184
      var $169=$nb; //@line 4712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub186=(($170-$169)|0); //@line 4712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$sub186; //@line 4712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize185=$sub186; //@line 4712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p187=$171; //@line 4713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=$p187; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=$172; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $174=$nb; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr189=(($173+$174)|0); //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=$add_ptr189; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$175; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r188=$175; //@line 4714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=$rsize185; //@line 4715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or190=$176 | 1; //@line 4715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $177=$r188; //@line 4715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head191=(($177+4)|0); //@line 4715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head191)>>2)]=$or190; //@line 4715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=$nb; //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or192=$178 | 1; //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or193=$or192 | 2; //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=$p187; //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head194=(($179+4)|0); //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head194)>>2)]=$or193; //@line 4716 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $180=$p187; //@line 4717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=$180; //@line 4717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr195=(($181+8)|0); //@line 4717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$add_ptr195; //@line 4717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end196
      __label__ = 51; break;
    case 51: // $if_end197
      var $182=$nb; //@line 4723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call198=_sys_alloc(__gm_, $182); //@line 4723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call198; //@line 4723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 52; break; //@line 4723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $postaction
      var $183=$mem; //@line 4727 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $183; //@line 4727 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_malloc["X"]=1;

function _tmalloc_small($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $nb_addr;
      var $t;
      var $v;
      var $rsize;
      var $i;
      var $leastbit;
      var $Y;
      var $K;
      var $N;
      var $trem;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $DVS;
      var $DV;
      var $I;
      var $B;
      var $F191;
      $m_addr=$m;
      $nb_addr=$nb;
      var $0=$m_addr; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($0+4)|0); //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[(($treemap)>>2)]; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap1=(($2+4)|0); //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[(($treemap1)>>2)]; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$3))|0); //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$1 & $sub; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and; //@line 4268 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$leastbit; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub2=(($4-1)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$sub2; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$5 >>> 12; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and3=$shr & 16; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and3; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$6; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr4=$8 >>> (($7)>>>0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr4; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr5=$9 >>> 5; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$shr5 & 8; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and6; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$N; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($10+$and6)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr7=$12 >>> (($11)>>>0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr7; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr8=$13 >>> 2; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and9=$shr8 & 4; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and9; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$N; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add10=(($14+$and9)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add10; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr11=$16 >>> (($15)>>>0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr11; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr12=$17 >>> 1; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and13=$shr12 & 2; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and13; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$N; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add14=(($18+$and13)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add14; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr15=$20 >>> (($19)>>>0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr15; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr16=$21 >>> 1; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and17=$shr16 & 1; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and17; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$N; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add18=(($22+$and17)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add18; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$K; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr19=$24 >>> (($23)>>>0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shr19; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$N; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$Y; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add20=(($25+$26)|0); //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$add20; //@line 4269 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$i; //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$m_addr; //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($28+304)|0); //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($treebins+($27<<2))|0); //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($arrayidx)>>2)]; //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$29; //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $v=$29; //@line 4270 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$t; //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($30+4)|0); //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[(($head)>>2)]; //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and21=$31 & -8; //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$nb_addr; //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub22=(($and21-$32)|0); //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub22; //@line 4271 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $while_cond
      var $33=$t; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($33+16)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx23=(($child)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[(($arrayidx23)>>2)]; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($34)|0)!=0; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_true
      var $35=$t; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child24=(($35+16)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx25=(($child24)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($arrayidx25)>>2)]; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $36;__label__ = 4; break; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_false
      var $37=$t; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child26=(($37+16)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx27=(($child26+4)|0); //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($arrayidx27)>>2)]; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $38;__label__ = 4; break; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_end
      var $cond; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$cond; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($cond)|0)!=0; //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 4273 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $while_body
      var $39=$t; //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head29=(($39+4)|0); //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($head29)>>2)]; //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and30=$40 & -8; //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$nb_addr; //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub31=(($and30-$41)|0); //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $trem=$sub31; //@line 4274 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$trem; //@line 4275 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$rsize; //@line 4275 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp32=(($42)>>>0) < (($43)>>>0); //@line 4275 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp32) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4275 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then
      var $44=$trem; //@line 4276 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$44; //@line 4276 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$t; //@line 4277 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $v=$45; //@line 4277 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 4278 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_end
      __label__ = 1; break; //@line 4279 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $while_end
      var $46=$v; //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$46; //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($48+16)|0); //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=HEAPU32[(($least_addr)>>2)]; //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp33=(($47)>>>0) >= (($49)>>>0); //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp33)&1); //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 9; break; } else { __label__ = 68; break; } //@line 4281 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then34
      var $50=$v; //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$nb_addr; //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($51+$52)|0); //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$add_ptr; //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r=$53; //@line 4282 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$v; //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$54; //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$r; //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp35=(($55)>>>0) < (($57)>>>0); //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv36=(($cmp35)&1); //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval37=(($conv36)==(1)); //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool38=(($expval37)|0)!=0; //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool38) { __label__ = 10; break; } else { __label__ = 67; break; } //@line 4284 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then39
      var $58=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($58+24)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($parent)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP=$59; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($60+12)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[(($bk)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp40=(($61)|0)!=(($62)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp40) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then42
      var $63=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($63+8)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($fd)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$64; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk43=(($65+12)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=HEAP32[(($bk43)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$66; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$F; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$67; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr44=(($69+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=HEAPU32[(($least_addr44)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp45=(($68)>>>0) >= (($70)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv46=(($cmp45)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval47=(($conv46)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool48=(($expval47)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool48) { __label__ = 12; break; } else { __label__ = 13; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then49
      var $71=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=$F; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk50=(($72+12)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk50)>>2)]=$71; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$F; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd51=(($74+8)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd51)>>2)]=$73; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_else
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end52
      __label__ = 27; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_else53
      var $75=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child54=(($75+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx55=(($child54+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx55; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($arrayidx55)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$76; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp56=(($76)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp56) { __label__ = 17; break; } else { __label__ = 16; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $lor_lhs_false
      var $77=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child58=(($77+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx59=(($child58)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx59; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($arrayidx59)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$78; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp60=(($78)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp60) { __label__ = 17; break; } else { __label__ = 26; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then62
      __label__ = 18; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $while_cond63
      var $79=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child64=(($79+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx65=(($child64+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx65; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($arrayidx65)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp66=(($80)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp66) { var $83 = 1;__label__ = 20; break; } else { __label__ = 19; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $lor_rhs
      var $81=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child68=(($81+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx69=(($child68)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx69; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=HEAP32[(($arrayidx69)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp70=(($82)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83 = $cmp70;__label__ = 20; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $lor_end
      var $83;
      if ($83) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $while_body72
      var $84=$CP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$84; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=HEAP32[(($84)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$85; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $while_end73
      var $86=$RP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $87=$86; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr74=(($88+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=HEAPU32[(($least_addr74)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($87)>>>0) >= (($89)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv76=(($cmp75)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval77=(($conv76)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool78=(($expval77)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool78) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then79
      var $90=$RP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($90)>>2)]=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else80
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_end81
      __label__ = 26; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end82
      __label__ = 27; break;
    case 27: // $if_end83
      var $91=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp84=(($91)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp84) { __label__ = 28; break; } else { __label__ = 55; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_then86
      var $92=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($92+28)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($index)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins87=(($94+304)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx88=(($treebins87+($93<<2))|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx88; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=$H; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=HEAP32[(($96)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp89=(($95)|0)==(($97)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp89) { __label__ = 29; break; } else { __label__ = 32; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then91
      var $98=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$H; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($99)>>2)]=$98; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($98)|0)==0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp92) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then94
      var $100=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index95=(($100+28)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[(($index95)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $101; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap96=(($102+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($treemap96)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and97=$103 & $neg; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap96)>>2)]=$and97; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end98
      __label__ = 39; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_else99
      var $104=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$104; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr100=(($106+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $107=HEAPU32[(($least_addr100)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($105)>>>0) >= (($107)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv102=(($cmp101)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval103=(($conv102)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool104=(($expval103)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool104) { __label__ = 33; break; } else { __label__ = 37; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_then105
      var $108=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child106=(($108+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx107=(($child106)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $109=HEAP32[(($arrayidx107)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp108=(($109)|0)==(($110)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp108) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then110
      var $111=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child111=(($112+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx112=(($child111)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx112)>>2)]=$111; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_else113
      var $113=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child114=(($114+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx115=(($child114+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx115)>>2)]=$113; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break;
    case 36: // $if_end116
      __label__ = 38; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_else117
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end118
      __label__ = 39; break;
    case 39: // $if_end119
      var $115=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($115)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp120) { __label__ = 40; break; } else { __label__ = 54; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then122
      var $116=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $117=$116; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr123=(($118+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=HEAPU32[(($least_addr123)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp124=(($117)>>>0) >= (($119)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv125=(($cmp124)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval126=(($conv125)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool127=(($expval126)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool127) { __label__ = 41; break; } else { __label__ = 52; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then128
      var $120=$XP; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent129=(($121+24)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent129)>>2)]=$120; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child130=(($122+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx131=(($child130)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $123=HEAP32[(($arrayidx131)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0=$123; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($123)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp132) { __label__ = 42; break; } else { __label__ = 46; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then134
      var $124=$C0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$124; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr135=(($126+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $127=HEAPU32[(($least_addr135)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($125)>>>0) >= (($127)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv137=(($cmp136)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval138=(($conv137)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool139=(($expval138)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool139) { __label__ = 43; break; } else { __label__ = 44; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then140
      var $128=$C0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child141=(($129+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx142=(($child141)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx142)>>2)]=$128; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$C0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent143=(($131+24)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent143)>>2)]=$130; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else144
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_end145
      __label__ = 46; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_end146
      var $132=$v; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child147=(($132+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx148=(($child147+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($arrayidx148)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1=$133; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp149=(($133)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp149) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then151
      var $134=$C1; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=$134; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $136=$m_addr; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr152=(($136+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=HEAPU32[(($least_addr152)>>2)]; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp153=(($135)>>>0) >= (($137)>>>0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv154=(($cmp153)&1); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval155=(($conv154)==(1)); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool156=(($expval155)|0)!=0; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool156) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then157
      var $138=$C1; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $139=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child158=(($139+16)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx159=(($child158+4)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx159)>>2)]=$138; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$R; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=$C1; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent160=(($141+24)|0); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent160)>>2)]=$140; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else161
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end162
      __label__ = 51; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end163
      __label__ = 53; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_else164
      _abort(); //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_end165
      __label__ = 54; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end166
      __label__ = 55; break; //@line 4285 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end167
      var $142=$rsize; //@line 4286 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp168=(($142)>>>0) < 16; //@line 4286 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp168) { __label__ = 56; break; } else { __label__ = 57; break; } //@line 4286 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_then170
      var $143=$rsize; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=$nb_addr; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add171=(($143+$144)|0); //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$add171 | 1; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or172=$or | 2; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $145=$v; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head173=(($145+4)|0); //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head173)>>2)]=$or172; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=$v; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=$146; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $148=$rsize; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=$nb_addr; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add174=(($148+$149)|0); //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr175=(($147+$add174)|0); //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $150=$add_ptr175; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head176=(($150+4)|0); //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($head176)>>2)]; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or177=$151 | 1; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head176)>>2)]=$or177; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break; //@line 4287 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_else178
      var $152=$nb_addr; //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or179=$152 | 1; //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or180=$or179 | 2; //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=$v; //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head181=(($153+4)|0); //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head181)>>2)]=$or180; //@line 4289 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$rsize; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or182=$154 | 1; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=$r; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head183=(($155+4)|0); //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head183)>>2)]=$or182; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$rsize; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=$r; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=$rsize; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr184=(($158+$159)|0); //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $160=$add_ptr184; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($160)|0); //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$156; //@line 4290 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($161+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($dvsize)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $DVS=$162; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=$DVS; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp185=(($163)|0)!=0; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp185) { __label__ = 58; break; } else { __label__ = 65; break; } //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then187
      var $164=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv=(($164+20)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($dv)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $DV=$165; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$DVS; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr188=$166 >>> 3; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr188; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $167=$I; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl189=$167 << 1; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($168+40)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx190=(($smallbins+($shl189<<2))|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$arrayidx190; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=$169; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$170; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=$B; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F191=$171; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($172)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=HEAP32[(($smallmap)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $174=$I; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl192=1 << $174; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and193=$173 & $shl192; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool194=(($and193)|0)!=0; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool194) { __label__ = 60; break; } else { __label__ = 59; break; } //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then195
      var $175=$I; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl196=1 << $175; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap197=(($176)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $177=HEAP32[(($smallmap197)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or198=$177 | $shl196; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap197)>>2)]=$or198; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_else199
      var $178=$B; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd200=(($178+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=HEAP32[(($fd200)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $180=$179; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr201=(($181+16)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=HEAPU32[(($least_addr201)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp202=(($180)>>>0) >= (($182)>>>0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv203=(($cmp202)&1); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval204=(($conv203)==(1)); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool205=(($expval204)|0)!=0; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool205) { __label__ = 61; break; } else { __label__ = 62; break; } //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_then206
      var $183=$B; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd207=(($183+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=HEAP32[(($fd207)>>2)]; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F191=$184; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_else208
      _abort(); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_end209
      __label__ = 64; break;
    case 64: // $if_end210
      var $185=$DV; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $186=$B; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd211=(($186+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd211)>>2)]=$185; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=$DV; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=$F191; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk212=(($188+12)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk212)>>2)]=$187; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=$F191; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $190=$DV; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd213=(($190+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd213)>>2)]=$189; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $191=$B; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $192=$DV; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk214=(($192+12)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk214)>>2)]=$191; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end215
      var $193=$rsize; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $194=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dvsize216=(($194+8)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize216)>>2)]=$193; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $195=$r; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $196=$m_addr; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv217=(($196+20)|0); //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv217)>>2)]=$195; //@line 4291 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 66; break;
    case 66: // $if_end218
      var $197=$v; //@line 4293 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$197; //@line 4293 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr219=(($198+8)|0); //@line 4293 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $add_ptr219; //@line 4293 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end220
      __label__ = 68; break; //@line 4295 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 68: // $if_end221
      _abort(); //@line 4297 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4297 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_small["X"]=1;

function _tmalloc_large($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $v;
      var $rsize;
      var $t;
      var $idx;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $sizebits;
      var $rst;
      var $rt;
      var $trem;
      var $leftbits;
      var $i;
      var $leastbit;
      var $Y68;
      var $K70;
      var $N73;
      var $trem97;
      var $r;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I;
      var $B;
      var $F282;
      var $TP;
      var $H307;
      var $I308;
      var $X309;
      var $Y319;
      var $N320;
      var $K324;
      var $T;
      var $K365;
      var $C;
      var $F404;
      $m_addr=$m;
      $nb_addr=$nb;
      $v=0; //@line 4194 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=$nb_addr; //@line 4195 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(((-$0))|0); //@line 4195 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub; //@line 4195 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=$nb_addr; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$1 >>> 8; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X=$shr; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$X; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($2)|0)==0; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      $idx=0; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_else
      var $3=$X; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($3)>>>0) > 65535; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then2
      $idx=31; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_else3
      var $4=$X; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$4; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$Y; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub4=(($5-256)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr5=$sub4 >>> 16; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$shr5 & 8; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$and; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$N; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$Y; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$7 << $6; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub6=(($shl-4096)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr7=$sub6 >>> 16; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and8=$shr7 & 4; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and8; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$K; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$N; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($9+$8)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$K; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$Y; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl9=$11 << $10; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl9; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub10=(($shl9-16384)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr11=$sub10 >>> 16; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and12=$shr11 & 2; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and12; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$N; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add13=(($12+$and12)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add13; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$N; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub14=((14-$13)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$K; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$Y; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl15=$15 << $14; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl15; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr16=$shl15 >>> 15; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add17=(($sub14+$shr16)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$add17; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$K; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl18=$16 << 1; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$nb_addr; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$K; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add19=(($18+7)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr20=$17 >>> (($add19)>>>0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and21=$shr20 & 1; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add22=(($shl18+$and21)|0); //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $idx=$add22; //@line 4198 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break;
    case 5: // $if_end
      __label__ = 6; break;
    case 6: // $if_end23
      var $19=$idx; //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$m_addr; //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($20+304)|0); //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($treebins+($19<<2))|0); //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[(($arrayidx)>>2)]; //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$21; //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($21)|0)!=0; //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 7; break; } else { __label__ = 22; break; } //@line 4199 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then25
      var $22=$nb_addr; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$idx; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($23)|0)==31; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $cond_true
      var $cond = 0;__label__ = 10; break; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $cond_false
      var $24=$idx; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr27=$24 >>> 1; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add28=(($shr27+8)|0); //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub29=(($add28-2)|0); //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub30=((31-$sub29)|0); //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $sub30;__label__ = 10; break; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_end
      var $cond; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl31=$22 << $cond; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sizebits=$shl31; //@line 4201 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rst=0; //@line 4202 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4203 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $for_cond
      var $25=$t; //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($25+4)|0); //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($head)>>2)]; //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and32=$26 & -8; //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$nb_addr; //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub33=(($and32-$27)|0); //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $trem=$sub33; //@line 4205 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$trem; //@line 4206 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$rsize; //@line 4206 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($28)>>>0) < (($29)>>>0); //@line 4206 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 12; break; } else { __label__ = 15; break; } //@line 4206 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then35
      var $30=$t; //@line 4207 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $v=$30; //@line 4207 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$trem; //@line 4208 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$31; //@line 4208 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($31)|0)==0; //@line 4208 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4208 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then37
      __label__ = 21; break; //@line 4209 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end38
      __label__ = 15; break; //@line 4210 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end39
      var $32=$t; //@line 4211 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($32+16)|0); //@line 4211 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx40=(($child+4)|0); //@line 4211 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=HEAP32[(($arrayidx40)>>2)]; //@line 4211 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rt=$33; //@line 4211 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$sizebits; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr41=$34 >>> 31; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and42=$shr41 & 1; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$t; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child43=(($35+16)|0); //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx44=(($child43+($and42<<2))|0); //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($arrayidx44)>>2)]; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$36; //@line 4212 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$rt; //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp45=(($37)|0)!=0; //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp45) { __label__ = 16; break; } else { __label__ = 18; break; } //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $land_lhs_true
      var $38=$rt; //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$t; //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($38)|0)!=(($39)|0); //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp46) { __label__ = 17; break; } else { __label__ = 18; break; } //@line 4213 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then47
      var $40=$rt; //@line 4214 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rst=$40; //@line 4214 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4214 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_end48
      var $41=$t; //@line 4215 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp49=(($41)|0)==0; //@line 4215 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp49) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4215 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_then50
      var $42=$rst; //@line 4216 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$42; //@line 4216 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4217 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end51
      var $43=$sizebits; //@line 4219 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl52=$43 << 1; //@line 4219 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sizebits=$shl52; //@line 4219 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 11; break; //@line 4220 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $for_end
      __label__ = 22; break; //@line 4221 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_end53
      var $44=$t; //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp54=(($44)|0)==0; //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp54) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $land_lhs_true55
      var $45=$v; //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp56=(($45)|0)==0; //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp56) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 4222 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then57
      var $46=$idx; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl58=1 << $46; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl59=$shl58 << 1; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$idx; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl60=1 << $47; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl61=$shl60 << 1; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub62=(((-$shl61))|0); //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$shl59 | $sub62; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($48+4)|0); //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=HEAP32[(($treemap)>>2)]; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and63=$or & $49; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leftbits=$and63; //@line 4223 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$leftbits; //@line 4224 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp64=(($50)|0)!=0; //@line 4224 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp64) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 4224 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_then65
      var $51=$leftbits; //@line 4226 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$leftbits; //@line 4226 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub66=(((-$52))|0); //@line 4226 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and67=$51 & $sub66; //@line 4226 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leastbit=$and67; //@line 4226 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$leastbit; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub69=(($53-1)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$sub69; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr71=$54 >>> 12; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and72=$shr71 & 16; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K70=$and72; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N73=$55; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr74=$57 >>> (($56)>>>0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr74; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr75=$58 >>> 5; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and76=$shr75 & 8; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K70=$and76; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$N73; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add77=(($59+$and76)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N73=$add77; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr78=$61 >>> (($60)>>>0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr78; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr79=$62 >>> 2; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and80=$shr79 & 4; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K70=$and80; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$N73; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add81=(($63+$and80)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N73=$add81; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr82=$65 >>> (($64)>>>0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr82; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr83=$66 >>> 1; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and84=$shr83 & 2; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K70=$and84; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$N73; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add85=(($67+$and84)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N73=$add85; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr86=$69 >>> (($68)>>>0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr86; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr87=$70 >>> 1; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and88=$shr87 & 1; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K70=$and88; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$N73; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add89=(($71+$and88)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N73=$add89; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=$K70; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr90=$73 >>> (($72)>>>0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y68=$shr90; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$N73; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$Y68; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add91=(($74+$75)|0); //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$add91; //@line 4227 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$i; //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$m_addr; //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins92=(($77+304)|0); //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx93=(($treebins92+($76<<2))|0); //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=HEAP32[(($arrayidx93)>>2)]; //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$78; //@line 4228 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4229 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end94
      __label__ = 27; break; //@line 4230 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_end95
      __label__ = 28; break; //@line 4232 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $while_cond
      var $79=$t; //@line 4232 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($79)|0)!=0; //@line 4232 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp96) { __label__ = 29; break; } else { __label__ = 35; break; } //@line 4232 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $while_body
      var $80=$t; //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head98=(($80+4)|0); //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($head98)>>2)]; //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and99=$81 & -8; //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$nb_addr; //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub100=(($and99-$82)|0); //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $trem97=$sub100; //@line 4233 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83=$trem97; //@line 4234 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$rsize; //@line 4234 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($83)>>>0) < (($84)>>>0); //@line 4234 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp101) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4234 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then102
      var $85=$trem97; //@line 4235 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$85; //@line 4235 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=$t; //@line 4236 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $v=$86; //@line 4236 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4237 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end103
      var $87=$t; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child104=(($87+16)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx105=(($child104)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx105)>>2)]; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp106=(($88)|0)!=0; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp106) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $cond_true107
      var $89=$t; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child108=(($89+16)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx109=(($child108)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($arrayidx109)>>2)]; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond114 = $90;__label__ = 34; break; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $cond_false110
      var $91=$t; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child111=(($91+16)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx112=(($child111+4)|0); //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=HEAP32[(($arrayidx112)>>2)]; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond114 = $92;__label__ = 34; break; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $cond_end113
      var $cond114; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $t=$cond114; //@line 4238 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4239 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $while_end
      var $93=$v; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp115=(($93)|0)!=0; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp115) { __label__ = 36; break; } else { __label__ = 125; break; } //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $land_lhs_true116
      var $94=$rsize; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=$m_addr; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($95+8)|0); //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($dvsize)>>2)]; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$nb_addr; //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub117=(($96-$97)|0); //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp118=(($94)>>>0) < (($sub117)>>>0); //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp118) { __label__ = 37; break; } else { __label__ = 125; break; } //@line 4242 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then119
      var $98=$v; //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$98; //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$m_addr; //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($100+16)|0); //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=HEAPU32[(($least_addr)>>2)]; //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($99)>>>0) >= (($101)>>>0); //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp120)&1); //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($expval)|0)!=0; //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 38; break; } else { __label__ = 124; break; } //@line 4243 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_then121
      var $102=$v; //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=$102; //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$nb_addr; //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($103+$104)|0); //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$add_ptr; //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r=$105; //@line 4244 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$v; //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $107=$106; //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=$r; //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $109=$108; //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp122=(($107)>>>0) < (($109)>>>0); //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv123=(($cmp122)&1); //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval124=(($conv123)==(1)); //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool125=(($expval124)|0)!=0; //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool125) { __label__ = 39; break; } else { __label__ = 123; break; } //@line 4246 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_then126
      var $110=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($110+24)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $111=HEAP32[(($parent)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP=$111; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($112+12)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($bk)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($113)|0)!=(($114)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 40; break; } else { __label__ = 44; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then129
      var $115=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($115+8)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=HEAP32[(($fd)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$116; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $117=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk130=(($117+12)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=HEAP32[(($bk130)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$118; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=$F; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr131=(($121+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=HEAPU32[(($least_addr131)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($120)>>>0) >= (($122)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv133=(($cmp132)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval134=(($conv133)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool135=(($expval134)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool135) { __label__ = 41; break; } else { __label__ = 42; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then136
      var $123=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $124=$F; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk137=(($124+12)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk137)>>2)]=$123; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$F; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd138=(($126+8)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd138)>>2)]=$125; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_else139
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_end140
      __label__ = 56; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else141
      var $127=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child142=(($127+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx143=(($child142+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx143; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=HEAP32[(($arrayidx143)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$128; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($128)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 46; break; } else { __label__ = 45; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $lor_lhs_false
      var $129=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child146=(($129+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx147=(($child146)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx147; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=HEAP32[(($arrayidx147)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$130; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($130)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 46; break; } else { __label__ = 55; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then150
      __label__ = 47; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $while_cond151
      var $131=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child152=(($131+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx153=(($child152+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx153; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $132=HEAP32[(($arrayidx153)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp154=(($132)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp154) { var $135 = 1;__label__ = 49; break; } else { __label__ = 48; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $lor_rhs
      var $133=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child156=(($133+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx157=(($child156)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx157; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $134=HEAP32[(($arrayidx157)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp158=(($134)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135 = $cmp158;__label__ = 49; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $lor_end
      var $135;
      if ($135) { __label__ = 50; break; } else { __label__ = 51; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $while_body160
      var $136=$CP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$136; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=HEAP32[(($136)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$137; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 51: // $while_end161
      var $138=$RP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $139=$138; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr162=(($140+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=HEAPU32[(($least_addr162)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp163=(($139)>>>0) >= (($141)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv164=(($cmp163)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval165=(($conv164)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool166=(($expval165)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool166) { __label__ = 52; break; } else { __label__ = 53; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then167
      var $142=$RP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($142)>>2)]=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_else168
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end169
      __label__ = 55; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end170
      __label__ = 56; break;
    case 56: // $if_end171
      var $143=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp172=(($143)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp172) { __label__ = 57; break; } else { __label__ = 84; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then174
      var $144=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($144+28)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $145=HEAP32[(($index)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins175=(($146+304)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx176=(($treebins175+($145<<2))|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx176; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $148=$H; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=HEAP32[(($148)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp177=(($147)|0)==(($149)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp177) { __label__ = 58; break; } else { __label__ = 61; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then179
      var $150=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=$H; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($151)>>2)]=$150; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp180=(($150)|0)==0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp180) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then182
      var $152=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index183=(($152+28)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=HEAP32[(($index183)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl184=1 << $153; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl184 ^ -1; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap185=(($154+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=HEAP32[(($treemap185)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and186=$155 & $neg; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap185)>>2)]=$and186; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 60; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_end187
      __label__ = 68; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else188
      var $156=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr189=(($158+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[(($least_addr189)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp190=(($157)>>>0) >= (($159)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv191=(($cmp190)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval192=(($conv191)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool193=(($expval192)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool193) { __label__ = 62; break; } else { __label__ = 66; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_then194
      var $160=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child195=(($160+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx196=(($child195)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=HEAP32[(($arrayidx196)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp197=(($161)|0)==(($162)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp197) { __label__ = 63; break; } else { __label__ = 64; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_then199
      var $163=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $164=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child200=(($164+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx201=(($child200)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx201)>>2)]=$163; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_else202
      var $165=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child203=(($166+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx204=(($child203+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx204)>>2)]=$165; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 65; break;
    case 65: // $if_end205
      __label__ = 67; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_else206
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end207
      __label__ = 68; break;
    case 68: // $if_end208
      var $167=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp209=(($167)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp209) { __label__ = 69; break; } else { __label__ = 83; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_then211
      var $168=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$168; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr212=(($170+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=HEAPU32[(($least_addr212)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp213=(($169)>>>0) >= (($171)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv214=(($cmp213)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval215=(($conv214)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool216=(($expval215)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool216) { __label__ = 70; break; } else { __label__ = 81; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then217
      var $172=$XP; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent218=(($173+24)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent218)>>2)]=$172; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $174=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child219=(($174+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx220=(($child219)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=HEAP32[(($arrayidx220)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0=$175; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp221=(($175)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp221) { __label__ = 71; break; } else { __label__ = 75; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_then223
      var $176=$C0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $177=$176; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr224=(($178+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=HEAPU32[(($least_addr224)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp225=(($177)>>>0) >= (($179)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv226=(($cmp225)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval227=(($conv226)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool228=(($expval227)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool228) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then229
      var $180=$C0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child230=(($181+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx231=(($child230)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx231)>>2)]=$180; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$C0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent232=(($183+24)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent232)>>2)]=$182; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 74; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else233
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_end234
      __label__ = 75; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end235
      var $184=$v; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child236=(($184+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx237=(($child236+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $185=HEAP32[(($arrayidx237)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1=$185; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp238=(($185)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp238) { __label__ = 76; break; } else { __label__ = 80; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_then240
      var $186=$C1; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=$186; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=$m_addr; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr241=(($188+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=HEAPU32[(($least_addr241)>>2)]; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp242=(($187)>>>0) >= (($189)>>>0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv243=(($cmp242)&1); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval244=(($conv243)==(1)); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool245=(($expval244)|0)!=0; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool245) { __label__ = 77; break; } else { __label__ = 78; break; } //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 77: // $if_then246
      var $190=$C1; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $191=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child247=(($191+16)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx248=(($child247+4)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx248)>>2)]=$190; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $192=$R; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $193=$C1; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent249=(($193+24)|0); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent249)>>2)]=$192; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 79; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 78: // $if_else250
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 79: // $if_end251
      __label__ = 80; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_end252
      __label__ = 82; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_else253
      _abort(); //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_end254
      __label__ = 83; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_end255
      __label__ = 84; break; //@line 4247 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_end256
      var $194=$rsize; //@line 4248 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp257=(($194)>>>0) < 16; //@line 4248 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp257) { __label__ = 85; break; } else { __label__ = 86; break; } //@line 4248 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_then259
      var $195=$rsize; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $196=$nb_addr; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add260=(($195+$196)|0); //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or261=$add260 | 1; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or262=$or261 | 2; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $197=$v; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head263=(($197+4)|0); //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head263)>>2)]=$or262; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$v; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $199=$198; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $200=$rsize; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $201=$nb_addr; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add264=(($200+$201)|0); //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr265=(($199+$add264)|0); //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $202=$add_ptr265; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head266=(($202+4)|0); //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($head266)>>2)]; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or267=$203 | 1; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head266)>>2)]=$or267; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4249 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_else268
      var $204=$nb_addr; //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or269=$204 | 1; //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or270=$or269 | 2; //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $205=$v; //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head271=(($205+4)|0); //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head271)>>2)]=$or270; //@line 4251 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $206=$rsize; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or272=$206 | 1; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $207=$r; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head273=(($207+4)|0); //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head273)>>2)]=$or272; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $208=$rsize; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $209=$r; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $210=$209; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $211=$rsize; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr274=(($210+$211)|0); //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $212=$add_ptr274; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($212)|0); //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$208; //@line 4252 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $213=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr275=$213 >>> 3; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp276=(($shr275)>>>0) < 32; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp276) { __label__ = 87; break; } else { __label__ = 94; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_then278
      var $214=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr279=$214 >>> 3; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr279; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $215=$I; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl280=$215 << 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $216=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($216+40)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx281=(($smallbins+($shl280<<2))|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $217=$arrayidx281; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$218; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $219=$B; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F282=$219; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $220=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($220)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $221=HEAP32[(($smallmap)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $222=$I; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl283=1 << $222; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and284=$221 & $shl283; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool285=(($and284)|0)!=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool285) { __label__ = 89; break; } else { __label__ = 88; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_then286
      var $223=$I; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl287=1 << $223; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $224=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap288=(($224)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $225=HEAP32[(($smallmap288)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or289=$225 | $shl287; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap288)>>2)]=$or289; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 93; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_else290
      var $226=$B; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd291=(($226+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $227=HEAP32[(($fd291)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $228=$227; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $229=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr292=(($229+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $230=HEAPU32[(($least_addr292)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp293=(($228)>>>0) >= (($230)>>>0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv294=(($cmp293)&1); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval295=(($conv294)==(1)); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool296=(($expval295)|0)!=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool296) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_then297
      var $231=$B; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd298=(($231+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $232=HEAP32[(($fd298)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F282=$232; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 92; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 91: // $if_else299
      _abort(); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 92: // $if_end300
      __label__ = 93; break;
    case 93: // $if_end301
      var $233=$r; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $234=$B; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd302=(($234+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd302)>>2)]=$233; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $235=$r; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $236=$F282; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk303=(($236+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk303)>>2)]=$235; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $237=$F282; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $238=$r; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd304=(($238+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd304)>>2)]=$237; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $239=$B; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $240=$r; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk305=(($240+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk305)>>2)]=$239; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 121; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 94: // $if_else306
      var $241=$r; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $242=$241; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP=$242; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $243=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr310=$243 >>> 8; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X309=$shr310; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $244=$X309; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp311=(($244)|0)==0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp311) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 95: // $if_then313
      $I308=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 100; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 96: // $if_else314
      var $245=$X309; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp315=(($245)>>>0) > 65535; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp315) { __label__ = 97; break; } else { __label__ = 98; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 97: // $if_then317
      $I308=31; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else318
      var $246=$X309; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y319=$246; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $247=$Y319; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub321=(($247-256)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr322=$sub321 >>> 16; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and323=$shr322 & 8; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N320=$and323; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $248=$N320; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $249=$Y319; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl325=$249 << $248; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl325; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub326=(($shl325-4096)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr327=$sub326 >>> 16; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and328=$shr327 & 4; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K324=$and328; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $250=$K324; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $251=$N320; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add329=(($251+$250)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N320=$add329; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $252=$K324; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $253=$Y319; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl330=$253 << $252; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl330; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub331=(($shl330-16384)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr332=$sub331 >>> 16; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and333=$shr332 & 2; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K324=$and333; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $254=$N320; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add334=(($254+$and333)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N320=$add334; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $255=$N320; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub335=((14-$255)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $256=$K324; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $257=$Y319; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl336=$257 << $256; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y319=$shl336; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr337=$shl336 >>> 15; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add338=(($sub335+$shr337)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K324=$add338; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $258=$K324; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl339=$258 << 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $259=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $260=$K324; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add340=(($260+7)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr341=$259 >>> (($add340)>>>0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and342=$shr341 & 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add343=(($shl339+$and342)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I308=$add343; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break;
    case 99: // $if_end344
      __label__ = 100; break;
    case 100: // $if_end345
      var $261=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $262=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins346=(($262+304)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx347=(($treebins346+($261<<2))|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H307=$arrayidx347; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $263=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $264=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index348=(($264+28)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index348)>>2)]=$263; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $265=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child349=(($265+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx350=(($child349+4)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx350)>>2)]=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $266=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child351=(($266+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx352=(($child351)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx352)>>2)]=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $267=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap353=(($267+4)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $268=HEAP32[(($treemap353)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $269=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl354=1 << $269; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and355=$268 & $shl354; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool356=(($and355)|0)!=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool356) { __label__ = 102; break; } else { __label__ = 101; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 101: // $if_then357
      var $270=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl358=1 << $270; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $271=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap359=(($271+4)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $272=HEAP32[(($treemap359)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or360=$272 | $shl358; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap359)>>2)]=$or360; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $273=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $274=$H307; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($274)>>2)]=$273; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $275=$H307; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $276=$275; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $277=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent361=(($277+24)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent361)>>2)]=$276; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $278=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $279=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk362=(($279+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk362)>>2)]=$278; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $280=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd363=(($280+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd363)>>2)]=$278; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 120; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_else364
      var $281=$H307; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($281)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$282; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $283=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $284=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp366=(($284)|0)==31; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp366) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 103: // $cond_true368
      var $cond375 = 0;__label__ = 105; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 104: // $cond_false369
      var $285=$I308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr370=$285 >>> 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add371=(($shr370+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub372=(($add371-2)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub373=((31-$sub372)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond375 = $sub373;__label__ = 105; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 105: // $cond_end374
      var $cond375; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl376=$283 << $cond375; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K365=$shl376; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 106: // $for_cond377
      var $286=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head378=(($286+4)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $287=HEAP32[(($head378)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and379=$287 & -8; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $288=$rsize; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp380=(($and379)|0)!=(($288)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp380) { __label__ = 107; break; } else { __label__ = 113; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 107: // $if_then382
      var $289=$K365; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr383=$289 >>> 31; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and384=$shr383 & 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $290=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child385=(($290+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx386=(($child385+($and384<<2))|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx386; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $291=$K365; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl387=$291 << 1; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K365=$shl387; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $292=$C; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $293=HEAP32[(($292)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp388=(($293)|0)!=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp388) { __label__ = 108; break; } else { __label__ = 109; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 108: // $if_then390
      var $294=$C; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $295=HEAP32[(($294)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$295; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 112; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 109: // $if_else391
      var $296=$C; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $297=$296; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $298=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr392=(($298+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $299=HEAPU32[(($least_addr392)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp393=(($297)>>>0) >= (($299)>>>0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv394=(($cmp393)&1); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval395=(($conv394)==(1)); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool396=(($expval395)|0)!=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool396) { __label__ = 110; break; } else { __label__ = 111; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 110: // $if_then397
      var $300=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $301=$C; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($301)>>2)]=$300; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $302=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $303=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent398=(($303+24)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent398)>>2)]=$302; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $304=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $305=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk399=(($305+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk399)>>2)]=$304; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $306=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd400=(($306+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd400)>>2)]=$304; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 119; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 111: // $if_else401
      _abort(); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 112: // $if_end402
      __label__ = 118; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 113: // $if_else403
      var $307=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd405=(($307+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $308=HEAP32[(($fd405)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F404=$308; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $309=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $310=$309; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $311=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr406=(($311+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $312=HEAPU32[(($least_addr406)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp407=(($310)>>>0) >= (($312)>>>0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp407) { __label__ = 114; break; } else { var $317 = 0;__label__ = 115; break; } //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 114: // $land_rhs
      var $313=$F404; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $314=$313; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $315=$m_addr; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr409=(($315+16)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $316=HEAPU32[(($least_addr409)>>2)]; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp410=(($314)>>>0) >= (($316)>>>0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $317 = $cmp410;__label__ = 115; break;
    case 115: // $land_end
      var $317;
      var $land_ext=(($317)&1);
      var $expval412=(($land_ext)==(1));
      var $tobool413=(($expval412)|0)!=0;
      if ($tobool413) { __label__ = 116; break; } else { __label__ = 117; break; }
    case 116: // $if_then414
      var $318=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $319=$F404; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk415=(($319+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk415)>>2)]=$318; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $320=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd416=(($320+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd416)>>2)]=$318; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $321=$F404; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $322=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd417=(($322+8)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd417)>>2)]=$321; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $323=$T; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $324=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk418=(($324+12)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk418)>>2)]=$323; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $325=$TP; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent419=(($325+24)|0); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent419)>>2)]=0; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 119; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 117: // $if_else420
      _abort(); //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 118: // $if_end421
      __label__ = 106; break; //@line 4253 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 119: // $for_end422
      __label__ = 120; break;
    case 120: // $if_end423
      __label__ = 121; break;
    case 121: // $if_end424
      __label__ = 122; break;
    case 122: // $if_end425
      var $326=$v; //@line 4255 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $327=$326; //@line 4255 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr426=(($327+8)|0); //@line 4255 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr426; //@line 4255 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 126; break; //@line 4255 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 123: // $if_end427
      __label__ = 124; break; //@line 4257 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 124: // $if_end428
      _abort(); //@line 4258 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4258 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 125: // $if_end429
      $retval=0; //@line 4260 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 126; break; //@line 4260 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 126: // $return
      var $328=$retval; //@line 4261 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $328; //@line 4261 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_tmalloc_large["X"]=1;

function _sys_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $tbase;
      var $tsize;
      var $mmap_flag;
      var $mem;
      var $br;
      var $ss;
      var $asize;
      var $base;
      var $esize;
      var $end;
      var $asize97;
      var $br106;
      var $end107;
      var $ssize;
      var $mn;
      var $sp;
      var $oldbase;
      var $rsize;
      var $p;
      var $r;
      $m_addr=$m;
      $nb_addr=$nb;
      $tbase=-1; //@line 3876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=0; //@line 3877 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mmap_flag=0; //@line 3878 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 3880 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags=(($2+440)|0); //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[(($mflags)>>2)]; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$3 & 0; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool1=(($and)|0)!=0; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool1) { __label__ = 3; break; } else { __label__ = 8; break; } //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $4=$nb_addr; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=HEAPU32[((((_mparams+12)|0))>>2)]; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)>>>0) >= (($5)>>>0); //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 8; break; } //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $land_lhs_true3
      var $6=$m_addr; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($6+12)|0); //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($topsize)>>2)]; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($7)|0)!=0; //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 5; break; } else { __label__ = 8; break; } //@line 3883 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then
      var $8=$m_addr; //@line 3884 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$nb_addr; //@line 3884 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call5=_mmap_alloc($8, $9); //@line 3884 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call5; //@line 3884 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$mem; //@line 3885 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp6=(($10)|0)!=0; //@line 3885 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp6) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3885 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then7
      var $11=$mem; //@line 3886 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$11; //@line 3886 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 3886 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_end
      __label__ = 8; break; //@line 3887 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end8
      var $12=$m_addr; //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags9=(($12+440)|0); //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($mflags9)>>2)]; //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and10=$13 & 4; //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool11=(($and10)|0)!=0; //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool11) { __label__ = 41; break; } else { __label__ = 9; break; } //@line 3911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then12
      $br=-1; //@line 3912 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$m_addr; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($14+24)|0); //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[(($top)>>2)]; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp13=(($15)|0)==0; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp13) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_true
      var $cond = 0;__label__ = 12; break; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $cond_false
      var $16=$m_addr; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$m_addr; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top14=(($17+24)|0); //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($top14)>>2)]; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call15=_segment_holding($16, $19); //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $call15;__label__ = 12; break; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $cond_end
      var $cond; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $ss=$cond; //@line 3913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize=0; //@line 3914 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$ss; //@line 3917 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp16=(($20)|0)==0; //@line 3917 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp16) { __label__ = 13; break; } else { __label__ = 21; break; } //@line 3917 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then17
      var $call18=_sbrk(0); //@line 3918 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $base=$call18; //@line 3918 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$base; //@line 3919 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp19=(($21)|0)!=-1; //@line 3919 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp19) { __label__ = 14; break; } else { __label__ = 20; break; } //@line 3919 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then20
      var $22=$nb_addr; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($22+48)|0); //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($23-1)|0); //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add21=(($add+$sub)|0); //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub22=(($24-1)|0); //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub22 ^ -1; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and23=$add21 & $neg; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize=$and23; //@line 3920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$base; //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub24=(($27-1)|0); //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and25=$26 & $sub24; //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($and25)|0)==0; //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3922 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then27
      var $28=$base; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub28=(($30-1)|0); //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add29=(($29+$sub28)|0); //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub30=(($31-1)|0); //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg31=$sub30 ^ -1; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and32=$add29 & $neg31; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$base; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub33=(($and32-$33)|0); //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$asize; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add34=(($34+$sub33)|0); //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize=$add34; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 3923 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_end35
      var $35=$asize; //@line 3925 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($35)>>>0) < 2147483647; //@line 3925 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 17; break; } else { __label__ = 19; break; } //@line 3925 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $land_lhs_true37
      var $36=$asize; //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call38=_sbrk($36); //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $br=$call38; //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$base; //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp39=(($call38)|0)==(($37)|0); //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp39) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 3926 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then40
      var $38=$base; //@line 3927 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tbase=$38; //@line 3927 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$asize; //@line 3928 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$39; //@line 3928 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 3929 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end41
      __label__ = 20; break; //@line 3930 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end42
      __label__ = 25; break; //@line 3931 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_else
      var $40=$nb_addr; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize43=(($41+12)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=HEAP32[(($topsize43)>>2)]; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub44=(($40-$42)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add45=(($sub44+48)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub46=(($43-1)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add47=(($add45+$sub46)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub48=(($44-1)|0); //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg49=$sub48 ^ -1; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and50=$add47 & $neg49; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize=$and50; //@line 3934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$asize; //@line 3936 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($45)>>>0) < 2147483647; //@line 3936 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp51) { __label__ = 22; break; } else { __label__ = 24; break; } //@line 3936 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $land_lhs_true52
      var $46=$asize; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call53=_sbrk($46); //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $br=$call53; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$ss; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base54=(($47)|0); //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=HEAP32[(($base54)>>2)]; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=$ss; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($49+4)|0); //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=HEAP32[(($size)>>2)]; //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($48+$50)|0); //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp55=(($call53)|0)==(($add_ptr)|0); //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp55) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3937 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then56
      var $51=$br; //@line 3938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tbase=$51; //@line 3938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$asize; //@line 3939 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$52; //@line 3939 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break; //@line 3940 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_end57
      __label__ = 25; break;
    case 25: // $if_end58
      var $53=$tbase; //@line 3943 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp59=(($53)|0)==-1; //@line 3943 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp59) { __label__ = 26; break; } else { __label__ = 40; break; } //@line 3943 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then60
      var $54=$br; //@line 3944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp61=(($54)|0)!=-1; //@line 3944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp61) { __label__ = 27; break; } else { __label__ = 36; break; } //@line 3944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_then62
      var $55=$asize; //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($55)>>>0) < 2147483647; //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp63) { __label__ = 28; break; } else { __label__ = 35; break; } //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $land_lhs_true64
      var $56=$asize; //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$nb_addr; //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add65=(($57+48)|0); //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp66=(($56)>>>0) < (($add65)>>>0); //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp66) { __label__ = 29; break; } else { __label__ = 35; break; } //@line 3945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then67
      var $58=$nb_addr; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add68=(($58+48)|0); //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$asize; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub69=(($add68-$59)|0); //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub70=(($60-1)|0); //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add71=(($sub69+$sub70)|0); //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub72=(($61-1)|0); //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg73=$sub72 ^ -1; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and74=$add71 & $neg73; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $esize=$and74; //@line 3947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$esize; //@line 3948 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($62)>>>0) < 2147483647; //@line 3948 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp75) { __label__ = 30; break; } else { __label__ = 34; break; } //@line 3948 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then76
      var $63=$esize; //@line 3949 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call77=_sbrk($63); //@line 3949 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $end=$call77; //@line 3949 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$end; //@line 3950 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp78=(($64)|0)!=-1; //@line 3950 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp78) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 3950 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then79
      var $65=$esize; //@line 3951 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$asize; //@line 3951 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add80=(($66+$65)|0); //@line 3951 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize=$add80; //@line 3951 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 3951 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_else81
      var $67=$asize; //@line 3953 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub82=(((-$67))|0); //@line 3953 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call83=_sbrk($sub82); //@line 3953 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $br=-1; //@line 3954 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break;
    case 33: // $if_end84
      __label__ = 34; break; //@line 3956 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_end85
      __label__ = 35; break; //@line 3957 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_end86
      __label__ = 36; break; //@line 3958 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_end87
      var $68=$br; //@line 3959 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp88=(($68)|0)!=-1; //@line 3959 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp88) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3959 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then89
      var $69=$br; //@line 3960 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tbase=$69; //@line 3960 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$asize; //@line 3961 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$70; //@line 3961 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 3962 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else90
      var $71=$m_addr; //@line 3964 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags91=(($71+440)|0); //@line 3964 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($mflags91)>>2)]; //@line 3964 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$72 | 4; //@line 3964 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($mflags91)>>2)]=$or; //@line 3964 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break;
    case 39: // $if_end92
      __label__ = 40; break; //@line 3965 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_end93
      __label__ = 41; break; //@line 3968 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_end94
      var $73=$tbase; //@line 3982 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp95=(($73)|0)==-1; //@line 3982 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp95) { __label__ = 42; break; } else { __label__ = 51; break; } //@line 3982 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then96
      var $74=$nb_addr; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add98=(($74+48)|0); //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub99=(($75-1)|0); //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add100=(($add98+$sub99)|0); //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub101=(($76-1)|0); //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg102=$sub101 ^ -1; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and103=$add100 & $neg102; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asize97=$and103; //@line 3983 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$asize97; //@line 3984 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp104=(($77)>>>0) < 2147483647; //@line 3984 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp104) { __label__ = 43; break; } else { __label__ = 50; break; } //@line 3984 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then105
      $br106=-1; //@line 3985 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $end107=-1; //@line 3986 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=$asize97; //@line 3988 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call108=_sbrk($78); //@line 3988 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $br106=$call108; //@line 3988 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call109=_sbrk(0); //@line 3989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $end107=$call109; //@line 3989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $79=$br106; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp110=(($79)|0)!=-1; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp110) { __label__ = 44; break; } else { __label__ = 49; break; } //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $land_lhs_true111
      var $80=$end107; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp112=(($80)|0)!=-1; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp112) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $land_lhs_true113
      var $81=$br106; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$end107; //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp114=(($81)>>>0) < (($82)>>>0); //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp114) { __label__ = 46; break; } else { __label__ = 49; break; } //@line 3991 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then115
      var $83=$end107; //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$br106; //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$83; //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$84; //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $ssize=$sub_ptr_sub; //@line 3992 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$ssize; //@line 3993 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=$nb_addr; //@line 3993 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add116=(($86+40)|0); //@line 3993 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp117=(($85)>>>0) > (($add116)>>>0); //@line 3993 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp117) { __label__ = 47; break; } else { __label__ = 48; break; } //@line 3993 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then118
      var $87=$br106; //@line 3994 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tbase=$87; //@line 3994 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$ssize; //@line 3995 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$88; //@line 3995 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 3996 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_end119
      __label__ = 49; break; //@line 3997 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_end120
      __label__ = 50; break; //@line 3998 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end121
      __label__ = 51; break; //@line 3999 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end122
      var $89=$tbase; //@line 4001 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp123=(($89)|0)!=-1; //@line 4001 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp123) { __label__ = 52; break; } else { __label__ = 90; break; } //@line 4001 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then124
      var $90=$tsize; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=$m_addr; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($91+432)|0); //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=HEAP32[(($footprint)>>2)]; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add125=(($92+$90)|0); //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$add125; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=$m_addr; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($93+436)|0); //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=HEAPU32[(($max_footprint)>>2)]; //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp126=(($add125)>>>0) > (($94)>>>0); //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp126) { __label__ = 53; break; } else { __label__ = 54; break; } //@line 4003 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_then127
      var $95=$m_addr; //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint128=(($95+432)|0); //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($footprint128)>>2)]; //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$m_addr; //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint129=(($97+436)|0); //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($max_footprint129)>>2)]=$96; //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 54; break; //@line 4004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end130
      var $98=$m_addr; //@line 4006 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top131=(($98+24)|0); //@line 4006 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=HEAP32[(($top131)>>2)]; //@line 4006 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp132=(($99)|0)!=0; //@line 4006 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp132) { __label__ = 62; break; } else { __label__ = 55; break; } //@line 4006 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then133
      var $100=$m_addr; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($100+16)|0); //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=HEAP32[(($least_addr)>>2)]; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp134=(($101)|0)==0; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp134) { __label__ = 57; break; } else { __label__ = 56; break; } //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 56: // $lor_lhs_false
      var $102=$tbase; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=$m_addr; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr135=(($103+16)|0); //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=HEAPU32[(($least_addr135)>>2)]; //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($102)>>>0) < (($104)>>>0); //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp136) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 4007 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then137
      var $105=$tbase; //@line 4008 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$m_addr; //@line 4008 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr138=(($106+16)|0); //@line 4008 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr138)>>2)]=$105; //@line 4008 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 58; break; //@line 4008 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_end139
      var $107=$tbase; //@line 4009 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=$m_addr; //@line 4009 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($108+444)|0); //@line 4009 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base140=(($seg)|0); //@line 4009 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base140)>>2)]=$107; //@line 4009 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $109=$tsize; //@line 4010 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$m_addr; //@line 4010 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg141=(($110+444)|0); //@line 4010 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size142=(($seg141+4)|0); //@line 4010 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size142)>>2)]=$109; //@line 4010 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $111=$mmap_flag; //@line 4011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=$m_addr; //@line 4011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg143=(($112+444)|0); //@line 4011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($seg143+12)|0); //@line 4011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($sflags)>>2)]=$111; //@line 4011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[((((_mparams)|0))>>2)]; //@line 4012 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$m_addr; //@line 4012 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $magic=(($114+36)|0); //@line 4012 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($magic)>>2)]=$113; //@line 4012 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $115=$m_addr; //@line 4013 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $release_checks=(($115+32)|0); //@line 4013 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($release_checks)>>2)]=-1; //@line 4013 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=$m_addr; //@line 4014 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_bins($116); //@line 4014 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $117=$m_addr; //@line 4016 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp144=(($117)|0)==((__gm_)|0); //@line 4016 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp144) { __label__ = 59; break; } else { __label__ = 60; break; } //@line 4016 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then145
      var $118=$m_addr; //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=$tbase; //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$119; //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$tsize; //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub146=(($121-40)|0); //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_top($118, $120, $sub146); //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break; //@line 4017 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_else147
      var $122=$m_addr; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $123=$122; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr148=(($123-8)|0); //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $124=$add_ptr148; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$124; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $127=$126; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr149=(($127-8)|0); //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$add_ptr149; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($128+4)|0); //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($head)>>2)]; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and150=$129 & -8; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr151=(($125+$and150)|0); //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=$add_ptr151; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mn=$130; //@line 4022 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$m_addr; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $132=$mn; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=$tbase; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $134=$tsize; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr152=(($133+$134)|0); //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=$mn; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $136=$135; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast153=$add_ptr152; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast154=$136; //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub155=(($sub_ptr_lhs_cast153-$sub_ptr_rhs_cast154)|0); //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub156=(($sub_ptr_sub155-40)|0); //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_top($131, $132, $sub156); //@line 4023 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 61; break;
    case 61: // $if_end157
      __label__ = 87; break; //@line 4025 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_else158
      var $137=$m_addr; //@line 4029 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg159=(($137+444)|0); //@line 4029 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$seg159; //@line 4029 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 63: // $while_cond
      var $138=$sp; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp160=(($138)|0)!=0; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp160) { __label__ = 64; break; } else { var $144 = 0;__label__ = 65; break; } //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 64: // $land_rhs
      var $139=$tbase; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$sp; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base161=(($140)|0); //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($base161)>>2)]; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$sp; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size162=(($142+4)|0); //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $143=HEAP32[(($size162)>>2)]; //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr163=(($141+$143)|0); //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp164=(($139)|0)!=(($add_ptr163)|0); //@line 4031 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144 = $cmp164;__label__ = 65; break;
    case 65: // $land_end
      var $144;
      if ($144) { __label__ = 66; break; } else { __label__ = 67; break; }
    case 66: // $while_body
      var $145=$sp; //@line 4032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($145+8)|0); //@line 4032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($next)>>2)]; //@line 4032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$146; //@line 4032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $while_end
      var $147=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp165=(($147)|0)!=0; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp165) { __label__ = 68; break; } else { __label__ = 73; break; } //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 68: // $land_lhs_true166
      var $148=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags167=(($148+12)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=HEAP32[(($sflags167)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and168=$149 & 8; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool169=(($and168)|0)!=0; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool169) { __label__ = 73; break; } else { __label__ = 69; break; } //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 69: // $land_lhs_true170
      var $150=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags171=(($150+12)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($sflags171)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and172=$151 & 0; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $152=$mmap_flag; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp173=(($and172)|0)==(($152)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp173) { __label__ = 70; break; } else { __label__ = 73; break; } //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 70: // $land_lhs_true174
      var $153=$m_addr; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top175=(($153+24)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=HEAP32[(($top175)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=$154; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base176=(($156)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=HEAPU32[(($base176)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp177=(($155)>>>0) >= (($157)>>>0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp177) { __label__ = 71; break; } else { __label__ = 73; break; } //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 71: // $land_lhs_true178
      var $158=$m_addr; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top179=(($158+24)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[(($top179)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $160=$159; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base180=(($161)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=HEAP32[(($base180)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=$sp; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size181=(($163+4)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $164=HEAP32[(($size181)>>2)]; //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr182=(($162+$164)|0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp183=(($160)>>>0) < (($add_ptr182)>>>0); //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp183) { __label__ = 72; break; } else { __label__ = 73; break; } //@line 4033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then184
      var $165=$tsize; //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$sp; //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size185=(($166+4)|0); //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[(($size185)>>2)]; //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add186=(($167+$165)|0); //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size185)>>2)]=$add186; //@line 4037 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$m_addr; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top187=(($169+24)|0); //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=HEAP32[(($top187)>>2)]; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=$m_addr; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize188=(($171+12)|0); //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($topsize188)>>2)]; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=$tsize; //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add189=(($172+$173)|0); //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_top($168, $170, $add189); //@line 4038 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 86; break; //@line 4039 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else190
      var $174=$tbase; //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=$m_addr; //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr191=(($175+16)|0); //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[(($least_addr191)>>2)]; //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp192=(($174)>>>0) < (($176)>>>0); //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp192) { __label__ = 74; break; } else { __label__ = 75; break; } //@line 4041 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_then193
      var $177=$tbase; //@line 4042 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=$m_addr; //@line 4042 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr194=(($178+16)|0); //@line 4042 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr194)>>2)]=$177; //@line 4042 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 75; break; //@line 4042 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end195
      var $179=$m_addr; //@line 4043 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg196=(($179+444)|0); //@line 4043 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$seg196; //@line 4043 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 76: // $while_cond197
      var $180=$sp; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp198=(($180)|0)!=0; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp198) { __label__ = 77; break; } else { var $185 = 0;__label__ = 78; break; } //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs199
      var $181=$sp; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base200=(($181)|0); //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=HEAP32[(($base200)>>2)]; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$tbase; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=$tsize; //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr201=(($183+$184)|0); //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp202=(($182)|0)!=(($add_ptr201)|0); //@line 4044 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $185 = $cmp202;__label__ = 78; break;
    case 78: // $land_end203
      var $185;
      if ($185) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $while_body204
      var $186=$sp; //@line 4045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next205=(($186+8)|0); //@line 4045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=HEAP32[(($next205)>>2)]; //@line 4045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$187; //@line 4045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 76; break; //@line 4045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 80: // $while_end206
      var $188=$sp; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp207=(($188)|0)!=0; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp207) { __label__ = 81; break; } else { __label__ = 84; break; } //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 81: // $land_lhs_true208
      var $189=$sp; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags209=(($189+12)|0); //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $190=HEAP32[(($sflags209)>>2)]; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and210=$190 & 8; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool211=(($and210)|0)!=0; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool211) { __label__ = 84; break; } else { __label__ = 82; break; } //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 82: // $land_lhs_true212
      var $191=$sp; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags213=(($191+12)|0); //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $192=HEAP32[(($sflags213)>>2)]; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and214=$192 & 0; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $193=$mmap_flag; //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp215=(($and214)|0)==(($193)|0); //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp215) { __label__ = 83; break; } else { __label__ = 84; break; } //@line 4046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_then216
      var $194=$sp; //@line 4049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base217=(($194)|0); //@line 4049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($base217)>>2)]; //@line 4049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldbase=$195; //@line 4049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $196=$tbase; //@line 4050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $197=$sp; //@line 4050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base218=(($197)|0); //@line 4050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base218)>>2)]=$196; //@line 4050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$tsize; //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $199=$sp; //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size219=(($199+4)|0); //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[(($size219)>>2)]; //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add220=(($200+$198)|0); //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size219)>>2)]=$add220; //@line 4051 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $201=$m_addr; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $202=$tbase; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $203=$oldbase; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $204=$nb_addr; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call221=_prepend_alloc($201, $202, $203, $204); //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$call221; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_else222
      var $205=$m_addr; //@line 4055 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $206=$tbase; //@line 4055 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $207=$tsize; //@line 4055 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $208=$mmap_flag; //@line 4055 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _add_segment($205, $206, $207, $208); //@line 4055 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break;
    case 85: // $if_end223
      __label__ = 86; break;
    case 86: // $if_end224
      __label__ = 87; break;
    case 87: // $if_end225
      var $209=$nb_addr; //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $210=$m_addr; //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize226=(($210+12)|0); //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $211=HEAPU32[(($topsize226)>>2)]; //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp227=(($209)>>>0) < (($211)>>>0); //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp227) { __label__ = 88; break; } else { __label__ = 89; break; } //@line 4059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_then228
      var $212=$nb_addr; //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $213=$m_addr; //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize229=(($213+12)|0); //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $214=HEAP32[(($topsize229)>>2)]; //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub230=(($214-$212)|0); //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize229)>>2)]=$sub230; //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub230; //@line 4060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $215=$m_addr; //@line 4061 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top231=(($215+24)|0); //@line 4061 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $216=HEAP32[(($top231)>>2)]; //@line 4061 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$216; //@line 4061 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $217=$p; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $219=$nb_addr; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr232=(($218+$219)|0); //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $220=$add_ptr232; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $221=$m_addr; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top233=(($221+24)|0); //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top233)>>2)]=$220; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $r=$220; //@line 4062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $222=$rsize; //@line 4063 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or234=$222 | 1; //@line 4063 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $223=$r; //@line 4063 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head235=(($223+4)|0); //@line 4063 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head235)>>2)]=$or234; //@line 4063 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $224=$nb_addr; //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or236=$224 | 1; //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or237=$or236 | 2; //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $225=$p; //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head238=(($225+4)|0); //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head238)>>2)]=$or237; //@line 4064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $226=$p; //@line 4067 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $227=$226; //@line 4067 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr239=(($227+8)|0); //@line 4067 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr239; //@line 4067 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4067 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_end240
      __label__ = 90; break; //@line 4069 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_end241
      var $call242=___errno(); //@line 4071 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($call242)>>2)]=12; //@line 4071 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=0; //@line 4072 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 4072 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 91: // $return
      var $228=$retval; //@line 4073 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $228; //@line 4073 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_alloc["X"]=1;

function _free($mem) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $mem_addr;
      var $p;
      var $psize;
      var $next;
      var $prevsize;
      var $prev;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F60;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F245;
      var $B247;
      var $I249;
      var $TP285;
      var $XP286;
      var $R288;
      var $F293;
      var $RP306;
      var $CP317;
      var $H343;
      var $C0385;
      var $C1386;
      var $I447;
      var $B449;
      var $F452;
      var $tp;
      var $H475;
      var $I476;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K525;
      var $C;
      var $F558;
      $mem_addr=$mem;
      var $0=$mem_addr; //@line 4740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 195; break; } //@line 4740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$mem_addr; //@line 4741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1-8)|0); //@line 4741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 4741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$2; //@line 4741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$p; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($4)>>>0) >= (($5)>>>0); //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 2; break; } else { var $8 = 0;__label__ = 3; break; } //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $land_rhs
      var $6=$p; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($6+4)|0); //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($head)>>2)]; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$7 & 3; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($and)|0)!=1; //@line 4753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8 = $cmp2;__label__ = 3; break;
    case 3: // $land_end
      var $8;
      var $land_ext=(($8)&1);
      var $expval=(($land_ext)==(1));
      var $tobool=(($expval)|0)!=0;
      if ($tobool) { __label__ = 4; break; } else { __label__ = 192; break; }
    case 4: // $if_then3
      var $9=$p; //@line 4754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head4=(($9+4)|0); //@line 4754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[(($head4)>>2)]; //@line 4754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and5=$10 & -8; //@line 4754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$and5; //@line 4754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$p; //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$11; //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$psize; //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($12+$13)|0); //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr6; //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $next=$14; //@line 4755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$p; //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head7=(($15+4)|0); //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($head7)>>2)]; //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and8=$16 & 1; //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool9=(($and8)|0)!=0; //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool9) { __label__ = 76; break; } else { __label__ = 5; break; } //@line 4756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then10
      var $17=$p; //@line 4757 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($17)|0); //@line 4757 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($prev_foot)>>2)]; //@line 4757 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $prevsize=$18; //@line 4757 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$p; //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head11=(($19+4)|0); //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=HEAP32[(($head11)>>2)]; //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and12=$20 & 3; //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp13=(($and12)|0)==0; //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp13) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 4758 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then14
      var $21=$prevsize; //@line 4759 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($21+16)|0); //@line 4759 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$psize; //@line 4759 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add15=(($22+$add)|0); //@line 4759 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$add15; //@line 4759 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4762 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_else
      var $23=$p; //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$prevsize; //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $idx_neg=(((-$25))|0); //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr16=(($24+$idx_neg)|0); //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$add_ptr16; //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $prev=$26; //@line 4765 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$prevsize; //@line 4766 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$psize; //@line 4766 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add17=(($28+$27)|0); //@line 4766 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$add17; //@line 4766 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$prev; //@line 4767 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$29; //@line 4767 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$prev; //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$30; //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp18=(($31)>>>0) >= (($32)>>>0); //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp18)&1); //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval19=(($conv)==(1)); //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool20=(($expval19)|0)!=0; //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool20) { __label__ = 8; break; } else { __label__ = 73; break; } //@line 4768 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then21
      var $33=$p; //@line 4769 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4769 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($33)|0)!=(($34)|0); //@line 4769 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 9; break; } else { __label__ = 69; break; } //@line 4769 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then24
      var $35=$prevsize; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$35 >>> 3; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp25=(($shr)>>>0) < 32; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp25) { __label__ = 10; break; } else { __label__ = 22; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then27
      var $36=$p; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($36+8)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=HEAP32[(($fd)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$37; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$p; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($38+12)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($bk)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$39; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$prevsize; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr28=$40 >>> 3; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr28; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$F; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$B; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp29=(($41)|0)==(($42)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp29) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then31
      var $43=$I; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $43; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[((((__gm_)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and32=$44 & $neg; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and32; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_else33
      var $45=$F; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$I; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl34=$46 << 1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=((((__gm_+40)|0)+($shl34<<2))|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$arrayidx; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$47; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp35=(($45)|0)==(($48)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp35) { __label__ = 14; break; } else { __label__ = 13; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $lor_lhs_false
      var $49=$F; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp37=(($50)>>>0) >= (($51)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp37) { __label__ = 14; break; } else { var $60 = 0;__label__ = 17; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $land_rhs39
      var $52=$B; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$I; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl40=$53 << 1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx41=((((__gm_+40)|0)+($shl40<<2))|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$arrayidx41; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$54; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp42=(($52)|0)==(($55)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp42) { var $59 = 1;__label__ = 16; break; } else { __label__ = 15; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $lor_rhs
      var $56=$B; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($57)>>>0) >= (($58)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59 = $cmp44;__label__ = 16; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $lor_end
      var $59;
      var $60 = $59;__label__ = 17; break;
    case 17: // $land_end46
      var $60;
      var $land_ext47=(($60)&1);
      var $expval48=(($land_ext47)==(1));
      var $tobool49=(($expval48)|0)!=0;
      if ($tobool49) { __label__ = 18; break; } else { __label__ = 19; break; }
    case 18: // $if_then50
      var $61=$B; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$F; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk51=(($62+12)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk51)>>2)]=$61; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$F; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$B; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd52=(($64+8)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd52)>>2)]=$63; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 20; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_else53
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end
      __label__ = 21; break;
    case 21: // $if_end54
      __label__ = 68; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_else55
      var $65=$p; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP=$66; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($67+24)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=HEAP32[(($parent)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP=$68; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk56=(($69+12)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=HEAP32[(($bk56)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp57=(($70)|0)!=(($71)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp57) { __label__ = 23; break; } else { __label__ = 27; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then59
      var $72=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd61=(($72+8)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=HEAP32[(($fd61)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F60=$73; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk62=(($74+12)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=HEAP32[(($bk62)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$75; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$F60; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$76; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($77)>>>0) >= (($78)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv64=(($cmp63)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval65=(($conv64)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool66=(($expval65)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool66) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then67
      var $79=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$F60; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk68=(($80+12)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk68)>>2)]=$79; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=$F60; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd69=(($82+8)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd69)>>2)]=$81; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else70
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end71
      __label__ = 39; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_else72
      var $83=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($83+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx73=(($child+4)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx73; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=HEAP32[(($arrayidx73)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$84; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp74=(($84)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp74) { __label__ = 29; break; } else { __label__ = 28; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $lor_lhs_false76
      var $85=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child77=(($85+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx78=(($child77)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx78; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=HEAP32[(($arrayidx78)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$86; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp79=(($86)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp79) { __label__ = 29; break; } else { __label__ = 38; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then81
      __label__ = 30; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $while_cond
      var $87=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child82=(($87+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx83=(($child82+4)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx83; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx83)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp84=(($88)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp84) { var $91 = 1;__label__ = 32; break; } else { __label__ = 31; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $lor_rhs86
      var $89=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child87=(($89+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx88=(($child87)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx88; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $90=HEAP32[(($arrayidx88)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp89=(($90)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91 = $cmp89;__label__ = 32; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $lor_end91
      var $91;
      if ($91) { __label__ = 33; break; } else { __label__ = 34; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $while_body
      var $92=$CP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$92; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($92)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$93; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 30; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $while_end
      var $94=$RP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=$94; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($95)>>>0) >= (($96)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv93=(($cmp92)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval94=(($conv93)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool95=(($expval94)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool95) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_then96
      var $97=$RP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($97)>>2)]=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else97
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_end98
      __label__ = 38; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end99
      __label__ = 39; break;
    case 39: // $if_end100
      var $98=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($98)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp101) { __label__ = 40; break; } else { __label__ = 67; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_then103
      var $99=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($99+28)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=HEAP32[(($index)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx104=((((__gm_+304)|0)+($100<<2))|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx104; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=$H; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=HEAP32[(($102)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp105=(($101)|0)==(($103)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp105) { __label__ = 41; break; } else { __label__ = 44; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then107
      var $104=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$H; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($105)>>2)]=$104; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp108=(($104)|0)==0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp108) { __label__ = 42; break; } else { __label__ = 43; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then110
      var $106=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index111=(($106+28)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $107=HEAP32[(($index111)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl112=1 << $107; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg113=$shl112 ^ -1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and114=$108 & $neg113; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$and114; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_end115
      __label__ = 51; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_else116
      var $109=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$109; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $111=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp117=(($110)>>>0) >= (($111)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv118=(($cmp117)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval119=(($conv118)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool120=(($expval119)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool120) { __label__ = 45; break; } else { __label__ = 49; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_then121
      var $112=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child122=(($112+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx123=(($child122)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $113=HEAP32[(($arrayidx123)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp124=(($113)|0)==(($114)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp124) { __label__ = 46; break; } else { __label__ = 47; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_then126
      var $115=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child127=(($116+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx128=(($child127)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx128)>>2)]=$115; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_else129
      var $117=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child130=(($118+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx131=(($child130+4)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx131)>>2)]=$117; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 48; break;
    case 48: // $if_end132
      __label__ = 50; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else133
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_end134
      __label__ = 51; break;
    case 51: // $if_end135
      var $119=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp136=(($119)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp136) { __label__ = 52; break; } else { __label__ = 66; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_then138
      var $120=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$120; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp139=(($121)>>>0) >= (($122)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv140=(($cmp139)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval141=(($conv140)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool142=(($expval141)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool142) { __label__ = 53; break; } else { __label__ = 64; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_then143
      var $123=$XP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $124=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent144=(($124+24)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent144)>>2)]=$123; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child145=(($125+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx146=(($child145)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=HEAP32[(($arrayidx146)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0=$126; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp147=(($126)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp147) { __label__ = 54; break; } else { __label__ = 58; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_then149
      var $127=$C0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$127; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp150=(($128)>>>0) >= (($129)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv151=(($cmp150)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval152=(($conv151)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool153=(($expval152)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool153) { __label__ = 55; break; } else { __label__ = 56; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then154
      var $130=$C0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child155=(($131+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx156=(($child155)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx156)>>2)]=$130; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $132=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=$C0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent157=(($133+24)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent157)>>2)]=$132; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 57; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_else158
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_end159
      __label__ = 58; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_end160
      var $134=$TP; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child161=(($134+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx162=(($child161+4)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($arrayidx162)>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1=$135; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp163=(($135)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp163) { __label__ = 59; break; } else { __label__ = 63; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_then165
      var $136=$C1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=$136; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $138=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp166=(($137)>>>0) >= (($138)>>>0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv167=(($cmp166)&1); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval168=(($conv167)==(1)); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool169=(($expval168)|0)!=0; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool169) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_then170
      var $139=$C1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child171=(($140+16)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx172=(($child171+4)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx172)>>2)]=$139; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=$R; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$C1; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent173=(($142+24)|0); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent173)>>2)]=$141; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else174
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_end175
      __label__ = 63; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_end176
      __label__ = 65; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_else177
      _abort(); //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end178
      __label__ = 66; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_end179
      __label__ = 67; break; //@line 4770 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end180
      __label__ = 68; break;
    case 68: // $if_end181
      __label__ = 72; break; //@line 4771 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_else182
      var $143=$next; //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head183=(($143+4)|0); //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=HEAP32[(($head183)>>2)]; //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and184=$144 & 3; //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp185=(($and184)|0)==3; //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp185) { __label__ = 70; break; } else { __label__ = 71; break; } //@line 4772 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then187
      var $145=$psize; //@line 4773 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$145; //@line 4773 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=$next; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head188=(($146+4)|0); //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=HEAP32[(($head188)>>2)]; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and189=$147 & -2; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head188)>>2)]=$and189; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $148=$psize; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$148 | 1; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=$p; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head190=(($149+4)|0); //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head190)>>2)]=$or; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $150=$psize; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=$p; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $152=$151; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=$psize; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr191=(($152+$153)|0); //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$add_ptr191; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot192=(($154)|0); //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot192)>>2)]=$150; //@line 4774 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4775 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_end193
      __label__ = 72; break;
    case 72: // $if_end194
      __label__ = 74; break; //@line 4777 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_else195
      __label__ = 193; break; //@line 4779 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_end196
      __label__ = 75; break;
    case 75: // $if_end197
      __label__ = 76; break; //@line 4781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_end198
      var $155=$p; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$155; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=$next; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$157; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp199=(($156)>>>0) < (($158)>>>0); //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp199) { __label__ = 77; break; } else { var $161 = 0;__label__ = 78; break; } //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs201
      var $159=$next; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head202=(($159+4)|0); //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($head202)>>2)]; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and203=$160 & 1; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool204=(($and203)|0)!=0; //@line 4783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161 = $tobool204;__label__ = 78; break;
    case 78: // $land_end205
      var $161;
      var $land_ext206=(($161)&1);
      var $expval207=(($land_ext206)==(1));
      var $tobool208=(($expval207)|0)!=0;
      if ($tobool208) { __label__ = 79; break; } else { __label__ = 191; break; }
    case 79: // $if_then209
      var $162=$next; //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head210=(($162+4)|0); //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=HEAP32[(($head210)>>2)]; //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and211=$163 & 2; //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool212=(($and211)|0)!=0; //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool212) { __label__ = 152; break; } else { __label__ = 80; break; } //@line 4784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_then213
      var $164=$next; //@line 4785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[((((__gm_+24)|0))>>2)]; //@line 4785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp214=(($164)|0)==(($165)|0); //@line 4785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp214) { __label__ = 81; break; } else { __label__ = 86; break; } //@line 4785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_then216
      var $166=$psize; //@line 4786 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $167=HEAP32[((((__gm_+12)|0))>>2)]; //@line 4786 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add217=(($167+$166)|0); //@line 4786 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+12)|0))>>2)]=$add217; //@line 4786 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$add217; //@line 4786 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$p; //@line 4787 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+24)|0))>>2)]=$168; //@line 4787 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$tsize; //@line 4788 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or218=$169 | 1; //@line 4788 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=$p; //@line 4788 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head219=(($170+4)|0); //@line 4788 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head219)>>2)]=$or218; //@line 4788 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=$p; //@line 4789 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4789 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp220=(($171)|0)==(($172)|0); //@line 4789 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp220) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 4789 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_then222
      HEAP32[((((__gm_+20)|0))>>2)]=0; //@line 4790 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=0; //@line 4791 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 83; break; //@line 4792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_end223
      var $173=$tsize; //@line 4793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $174=HEAPU32[((((__gm_+28)|0))>>2)]; //@line 4793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp224=(($173)>>>0) > (($174)>>>0); //@line 4793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp224) { __label__ = 84; break; } else { __label__ = 85; break; } //@line 4793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_then226
      var $call=_sys_trim(__gm_, 0); //@line 4794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 4794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_end227
      __label__ = 194; break; //@line 4795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_else228
      var $175=$next; //@line 4797 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4797 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp229=(($175)|0)==(($176)|0); //@line 4797 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp229) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4797 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_then231
      var $177=$psize; //@line 4798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=HEAP32[((((__gm_+8)|0))>>2)]; //@line 4798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add232=(($178+$177)|0); //@line 4798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$add232; //@line 4798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $dsize=$add232; //@line 4798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=$p; //@line 4799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+20)|0))>>2)]=$179; //@line 4799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $180=$dsize; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or233=$180 | 1; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=$p; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head234=(($181+4)|0); //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head234)>>2)]=$or233; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=$dsize; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$p; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=$183; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $185=$dsize; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr235=(($184+$185)|0); //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $186=$add_ptr235; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot236=(($186)|0); //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot236)>>2)]=$182; //@line 4800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 88: // $if_else237
      var $187=$next; //@line 4804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head238=(($187+4)|0); //@line 4804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=HEAP32[(($head238)>>2)]; //@line 4804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and239=$188 & -8; //@line 4804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nsize=$and239; //@line 4804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=$nsize; //@line 4805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $190=$psize; //@line 4805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add240=(($190+$189)|0); //@line 4805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$add240; //@line 4805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $191=$nsize; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr241=$191 >>> 3; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp242=(($shr241)>>>0) < 32; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp242) { __label__ = 89; break; } else { __label__ = 101; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 89: // $if_then244
      var $192=$next; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd246=(($192+8)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $193=HEAP32[(($fd246)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F245=$193; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $194=$next; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk248=(($194+12)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $195=HEAP32[(($bk248)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B247=$195; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $196=$nsize; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr250=$196 >>> 3; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I249=$shr250; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $197=$F245; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$B247; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp251=(($197)|0)==(($198)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp251) { __label__ = 90; break; } else { __label__ = 91; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 90: // $if_then253
      var $199=$I249; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl254=1 << $199; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg255=$shl254 ^ -1; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $200=HEAP32[((((__gm_)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and256=$200 & $neg255; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$and256; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 100; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 91: // $if_else257
      var $201=$F245; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $202=$I249; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl258=$202 << 1; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx259=((((__gm_+40)|0)+($shl258<<2))|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $203=$arrayidx259; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp260=(($201)|0)==(($204)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp260) { __label__ = 93; break; } else { __label__ = 92; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 92: // $lor_lhs_false262
      var $205=$F245; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $206=$205; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $207=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp263=(($206)>>>0) >= (($207)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp263) { __label__ = 93; break; } else { var $216 = 0;__label__ = 96; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 93: // $land_rhs265
      var $208=$B247; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $209=$I249; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl266=$209 << 1; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx267=((((__gm_+40)|0)+($shl266<<2))|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $210=$arrayidx267; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $211=$210; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp268=(($208)|0)==(($211)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp268) { var $215 = 1;__label__ = 95; break; } else { __label__ = 94; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 94: // $lor_rhs270
      var $212=$B247; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $213=$212; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $214=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp271=(($213)>>>0) >= (($214)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $215 = $cmp271;__label__ = 95; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 95: // $lor_end273
      var $215;
      var $216 = $215;__label__ = 96; break;
    case 96: // $land_end274
      var $216;
      var $land_ext275=(($216)&1);
      var $expval276=(($land_ext275)==(1));
      var $tobool277=(($expval276)|0)!=0;
      if ($tobool277) { __label__ = 97; break; } else { __label__ = 98; break; }
    case 97: // $if_then278
      var $217=$B247; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $218=$F245; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk279=(($218+12)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk279)>>2)]=$217; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $219=$F245; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $220=$B247; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd280=(($220+8)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd280)>>2)]=$219; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 99; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else281
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 99: // $if_end282
      __label__ = 100; break;
    case 100: // $if_end283
      __label__ = 147; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 101: // $if_else284
      var $221=$next; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $222=$221; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP285=$222; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $223=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent287=(($223+24)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $224=HEAP32[(($parent287)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP286=$224; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $225=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk289=(($225+12)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $226=HEAP32[(($bk289)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $227=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp290=(($226)|0)!=(($227)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp290) { __label__ = 102; break; } else { __label__ = 106; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_then292
      var $228=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd294=(($228+8)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $229=HEAP32[(($fd294)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F293=$229; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $230=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk295=(($230+12)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $231=HEAP32[(($bk295)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R288=$231; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $232=$F293; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $233=$232; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $234=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp296=(($233)>>>0) >= (($234)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv297=(($cmp296)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval298=(($conv297)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool299=(($expval298)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool299) { __label__ = 103; break; } else { __label__ = 104; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 103: // $if_then300
      var $235=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $236=$F293; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk301=(($236+12)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk301)>>2)]=$235; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $237=$F293; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $238=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd302=(($238+8)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd302)>>2)]=$237; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 105; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 104: // $if_else303
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 105: // $if_end304
      __label__ = 118; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 106: // $if_else305
      var $239=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child307=(($239+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx308=(($child307+4)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP306=$arrayidx308; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $240=HEAP32[(($arrayidx308)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R288=$240; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp309=(($240)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp309) { __label__ = 108; break; } else { __label__ = 107; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 107: // $lor_lhs_false311
      var $241=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child312=(($241+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx313=(($child312)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP306=$arrayidx313; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $242=HEAP32[(($arrayidx313)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R288=$242; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp314=(($242)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp314) { __label__ = 108; break; } else { __label__ = 117; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 108: // $if_then316
      __label__ = 109; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 109: // $while_cond318
      var $243=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child319=(($243+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx320=(($child319+4)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP317=$arrayidx320; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $244=HEAP32[(($arrayidx320)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp321=(($244)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp321) { var $247 = 1;__label__ = 111; break; } else { __label__ = 110; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 110: // $lor_rhs323
      var $245=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child324=(($245+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx325=(($child324)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP317=$arrayidx325; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $246=HEAP32[(($arrayidx325)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp326=(($246)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $247 = $cmp326;__label__ = 111; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 111: // $lor_end328
      var $247;
      if ($247) { __label__ = 112; break; } else { __label__ = 113; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 112: // $while_body329
      var $248=$CP317; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP306=$248; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $249=HEAP32[(($248)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R288=$249; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 109; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 113: // $while_end330
      var $250=$RP306; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $251=$250; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $252=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp331=(($251)>>>0) >= (($252)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv332=(($cmp331)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval333=(($conv332)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool334=(($expval333)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool334) { __label__ = 114; break; } else { __label__ = 115; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 114: // $if_then335
      var $253=$RP306; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($253)>>2)]=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 116; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 115: // $if_else336
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 116: // $if_end337
      __label__ = 117; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 117: // $if_end338
      __label__ = 118; break;
    case 118: // $if_end339
      var $254=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp340=(($254)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp340) { __label__ = 119; break; } else { __label__ = 146; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 119: // $if_then342
      var $255=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index344=(($255+28)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $256=HEAP32[(($index344)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx345=((((__gm_+304)|0)+($256<<2))|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H343=$arrayidx345; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $257=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $258=$H343; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $259=HEAP32[(($258)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp346=(($257)|0)==(($259)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp346) { __label__ = 120; break; } else { __label__ = 123; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 120: // $if_then348
      var $260=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $261=$H343; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($261)>>2)]=$260; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp349=(($260)|0)==0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp349) { __label__ = 121; break; } else { __label__ = 122; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 121: // $if_then351
      var $262=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index352=(($262+28)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $263=HEAP32[(($index352)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl353=1 << $263; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg354=$shl353 ^ -1; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $264=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and355=$264 & $neg354; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$and355; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 122; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 122: // $if_end356
      __label__ = 130; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 123: // $if_else357
      var $265=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $266=$265; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $267=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp358=(($266)>>>0) >= (($267)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv359=(($cmp358)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval360=(($conv359)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool361=(($expval360)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool361) { __label__ = 124; break; } else { __label__ = 128; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 124: // $if_then362
      var $268=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child363=(($268+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx364=(($child363)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($arrayidx364)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $270=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp365=(($269)|0)==(($270)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp365) { __label__ = 125; break; } else { __label__ = 126; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 125: // $if_then367
      var $271=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $272=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child368=(($272+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx369=(($child368)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx369)>>2)]=$271; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 127; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 126: // $if_else370
      var $273=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $274=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child371=(($274+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx372=(($child371+4)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx372)>>2)]=$273; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 127; break;
    case 127: // $if_end373
      __label__ = 129; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 128: // $if_else374
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 129: // $if_end375
      __label__ = 130; break;
    case 130: // $if_end376
      var $275=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp377=(($275)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp377) { __label__ = 131; break; } else { __label__ = 145; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 131: // $if_then379
      var $276=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $277=$276; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $278=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp380=(($277)>>>0) >= (($278)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv381=(($cmp380)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval382=(($conv381)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool383=(($expval382)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool383) { __label__ = 132; break; } else { __label__ = 143; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 132: // $if_then384
      var $279=$XP286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $280=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent387=(($280+24)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent387)>>2)]=$279; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $281=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child388=(($281+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx389=(($child388)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $282=HEAP32[(($arrayidx389)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0385=$282; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp390=(($282)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp390) { __label__ = 133; break; } else { __label__ = 137; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 133: // $if_then392
      var $283=$C0385; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $284=$283; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $285=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp393=(($284)>>>0) >= (($285)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv394=(($cmp393)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval395=(($conv394)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool396=(($expval395)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool396) { __label__ = 134; break; } else { __label__ = 135; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 134: // $if_then397
      var $286=$C0385; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $287=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child398=(($287+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx399=(($child398)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx399)>>2)]=$286; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $288=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $289=$C0385; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent400=(($289+24)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent400)>>2)]=$288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 136; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 135: // $if_else401
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 136: // $if_end402
      __label__ = 137; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 137: // $if_end403
      var $290=$TP285; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child404=(($290+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx405=(($child404+4)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $291=HEAP32[(($arrayidx405)>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1386=$291; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp406=(($291)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp406) { __label__ = 138; break; } else { __label__ = 142; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 138: // $if_then408
      var $292=$C1386; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $293=$292; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $294=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp409=(($293)>>>0) >= (($294)>>>0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv410=(($cmp409)&1); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval411=(($conv410)==(1)); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool412=(($expval411)|0)!=0; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool412) { __label__ = 139; break; } else { __label__ = 140; break; } //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 139: // $if_then413
      var $295=$C1386; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $296=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child414=(($296+16)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx415=(($child414+4)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx415)>>2)]=$295; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $297=$R288; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $298=$C1386; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent416=(($298+24)|0); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent416)>>2)]=$297; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 141; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 140: // $if_else417
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 141: // $if_end418
      __label__ = 142; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 142: // $if_end419
      __label__ = 144; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 143: // $if_else420
      _abort(); //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 144: // $if_end421
      __label__ = 145; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 145: // $if_end422
      __label__ = 146; break; //@line 4806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 146: // $if_end423
      __label__ = 147; break;
    case 147: // $if_end424
      var $299=$psize; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or425=$299 | 1; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $300=$p; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head426=(($300+4)|0); //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head426)>>2)]=$or425; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $301=$psize; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $302=$p; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $303=$302; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $304=$psize; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr427=(($303+$304)|0); //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $305=$add_ptr427; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot428=(($305)|0); //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot428)>>2)]=$301; //@line 4807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $306=$p; //@line 4808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $307=HEAP32[((((__gm_+20)|0))>>2)]; //@line 4808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp429=(($306)|0)==(($307)|0); //@line 4808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp429) { __label__ = 148; break; } else { __label__ = 149; break; } //@line 4808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 148: // $if_then431
      var $308=$psize; //@line 4809 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+8)|0))>>2)]=$308; //@line 4809 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 194; break; //@line 4810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 149: // $if_end432
      __label__ = 150; break;
    case 150: // $if_end433
      __label__ = 151; break;
    case 151: // $if_end434
      __label__ = 153; break; //@line 4813 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 152: // $if_else435
      var $309=$next; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head436=(($309+4)|0); //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $310=HEAP32[(($head436)>>2)]; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and437=$310 & -2; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head436)>>2)]=$and437; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $311=$psize; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or438=$311 | 1; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $312=$p; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head439=(($312+4)|0); //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head439)>>2)]=$or438; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $313=$psize; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $314=$p; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $315=$314; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $316=$psize; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr440=(($315+$316)|0); //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $317=$add_ptr440; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot441=(($317)|0); //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot441)>>2)]=$313; //@line 4815 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 153; break;
    case 153: // $if_end442
      var $318=$psize; //@line 4817 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr443=$318 >>> 3; //@line 4817 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp444=(($shr443)>>>0) < 32; //@line 4817 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp444) { __label__ = 154; break; } else { __label__ = 161; break; } //@line 4817 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 154: // $if_then446
      var $319=$psize; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr448=$319 >>> 3; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I447=$shr448; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $320=$I447; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl450=$320 << 1; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx451=((((__gm_+40)|0)+($shl450<<2))|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $321=$arrayidx451; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $322=$321; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B449=$322; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $323=$B449; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F452=$323; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $324=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $325=$I447; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl453=1 << $325; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and454=$324 & $shl453; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool455=(($and454)|0)!=0; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool455) { __label__ = 156; break; } else { __label__ = 155; break; } //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 155: // $if_then456
      var $326=$I447; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl457=1 << $326; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $327=HEAP32[((((__gm_)|0))>>2)]; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or458=$327 | $shl457; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_)|0))>>2)]=$or458; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 160; break; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 156: // $if_else459
      var $328=$B449; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd460=(($328+8)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $329=HEAP32[(($fd460)>>2)]; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $330=$329; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $331=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp461=(($330)>>>0) >= (($331)>>>0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv462=(($cmp461)&1); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval463=(($conv462)==(1)); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool464=(($expval463)|0)!=0; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool464) { __label__ = 157; break; } else { __label__ = 158; break; } //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 157: // $if_then465
      var $332=$B449; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd466=(($332+8)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $333=HEAP32[(($fd466)>>2)]; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F452=$333; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 159; break; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 158: // $if_else467
      _abort(); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 159: // $if_end468
      __label__ = 160; break;
    case 160: // $if_end469
      var $334=$p; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $335=$B449; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd470=(($335+8)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd470)>>2)]=$334; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $336=$p; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $337=$F452; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk471=(($337+12)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk471)>>2)]=$336; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $338=$F452; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $339=$p; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd472=(($339+8)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd472)>>2)]=$338; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $340=$B449; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $341=$p; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk473=(($341+12)|0); //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk473)>>2)]=$340; //@line 4818 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 190; break; //@line 4820 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 161: // $if_else474
      var $342=$p; //@line 4822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $343=$342; //@line 4822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tp=$343; //@line 4822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $344=$psize; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr477=$344 >>> 8; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X=$shr477; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $345=$X; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp478=(($345)|0)==0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp478) { __label__ = 162; break; } else { __label__ = 163; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 162: // $if_then480
      $I476=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 167; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 163: // $if_else481
      var $346=$X; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp482=(($346)>>>0) > 65535; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp482) { __label__ = 164; break; } else { __label__ = 165; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 164: // $if_then484
      $I476=31; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 166; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 165: // $if_else485
      var $347=$X; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$347; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $348=$Y; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($348-256)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr486=$sub >>> 16; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and487=$shr486 & 8; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$and487; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $349=$N; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $350=$Y; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl488=$350 << $349; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl488; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub489=(($shl488-4096)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr490=$sub489 >>> 16; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and491=$shr490 & 4; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and491; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $351=$K; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $352=$N; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add492=(($352+$351)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add492; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $353=$K; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $354=$Y; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl493=$354 << $353; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl493; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub494=(($shl493-16384)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr495=$sub494 >>> 16; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and496=$shr495 & 2; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and496; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $355=$N; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add497=(($355+$and496)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add497; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $356=$N; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub498=((14-$356)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $357=$K; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $358=$Y; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl499=$358 << $357; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl499; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr500=$shl499 >>> 15; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add501=(($sub498+$shr500)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$add501; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $359=$K; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl502=$359 << 1; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $360=$psize; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $361=$K; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add503=(($361+7)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr504=$360 >>> (($add503)>>>0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and505=$shr504 & 1; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add506=(($shl502+$and505)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I476=$add506; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 166; break;
    case 166: // $if_end507
      __label__ = 167; break;
    case 167: // $if_end508
      var $362=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx509=((((__gm_+304)|0)+($362<<2))|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H475=$arrayidx509; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $363=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $364=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index510=(($364+28)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index510)>>2)]=$363; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $365=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child511=(($365+16)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx512=(($child511+4)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx512)>>2)]=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $366=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child513=(($366+16)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx514=(($child513)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx514)>>2)]=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $367=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $368=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl515=1 << $368; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and516=$367 & $shl515; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool517=(($and516)|0)!=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool517) { __label__ = 169; break; } else { __label__ = 168; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 168: // $if_then518
      var $369=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl519=1 << $369; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $370=HEAP32[((((__gm_+4)|0))>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or520=$370 | $shl519; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+4)|0))>>2)]=$or520; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $371=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $372=$H475; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($372)>>2)]=$371; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $373=$H475; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $374=$373; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $375=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent521=(($375+24)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent521)>>2)]=$374; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $376=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $377=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk522=(($377+12)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk522)>>2)]=$376; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $378=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd523=(($378+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd523)>>2)]=$376; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 187; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 169: // $if_else524
      var $379=$H475; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $380=HEAP32[(($379)>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$380; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $381=$psize; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $382=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp526=(($382)|0)==31; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp526) { __label__ = 170; break; } else { __label__ = 171; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 170: // $cond_true
      var $cond = 0;__label__ = 172; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 171: // $cond_false
      var $383=$I476; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr528=$383 >>> 1; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add529=(($shr528+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub530=(($add529-2)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub531=((31-$sub530)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $sub531;__label__ = 172; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 172: // $cond_end
      var $cond; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl532=$381 << $cond; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K525=$shl532; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 173; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 173: // $for_cond
      var $384=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head533=(($384+4)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $385=HEAP32[(($head533)>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and534=$385 & -8; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $386=$psize; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp535=(($and534)|0)!=(($386)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp535) { __label__ = 174; break; } else { __label__ = 180; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 174: // $if_then537
      var $387=$K525; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr538=$387 >>> 31; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and539=$shr538 & 1; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $388=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child540=(($388+16)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx541=(($child540+($and539<<2))|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx541; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $389=$K525; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl542=$389 << 1; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K525=$shl542; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $390=$C; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $391=HEAP32[(($390)>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp543=(($391)|0)!=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp543) { __label__ = 175; break; } else { __label__ = 176; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 175: // $if_then545
      var $392=$C; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $393=HEAP32[(($392)>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$393; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 179; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 176: // $if_else546
      var $394=$C; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $395=$394; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $396=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp547=(($395)>>>0) >= (($396)>>>0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv548=(($cmp547)&1); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval549=(($conv548)==(1)); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool550=(($expval549)|0)!=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool550) { __label__ = 177; break; } else { __label__ = 178; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 177: // $if_then551
      var $397=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $398=$C; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($398)>>2)]=$397; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $399=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $400=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent552=(($400+24)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent552)>>2)]=$399; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $401=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $402=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk553=(($402+12)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk553)>>2)]=$401; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $403=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd554=(($403+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd554)>>2)]=$401; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 186; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 178: // $if_else555
      _abort(); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 179: // $if_end556
      __label__ = 185; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 180: // $if_else557
      var $404=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd559=(($404+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $405=HEAP32[(($fd559)>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F558=$405; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $406=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $407=$406; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $408=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp560=(($407)>>>0) >= (($408)>>>0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp560) { __label__ = 181; break; } else { var $412 = 0;__label__ = 182; break; } //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 181: // $land_rhs562
      var $409=$F558; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $410=$409; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $411=HEAPU32[((((__gm_+16)|0))>>2)]; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp563=(($410)>>>0) >= (($411)>>>0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $412 = $cmp563;__label__ = 182; break;
    case 182: // $land_end565
      var $412;
      var $land_ext566=(($412)&1);
      var $expval567=(($land_ext566)==(1));
      var $tobool568=(($expval567)|0)!=0;
      if ($tobool568) { __label__ = 183; break; } else { __label__ = 184; break; }
    case 183: // $if_then569
      var $413=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $414=$F558; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk570=(($414+12)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk570)>>2)]=$413; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $415=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd571=(($415+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd571)>>2)]=$413; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $416=$F558; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $417=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd572=(($417+8)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd572)>>2)]=$416; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $418=$T; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $419=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk573=(($419+12)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk573)>>2)]=$418; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $420=$tp; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent574=(($420+24)|0); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent574)>>2)]=0; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 186; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 184: // $if_else575
      _abort(); //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 185: // $if_end576
      __label__ = 173; break; //@line 4823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 186: // $for_end
      __label__ = 187; break;
    case 187: // $if_end577
      var $421=HEAP32[((((__gm_+32)|0))>>2)]; //@line 4825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dec=(($421-1)|0); //@line 4825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+32)|0))>>2)]=$dec; //@line 4825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp578=(($dec)|0)==0; //@line 4825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp578) { __label__ = 188; break; } else { __label__ = 189; break; } //@line 4825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 188: // $if_then580
      var $call581=_release_unused_segments(__gm_); //@line 4826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 189; break; //@line 4826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 189: // $if_end582
      __label__ = 190; break;
    case 190: // $if_end583
      __label__ = 194; break; //@line 4828 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 191: // $if_end584
      __label__ = 192; break; //@line 4830 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 192: // $if_end585
      __label__ = 193; break; //@line 4830 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 193: // $erroraction
      _abort(); //@line 4832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 194: // $postaction
      __label__ = 195; break; //@line 4836 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 195: // $if_end586
      ;
      return; //@line 4840 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_free["X"]=1;

function _sys_trim($m, $pad) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $pad_addr;
      var $released;
      var $unit;
      var $extra;
      var $sp;
      var $old_br;
      var $rel_br;
      var $new_br;
      $m_addr=$m;
      $pad_addr=$pad;
      $released=0; //@line 4126 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4127 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$pad_addr; //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($2)>>>0) < 4294967232; //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 24; break; } //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $3=$m_addr; //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($3+24)|0); //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[(($top)>>2)]; //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)|0)!=0; //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 24; break; } //@line 4128 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then
      var $5=$pad_addr; //@line 4129 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($5+40)|0); //@line 4129 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pad_addr=$add; //@line 4129 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$m_addr; //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($6+12)|0); //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAPU32[(($topsize)>>2)]; //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$pad_addr; //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp3=(($7)>>>0) > (($8)>>>0); //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp3) { __label__ = 5; break; } else { __label__ = 20; break; } //@line 4131 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then4
      var $9=HEAP32[((((_mparams+8)|0))>>2)]; //@line 4133 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $unit=$9; //@line 4133 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$m_addr; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize5=(($10+12)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($topsize5)>>2)]; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$pad_addr; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($11-$12)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$unit; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub6=(($13-1)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add7=(($sub+$sub6)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$unit; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $div=Math.floor((($add7)>>>0)/(($14)>>>0)); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub8=(($div-1)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$unit; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mul=(($sub8*$15)|0); //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $extra=$mul; //@line 4135 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$m_addr; //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$m_addr; //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top9=(($17+24)|0); //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=HEAP32[(($top9)>>2)]; //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call10=_segment_holding($16, $19); //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$call10; //@line 4136 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$sp; //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($20+12)|0); //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=HEAP32[(($sflags)>>2)]; //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$21 & 8; //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool11=(($and)|0)!=0; //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool11) { __label__ = 17; break; } else { __label__ = 6; break; } //@line 4138 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then12
      var $22=$sp; //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags13=(($22+12)|0); //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=HEAP32[(($sflags13)>>2)]; //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and14=$23 & 0; //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool15=(($and14)|0)!=0; //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool15) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4139 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then16
      __label__ = 16; break; //@line 4150 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_else
      var $24=$extra; //@line 4152 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp17=(($24)>>>0) >= 2147483647; //@line 4152 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp17) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4152 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then18
      var $25=$unit; //@line 4153 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub19=((-2147483648-$25)|0); //@line 4153 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $extra=$sub19; //@line 4153 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 4153 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      var $call20=_sbrk(0); //@line 4157 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $old_br=$call20; //@line 4157 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$old_br; //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$sp; //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base=(($27)|0); //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=HEAP32[(($base)>>2)]; //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$sp; //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($29+4)|0); //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($size)>>2)]; //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($28+$30)|0); //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp21=(($26)|0)==(($add_ptr)|0); //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp21) { __label__ = 11; break; } else { __label__ = 15; break; } //@line 4158 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then22
      var $31=$extra; //@line 4159 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub23=(((-$31))|0); //@line 4159 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call24=_sbrk($sub23); //@line 4159 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rel_br=$call24; //@line 4159 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call25=_sbrk(0); //@line 4160 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $new_br=$call25; //@line 4160 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$rel_br; //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($32)|0)!=-1; //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 12; break; } else { __label__ = 14; break; } //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $land_lhs_true27
      var $33=$new_br; //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$old_br; //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($33)>>>0) < (($34)>>>0); //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4161 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then29
      var $35=$old_br; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$new_br; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$35; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$36; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $released=$sub_ptr_sub; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 14; break; //@line 4162 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_end30
      __label__ = 15; break; //@line 4163 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end31
      __label__ = 16; break;
    case 16: // $if_end32
      __label__ = 17; break; //@line 4167 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_end33
      var $37=$released; //@line 4169 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($37)|0)!=0; //@line 4169 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 4169 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then35
      var $38=$released; //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$sp; //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size36=(($39+4)|0); //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($size36)>>2)]; //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub37=(($40-$38)|0); //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size36)>>2)]=$sub37; //@line 4170 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$released; //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$m_addr; //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($42+432)|0); //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[(($footprint)>>2)]; //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub38=(($43-$41)|0); //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$sub38; //@line 4171 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$m_addr; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$m_addr; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top39=(($45+24)|0); //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=HEAP32[(($top39)>>2)]; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$m_addr; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize40=(($47+12)|0); //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=HEAP32[(($topsize40)>>2)]; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=$released; //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub41=(($48-$49)|0); //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_top($44, $46, $sub41); //@line 4172 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4174 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end42
      __label__ = 20; break; //@line 4175 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_end43
      var $50=$released; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($50)|0)==0; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp44) { __label__ = 21; break; } else { __label__ = 23; break; } //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $land_lhs_true45
      var $51=$m_addr; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize46=(($51+12)|0); //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=HEAPU32[(($topsize46)>>2)]; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$m_addr; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $trim_check=(($53+28)|0); //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=HEAPU32[(($trim_check)>>2)]; //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($52)>>>0) > (($54)>>>0); //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4182 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_then48
      var $55=$m_addr; //@line 4183 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $trim_check49=(($55+28)|0); //@line 4183 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($trim_check49)>>2)]=-1; //@line 4183 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4183 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_end50
      __label__ = 24; break; //@line 4184 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_end51
      var $56=$released; //@line 4186 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp52=(($56)|0)!=0; //@line 4186 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond=$cmp52 ? 1 : 0; //@line 4186 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $cond; //@line 4186 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_sys_trim["X"]=1;

function _calloc($n_elements, $elem_size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $n_elements_addr;
      var $elem_size_addr;
      var $mem;
      var $req;
      $n_elements_addr=$n_elements;
      $elem_size_addr=$elem_size;
      $req=0; //@line 4844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=$n_elements_addr; //@line 4845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 4845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$n_elements_addr; //@line 4846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$elem_size_addr; //@line 4846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mul=(($1*$2)|0); //@line 4846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $req=$mul; //@line 4846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$n_elements_addr; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$elem_size_addr; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$3 | $4; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$or & -65536; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and)|0)!=0; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $land_lhs_true
      var $5=$req; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$n_elements_addr; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $div=Math.floor((($5)>>>0)/(($6)>>>0)); //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$elem_size_addr; //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($div)|0)!=(($7)|0); //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4847 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then2
      $req=-1; //@line 4849 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 4849 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end
      __label__ = 5; break; //@line 4850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_end3
      var $8=$req; //@line 4851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call=_malloc($8); //@line 4851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call; //@line 4851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$mem; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($9)|0)!=0; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 6; break; } else { __label__ = 8; break; } //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $land_lhs_true5
      var $10=$mem; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($10-8)|0); //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$add_ptr; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($11+4)|0); //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=HEAP32[(($head)>>2)]; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$12 & 3; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 8; break; } else { __label__ = 7; break; } //@line 4852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then8
      var $13=$mem; //@line 4853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$req; //@line 4853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _memset($13, 0, $14, 1); //@line 4853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 4853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end9
      var $15=$mem; //@line 4854 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $15; //@line 4854 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _realloc($oldmem, $bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $oldmem_addr;
      var $bytes_addr;
      var $m;
      $oldmem_addr=$oldmem;
      $bytes_addr=$bytes;
      var $0=$oldmem_addr; //@line 4858 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)==0; //@line 4858 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4858 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$bytes_addr; //@line 4859 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call=_malloc($1); //@line 4859 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$call; //@line 4859 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4859 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_else
      $m=__gm_; //@line 4868 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$m; //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$oldmem_addr; //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$bytes_addr; //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call1=_internal_realloc($2, $3, $4); //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$call1; //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 4876 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $return
      var $5=$retval; //@line 4878 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $5; //@line 4878 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _release_unused_segments($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $released;
      var $nsegs;
      var $pred;
      var $sp;
      var $base;
      var $size;
      var $next3;
      var $p;
      var $psize;
      var $tp;
      var $XP;
      var $R;
      var $F;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $H147;
      var $I;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K197;
      var $C;
      var $F235;
      $m_addr=$m;
      $released=0; //@line 4079 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nsegs=0; //@line 4080 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=$m_addr; //@line 4081 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($0+444)|0); //@line 4081 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pred=$seg; //@line 4081 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=$pred; //@line 4082 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($1+8)|0); //@line 4082 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[(($next)>>2)]; //@line 4082 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$2; //@line 4082 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4083 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $while_cond
      var $3=$sp; //@line 4083 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($3)|0)!=0; //@line 4083 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 86; break; } //@line 4083 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $while_body
      var $4=$sp; //@line 4084 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base1=(($4)|0); //@line 4084 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=HEAP32[(($base1)>>2)]; //@line 4084 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $base=$5; //@line 4084 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$sp; //@line 4085 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size2=(($6+4)|0); //@line 4085 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[(($size2)>>2)]; //@line 4085 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $size=$7; //@line 4085 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$sp; //@line 4086 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next4=(($8+8)|0); //@line 4086 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=HEAP32[(($next4)>>2)]; //@line 4086 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $next3=$9; //@line 4086 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$nsegs; //@line 4087 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc=(($10+1)|0); //@line 4087 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nsegs=$inc; //@line 4087 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$sp; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($11+12)|0); //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=HEAP32[(($sflags)>>2)]; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$12 & 0; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and)|0)!=0; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 3; break; } else { __label__ = 85; break; } //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $13=$sp; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags5=(($13+12)|0); //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($sflags5)>>2)]; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$14 & 8; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool7=(($and6)|0)!=0; //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool7) { __label__ = 85; break; } else { __label__ = 4; break; } //@line 4088 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then
      var $15=$base; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$base; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($16+8)|0); //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$add_ptr; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and8=$17 & 7; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp9=(($and8)|0)==0; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp9) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_true
      var $cond = 0;__label__ = 7; break; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_false
      var $18=$base; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr10=(($18+8)|0); //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr10; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and11=$19 & 7; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and11)|0); //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and12=$sub & 7; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and12;__label__ = 7; break; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $cond_end
      var $cond; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr13=(($15+$cond)|0); //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$add_ptr13; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$20; //@line 4089 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$p; //@line 4090 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($21+4)|0); //@line 4090 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[(($head)>>2)]; //@line 4090 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and14=$22 & -8; //@line 4090 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$and14; //@line 4090 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head15=(($23+4)|0); //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($head15)>>2)]; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and16=$24 & 3; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp17=(($and16)|0)!=1; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp17) { __label__ = 84; break; } else { __label__ = 8; break; } //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $land_lhs_true18
      var $25=$p; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$25; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$psize; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr19=(($26+$27)|0); //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$base; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$size; //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr20=(($28+$29)|0); //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr21=(($add_ptr20-40)|0); //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($add_ptr19)>>>0) >= (($add_ptr21)>>>0); //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 9; break; } else { __label__ = 84; break; } //@line 4092 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then23
      var $30=$p; //@line 4093 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$30; //@line 4093 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tp=$31; //@line 4093 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$p; //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv=(($33+20)|0); //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[(($dv)>>2)]; //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($32)|0)==(($34)|0); //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 10; break; } else { __label__ = 11; break; } //@line 4095 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then25
      var $35=$m_addr; //@line 4096 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv26=(($35+20)|0); //@line 4096 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv26)>>2)]=0; //@line 4096 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$m_addr; //@line 4097 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($36+8)|0); //@line 4097 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize)>>2)]=0; //@line 4097 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 57; break; //@line 4098 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_else
      var $37=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($37+24)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=HEAP32[(($parent)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP=$38; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($39+12)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($bk)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($40)|0)!=(($41)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 12; break; } else { __label__ = 16; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then28
      var $42=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($42+8)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=HEAP32[(($fd)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$43; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk29=(($44+12)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=HEAP32[(($bk29)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$45; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$F; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$46; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($48+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=HEAPU32[(($least_addr)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp30=(($47)>>>0) >= (($49)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp30)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool31=(($expval)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool31) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then32
      var $50=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$F; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk33=(($51+12)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk33)>>2)]=$50; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$F; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd34=(($53+8)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd34)>>2)]=$52; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_else35
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end
      __label__ = 28; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_else36
      var $54=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($54+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($child+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($arrayidx)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$55; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp37=(($55)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp37) { __label__ = 18; break; } else { __label__ = 17; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $lor_lhs_false
      var $56=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child39=(($56+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx40=(($child39)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx40; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($arrayidx40)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$57; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp41=(($57)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp41) { __label__ = 18; break; } else { __label__ = 27; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then43
      __label__ = 19; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $while_cond44
      var $58=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child45=(($58+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx46=(($child45+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx46; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($arrayidx46)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($59)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { var $62 = 1;__label__ = 21; break; } else { __label__ = 20; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $lor_rhs
      var $60=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child49=(($60+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx50=(($child49)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx50; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=HEAP32[(($arrayidx50)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($61)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62 = $cmp51;__label__ = 21; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $lor_end
      var $62;
      if ($62) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $while_body53
      var $63=$CP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$63; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=HEAP32[(($63)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$64; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $while_end
      var $65=$RP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr54=(($67+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=HEAPU32[(($least_addr54)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp55=(($66)>>>0) >= (($68)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv56=(($cmp55)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval57=(($conv56)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool58=(($expval57)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool58) { __label__ = 24; break; } else { __label__ = 25; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then59
      var $69=$RP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($69)>>2)]=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_else60
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end61
      __label__ = 27; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_end62
      __label__ = 28; break;
    case 28: // $if_end63
      var $70=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp64=(($70)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp64) { __label__ = 29; break; } else { __label__ = 56; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_then66
      var $71=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($71+28)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=HEAP32[(($index)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($73+304)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx67=(($treebins+($72<<2))|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx67; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$H; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($75)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp68=(($74)|0)==(($76)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp68) { __label__ = 30; break; } else { __label__ = 33; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then70
      var $77=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=$H; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($78)>>2)]=$77; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp71=(($77)|0)==0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp71) { __label__ = 31; break; } else { __label__ = 32; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then73
      var $79=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index74=(($79+28)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=HEAP32[(($index74)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $80; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($81+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=HEAP32[(($treemap)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and75=$82 & $neg; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap)>>2)]=$and75; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_end76
      __label__ = 40; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_else77
      var $83=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$83; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr78=(($85+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=HEAPU32[(($least_addr78)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp79=(($84)>>>0) >= (($86)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv80=(($cmp79)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval81=(($conv80)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool82=(($expval81)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool82) { __label__ = 34; break; } else { __label__ = 38; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then83
      var $87=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child84=(($87+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx85=(($child84)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=HEAP32[(($arrayidx85)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp86=(($88)|0)==(($89)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp86) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_then88
      var $90=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child89=(($91+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx90=(($child89)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx90)>>2)]=$90; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_else91
      var $92=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child92=(($93+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx93=(($child92+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx93)>>2)]=$92; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 37; break;
    case 37: // $if_end94
      __label__ = 39; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else95
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_end96
      __label__ = 40; break;
    case 40: // $if_end97
      var $94=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp98=(($94)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp98) { __label__ = 41; break; } else { __label__ = 55; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 41: // $if_then100
      var $95=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=$95; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr101=(($97+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=HEAPU32[(($least_addr101)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp102=(($96)>>>0) >= (($98)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv103=(($cmp102)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval104=(($conv103)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool105=(($expval104)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool105) { __label__ = 42; break; } else { __label__ = 53; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then106
      var $99=$XP; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent107=(($100+24)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent107)>>2)]=$99; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child108=(($101+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx109=(($child108)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=HEAP32[(($arrayidx109)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0=$102; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp110=(($102)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp110) { __label__ = 43; break; } else { __label__ = 47; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then112
      var $103=$C0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$103; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr113=(($105+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=HEAPU32[(($least_addr113)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp114=(($104)>>>0) >= (($106)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv115=(($cmp114)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval116=(($conv115)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool117=(($expval116)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool117) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then118
      var $107=$C0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child119=(($108+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx120=(($child119)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx120)>>2)]=$107; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $109=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$C0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent121=(($110+24)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent121)>>2)]=$109; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_else122
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_end123
      __label__ = 47; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_end124
      var $111=$tp; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child125=(($111+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx126=(($child125+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[(($arrayidx126)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1=$112; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp127=(($112)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp127) { __label__ = 48; break; } else { __label__ = 52; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then129
      var $113=$C1; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$113; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $115=$m_addr; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr130=(($115+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=HEAPU32[(($least_addr130)>>2)]; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp131=(($114)>>>0) >= (($116)>>>0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv132=(($cmp131)&1); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval133=(($conv132)==(1)); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool134=(($expval133)|0)!=0; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool134) { __label__ = 49; break; } else { __label__ = 50; break; } //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_then135
      var $117=$C1; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child136=(($118+16)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx137=(($child136+4)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx137)>>2)]=$117; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=$R; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$C1; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent138=(($120+24)|0); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent138)>>2)]=$119; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 51; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 50: // $if_else139
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_end140
      __label__ = 52; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_end141
      __label__ = 54; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 53: // $if_else142
      _abort(); //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_end143
      __label__ = 55; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_end144
      __label__ = 56; break; //@line 4100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_end145
      __label__ = 57; break;
    case 57: // $if_end146
      var $121=$psize; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$121 >>> 8; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X=$shr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=$X; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp148=(($122)|0)==0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp148) { __label__ = 58; break; } else { __label__ = 59; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_then150
      $I=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 63; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_else151
      var $123=$X; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp152=(($123)>>>0) > 65535; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp152) { __label__ = 60; break; } else { __label__ = 61; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_then154
      $I=31; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_else155
      var $124=$X; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$124; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=$Y; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub156=(($125-256)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr157=$sub156 >>> 16; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and158=$shr157 & 8; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$and158; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$N; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $127=$Y; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl159=$127 << $126; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl159; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub160=(($shl159-4096)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr161=$sub160 >>> 16; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and162=$shr161 & 4; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and162; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$K; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=$N; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($129+$128)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=$K; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$Y; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl163=$131 << $130; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl163; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub164=(($shl163-16384)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr165=$sub164 >>> 16; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and166=$shr165 & 2; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and166; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $132=$N; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add167=(($132+$and166)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add167; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=$N; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub168=((14-$133)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $134=$K; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=$Y; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl169=$135 << $134; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl169; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr170=$shl169 >>> 15; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add171=(($sub168+$shr170)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$add171; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $136=$K; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl172=$136 << 1; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=$psize; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $138=$K; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add173=(($138+7)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr174=$137 >>> (($add173)>>>0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and175=$shr174 & 1; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add176=(($shl172+$and175)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$add176; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 62; break;
    case 62: // $if_end177
      __label__ = 63; break;
    case 63: // $if_end178
      var $139=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins179=(($140+304)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx180=(($treebins179+($139<<2))|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H147=$arrayidx180; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index181=(($142+28)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index181)>>2)]=$141; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $143=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child182=(($143+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx183=(($child182+4)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx183)>>2)]=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child184=(($144+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx185=(($child184)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx185)>>2)]=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $145=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap186=(($145+4)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($treemap186)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl187=1 << $147; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and188=$146 & $shl187; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool189=(($and188)|0)!=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool189) { __label__ = 65; break; } else { __label__ = 64; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_then190
      var $148=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl191=1 << $148; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap192=(($149+4)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $150=HEAP32[(($treemap192)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$150 | $shl191; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap192)>>2)]=$or; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $152=$H147; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($152)>>2)]=$151; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=$H147; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$153; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent193=(($155+24)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent193)>>2)]=$154; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk194=(($157+12)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk194)>>2)]=$156; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd195=(($158+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd195)>>2)]=$156; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 83; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_else196
      var $159=$H147; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $160=HEAP32[(($159)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$160; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$psize; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp198=(($162)|0)==31; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp198) { __label__ = 66; break; } else { __label__ = 67; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 66: // $cond_true200
      var $cond207 = 0;__label__ = 68; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $cond_false201
      var $163=$I; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr202=$163 >>> 1; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add203=(($shr202+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub204=(($add203-2)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub205=((31-$sub204)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond207 = $sub205;__label__ = 68; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 68: // $cond_end206
      var $cond207; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl208=$161 << $cond207; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K197=$shl208; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 69; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 69: // $for_cond
      var $164=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head209=(($164+4)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($head209)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and210=$165 & -8; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$psize; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp211=(($and210)|0)!=(($166)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp211) { __label__ = 70; break; } else { __label__ = 76; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 70: // $if_then213
      var $167=$K197; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr214=$167 >>> 31; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and215=$shr214 & 1; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child216=(($168+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx217=(($child216+($and215<<2))|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx217; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$K197; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl218=$169 << 1; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K197=$shl218; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=$C; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=HEAP32[(($170)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp219=(($171)|0)!=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp219) { __label__ = 71; break; } else { __label__ = 72; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_then221
      var $172=$C; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=HEAP32[(($172)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$173; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 75; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_else222
      var $174=$C; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr223=(($176+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $177=HEAPU32[(($least_addr223)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp224=(($175)>>>0) >= (($177)>>>0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv225=(($cmp224)&1); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval226=(($conv225)==(1)); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool227=(($expval226)|0)!=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool227) { __label__ = 73; break; } else { __label__ = 74; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_then228
      var $178=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=$C; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($179)>>2)]=$178; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $180=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent229=(($181+24)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent229)>>2)]=$180; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk230=(($183+12)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk230)>>2)]=$182; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd231=(($184+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd231)>>2)]=$182; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 82; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_else232
      _abort(); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_end233
      __label__ = 81; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_else234
      var $185=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd236=(($185+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $186=HEAP32[(($fd236)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F235=$186; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=$187; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr237=(($189+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $190=HEAPU32[(($least_addr237)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp238=(($188)>>>0) >= (($190)>>>0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp238) { __label__ = 77; break; } else { var $195 = 0;__label__ = 78; break; } //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 77: // $land_rhs
      var $191=$F235; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $192=$191; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $193=$m_addr; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr240=(($193+16)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $194=HEAPU32[(($least_addr240)>>2)]; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp241=(($192)>>>0) >= (($194)>>>0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $195 = $cmp241;__label__ = 78; break;
    case 78: // $land_end
      var $195;
      var $land_ext=(($195)&1);
      var $expval243=(($land_ext)==(1));
      var $tobool244=(($expval243)|0)!=0;
      if ($tobool244) { __label__ = 79; break; } else { __label__ = 80; break; }
    case 79: // $if_then245
      var $196=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $197=$F235; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk246=(($197+12)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk246)>>2)]=$196; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd247=(($198+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd247)>>2)]=$196; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $199=$F235; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $200=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd248=(($200+8)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd248)>>2)]=$199; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $201=$T; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $202=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk249=(($202+12)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk249)>>2)]=$201; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $203=$tp; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent250=(($203+24)|0); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent250)>>2)]=0; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 82; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_else251
      _abort(); //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_end252
      __label__ = 69; break; //@line 4110 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 82: // $for_end
      __label__ = 83; break;
    case 83: // $if_end253
      __label__ = 84; break; //@line 4112 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 84: // $if_end254
      __label__ = 85; break; //@line 4113 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 85: // $if_end255
      var $204=$sp; //@line 4116 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pred=$204; //@line 4116 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $205=$next3; //@line 4117 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$205; //@line 4117 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 4118 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 86: // $while_end256
      var $206=$nsegs; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp257=(($206)>>>0) > 4294967295; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp257) { __label__ = 87; break; } else { __label__ = 88; break; } //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 87: // $cond_true259
      var $207=$nsegs; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond262 = $207;__label__ = 89; break; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 88: // $cond_false260
      var $cond262 = -1;__label__ = 89; break; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 89: // $cond_end261
      var $cond262; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $208=$m_addr; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $release_checks=(($208+32)|0); //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($release_checks)>>2)]=$cond262; //@line 4120 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $209=$released; //@line 4122 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $209; //@line 4122 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_release_unused_segments["X"]=1;

function _memalign($alignment, $bytes) {
  ;
  var __label__;

  var $alignment_addr;
  var $bytes_addr;
  $alignment_addr=$alignment;
  $bytes_addr=$bytes;
  var $0=$alignment_addr; //@line 4881 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $1=$bytes_addr; //@line 4881 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $call=_internal_memalign(__gm_, $0, $1); //@line 4881 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return $call; //@line 4881 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _internal_memalign($m, $alignment, $bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $alignment_addr;
      var $bytes_addr;
      var $a;
      var $nb;
      var $req;
      var $mem;
      var $leader;
      var $trailer;
      var $p;
      var $br;
      var $pos;
      var $newp;
      var $leadsize;
      var $newsize;
      var $size;
      var $remainder_size;
      var $remainder;
      $m_addr=$m;
      $alignment_addr=$alignment;
      $bytes_addr=$bytes;
      var $0=$alignment_addr; //@line 4379 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) <= 8; //@line 4379 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4379 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$bytes_addr; //@line 4380 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call=_malloc($1); //@line 4380 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$call; //@line 4380 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4380 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_end
      var $2=$alignment_addr; //@line 4381 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($2)>>>0) < 16; //@line 4381 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 4381 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then2
      $alignment_addr=16; //@line 4382 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 4382 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end3
      var $3=$alignment_addr; //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$alignment_addr; //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($4-1)|0); //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$3 & $sub; //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and)|0)!=0; //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 5; break; } else { __label__ = 9; break; } //@line 4383 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then5
      $a=16; //@line 4384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $while_cond
      var $5=$a; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$alignment_addr; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp6=(($5)>>>0) < (($6)>>>0); //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp6) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $while_body
      var $7=$a; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$7 << 1; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $a=$shl; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 6; break; //@line 4385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $while_end
      var $8=$a; //@line 4386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $alignment_addr=$8; //@line 4386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 4387 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_end7
      var $9=$bytes_addr; //@line 4389 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$alignment_addr; //@line 4389 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub8=((-64-$10)|0); //@line 4389 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp9=(($9)>>>0) >= (($sub8)>>>0); //@line 4389 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp9) { __label__ = 10; break; } else { __label__ = 13; break; } //@line 4389 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_then10
      var $11=$m_addr; //@line 4390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp11=(($11)|0)!=0; //@line 4390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp11) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then12
      var $call13=___errno(); //@line 4391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($call13)>>2)]=12; //@line 4391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_end14
      __label__ = 35; break; //@line 4393 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_else
      var $12=$bytes_addr; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp15=(($12)>>>0) < 11; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp15) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $cond_true
      var $cond = 16;__label__ = 16; break; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $cond_false
      var $13=$bytes_addr; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($13+4)|0); //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add16=(($add+7)|0); //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and17=$add16 & -8; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and17;__label__ = 16; break; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $cond_end
      var $cond; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nb=$cond; //@line 4395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$nb; //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$alignment_addr; //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add18=(($14+$15)|0); //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add19=(($add18+16)|0); //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub20=(($add19-4)|0); //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $req=$sub20; //@line 4396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$req; //@line 4397 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call21=_malloc($16); //@line 4397 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call21; //@line 4397 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$mem; //@line 4398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($17)|0)!=0; //@line 4398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 17; break; } else { __label__ = 34; break; } //@line 4398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_then23
      $leader=0; //@line 4399 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $trailer=0; //@line 4400 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$mem; //@line 4401 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($18-8)|0); //@line 4401 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr; //@line 4401 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$19; //@line 4401 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$mem; //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$20; //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$alignment_addr; //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $rem=(($21)>>>0)%(($22)>>>0); //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($rem)|0)!=0; //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 18; break; } else { __label__ = 25; break; } //@line 4404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then25
      var $23=$mem; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$alignment_addr; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr26=(($23+$24)|0); //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr27=(($add_ptr26-1)|0); //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$add_ptr27; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$alignment_addr; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub28=(((-$26))|0); //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and29=$25 & $sub28; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$and29; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr30=(($27-8)|0); //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$add_ptr30; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $br=$29; //@line 4416 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$br; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$p; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$31; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$30; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$32; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp31=(($sub_ptr_sub)>>>0) >= 16; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp31) { __label__ = 19; break; } else { __label__ = 20; break; } //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $cond_true32
      var $33=$br; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond36 = $33;__label__ = 21; break; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $cond_false33
      var $34=$br; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$alignment_addr; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr34=(($34+$35)|0); //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond36 = $add_ptr34;__label__ = 21; break; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $cond_end35
      var $cond36; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pos=$cond36; //@line 4418 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$pos; //@line 4419 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$36; //@line 4419 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=$37; //@line 4419 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$pos; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$p; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$39; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast37=$38; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast38=$40; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub39=(($sub_ptr_lhs_cast37-$sub_ptr_rhs_cast38)|0); //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leadsize=$sub_ptr_sub39; //@line 4420 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$p; //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($41+4)|0); //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=HEAP32[(($head)>>2)]; //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and40=$42 & -8; //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$leadsize; //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub41=(($and40-$43)|0); //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newsize=$sub41; //@line 4421 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$p; //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head42=(($44+4)|0); //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=HEAP32[(($head42)>>2)]; //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and43=$45 & 3; //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($and43)|0)==0; //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp44) { __label__ = 22; break; } else { __label__ = 23; break; } //@line 4423 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_then45
      var $46=$p; //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($46)|0); //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[(($prev_foot)>>2)]; //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$leadsize; //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add46=(($47+$48)|0); //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=$newp; //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot47=(($49)|0); //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot47)>>2)]=$add46; //@line 4424 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$newsize; //@line 4425 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$newp; //@line 4425 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head48=(($51+4)|0); //@line 4425 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head48)>>2)]=$50; //@line 4425 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break; //@line 4426 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_else49
      var $52=$newp; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head50=(($52+4)|0); //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=HEAP32[(($head50)>>2)]; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and51=$53 & 1; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$newsize; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$and51 | $54; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or52=$or | 2; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$newp; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head53=(($55+4)|0); //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head53)>>2)]=$or52; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$newp; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$56; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$newsize; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr54=(($57+$58)|0); //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$add_ptr54; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head55=(($59+4)|0); //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=HEAP32[(($head55)>>2)]; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or56=$60 | 1; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head55)>>2)]=$or56; //@line 4428 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$p; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head57=(($61+4)|0); //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=HEAP32[(($head57)>>2)]; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and58=$62 & 1; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$leadsize; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or59=$and58 | $63; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or60=$or59 | 2; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$p; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head61=(($64+4)|0); //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head61)>>2)]=$or60; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$p; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$65; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$leadsize; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr62=(($66+$67)|0); //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$add_ptr62; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head63=(($68+4)|0); //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=HEAP32[(($head63)>>2)]; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or64=$69 | 1; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head63)>>2)]=$or64; //@line 4429 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$p; //@line 4430 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$70; //@line 4430 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr65=(($71+8)|0); //@line 4430 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $leader=$add_ptr65; //@line 4430 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 24; break;
    case 24: // $if_end66
      var $72=$newp; //@line 4432 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$72; //@line 4432 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4433 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_end67
      var $73=$p; //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head68=(($73+4)|0); //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[(($head68)>>2)]; //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and69=$74 & 3; //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp70=(($and69)|0)==0; //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp70) { __label__ = 29; break; } else { __label__ = 26; break; } //@line 4436 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then71
      var $75=$p; //@line 4437 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head72=(($75+4)|0); //@line 4437 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=HEAP32[(($head72)>>2)]; //@line 4437 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and73=$76 & -8; //@line 4437 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $size=$and73; //@line 4437 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$size; //@line 4438 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=$nb; //@line 4438 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add74=(($78+16)|0); //@line 4438 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($77)>>>0) > (($add74)>>>0); //@line 4438 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp75) { __label__ = 27; break; } else { __label__ = 28; break; } //@line 4438 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_then76
      var $79=$size; //@line 4439 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$nb; //@line 4439 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub77=(($79-$80)|0); //@line 4439 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$sub77; //@line 4439 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=$p; //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$81; //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83=$nb; //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr78=(($82+$83)|0); //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$add_ptr78; //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder=$84; //@line 4440 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$p; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head79=(($85+4)|0); //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=HEAP32[(($head79)>>2)]; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and80=$86 & 1; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $87=$nb; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or81=$and80 | $87; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or82=$or81 | 2; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$p; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head83=(($88+4)|0); //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head83)>>2)]=$or82; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=$p; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $90=$89; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=$nb; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr84=(($90+$91)|0); //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=$add_ptr84; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head85=(($92+4)|0); //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($head85)>>2)]; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or86=$93 | 1; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head85)>>2)]=$or86; //@line 4441 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=$remainder; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head87=(($94+4)|0); //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=HEAP32[(($head87)>>2)]; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and88=$95 & 1; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=$remainder_size; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or89=$and88 | $96; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or90=$or89 | 2; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$remainder; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head91=(($97+4)|0); //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head91)>>2)]=$or90; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=$remainder; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$98; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$remainder_size; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr92=(($99+$100)|0); //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$add_ptr92; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head93=(($101+4)|0); //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=HEAP32[(($head93)>>2)]; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or94=$102 | 1; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head93)>>2)]=$or94; //@line 4442 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=$remainder; //@line 4443 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$103; //@line 4443 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr95=(($104+8)|0); //@line 4443 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $trailer=$add_ptr95; //@line 4443 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 4444 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_end96
      __label__ = 29; break; //@line 4445 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_end97
      var $105=$leader; //@line 4451 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp98=(($105)|0)!=0; //@line 4451 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp98) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4451 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then99
      var $106=$leader; //@line 4452 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _free($106); //@line 4452 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4453 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end100
      var $107=$trailer; //@line 4454 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp101=(($107)|0)!=0; //@line 4454 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp101) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4454 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_then102
      var $108=$trailer; //@line 4455 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _free($108); //@line 4455 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4456 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_end103
      var $109=$p; //@line 4457 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=$109; //@line 4457 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr104=(($110+8)|0); //@line 4457 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr104; //@line 4457 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4457 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_end105
      __label__ = 35; break;
    case 35: // $if_end106
      $retval=0; //@line 4460 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 36; break; //@line 4460 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $return
      var $111=$retval; //@line 4461 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $111; //@line 4461 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_memalign["X"]=1;

function _independent_calloc($n_elements, $elem_size, $chunks) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $n_elements_addr;
  var $elem_size_addr;
  var $chunks_addr;
  var $sz=__stackBase__;
  $n_elements_addr=$n_elements;
  $elem_size_addr=$elem_size;
  $chunks_addr=$chunks;
  var $0=$elem_size_addr; //@line 4886 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  HEAP32[(($sz)>>2)]=$0; //@line 4886 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $1=$n_elements_addr; //@line 4887 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $2=$chunks_addr; //@line 4887 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $call=_ialloc(__gm_, $1, $sz, 3, $2); //@line 4887 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  STACKTOP = __stackBase__;
  return $call; //@line 4887 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _internal_realloc($m, $oldmem, $bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $oldmem_addr;
      var $bytes_addr;
      var $oldp;
      var $oldsize;
      var $next;
      var $newp;
      var $extra;
      var $nb;
      var $rsize;
      var $remainder;
      var $newsize;
      var $newtopsize;
      var $newtop;
      var $newmem;
      var $oc;
      $m_addr=$m;
      $oldmem_addr=$oldmem;
      $bytes_addr=$bytes;
      var $0=$bytes_addr; //@line 4304 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) >= 4294967232; //@line 4304 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 4304 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $call=___errno(); //@line 4305 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($call)>>2)]=12; //@line 4305 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=0; //@line 4306 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4306 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_end
      var $1=$oldmem_addr; //@line 4309 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1-8)|0); //@line 4309 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 4309 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldp=$2; //@line 4309 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$oldp; //@line 4310 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($3+4)|0); //@line 4310 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[(($head)>>2)]; //@line 4310 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$4 & -8; //@line 4310 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldsize=$and; //@line 4310 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$oldp; //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$5; //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$oldsize; //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr1=(($6+$7)|0); //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$add_ptr1; //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $next=$8; //@line 4311 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=0; //@line 4312 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $extra=0; //@line 4313 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$oldp; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$9; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$m_addr; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($11+16)|0); //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=HEAPU32[(($least_addr)>>2)]; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($10)>>>0) >= (($12)>>>0); //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 3; break; } else { var $21 = 0;__label__ = 6; break; } //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $13=$oldp; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head3=(($13+4)|0); //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($head3)>>2)]; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and4=$14 & 3; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp5=(($and4)|0)!=1; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp5) { __label__ = 4; break; } else { var $21 = 0;__label__ = 6; break; } //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $land_lhs_true6
      var $15=$oldp; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$15; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$next; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$17; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($16)>>>0) < (($18)>>>0); //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 5; break; } else { var $21 = 0;__label__ = 6; break; } //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $land_rhs
      var $19=$next; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head8=(($19+4)|0); //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=HEAP32[(($head8)>>2)]; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and9=$20 & 1; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and9)|0)!=0; //@line 4317 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21 = $tobool;__label__ = 6; break;
    case 6: // $land_end
      var $21;
      var $land_ext=(($21)&1);
      var $expval=(($land_ext)==(1));
      var $tobool10=(($expval)|0)!=0;
      if ($tobool10) { __label__ = 7; break; } else { __label__ = 22; break; }
    case 7: // $if_then11
      var $22=$bytes_addr; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp12=(($22)>>>0) < 11; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp12) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $cond_true
      var $cond = 16;__label__ = 10; break; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $cond_false
      var $23=$bytes_addr; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($23+4)|0); //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add13=(($add+7)|0); //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and14=$add13 & -8; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and14;__label__ = 10; break; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_end
      var $cond; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nb=$cond; //@line 4319 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$oldp; //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head15=(($24+4)|0); //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=HEAP32[(($head15)>>2)]; //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and16=$25 & 3; //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp17=(($and16)|0)==0; //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp17) { __label__ = 11; break; } else { __label__ = 12; break; } //@line 4320 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then18
      var $26=$m_addr; //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$oldp; //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$nb; //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call19=_mmap_resize($26, $27, $28); //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=$call19; //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 21; break; //@line 4321 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_else
      var $29=$oldsize; //@line 4322 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$nb; //@line 4322 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($29)>>>0) >= (($30)>>>0); //@line 4322 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp20) { __label__ = 13; break; } else { __label__ = 16; break; } //@line 4322 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then21
      var $31=$oldsize; //@line 4323 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$nb; //@line 4323 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($31-$32)|0); //@line 4323 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rsize=$sub; //@line 4323 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$oldp; //@line 4324 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=$33; //@line 4324 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$rsize; //@line 4325 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($34)>>>0) >= 16; //@line 4325 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 4325 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then23
      var $35=$newp; //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$35; //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$nb; //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr24=(($36+$37)|0); //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$add_ptr24; //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder=$38; //@line 4326 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$newp; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head25=(($39+4)|0); //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($head25)>>2)]; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and26=$40 & 1; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$nb; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$and26 | $41; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or27=$or | 2; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$newp; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head28=(($42+4)|0); //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head28)>>2)]=$or27; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$newp; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$nb; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr29=(($44+$45)|0); //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$add_ptr29; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head30=(($46+4)|0); //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[(($head30)>>2)]; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or31=$47 | 1; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head30)>>2)]=$or31; //@line 4327 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$rsize; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or32=$48 | 1; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or33=$or32 | 2; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=$remainder; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head34=(($49+4)|0); //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head34)>>2)]=$or33; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$remainder; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$50; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$rsize; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr35=(($51+$52)|0); //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$add_ptr35; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head36=(($53+4)|0); //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($head36)>>2)]; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or37=$54 | 1; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head36)>>2)]=$or37; //@line 4328 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$remainder; //@line 4329 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$55; //@line 4329 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr38=(($56+8)|0); //@line 4329 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $extra=$add_ptr38; //@line 4329 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 15; break; //@line 4330 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_end39
      __label__ = 20; break; //@line 4331 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_else40
      var $57=$next; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$m_addr; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($58+24)|0); //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($top)>>2)]; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp41=(($57)|0)==(($59)|0); //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp41) { __label__ = 17; break; } else { __label__ = 19; break; } //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $land_lhs_true42
      var $60=$oldsize; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$m_addr; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($61+12)|0); //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=HEAP32[(($topsize)>>2)]; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add43=(($60+$62)|0); //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$nb; //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp44=(($add43)>>>0) > (($63)>>>0); //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp44) { __label__ = 18; break; } else { __label__ = 19; break; } //@line 4332 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_then45
      var $64=$oldsize; //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$m_addr; //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize46=(($65+12)|0); //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=HEAP32[(($topsize46)>>2)]; //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add47=(($64+$66)|0); //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newsize=$add47; //@line 4334 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$newsize; //@line 4335 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$nb; //@line 4335 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub48=(($67-$68)|0); //@line 4335 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newtopsize=$sub48; //@line 4335 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=$oldp; //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$nb; //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr49=(($70+$71)|0); //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=$add_ptr49; //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newtop=$72; //@line 4336 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$oldp; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head50=(($73+4)|0); //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[(($head50)>>2)]; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and51=$74 & 1; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$nb; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or52=$and51 | $75; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or53=$or52 | 2; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$oldp; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head54=(($76+4)|0); //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head54)>>2)]=$or53; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$oldp; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=$77; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $79=$nb; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr55=(($78+$79)|0); //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$add_ptr55; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head56=(($80+4)|0); //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=HEAP32[(($head56)>>2)]; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or57=$81 | 1; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head56)>>2)]=$or57; //@line 4337 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$newtopsize; //@line 4338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or58=$82 | 1; //@line 4338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83=$newtop; //@line 4338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head59=(($83+4)|0); //@line 4338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head59)>>2)]=$or58; //@line 4338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$newtop; //@line 4339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$m_addr; //@line 4339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top60=(($85+24)|0); //@line 4339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top60)>>2)]=$84; //@line 4339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=$newtopsize; //@line 4340 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $87=$m_addr; //@line 4340 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize61=(($87+12)|0); //@line 4340 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize61)>>2)]=$86; //@line 4340 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$oldp; //@line 4341 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=$88; //@line 4341 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 4342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end62
      __label__ = 20; break;
    case 20: // $if_end63
      __label__ = 21; break;
    case 21: // $if_end64
      __label__ = 23; break; //@line 4343 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_else65
      _abort(); //@line 4345 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 4345 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_end66
      var $89=$newp; //@line 4357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp67=(($89)|0)!=0; //@line 4357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp67) { __label__ = 24; break; } else { __label__ = 27; break; } //@line 4357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_then68
      var $90=$extra; //@line 4358 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp69=(($90)|0)!=0; //@line 4358 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp69) { __label__ = 25; break; } else { __label__ = 26; break; } //@line 4358 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_then70
      var $91=$extra; //@line 4359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _free($91); //@line 4359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 4360 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_end71
      var $92=$newp; //@line 4361 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=$92; //@line 4361 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr72=(($93+8)|0); //@line 4361 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr72; //@line 4361 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4361 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_else73
      var $94=$bytes_addr; //@line 4364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call74=_malloc($94); //@line 4364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newmem=$call74; //@line 4364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $95=$newmem; //@line 4365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp75=(($95)|0)!=0; //@line 4365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp75) { __label__ = 28; break; } else { __label__ = 32; break; } //@line 4365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_then76
      var $96=$oldsize; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$oldp; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head77=(($97+4)|0); //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=HEAP32[(($head77)>>2)]; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and78=$98 & 3; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp79=(($and78)|0)==0; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond80=$cmp79 ? 8 : 4; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub81=(($96-$cond80)|0); //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oc=$sub81; //@line 4366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$newmem; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$oldmem_addr; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$oc; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=$bytes_addr; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp82=(($101)>>>0) < (($102)>>>0); //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp82) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $cond_true83
      var $103=$oc; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond86 = $103;__label__ = 31; break; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $cond_false84
      var $104=$bytes_addr; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond86 = $104;__label__ = 31; break; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $cond_end85
      var $cond86; //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      assert($cond86 % 1 === 0, 'memcpy given ' + $cond86 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');_memcpy($99, $100, $cond86, 1); //@line 4367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$oldmem_addr; //@line 4368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _free($105); //@line 4368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 4369 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_end87
      var $106=$newmem; //@line 4370 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$106; //@line 4370 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4370 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $return
      var $107=$retval; //@line 4374 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $107; //@line 4374 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_realloc["X"]=1;

function _malloc_footprint() {
  ;
  var __label__;

  var $0=HEAP32[((((__gm_+432)|0))>>2)]; //@line 4920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return $0; //@line 4920 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _malloc_max_footprint() {
  ;
  var __label__;

  var $0=HEAP32[((((__gm_+436)|0))>>2)]; //@line 4924 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return $0; //@line 4924 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _ialloc($m, $n_elements, $sizes, $opts, $chunks) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $n_elements_addr;
      var $sizes_addr;
      var $opts_addr;
      var $chunks_addr;
      var $element_size;
      var $contents_size;
      var $array_size;
      var $mem;
      var $p;
      var $remainder_size;
      var $marray;
      var $array_chunk;
      var $was_enabled;
      var $size;
      var $i;
      var $array_chunk_size;
      $m_addr=$m;
      $n_elements_addr=$n_elements;
      $sizes_addr=$sizes;
      $opts_addr=$opts;
      $chunks_addr=$chunks;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4491 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$chunks_addr; //@line 4493 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($2)|0)!=0; //@line 4493 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 6; break; } //@line 4493 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then
      var $3=$n_elements_addr; //@line 4494 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($3)|0)==0; //@line 4494 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 4494 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then3
      var $4=$chunks_addr; //@line 4495 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$4; //@line 4495 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4495 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_end
      var $5=$chunks_addr; //@line 4496 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $marray=$5; //@line 4496 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $array_size=0; //@line 4497 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break; //@line 4498 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_else
      var $6=$n_elements_addr; //@line 4501 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($6)|0)==0; //@line 4501 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 4501 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then5
      var $call6=_malloc(0); //@line 4502 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$call6; //@line 4502 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$7; //@line 4502 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4502 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end7
      $marray=0; //@line 4503 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$n_elements_addr; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mul=((($8<<2))|0); //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp8=(($mul)>>>0) < 11; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp8) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $cond_true
      var $cond = 16;__label__ = 11; break; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $cond_false
      var $9=$n_elements_addr; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mul9=((($9<<2))|0); //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($mul9+4)|0); //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add10=(($add+7)|0); //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$add10 & -8; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and;__label__ = 11; break; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $cond_end
      var $cond; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $array_size=$cond; //@line 4504 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 12; break;
    case 12: // $if_end11
      var $10=$opts_addr; //@line 4508 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and12=$10 & 1; //@line 4508 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool13=(($and12)|0)!=0; //@line 4508 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool13) { __label__ = 13; break; } else { __label__ = 17; break; } //@line 4508 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then14
      var $11=$sizes_addr; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=HEAPU32[(($11)>>2)]; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp15=(($12)>>>0) < 11; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp15) { __label__ = 14; break; } else { __label__ = 15; break; } //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $cond_true16
      var $cond22 = 16;__label__ = 16; break; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $cond_false17
      var $13=$sizes_addr; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($13)>>2)]; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add18=(($14+4)|0); //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add19=(($add18+7)|0); //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and20=$add19 & -8; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond22 = $and20;__label__ = 16; break; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $cond_end21
      var $cond22; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $element_size=$cond22; //@line 4509 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$n_elements_addr; //@line 4510 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$element_size; //@line 4510 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mul23=(($15*$16)|0); //@line 4510 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $contents_size=$mul23; //@line 4510 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 4511 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_else24
      $element_size=0; //@line 4513 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $contents_size=0; //@line 4514 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=0; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $for_cond
      var $17=$i; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$n_elements_addr; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp25=(($17)|0)!=(($18)|0); //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp25) { __label__ = 19; break; } else { __label__ = 24; break; } //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $for_body
      var $19=$i; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$sizes_addr; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($20+($19<<2))|0); //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=HEAPU32[(($arrayidx)>>2)]; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($21)>>>0) < 11; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 20; break; } else { __label__ = 21; break; } //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $cond_true27
      var $cond34 = 16;__label__ = 22; break; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $cond_false28
      var $22=$i; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$sizes_addr; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx29=(($23+($22<<2))|0); //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=HEAP32[(($arrayidx29)>>2)]; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add30=(($24+4)|0); //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add31=(($add30+7)|0); //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and32=$add31 & -8; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond34 = $and32;__label__ = 22; break; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $cond_end33
      var $cond34; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$contents_size; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add35=(($25+$cond34)|0); //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $contents_size=$add35; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 4516 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $for_inc
      var $26=$i; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc=(($26+1)|0); //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$inc; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 4515 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $for_end
      __label__ = 25; break;
    case 25: // $if_end36
      var $27=$contents_size; //@line 4519 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$array_size; //@line 4519 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add37=(($27+$28)|0); //@line 4519 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $size=$add37; //@line 4519 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$m_addr; //@line 4526 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags=(($29+440)|0); //@line 4526 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=HEAP32[(($mflags)>>2)]; //@line 4526 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and38=$30 & 0; //@line 4526 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $was_enabled=$and38; //@line 4526 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$m_addr; //@line 4527 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags39=(($31+440)|0); //@line 4527 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=HEAP32[(($mflags39)>>2)]; //@line 4527 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($mflags39)>>2)]=$32; //@line 4527 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$size; //@line 4528 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($33-4)|0); //@line 4528 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call40=_malloc($sub); //@line 4528 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mem=$call40; //@line 4528 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$was_enabled; //@line 4529 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool41=(($34)|0)!=0; //@line 4529 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool41) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 4529 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then42
      var $35=$m_addr; //@line 4530 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $mflags43=(($35+440)|0); //@line 4530 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($mflags43)>>2)]; //@line 4530 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($mflags43)>>2)]=$36; //@line 4530 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 27; break; //@line 4530 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_end44
      var $37=$mem; //@line 4531 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp45=(($37)|0)==0; //@line 4531 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp45) { __label__ = 28; break; } else { __label__ = 29; break; } //@line 4531 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_then46
      $retval=0; //@line 4532 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4532 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_end47
      var $38=$mem; //@line 4535 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($38-8)|0); //@line 4535 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$add_ptr; //@line 4535 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$39; //@line 4535 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$p; //@line 4536 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($40+4)|0); //@line 4536 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[(($head)>>2)]; //@line 4536 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and48=$41 & -8; //@line 4536 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$and48; //@line 4536 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$opts_addr; //@line 4540 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and49=$42 & 2; //@line 4540 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool50=(($and49)|0)!=0; //@line 4540 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool50) { __label__ = 30; break; } else { __label__ = 31; break; } //@line 4540 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $if_then51
      var $43=$mem; //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$44; //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$remainder_size; //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub52=(($46-4)|0); //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$array_size; //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub53=(($sub52-$47)|0); //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _memset($45, 0, $sub53, 1); //@line 4541 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 31; break; //@line 4542 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_end54
      var $48=$marray; //@line 4545 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp55=(($48)|0)==0; //@line 4545 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp55) { __label__ = 32; break; } else { __label__ = 33; break; } //@line 4545 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $if_then56
      var $49=$p; //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$contents_size; //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr57=(($50+$51)|0); //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$add_ptr57; //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $array_chunk=$52; //@line 4547 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$remainder_size; //@line 4548 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$contents_size; //@line 4548 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub58=(($53-$54)|0); //@line 4548 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $array_chunk_size=$sub58; //@line 4548 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$array_chunk; //@line 4549 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$55; //@line 4549 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr59=(($56+8)|0); //@line 4549 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=$add_ptr59; //@line 4549 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $marray=$57; //@line 4549 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$array_chunk_size; //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$58 | 1; //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or60=$or | 2; //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$array_chunk; //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head61=(($59+4)|0); //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head61)>>2)]=$or60; //@line 4550 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$contents_size; //@line 4551 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$60; //@line 4551 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 33; break; //@line 4552 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_end62
      $i=0; //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $for_cond63
      var $61=$p; //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$61; //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr64=(($62+8)|0); //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$i; //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$marray; //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx65=(($64+($63<<2))|0); //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx65)>>2)]=$add_ptr64; //@line 4556 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$i; //@line 4557 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$n_elements_addr; //@line 4557 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub66=(($66-1)|0); //@line 4557 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp67=(($65)|0)!=(($sub66)|0); //@line 4557 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp67) { __label__ = 35; break; } else { __label__ = 42; break; } //@line 4557 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_then68
      var $67=$element_size; //@line 4558 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp69=(($67)|0)!=0; //@line 4558 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp69) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 4558 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_then70
      var $68=$element_size; //@line 4559 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $size=$68; //@line 4559 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break; //@line 4559 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_else71
      var $69=$i; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$sizes_addr; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx72=(($70+($69<<2))|0); //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=HEAPU32[(($arrayidx72)>>2)]; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp73=(($71)>>>0) < 11; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp73) { __label__ = 38; break; } else { __label__ = 39; break; } //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $cond_true74
      var $cond81 = 16;__label__ = 40; break; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $cond_false75
      var $72=$i; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$sizes_addr; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx76=(($73+($72<<2))|0); //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=HEAP32[(($arrayidx76)>>2)]; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add77=(($74+4)|0); //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add78=(($add77+7)|0); //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and79=$add78 & -8; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond81 = $and79;__label__ = 40; break; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $cond_end80
      var $cond81; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $size=$cond81; //@line 4561 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 41; break;
    case 41: // $if_end82
      var $75=$size; //@line 4562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$remainder_size; //@line 4562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub83=(($76-$75)|0); //@line 4562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $remainder_size=$sub83; //@line 4562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$size; //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or84=$77 | 1; //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or85=$or84 | 2; //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $78=$p; //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head86=(($78+4)|0); //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head86)>>2)]=$or85; //@line 4563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $79=$p; //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$79; //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=$size; //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr87=(($80+$81)|0); //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$add_ptr87; //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$82; //@line 4564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 43; break; //@line 4565 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_else88
      var $83=$remainder_size; //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or89=$83 | 1; //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or90=$or89 | 2; //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$p; //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head91=(($84+4)|0); //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head91)>>2)]=$or90; //@line 4567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 4568 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_end92
      __label__ = 44; break; //@line 4570 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $for_inc93
      var $85=$i; //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc94=(($85+1)|0); //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$inc94; //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 34; break; //@line 4555 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $for_end95
      var $86=$marray; //@line 4589 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$86; //@line 4589 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 4589 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $return
      var $87=$retval; //@line 4590 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $87; //@line 4590 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_ialloc["X"]=1;

function _independent_comalloc($n_elements, $sizes, $chunks) {
  ;
  var __label__;

  var $n_elements_addr;
  var $sizes_addr;
  var $chunks_addr;
  $n_elements_addr=$n_elements;
  $sizes_addr=$sizes;
  $chunks_addr=$chunks;
  var $0=$n_elements_addr; //@line 4892 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $1=$sizes_addr; //@line 4892 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $2=$chunks_addr; //@line 4892 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $call=_ialloc(__gm_, $0, $1, 0, $2); //@line 4892 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return $call; //@line 4892 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _valloc($bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bytes_addr;
      var $pagesz;
      $bytes_addr=$bytes;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4897 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[((((_mparams+4)|0))>>2)]; //@line 4898 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pagesz=$2; //@line 4898 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$pagesz; //@line 4899 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$bytes_addr; //@line 4899 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call1=_memalign($3, $4); //@line 4899 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $call1; //@line 4899 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _pvalloc($bytes) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $bytes_addr;
      var $pagesz;
      $bytes_addr=$bytes;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4904 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[((((_mparams+4)|0))>>2)]; //@line 4905 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $pagesz=$2; //@line 4905 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$pagesz; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$bytes_addr; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$pagesz; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($4+$5)|0); //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($add-1)|0); //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$pagesz; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub1=(($6-1)|0); //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub1 ^ -1; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$sub & $neg; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call2=_memalign($3, $and); //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $call2; //@line 4906 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _malloc_trim($pad) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $pad_addr;
      var $result;
      $pad_addr=$pad;
      $result=0; //@line 4910 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 4911 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$pad_addr; //@line 4913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call1=_sys_trim(__gm_, $2); //@line 4913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $result=$call1; //@line 4913 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$result; //@line 4916 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $3; //@line 4916 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _mallinfo($agg_result) {
  ;
  var __label__;

  _internal_mallinfo($agg_result, __gm_); //@line 4929 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return; //@line 4929 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _internal_mallinfo($agg_result, $m) {
  var __stackBase__  = STACKTOP; STACKTOP += 40; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $nm=__stackBase__;
      var $nfree;
      var $mfree;
      var $sum;
      var $s;
      var $q;
      var $sz;
      $m_addr=$m;
      var $0=$nm; //@line 3338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      for (var $$dest = $0>>2, $$stop = $$dest + 10; $$dest < $$stop; $$dest++) {
        HEAP32[$$dest] = 0
      }; //@line 3338 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[((((_mparams)|0))>>2)]; //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($1)|0)!=0; //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $2 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2 = $tobool;__label__ = 2; break; //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $2;
      var $lor_ext=(($2)&1); //@line 3339 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$m_addr; //@line 3342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($3+24)|0); //@line 3342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[(($top)>>2)]; //@line 3342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($4)|0)!=0; //@line 3342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 19; break; } //@line 3342 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then
      $nfree=1; //@line 3343 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$m_addr; //@line 3344 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($5+12)|0); //@line 3344 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($topsize)>>2)]; //@line 3344 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($6+40)|0); //@line 3344 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mfree=$add; //@line 3344 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$mfree; //@line 3345 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sum=$7; //@line 3345 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$m_addr; //@line 3346 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($8+444)|0); //@line 3346 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $s=$seg; //@line 3346 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 3347 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $while_cond
      var $9=$s; //@line 3347 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($9)|0)!=0; //@line 3347 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 5; break; } else { __label__ = 18; break; } //@line 3347 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $while_body
      var $10=$s; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base=(($10)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($base)>>2)]; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$s; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base3=(($12)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=HEAP32[(($base3)>>2)]; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($13+8)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$14 & 7; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and)|0)==0; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_true
      var $cond = 0;__label__ = 8; break; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $cond_false
      var $15=$s; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base5=(($15)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($base5)>>2)]; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($16+8)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$add_ptr6; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and7=$17 & 7; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and7)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and8=$sub & 7; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and8;__label__ = 8; break; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $cond_end
      var $cond; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr9=(($11+$cond)|0); //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$add_ptr9; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$18; //@line 3348 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $while_cond10
      var $19=$q; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$19; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$s; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base11=(($21)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=HEAPU32[(($base11)>>2)]; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp12=(($20)>>>0) >= (($22)>>>0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp12) { __label__ = 10; break; } else { var $34 = 0;__label__ = 13; break; } //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $land_lhs_true
      var $23=$q; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$s; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base13=(($25)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($base13)>>2)]; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$s; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($27+4)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=HEAP32[(($size)>>2)]; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr14=(($26+$28)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp15=(($24)>>>0) < (($add_ptr14)>>>0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp15) { __label__ = 11; break; } else { var $34 = 0;__label__ = 13; break; } //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $land_lhs_true16
      var $29=$q; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$m_addr; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top17=(($30+24)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[(($top17)>>2)]; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp18=(($29)|0)!=(($31)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp18) { __label__ = 12; break; } else { var $34 = 0;__label__ = 13; break; } //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $land_rhs
      var $32=$q; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($32+4)|0); //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=HEAP32[(($head)>>2)]; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp19=(($33)|0)!=7; //@line 3349 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34 = $cmp19;__label__ = 13; break;
    case 13: // $land_end
      var $34;
      if ($34) { __label__ = 14; break; } else { __label__ = 17; break; }
    case 14: // $while_body20
      var $35=$q; //@line 3351 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head21=(($35+4)|0); //@line 3351 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($head21)>>2)]; //@line 3351 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and22=$36 & -8; //@line 3351 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sz=$and22; //@line 3351 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$sz; //@line 3352 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$sum; //@line 3352 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add23=(($38+$37)|0); //@line 3352 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sum=$add23; //@line 3352 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$q; //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head24=(($39+4)|0); //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($head24)>>2)]; //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and25=$40 & 3; //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($and25)|0)!=1; //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3353 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then27
      var $41=$sz; //@line 3354 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$mfree; //@line 3354 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add28=(($42+$41)|0); //@line 3354 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mfree=$add28; //@line 3354 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$nfree; //@line 3355 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc=(($43+1)|0); //@line 3355 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nfree=$inc; //@line 3355 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 3356 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_end
      var $44=$q; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$44; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$q; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head29=(($46+4)|0); //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=HEAP32[(($head29)>>2)]; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and30=$47 & -8; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr31=(($45+$and30)|0); //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$add_ptr31; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$48; //@line 3357 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3358 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $while_end
      var $49=$s; //@line 3359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($49+8)|0); //@line 3359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=HEAP32[(($next)>>2)]; //@line 3359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $s=$50; //@line 3359 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 3360 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $while_end32
      var $51=$sum; //@line 3362 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arena=(($nm)|0); //@line 3362 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arena)>>2)]=$51; //@line 3362 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$nfree; //@line 3363 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $ordblks=(($nm+4)|0); //@line 3363 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($ordblks)>>2)]=$52; //@line 3363 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$m_addr; //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($53+432)|0); //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($footprint)>>2)]; //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$sum; //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub33=(($54-$55)|0); //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $hblkhd=(($nm+16)|0); //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($hblkhd)>>2)]=$sub33; //@line 3364 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$m_addr; //@line 3365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($56+436)|0); //@line 3365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($max_footprint)>>2)]; //@line 3365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $usmblks=(($nm+20)|0); //@line 3365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($usmblks)>>2)]=$57; //@line 3365 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$m_addr; //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint34=(($58+432)|0); //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=HEAP32[(($footprint34)>>2)]; //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$mfree; //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub35=(($59-$60)|0); //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $uordblks=(($nm+28)|0); //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($uordblks)>>2)]=$sub35; //@line 3366 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$mfree; //@line 3367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fordblks=(($nm+32)|0); //@line 3367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fordblks)>>2)]=$61; //@line 3367 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$m_addr; //@line 3368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize36=(($62+12)|0); //@line 3368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=HEAP32[(($topsize36)>>2)]; //@line 3368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $keepcost=(($nm+36)|0); //@line 3368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($keepcost)>>2)]=$63; //@line 3368 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 3369 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end37
      var $64=$agg_result; //@line 3373 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$nm; //@line 3373 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      assert(40 % 1 === 0, 'memcpy given ' + 40 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');for (var $$src = $65>>2, $$dest = $64>>2, $$stop = $$src + 10; $$src < $$stop; $$src++, $$dest++) {
        HEAP32[$$dest] = HEAP32[$$src]
      }; //@line 3373 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      STACKTOP = __stackBase__;
      return; //@line 3373 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_mallinfo["X"]=1;

function _malloc_stats() {
  ;
  var __label__;

  _internal_malloc_stats(__gm_); //@line 4934 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return; //@line 4935 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _internal_malloc_stats($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $maxfp;
      var $fp;
      var $used;
      var $s;
      var $q;
      $m_addr=$m;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 3378 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $maxfp=0; //@line 3380 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $fp=0; //@line 3381 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $used=0; //@line 3382 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 3384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($2+24)|0); //@line 3384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=HEAP32[(($top)>>2)]; //@line 3384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($3)|0)!=0; //@line 3384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 19; break; } //@line 3384 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then
      var $4=$m_addr; //@line 3385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($4+444)|0); //@line 3385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $s=$seg; //@line 3385 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$m_addr; //@line 3386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($5+436)|0); //@line 3386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($max_footprint)>>2)]; //@line 3386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $maxfp=$6; //@line 3386 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$m_addr; //@line 3387 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($7+432)|0); //@line 3387 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($footprint)>>2)]; //@line 3387 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $fp=$8; //@line 3387 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$fp; //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$m_addr; //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($10+12)|0); //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($topsize)>>2)]; //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($11+40)|0); //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($9-$add)|0); //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $used=$sub; //@line 3388 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 3390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $while_cond
      var $12=$s; //@line 3390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($12)|0)!=0; //@line 3390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 5; break; } else { __label__ = 18; break; } //@line 3390 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $while_body
      var $13=$s; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base=(($13)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[(($base)>>2)]; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$s; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base3=(($15)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=HEAP32[(($base3)>>2)]; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($16+8)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$add_ptr; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$17 & 7; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and)|0)==0; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 6; break; } else { __label__ = 7; break; } //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_true
      var $cond = 0;__label__ = 8; break; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $cond_false
      var $18=$s; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base5=(($18)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=HEAP32[(($base5)>>2)]; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($19+8)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$add_ptr6; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and7=$20 & 7; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub8=((8-$and7)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and9=$sub8 & 7; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and9;__label__ = 8; break; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $cond_end
      var $cond; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr10=(($14+$cond)|0); //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$add_ptr10; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$21; //@line 3391 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $while_cond11
      var $22=$q; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$22; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$s; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base12=(($24)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=HEAPU32[(($base12)>>2)]; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp13=(($23)>>>0) >= (($25)>>>0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp13) { __label__ = 10; break; } else { var $37 = 0;__label__ = 13; break; } //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $land_lhs_true
      var $26=$q; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$26; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$s; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base14=(($28)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($base14)>>2)]; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$s; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($30+4)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=HEAP32[(($size)>>2)]; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr15=(($29+$31)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp16=(($27)>>>0) < (($add_ptr15)>>>0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp16) { __label__ = 11; break; } else { var $37 = 0;__label__ = 13; break; } //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $land_lhs_true17
      var $32=$q; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top18=(($33+24)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=HEAP32[(($top18)>>2)]; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp19=(($32)|0)!=(($34)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp19) { __label__ = 12; break; } else { var $37 = 0;__label__ = 13; break; } //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $land_rhs
      var $35=$q; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($35+4)|0); //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($head)>>2)]; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($36)|0)!=7; //@line 3392 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37 = $cmp20;__label__ = 13; break;
    case 13: // $land_end
      var $37;
      if ($37) { __label__ = 14; break; } else { __label__ = 17; break; }
    case 14: // $while_body21
      var $38=$q; //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head22=(($38+4)|0); //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($head22)>>2)]; //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and23=$39 & 3; //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($and23)|0)!=1; //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3394 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_then25
      var $40=$q; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head26=(($40+4)|0); //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=HEAP32[(($head26)>>2)]; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and27=$41 & -8; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$used; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub28=(($42-$and27)|0); //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $used=$sub28; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 16; break; //@line 3395 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_end
      var $43=$q; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$43; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$q; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head29=(($45+4)|0); //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=HEAP32[(($head29)>>2)]; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and30=$46 & -8; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr31=(($44+$and30)|0); //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$add_ptr31; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$47; //@line 3396 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 9; break; //@line 3397 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $while_end
      var $48=$s; //@line 3398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($48+8)|0); //@line 3398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $49=HEAP32[(($next)>>2)]; //@line 3398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $s=$49; //@line 3398 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 4; break; //@line 3399 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $while_end32
      __label__ = 19; break; //@line 3400 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 19: // $if_end33
      var $50=HEAP32[((__impure_ptr)>>2)]; //@line 3402 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $_stderr=(($50+12)|0); //@line 3402 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=HEAP32[(($_stderr)>>2)]; //@line 3402 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$maxfp; //@line 3402 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call34=_fprintf($51, ((STRING_TABLE.__str12)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$52,tempInt)); //@line 3402 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=HEAP32[((__impure_ptr)>>2)]; //@line 3403 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $_stderr35=(($53+12)|0); //@line 3403 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=HEAP32[(($_stderr35)>>2)]; //@line 3403 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$fp; //@line 3403 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call36=_fprintf($54, ((STRING_TABLE.__str113)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$55,tempInt)); //@line 3403 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=HEAP32[((__impure_ptr)>>2)]; //@line 3404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $_stderr37=(($56+12)|0); //@line 3404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($_stderr37)>>2)]; //@line 3404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$used; //@line 3404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call38=_fprintf($57, ((STRING_TABLE.__str214)|0), (tempInt=STACKTOP,STACKTOP += 4,assert(STACKTOP < STACK_ROOT + STACK_MAX, "Ran out of stack"),HEAP32[((tempInt)>>2)]=$58,tempInt)); //@line 3404 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return; //@line 3408 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_internal_malloc_stats["X"]=1;

function _mallopt($param_number, $value) {
  ;
  var __label__;

  var $param_number_addr;
  var $value_addr;
  $param_number_addr=$param_number;
  $value_addr=$value;
  var $0=$param_number_addr; //@line 4938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $1=$value_addr; //@line 4938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  var $call=_change_mparam($0, $1); //@line 4938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
  ;
  return $call; //@line 4938 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
}


function _init_mparams() {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $magic;
      var $psize;
      var $gsize;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 2965 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)==0; //@line 2965 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 5; break; } //@line 2965 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $call=_sysconf(8); //@line 2971 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$call; //@line 2971 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=$psize; //@line 2972 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $gsize=$1; //@line 2972 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$gsize; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$gsize; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($3-1)|0); //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & $sub; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($and)|0)!=0; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 2; break; } //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_lhs_false
      var $4=$psize; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$psize; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub2=(($5-1)|0); //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and3=$4 & $sub2; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and3)|0)!=0; //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2989 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then5
      _abort(); //@line 2997 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 2997 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end
      var $6=$gsize; //@line 2999 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$6; //@line 2999 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$psize; //@line 3000 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+4)|0))>>2)]=$7; //@line 3000 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=-1; //@line 3001 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=2097152; //@line 3002 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+20)|0))>>2)]=0; //@line 3004 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[((((_mparams+20)|0))>>2)]; //@line 3011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((__gm_+440)|0))>>2)]=$8; //@line 3011 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call6=_time(0); //@line 3030 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $xor=$call6 ^ 1431655765; //@line 3030 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $magic=$xor; //@line 3030 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$magic; //@line 3032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$9 | 8; //@line 3032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $magic=$or; //@line 3032 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$magic; //@line 3033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and7=$10 & -8; //@line 3033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $magic=$and7; //@line 3033 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$magic; //@line 3034 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams)|0))>>2)]=$11; //@line 3034 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 3036 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_end8
      ;
      return 1; //@line 3039 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _malloc_usable_size($mem) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $mem_addr;
      var $p;
      $mem_addr=$mem;
      var $0=$mem_addr; //@line 4944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 4944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 4; break; } //@line 4944 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      var $1=$mem_addr; //@line 4945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1-8)|0); //@line 4945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 4945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$2; //@line 4945 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$p; //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($3+4)|0); //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=HEAP32[(($head)>>2)]; //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$4 & 3; //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($and)|0)!=1; //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 2; break; } else { __label__ = 3; break; } //@line 4946 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_then2
      var $5=$p; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head3=(($5+4)|0); //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($head3)>>2)]; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and4=$6 & -8; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$p; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head5=(($7+4)|0); //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($head5)>>2)]; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$8 & 3; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond=$cmp7 ? 8 : 4; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($and4-$cond)|0); //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$sub; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4947 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_end
      __label__ = 4; break; //@line 4948 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end8
      $retval=0; //@line 4949 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 5; break; //@line 4949 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $return
      var $9=$retval; //@line 4950 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $9; //@line 4950 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _mmap_resize($m, $oldp, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $oldp_addr;
      var $nb_addr;
      var $oldsize;
      var $offset;
      var $oldmmsize;
      var $newmmsize;
      var $cp;
      var $newp;
      var $psize;
      $m_addr=$m;
      $oldp_addr=$oldp;
      $nb_addr=$nb;
      var $0=$oldp_addr; //@line 3699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($0+4)|0); //@line 3699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[(($head)>>2)]; //@line 3699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$1 & -8; //@line 3699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldsize=$and; //@line 3699 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$nb_addr; //@line 3700 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$2 >>> 3; //@line 3700 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($shr)>>>0) < 32; //@line 3700 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3700 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      $retval=0; //@line 3701 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3701 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_end
      var $3=$oldsize; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$nb_addr; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($4+4)|0); //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($3)>>>0) >= (($add)>>>0); //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 5; break; } //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $land_lhs_true
      var $5=$oldsize; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$nb_addr; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($5-$6)|0); //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAP32[((((_mparams+8)|0))>>2)]; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$7 << 1; //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($sub)>>>0) <= (($shl)>>>0); //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3703 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_then3
      var $8=$oldp_addr; //@line 3705 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$8; //@line 3705 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3705 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_else
      var $9=$oldp_addr; //@line 3707 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($9)|0); //@line 3707 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=HEAP32[(($prev_foot)>>2)]; //@line 3707 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $offset=$10; //@line 3707 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$oldsize; //@line 3708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$offset; //@line 3708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add4=(($11+$12)|0); //@line 3708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add5=(($add4+16)|0); //@line 3708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldmmsize=$add5; //@line 3708 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$nb_addr; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add6=(($13+24)|0); //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add7=(($add6+7)|0); //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub8=(($14-1)|0); //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add9=(($add7+$sub8)|0); //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub10=(($15-1)|0); //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub10 ^ -1; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and11=$add9 & $neg; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newmmsize=$and11; //@line 3709 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $cp=-1; //@line 3711 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$cp; //@line 3712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp12=(($16)|0)!=-1; //@line 3712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp12) { __label__ = 6; break; } else { __label__ = 11; break; } //@line 3712 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_then13
      var $17=$cp; //@line 3713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$offset; //@line 3713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($17+$18)|0); //@line 3713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr; //@line 3713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $newp=$19; //@line 3713 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$newmmsize; //@line 3714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$offset; //@line 3714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub14=(($20-$21)|0); //@line 3714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub15=(($sub14-16)|0); //@line 3714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$sub15; //@line 3714 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$psize; //@line 3715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$newp; //@line 3715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head16=(($23+4)|0); //@line 3715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head16)>>2)]=$22; //@line 3715 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$newp; //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$24; //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$psize; //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr17=(($25+$26)|0); //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$add_ptr17; //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head18=(($27+4)|0); //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head18)>>2)]=7; //@line 3717 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$newp; //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$28; //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$psize; //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add19=(($30+4)|0); //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr20=(($29+$add19)|0); //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$add_ptr20; //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head21=(($31+4)|0); //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head21)>>2)]=0; //@line 3718 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$cp; //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($33+16)|0); //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=HEAPU32[(($least_addr)>>2)]; //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($32)>>>0) < (($34)>>>0); //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 3720 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then23
      var $35=$cp; //@line 3721 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$m_addr; //@line 3721 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr24=(($36+16)|0); //@line 3721 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr24)>>2)]=$35; //@line 3721 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 3721 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end25
      var $37=$newmmsize; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$oldmmsize; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub26=(($37-$38)|0); //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$m_addr; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($39+432)|0); //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($footprint)>>2)]; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add27=(($40+$sub26)|0); //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$add27; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($41+436)|0); //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=HEAPU32[(($max_footprint)>>2)]; //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($add27)>>>0) > (($42)>>>0); //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3722 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then29
      var $43=$m_addr; //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint30=(($43+432)|0); //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=HEAP32[(($footprint30)>>2)]; //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$m_addr; //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint31=(($45+436)|0); //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($max_footprint31)>>2)]=$44; //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3723 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end32
      var $46=$newp; //@line 3725 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$46; //@line 3725 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3725 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_end33
      __label__ = 12; break;
    case 12: // $if_end34
      $retval=0; //@line 3728 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3728 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $return
      var $47=$retval; //@line 3729 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $47; //@line 3729 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_resize["X"]=1;

function _segment_holding($m, $addr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $addr_addr;
      var $sp;
      $m_addr=$m;
      $addr_addr=$addr;
      var $0=$m_addr; //@line 2562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($0+444)|0); //@line 2562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$seg; //@line 2562 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 2563 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $for_cond
      var $1=$addr_addr; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$sp; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base=(($2)|0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=HEAPU32[(($base)>>2)]; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($1)>>>0) >= (($3)>>>0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $land_lhs_true
      var $4=$addr_addr; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$sp; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base1=(($5)|0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($base1)>>2)]; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$sp; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($7+4)|0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($size)>>2)]; //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+$8)|0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp2=(($4)>>>0) < (($add_ptr)>>>0); //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp2) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 2564 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $if_then
      var $9=$sp; //@line 2565 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$9; //@line 2565 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 2565 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $if_end
      var $10=$sp; //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($10+8)|0); //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=HEAP32[(($next)>>2)]; //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$11; //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp3=(($11)|0)==0; //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp3) { __label__ = 5; break; } else { __label__ = 6; break; } //@line 2566 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $if_then4
      $retval=0; //@line 2567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 2567 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $if_end5
      __label__ = 1; break; //@line 2568 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $return
      var $12=$retval; //@line 2569 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $12; //@line 2569 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _init_top($m, $p, $psize) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $p_addr;
      var $psize_addr;
      var $offset;
      $m_addr=$m;
      $p_addr=$p;
      $psize_addr=$psize;
      var $0=$p_addr; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=$0; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1+8)|0); //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & 7; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $3=$p_addr; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr1=(($4+8)|0); //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$add_ptr1; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and2=$5 & 7; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and2)|0); //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and3=$sub & 7; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and3;__label__ = 3; break; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3736 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$p_addr; //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$6; //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$offset; //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($7+$8)|0); //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$add_ptr4; //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p_addr=$9; //@line 3737 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$offset; //@line 3738 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$psize_addr; //@line 3738 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub5=(($11-$10)|0); //@line 3738 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize_addr=$sub5; //@line 3738 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$p_addr; //@line 3740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$m_addr; //@line 3740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($13+24)|0); //@line 3740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top)>>2)]=$12; //@line 3740 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$psize_addr; //@line 3741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$m_addr; //@line 3741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($15+12)|0); //@line 3741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize)>>2)]=$14; //@line 3741 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$psize_addr; //@line 3742 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$16 | 1; //@line 3742 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$p_addr; //@line 3742 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($17+4)|0); //@line 3742 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or; //@line 3742 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$p_addr; //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$18; //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$psize_addr; //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr6=(($19+$20)|0); //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$add_ptr6; //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head7=(($21+4)|0); //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head7)>>2)]=40; //@line 3744 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=HEAP32[((((_mparams+16)|0))>>2)]; //@line 3745 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$m_addr; //@line 3745 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $trim_check=(($23+28)|0); //@line 3745 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($trim_check)>>2)]=$22; //@line 3745 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return; //@line 3746 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_init_top["X"]=1;

function _mmap_alloc($m, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $m_addr;
      var $nb_addr;
      var $mmsize;
      var $mm;
      var $offset;
      var $psize;
      var $p;
      $m_addr=$m;
      $nb_addr=$nb;
      var $0=$nb_addr; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($0+24)|0); //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add1=(($add+7)|0); //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($1-1)|0); //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add2=(($add1+$sub)|0); //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=HEAP32[((((_mparams+4)|0))>>2)]; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub3=(($2-1)|0); //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$sub3 ^ -1; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$add2 & $neg; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $mmsize=$and; //@line 3672 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$mmsize; //@line 3673 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$nb_addr; //@line 3673 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($3)>>>0) > (($4)>>>0); //@line 3673 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 12; break; } //@line 3673 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $if_then
      $mm=-1; //@line 3674 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$mm; //@line 3675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($5)|0)!=-1; //@line 3675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 2; break; } else { __label__ = 11; break; } //@line 3675 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $if_then5
      var $6=$mm; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+8)|0); //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$add_ptr; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$7 & 7; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_true
      var $cond = 0;__label__ = 5; break; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_false
      var $8=$mm; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr8=(($8+8)|0); //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$add_ptr8; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and9=$9 & 7; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub10=((8-$and9)|0); //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and11=$sub10 & 7; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and11;__label__ = 5; break; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_end
      var $cond; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3676 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$mmsize; //@line 3677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$offset; //@line 3677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub12=(($10-$11)|0); //@line 3677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub13=(($sub12-16)|0); //@line 3677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$sub13; //@line 3677 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$mm; //@line 3678 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$offset; //@line 3678 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr14=(($12+$13)|0); //@line 3678 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr14; //@line 3678 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$14; //@line 3678 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$offset; //@line 3679 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$p; //@line 3679 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($16)|0); //@line 3679 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$15; //@line 3679 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$psize; //@line 3680 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$p; //@line 3680 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($18+4)|0); //@line 3680 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$17; //@line 3680 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$p; //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$19; //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$psize; //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr15=(($20+$21)|0); //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$add_ptr15; //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head16=(($22+4)|0); //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head16)>>2)]=7; //@line 3682 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$psize; //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add17=(($25+4)|0); //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr18=(($24+$add17)|0); //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$add_ptr18; //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head19=(($26+4)|0); //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head19)>>2)]=0; //@line 3683 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$m_addr; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($27+16)|0); //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=HEAP32[(($least_addr)>>2)]; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($28)|0)==0; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp20) { __label__ = 7; break; } else { __label__ = 6; break; } //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $lor_lhs_false
      var $29=$mm; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$m_addr; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr21=(($30+16)|0); //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=HEAPU32[(($least_addr21)>>2)]; //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp22=(($29)>>>0) < (($31)>>>0); //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp22) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 3685 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then23
      var $32=$mm; //@line 3686 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$m_addr; //@line 3686 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr24=(($33+16)|0); //@line 3686 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($least_addr24)>>2)]=$32; //@line 3686 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 8; break; //@line 3686 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_end
      var $34=$mmsize; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$m_addr; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint=(($35+432)|0); //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($footprint)>>2)]; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add25=(($36+$34)|0); //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($footprint)>>2)]=$add25; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$m_addr; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint=(($37+436)|0); //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=HEAPU32[(($max_footprint)>>2)]; //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp26=(($add25)>>>0) > (($38)>>>0); //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp26) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3687 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then27
      var $39=$m_addr; //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $footprint28=(($39+432)|0); //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=HEAP32[(($footprint28)>>2)]; //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $max_footprint29=(($41+436)|0); //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($max_footprint29)>>2)]=$40; //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3688 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end30
      var $42=$p; //@line 3691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$42; //@line 3691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr31=(($43+8)|0); //@line 3691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=$add_ptr31; //@line 3691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3691 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_end32
      __label__ = 12; break; //@line 3693 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_end33
      $retval=0; //@line 3694 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3694 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $return
      var $44=$retval; //@line 3695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $44; //@line 3695 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_mmap_alloc["X"]=1;

function _init_bins($m) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $i;
      var $bin;
      $m_addr=$m;
      $i=0; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $for_cond
      var $0=$i; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)>>>0) < 32; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 2; break; } else { __label__ = 4; break; } //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $for_body
      var $1=$i; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$1 << 1; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$m_addr; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($2+40)|0); //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl<<2))|0); //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$arrayidx; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$3; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $bin=$4; //@line 3753 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$bin; //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$bin; //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($6+12)|0); //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$5; //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$bin; //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($7+8)|0); //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd)>>2)]=$5; //@line 3754 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 3; break; //@line 3755 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $for_inc
      var $8=$i; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc=(($8+1)|0); //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $i=$inc; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 1; break; //@line 3752 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $for_end
      ;
      return; //@line 3756 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}


function _change_mparam($param_number, $value) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $retval;
      var $param_number_addr;
      var $value_addr;
      var $val;
      $param_number_addr=$param_number;
      $value_addr=$value;
      var $0=HEAP32[((((_mparams)|0))>>2)]; //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($0)|0)!=0; //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { var $1 = 1;__label__ = 2; break; } else { __label__ = 1; break; } //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $lor_rhs
      var $call=_init_mparams(); //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($call)|0)!=0; //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1 = $tobool;__label__ = 2; break; //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $lor_end
      var $1;
      var $lor_ext=(($1)&1); //@line 3045 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$value_addr; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp1=(($2)|0)==-1; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp1) { __label__ = 3; break; } else { __label__ = 4; break; } //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_true
      var $cond = -1;__label__ = 5; break; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_false
      var $3=$value_addr; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $3;__label__ = 5; break; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_end
      var $cond; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $val=$cond; //@line 3046 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$param_number_addr; //@line 3047 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($4 == -1) {
        __label__ = 6; break;
      }
      else if ($4 == -2) {
        __label__ = 7; break;
      }
      else if ($4 == -3) {
        __label__ = 11; break;
      }
      else {
      __label__ = 12; break;
      }
      
    case 6: // $sw_bb
      var $5=$val; //@line 3049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+16)|0))>>2)]=$5; //@line 3049 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=1; //@line 3050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3050 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $sw_bb2
      var $6=$val; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=HEAPU32[((((_mparams+4)|0))>>2)]; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp3=(($6)>>>0) >= (($7)>>>0); //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp3) { __label__ = 8; break; } else { __label__ = 10; break; } //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $land_lhs_true
      var $8=$val; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$val; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=(($9-1)|0); //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$8 & $sub; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp4=(($and)|0)==0; //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp4) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3052 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then
      var $10=$val; //@line 3053 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+8)|0))>>2)]=$10; //@line 3053 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=1; //@line 3054 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3054 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_else
      $retval=0; //@line 3057 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3057 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $sw_bb5
      var $11=$val; //@line 3059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[((((_mparams+12)|0))>>2)]=$11; //@line 3059 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $retval=1; //@line 3060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3060 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $sw_default
      $retval=0; //@line 3062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 13; break; //@line 3062 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $return
      var $12=$retval; //@line 3064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $12; //@line 3064 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_change_mparam["X"]=1;

function _prepend_alloc($m, $newbase, $oldbase, $nb) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $newbase_addr;
      var $oldbase_addr;
      var $nb_addr;
      var $p;
      var $oldfirst;
      var $psize;
      var $q;
      var $qsize;
      var $tsize;
      var $dsize;
      var $nsize;
      var $F;
      var $B;
      var $I;
      var $TP;
      var $XP;
      var $R;
      var $F63;
      var $RP;
      var $CP;
      var $H;
      var $C0;
      var $C1;
      var $I203;
      var $B205;
      var $F209;
      var $TP235;
      var $H236;
      var $I237;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K290;
      var $C;
      var $F328;
      $m_addr=$m;
      $newbase_addr=$newbase;
      $oldbase_addr=$oldbase;
      $nb_addr=$nb;
      var $0=$newbase_addr; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=$newbase_addr; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($1+8)|0); //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$add_ptr; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$2 & 7; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $3=$newbase_addr; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr1=(($3+8)|0); //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$add_ptr1; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and2=$4 & 7; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and2)|0); //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and3=$sub & 7; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and3;__label__ = 3; break; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($0+$cond)|0); //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$add_ptr4; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$5; //@line 3780 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=$oldbase_addr; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$oldbase_addr; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr5=(($7+8)|0); //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=$add_ptr5; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$8 & 7; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp7=(($and6)|0)==0; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp7) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_true8
      var $cond15 = 0;__label__ = 6; break; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_false9
      var $9=$oldbase_addr; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr10=(($9+8)|0); //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$add_ptr10; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and11=$10 & 7; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub12=((8-$and11)|0); //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and13=$sub12 & 7; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond15 = $and13;__label__ = 6; break; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_end14
      var $cond15; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr16=(($6+$cond15)|0); //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$add_ptr16; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$11; //@line 3781 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$oldfirst; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $13=$12; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$p; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$14; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$13; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$15; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$sub_ptr_sub; //@line 3782 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$p; //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$16; //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$nb_addr; //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr17=(($17+$18)|0); //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $19=$add_ptr17; //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$19; //@line 3783 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $20=$psize; //@line 3784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$nb_addr; //@line 3784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub18=(($20-$21)|0); //@line 3784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $qsize=$sub18; //@line 3784 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$nb_addr; //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$22 | 1; //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or19=$or | 2; //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$p; //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($23+4)|0); //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or19; //@line 3785 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$oldfirst; //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$m_addr; //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($25+24)|0); //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=HEAP32[(($top)>>2)]; //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp20=(($24)|0)==(($26)|0); //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp20) { __label__ = 7; break; } else { __label__ = 8; break; } //@line 3792 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $if_then
      var $27=$qsize; //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$m_addr; //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $topsize=(($28+12)|0); //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=HEAP32[(($topsize)>>2)]; //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($29+$27)|0); //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($topsize)>>2)]=$add; //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tsize=$add; //@line 3793 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$q; //@line 3794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$m_addr; //@line 3794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top21=(($31+24)|0); //@line 3794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($top21)>>2)]=$30; //@line 3794 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$tsize; //@line 3795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or22=$32 | 1; //@line 3795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$q; //@line 3795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head23=(($33+4)|0); //@line 3795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head23)>>2)]=$or22; //@line 3795 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 108; break; //@line 3797 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_else
      var $34=$oldfirst; //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$m_addr; //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv=(($35+20)|0); //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=HEAP32[(($dv)>>2)]; //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp24=(($34)|0)==(($36)|0); //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp24) { __label__ = 9; break; } else { __label__ = 10; break; } //@line 3798 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_then25
      var $37=$qsize; //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$m_addr; //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dvsize=(($38+8)|0); //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=HEAP32[(($dvsize)>>2)]; //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add26=(($39+$37)|0); //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dvsize)>>2)]=$add26; //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $dsize=$add26; //@line 3799 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$q; //@line 3800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$m_addr; //@line 3800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $dv27=(($41+20)|0); //@line 3800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($dv27)>>2)]=$40; //@line 3800 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$dsize; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or28=$42 | 1; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$q; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head29=(($43+4)|0); //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head29)>>2)]=$or28; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$dsize; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$q; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$45; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$dsize; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr30=(($46+$47)|0); //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$add_ptr30; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($48)|0); //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$44; //@line 3801 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 107; break; //@line 3802 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_else31
      var $49=$oldfirst; //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head32=(($49+4)|0); //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=HEAP32[(($head32)>>2)]; //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and33=$50 & 3; //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp34=(($and33)|0)!=1; //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp34) { __label__ = 71; break; } else { __label__ = 11; break; } //@line 3804 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $if_then35
      var $51=$oldfirst; //@line 3805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head36=(($51+4)|0); //@line 3805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=HEAP32[(($head36)>>2)]; //@line 3805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and37=$52 & -8; //@line 3805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nsize=$and37; //@line 3805 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$nsize; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$53 >>> 3; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp38=(($shr)>>>0) < 32; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp38) { __label__ = 12; break; } else { __label__ = 24; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then39
      var $54=$oldfirst; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($54+8)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=HEAP32[(($fd)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$55; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$oldfirst; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($56+12)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $57=HEAP32[(($bk)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$57; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $58=$nsize; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr40=$58 >>> 3; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr40; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$F; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $60=$B; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp41=(($59)|0)==(($60)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp41) { __label__ = 13; break; } else { __label__ = 14; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then42
      var $61=$I; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=1 << $61; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg=$shl ^ -1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($62)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=HEAP32[(($smallmap)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and43=$63 & $neg; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap)>>2)]=$and43; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 23; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_else44
      var $64=$F; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$I; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl45=$65 << 1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($66+40)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl45<<2))|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$arrayidx; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$67; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($64)|0)==(($68)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp46) { __label__ = 16; break; } else { __label__ = 15; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $lor_lhs_false
      var $69=$F; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$69; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($71+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=HEAPU32[(($least_addr)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp47=(($70)>>>0) >= (($72)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp47) { __label__ = 16; break; } else { var $83 = 0;__label__ = 19; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $land_rhs
      var $73=$B; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$I; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl48=$74 << 1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins49=(($75+40)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx50=(($smallbins49+($shl48<<2))|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$arrayidx50; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$76; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp51=(($73)|0)==(($77)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp51) { var $82 = 1;__label__ = 18; break; } else { __label__ = 17; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $lor_rhs
      var $78=$B; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $79=$78; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr52=(($80+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=HEAPU32[(($least_addr52)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp53=(($79)>>>0) >= (($81)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82 = $cmp53;__label__ = 18; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $lor_end
      var $82;
      var $83 = $82;__label__ = 19; break;
    case 19: // $land_end
      var $83;
      var $land_ext=(($83)&1);
      var $expval=(($land_ext)==(1));
      var $tobool=(($expval)|0)!=0;
      if ($tobool) { __label__ = 20; break; } else { __label__ = 21; break; }
    case 20: // $if_then54
      var $84=$B; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=$F; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk55=(($85+12)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk55)>>2)]=$84; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=$F; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $87=$B; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd56=(($87+8)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd56)>>2)]=$86; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 22; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_else57
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_end
      __label__ = 23; break;
    case 23: // $if_end58
      __label__ = 70; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else59
      var $88=$oldfirst; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=$88; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP=$89; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $90=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($90+24)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($parent)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $XP=$91; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk60=(($92+12)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=HEAP32[(($bk60)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp61=(($93)|0)!=(($94)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp61) { __label__ = 25; break; } else { __label__ = 29; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 25: // $if_then62
      var $95=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd64=(($95+8)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($fd64)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F63=$96; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $97=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk65=(($97+12)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=HEAP32[(($bk65)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$98; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$F63; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$99; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr66=(($101+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=HEAPU32[(($least_addr66)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp67=(($100)>>>0) >= (($102)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp67)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval68=(($conv)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool69=(($expval68)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool69) { __label__ = 26; break; } else { __label__ = 27; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 26: // $if_then70
      var $103=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$F63; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk71=(($104+12)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk71)>>2)]=$103; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $105=$F63; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd72=(($106+8)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd72)>>2)]=$105; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 28; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_else73
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_end74
      __label__ = 41; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $if_else75
      var $107=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($107+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx76=(($child+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx76; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=HEAP32[(($arrayidx76)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$108; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp77=(($108)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp77) { __label__ = 31; break; } else { __label__ = 30; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $lor_lhs_false79
      var $109=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child80=(($109+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx81=(($child80)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$arrayidx81; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $110=HEAP32[(($arrayidx81)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$110; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp82=(($110)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp82) { __label__ = 31; break; } else { __label__ = 40; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $if_then84
      __label__ = 32; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $while_cond
      var $111=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child85=(($111+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx86=(($child85+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx86; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=HEAP32[(($arrayidx86)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp87=(($112)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp87) { var $115 = 1;__label__ = 34; break; } else { __label__ = 33; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $lor_rhs89
      var $113=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child90=(($113+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx91=(($child90)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $CP=$arrayidx91; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=HEAP32[(($arrayidx91)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp92=(($114)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $115 = $cmp92;__label__ = 34; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $lor_end94
      var $115;
      if ($115) { __label__ = 35; break; } else { __label__ = 36; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $while_body
      var $116=$CP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $RP=$116; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $117=HEAP32[(($116)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $R=$117; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $while_end
      var $118=$RP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=$118; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr95=(($120+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=HEAPU32[(($least_addr95)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp96=(($119)>>>0) >= (($121)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv97=(($cmp96)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval98=(($conv97)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool99=(($expval98)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool99) { __label__ = 37; break; } else { __label__ = 38; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_then100
      var $122=$RP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($122)>>2)]=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 39; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_else101
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_end102
      __label__ = 40; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $if_end103
      __label__ = 41; break;
    case 41: // $if_end104
      var $123=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp105=(($123)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp105) { __label__ = 42; break; } else { __label__ = 69; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 42: // $if_then107
      var $124=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($124+28)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $125=HEAP32[(($index)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($126+304)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx108=(($treebins+($125<<2))|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx108; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $127=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$H; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=HEAP32[(($128)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp109=(($127)|0)==(($129)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp109) { __label__ = 43; break; } else { __label__ = 46; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_then111
      var $130=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$H; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($131)>>2)]=$130; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp112=(($130)|0)==0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp112) { __label__ = 44; break; } else { __label__ = 45; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_then114
      var $132=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index115=(($132+28)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=HEAP32[(($index115)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl116=1 << $133; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $neg117=$shl116 ^ -1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $134=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($134+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=HEAP32[(($treemap)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and118=$135 & $neg117; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap)>>2)]=$and118; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $if_end119
      __label__ = 53; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 46: // $if_else120
      var $136=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=$136; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $138=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr121=(($138+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $139=HEAPU32[(($least_addr121)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp122=(($137)>>>0) >= (($139)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv123=(($cmp122)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval124=(($conv123)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool125=(($expval124)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool125) { __label__ = 47; break; } else { __label__ = 51; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 47: // $if_then126
      var $140=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child127=(($140+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx128=(($child127)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=HEAP32[(($arrayidx128)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp129=(($141)|0)==(($142)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp129) { __label__ = 48; break; } else { __label__ = 49; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_then131
      var $143=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child132=(($144+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx133=(($child132)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx133)>>2)]=$143; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 49: // $if_else134
      var $145=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child135=(($146+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx136=(($child135+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx136)>>2)]=$145; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 50; break;
    case 50: // $if_end137
      __label__ = 52; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 51: // $if_else138
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 52: // $if_end139
      __label__ = 53; break;
    case 53: // $if_end140
      var $147=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp141=(($147)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp141) { __label__ = 54; break; } else { __label__ = 68; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 54: // $if_then143
      var $148=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $149=$148; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $150=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr144=(($150+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=HEAPU32[(($least_addr144)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp145=(($149)>>>0) >= (($151)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv146=(($cmp145)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval147=(($conv146)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool148=(($expval147)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool148) { __label__ = 55; break; } else { __label__ = 66; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 55: // $if_then149
      var $152=$XP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $153=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent150=(($153+24)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent150)>>2)]=$152; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child151=(($154+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx152=(($child151)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=HEAP32[(($arrayidx152)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C0=$155; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp153=(($155)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp153) { __label__ = 56; break; } else { __label__ = 60; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 56: // $if_then155
      var $156=$C0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=$156; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $158=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr156=(($158+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=HEAPU32[(($least_addr156)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp157=(($157)>>>0) >= (($159)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv158=(($cmp157)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval159=(($conv158)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool160=(($expval159)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool160) { __label__ = 57; break; } else { __label__ = 58; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 57: // $if_then161
      var $160=$C0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child162=(($161+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx163=(($child162)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx163)>>2)]=$160; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=$C0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent164=(($163+24)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent164)>>2)]=$162; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 59; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 58: // $if_else165
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 59: // $if_end166
      __label__ = 60; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 60: // $if_end167
      var $164=$TP; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child168=(($164+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx169=(($child168+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $165=HEAP32[(($arrayidx169)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C1=$165; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp170=(($165)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp170) { __label__ = 61; break; } else { __label__ = 65; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 61: // $if_then172
      var $166=$C1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $167=$166; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$m_addr; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr173=(($168+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=HEAPU32[(($least_addr173)>>2)]; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp174=(($167)>>>0) >= (($169)>>>0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv175=(($cmp174)&1); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval176=(($conv175)==(1)); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool177=(($expval176)|0)!=0; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool177) { __label__ = 62; break; } else { __label__ = 63; break; } //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 62: // $if_then178
      var $170=$C1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $171=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child179=(($171+16)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx180=(($child179+4)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx180)>>2)]=$170; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=$R; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=$C1; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent181=(($173+24)|0); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent181)>>2)]=$172; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 64; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 63: // $if_else182
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 64: // $if_end183
      __label__ = 65; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 65: // $if_end184
      __label__ = 67; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 66: // $if_else185
      _abort(); //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 67: // $if_end186
      __label__ = 68; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 68: // $if_end187
      __label__ = 69; break; //@line 3806 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 69: // $if_end188
      __label__ = 70; break;
    case 70: // $if_end189
      var $174=$oldfirst; //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=$174; //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=$nsize; //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr190=(($175+$176)|0); //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $177=$add_ptr190; //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldfirst=$177; //@line 3807 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=$nsize; //@line 3808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=$qsize; //@line 3808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add191=(($179+$178)|0); //@line 3808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $qsize=$add191; //@line 3808 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 71; break; //@line 3809 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 71: // $if_end192
      var $180=$oldfirst; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head193=(($180+4)|0); //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181=HEAP32[(($head193)>>2)]; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and194=$181 & -2; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head193)>>2)]=$and194; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $182=$qsize; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or195=$182 | 1; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$q; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head196=(($183+4)|0); //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head196)>>2)]=$or195; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=$qsize; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $185=$q; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $186=$185; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=$qsize; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr197=(($186+$187)|0); //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=$add_ptr197; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot198=(($188)|0); //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot198)>>2)]=$184; //@line 3810 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr199=$189 >>> 3; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp200=(($shr199)>>>0) < 32; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp200) { __label__ = 72; break; } else { __label__ = 79; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 72: // $if_then202
      var $190=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr204=$190 >>> 3; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I203=$shr204; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $191=$I203; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl206=$191 << 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $192=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins207=(($192+40)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx208=(($smallbins207+($shl206<<2))|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $193=$arrayidx208; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $194=$193; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B205=$194; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $195=$B205; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F209=$195; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $196=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap210=(($196)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $197=HEAP32[(($smallmap210)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $198=$I203; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl211=1 << $198; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and212=$197 & $shl211; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool213=(($and212)|0)!=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool213) { __label__ = 74; break; } else { __label__ = 73; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 73: // $if_then214
      var $199=$I203; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl215=1 << $199; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $200=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap216=(($200)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $201=HEAP32[(($smallmap216)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or217=$201 | $shl215; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap216)>>2)]=$or217; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 78; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 74: // $if_else218
      var $202=$B205; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd219=(($202+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $203=HEAP32[(($fd219)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $204=$203; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $205=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr220=(($205+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $206=HEAPU32[(($least_addr220)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp221=(($204)>>>0) >= (($206)>>>0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv222=(($cmp221)&1); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval223=(($conv222)==(1)); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool224=(($expval223)|0)!=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool224) { __label__ = 75; break; } else { __label__ = 76; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 75: // $if_then225
      var $207=$B205; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd226=(($207+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $208=HEAP32[(($fd226)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F209=$208; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 77; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 76: // $if_else227
      _abort(); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 77: // $if_end228
      __label__ = 78; break;
    case 78: // $if_end229
      var $209=$q; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $210=$B205; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd230=(($210+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd230)>>2)]=$209; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $211=$q; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $212=$F209; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk231=(($212+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk231)>>2)]=$211; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $213=$F209; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $214=$q; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd232=(($214+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd232)>>2)]=$213; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $215=$B205; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $216=$q; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk233=(($216+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk233)>>2)]=$215; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 106; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 79: // $if_else234
      var $217=$q; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $218=$217; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP235=$218; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $219=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr238=$219 >>> 8; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X=$shr238; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $220=$X; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp239=(($220)|0)==0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp239) { __label__ = 80; break; } else { __label__ = 81; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 80: // $if_then241
      $I237=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 85; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 81: // $if_else242
      var $221=$X; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp243=(($221)>>>0) > 65535; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp243) { __label__ = 82; break; } else { __label__ = 83; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 82: // $if_then245
      $I237=31; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 83: // $if_else246
      var $222=$X; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$222; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $223=$Y; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub247=(($223-256)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr248=$sub247 >>> 16; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and249=$shr248 & 8; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$and249; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $224=$N; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $225=$Y; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl250=$225 << $224; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl250; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub251=(($shl250-4096)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr252=$sub251 >>> 16; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and253=$shr252 & 4; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and253; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $226=$K; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $227=$N; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add254=(($227+$226)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add254; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $228=$K; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $229=$Y; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl255=$229 << $228; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl255; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub256=(($shl255-16384)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr257=$sub256 >>> 16; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and258=$shr257 & 2; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and258; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $230=$N; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add259=(($230+$and258)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add259; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $231=$N; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub260=((14-$231)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $232=$K; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $233=$Y; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl261=$233 << $232; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl261; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr262=$shl261 >>> 15; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add263=(($sub260+$shr262)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$add263; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $234=$K; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl264=$234 << 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $235=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $236=$K; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add265=(($236+7)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr266=$235 >>> (($add265)>>>0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and267=$shr266 & 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add268=(($shl264+$and267)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I237=$add268; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 84; break;
    case 84: // $if_end269
      __label__ = 85; break;
    case 85: // $if_end270
      var $237=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $238=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins271=(($238+304)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx272=(($treebins271+($237<<2))|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H236=$arrayidx272; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $239=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $240=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index273=(($240+28)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index273)>>2)]=$239; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $241=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child274=(($241+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx275=(($child274+4)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx275)>>2)]=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $242=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child276=(($242+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx277=(($child276)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx277)>>2)]=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $243=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap278=(($243+4)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $244=HEAP32[(($treemap278)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $245=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl279=1 << $245; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and280=$244 & $shl279; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool281=(($and280)|0)!=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool281) { __label__ = 87; break; } else { __label__ = 86; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 86: // $if_then282
      var $246=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl283=1 << $246; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $247=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap284=(($247+4)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $248=HEAP32[(($treemap284)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or285=$248 | $shl283; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap284)>>2)]=$or285; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $249=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $250=$H236; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($250)>>2)]=$249; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $251=$H236; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $252=$251; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $253=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent286=(($253+24)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent286)>>2)]=$252; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $254=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $255=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk287=(($255+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk287)>>2)]=$254; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $256=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd288=(($256+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd288)>>2)]=$254; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 105; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 87: // $if_else289
      var $257=$H236; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $258=HEAP32[(($257)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$258; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $259=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $260=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp291=(($260)|0)==31; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp291) { __label__ = 88; break; } else { __label__ = 89; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 88: // $cond_true293
      var $cond300 = 0;__label__ = 90; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 89: // $cond_false294
      var $261=$I237; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr295=$261 >>> 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add296=(($shr295+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub297=(($add296-2)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub298=((31-$sub297)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond300 = $sub298;__label__ = 90; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 90: // $cond_end299
      var $cond300; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl301=$259 << $cond300; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K290=$shl301; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 91; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 91: // $for_cond
      var $262=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head302=(($262+4)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $263=HEAP32[(($head302)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and303=$263 & -8; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $264=$qsize; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp304=(($and303)|0)!=(($264)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp304) { __label__ = 92; break; } else { __label__ = 98; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 92: // $if_then306
      var $265=$K290; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr307=$265 >>> 31; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and308=$shr307 & 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $266=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child309=(($266+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx310=(($child309+($and308<<2))|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx310; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $267=$K290; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl311=$267 << 1; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K290=$shl311; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $268=$C; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $269=HEAP32[(($268)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp312=(($269)|0)!=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp312) { __label__ = 93; break; } else { __label__ = 94; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 93: // $if_then314
      var $270=$C; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $271=HEAP32[(($270)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$271; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 97; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 94: // $if_else315
      var $272=$C; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $273=$272; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $274=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr316=(($274+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $275=HEAPU32[(($least_addr316)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp317=(($273)>>>0) >= (($275)>>>0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv318=(($cmp317)&1); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval319=(($conv318)==(1)); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool320=(($expval319)|0)!=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool320) { __label__ = 95; break; } else { __label__ = 96; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 95: // $if_then321
      var $276=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $277=$C; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($277)>>2)]=$276; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $278=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $279=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent322=(($279+24)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent322)>>2)]=$278; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $280=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $281=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk323=(($281+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk323)>>2)]=$280; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $282=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd324=(($282+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd324)>>2)]=$280; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 104; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 96: // $if_else325
      _abort(); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 97: // $if_end326
      __label__ = 103; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 98: // $if_else327
      var $283=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd329=(($283+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $284=HEAP32[(($fd329)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F328=$284; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $285=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $286=$285; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $287=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr330=(($287+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $288=HEAPU32[(($least_addr330)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp331=(($286)>>>0) >= (($288)>>>0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp331) { __label__ = 99; break; } else { var $293 = 0;__label__ = 100; break; } //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 99: // $land_rhs333
      var $289=$F328; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $290=$289; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $291=$m_addr; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr334=(($291+16)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $292=HEAPU32[(($least_addr334)>>2)]; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp335=(($290)>>>0) >= (($292)>>>0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $293 = $cmp335;__label__ = 100; break;
    case 100: // $land_end337
      var $293;
      var $land_ext338=(($293)&1);
      var $expval339=(($land_ext338)==(1));
      var $tobool340=(($expval339)|0)!=0;
      if ($tobool340) { __label__ = 101; break; } else { __label__ = 102; break; }
    case 101: // $if_then341
      var $294=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $295=$F328; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk342=(($295+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk342)>>2)]=$294; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $296=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd343=(($296+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd343)>>2)]=$294; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $297=$F328; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $298=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd344=(($298+8)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd344)>>2)]=$297; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $299=$T; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $300=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk345=(($300+12)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk345)>>2)]=$299; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $301=$TP235; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent346=(($301+24)|0); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent346)>>2)]=0; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 104; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 102: // $if_else347
      _abort(); //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 103: // $if_end348
      __label__ = 91; break; //@line 3811 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 104: // $for_end
      __label__ = 105; break;
    case 105: // $if_end349
      __label__ = 106; break;
    case 106: // $if_end350
      __label__ = 107; break;
    case 107: // $if_end351
      __label__ = 108; break;
    case 108: // $if_end352
      var $302=$p; //@line 3816 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $303=$302; //@line 3816 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr353=(($303+8)|0); //@line 3816 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      ;
      return $add_ptr353; //@line 3816 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_prepend_alloc["X"]=1;

function __ZSt15get_new_handlerv() {
  ;
  var __label__;

  var $0=(tempValue=HEAP32[((__ZL13__new_handler)>>2)],HEAP32[((__ZL13__new_handler)>>2)]=tempValue+0,tempValue); //@line 146 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  var $1=$0; //@line 146 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return $1; //@line 146 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZSt15set_new_handlerPFvvE($handler) {
  ;
  var __label__;

  var $handler_addr;
  $handler_addr=$handler;
  var $0=$handler_addr; //@line 140 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  var $1=$0; //@line 140 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  var $2=(tempValue=HEAP32[((__ZL13__new_handler)>>2)],HEAP32[((__ZL13__new_handler)>>2)]=$1,tempValue); //@line 140 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  var $3=$2; //@line 140 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return $3; //@line 140 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt9bad_allocC2Ev($this) {
  var __stackBase__  = STACKTOP; STACKTOP += 4; assert(STACKTOP % 4 == 0, "Stack is unaligned"); assert(STACKTOP < STACK_MAX, "Ran out of stack");
  var __label__;

  var $this_addr_i=__stackBase__;
  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1; //@line 150 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  var $1=$this_addr_i;
  HEAP32[(($this_addr_i)>>2)]=$0;
  var $this1_i=HEAP32[(($this_addr_i)>>2)];
  var $2=$this1_i; //@line 90 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/exception"
  HEAP32[(($2)>>2)]=((__ZTVSt9exception+8)|0); //@line 90 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/exception"
  var $3=$this_addr_i; //@line 90 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/exception"
  var $4=$this1; //@line 150 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  HEAP32[(($4)>>2)]=((__ZTVSt9bad_alloc+8)|0); //@line 150 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  STACKTOP = __stackBase__;
  return; //@line 151 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZdlPv($ptr) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $ptr_addr;
      $ptr_addr=$ptr;
      var $0=$ptr_addr; //@line 107 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $tobool=(($0)|0)!=0; //@line 107 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($tobool) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 107 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 1: // $if_then
      var $1=$ptr_addr; //@line 108 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      _free($1); //@line 108 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 2; break; //@line 108 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 2: // $if_end
      ;
      return; //@line 109 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZdlPvRKSt9nothrow_t($ptr, $0) {
  ;
  var __label__;

  var $ptr_addr;
  var $_addr;
  $ptr_addr=$ptr;
  $_addr=$0;
  var $1=$ptr_addr; //@line 115 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  __ZdlPv($1); //@line 115 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 116 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZdaPv($ptr) {
  ;
  var __label__;

  var $ptr_addr;
  $ptr_addr=$ptr;
  var $0=$ptr_addr; //@line 122 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  __ZdlPv($0); //@line 122 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 123 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZdaPvRKSt9nothrow_t($ptr, $0) {
  ;
  var __label__;

  var $ptr_addr;
  var $_addr;
  $ptr_addr=$ptr;
  $_addr=$0;
  var $1=$ptr_addr; //@line 129 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  __ZdaPv($1); //@line 129 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 130 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt9bad_allocD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  FUNCTION_TABLE[__ZNSt9bad_allocD1Ev]($this1); //@line 154 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  var $0=$this1; //@line 154 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  __ZdlPv($0); //@line 154 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  ;
  return; //@line 155 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
}


function __ZNSt9bad_allocD2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1; //@line 155 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  __ZNSt9exceptionD2Ev($0); //@line 155 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
  ;
  return; //@line 155 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function _add_segment($m, $tbase, $tsize, $mmapped) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $m_addr;
      var $tbase_addr;
      var $tsize_addr;
      var $mmapped_addr;
      var $old_top;
      var $oldsp;
      var $old_end;
      var $ssize;
      var $rawsp;
      var $offset;
      var $asp;
      var $csp;
      var $sp;
      var $ss;
      var $tnext;
      var $p;
      var $nfences;
      var $nextp;
      var $q;
      var $psize;
      var $tn;
      var $I;
      var $B;
      var $F;
      var $TP;
      var $H;
      var $I57;
      var $X;
      var $Y;
      var $N;
      var $K;
      var $T;
      var $K105;
      var $C;
      var $F144;
      $m_addr=$m;
      $tbase_addr=$tbase;
      $tsize_addr=$tsize;
      $mmapped_addr=$mmapped;
      var $0=$m_addr; //@line 3822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $top=(($0+24)|0); //@line 3822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $1=HEAP32[(($top)>>2)]; //@line 3822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $2=$1; //@line 3822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $old_top=$2; //@line 3822 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $3=$m_addr; //@line 3823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $4=$old_top; //@line 3823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $call=_segment_holding($3, $4); //@line 3823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $oldsp=$call; //@line 3823 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $5=$oldsp; //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base=(($5)|0); //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $6=HEAP32[(($base)>>2)]; //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $7=$oldsp; //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size=(($7+4)|0); //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $8=HEAP32[(($size)>>2)]; //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr=(($6+$8)|0); //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $old_end=$add_ptr; //@line 3824 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $ssize=24; //@line 3825 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $9=$old_end; //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $10=$ssize; //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add=(($10+16)|0); //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add1=(($add+7)|0); //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $idx_neg=(((-$add1))|0); //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr2=(($9+$idx_neg)|0); //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $rawsp=$add_ptr2; //@line 3826 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $11=$rawsp; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr3=(($11+8)|0); //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $12=$add_ptr3; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and=$12 & 7; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp=(($and)|0)==0; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 1: // $cond_true
      var $cond = 0;__label__ = 3; break; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 2: // $cond_false
      var $13=$rawsp; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr4=(($13+8)|0); //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $14=$add_ptr4; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and5=$14 & 7; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub=((8-$and5)|0); //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and6=$sub & 7; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond = $and6;__label__ = 3; break; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 3: // $cond_end
      var $cond; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $offset=$cond; //@line 3827 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $15=$rawsp; //@line 3828 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $16=$offset; //@line 3828 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr7=(($15+$16)|0); //@line 3828 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $asp=$add_ptr7; //@line 3828 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $17=$asp; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $18=$old_top; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr8=(($18+16)|0); //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp9=(($17)>>>0) < (($add_ptr8)>>>0); //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp9) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 4: // $cond_true10
      var $19=$old_top; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond13 = $19;__label__ = 6; break; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 5: // $cond_false11
      var $20=$asp; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond13 = $20;__label__ = 6; break; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 6: // $cond_end12
      var $cond13; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $csp=$cond13; //@line 3829 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $21=$csp; //@line 3830 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $22=$21; //@line 3830 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $sp=$22; //@line 3830 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $23=$sp; //@line 3831 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $24=$23; //@line 3831 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr14=(($24+8)|0); //@line 3831 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $25=$add_ptr14; //@line 3831 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $ss=$25; //@line 3831 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $26=$sp; //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $27=$26; //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $28=$ssize; //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr15=(($27+$28)|0); //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $29=$add_ptr15; //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tnext=$29; //@line 3832 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $30=$tnext; //@line 3833 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$30; //@line 3833 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nfences=0; //@line 3834 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $31=$m_addr; //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $32=$tbase_addr; //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $33=$32; //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $34=$tsize_addr; //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub16=(($34-40)|0); //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      _init_top($31, $33, $sub16); //@line 3837 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $35=$ssize; //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or=$35 | 1; //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or17=$or | 2; //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $36=$sp; //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head=(($36+4)|0); //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head)>>2)]=$or17; //@line 3841 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $37=$ss; //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $38=$m_addr; //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg=(($38+444)|0); //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $39=$37; //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $40=$seg; //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      assert(16 % 1 === 0, 'memcpy given ' + 16 + ' bytes to copy. Problem with quantum=1 corrections perhaps?');HEAP32[(($39)>>2)]=HEAP32[(($40)>>2)];HEAP32[(($39+4)>>2)]=HEAP32[(($40+4)>>2)];HEAP32[(($39+8)>>2)]=HEAP32[(($40+8)>>2)];HEAP32[(($39+12)>>2)]=HEAP32[(($40+12)>>2)]; //@line 3842 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $41=$tbase_addr; //@line 3843 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $42=$m_addr; //@line 3843 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg18=(($42+444)|0); //@line 3843 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $base19=(($seg18)|0); //@line 3843 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($base19)>>2)]=$41; //@line 3843 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $43=$tsize_addr; //@line 3844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $44=$m_addr; //@line 3844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg20=(($44+444)|0); //@line 3844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $size21=(($seg20+4)|0); //@line 3844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($size21)>>2)]=$43; //@line 3844 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $45=$mmapped_addr; //@line 3845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $46=$m_addr; //@line 3845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg22=(($46+444)|0); //@line 3845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sflags=(($seg22+12)|0); //@line 3845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($sflags)>>2)]=$45; //@line 3845 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $47=$ss; //@line 3846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $48=$m_addr; //@line 3846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $seg23=(($48+444)|0); //@line 3846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $next=(($seg23+8)|0); //@line 3846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($next)>>2)]=$47; //@line 3846 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 7; break; //@line 3849 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 7: // $for_cond
      var $49=$p; //@line 3850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $50=$49; //@line 3850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr24=(($50+4)|0); //@line 3850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $51=$add_ptr24; //@line 3850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nextp=$51; //@line 3850 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $52=$p; //@line 3851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head25=(($52+4)|0); //@line 3851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head25)>>2)]=7; //@line 3851 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $53=$nfences; //@line 3852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $inc=(($53+1)|0); //@line 3852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $nfences=$inc; //@line 3852 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $54=$nextp; //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head26=(($54+4)|0); //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $55=$head26; //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $56=$old_end; //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp27=(($55)>>>0) < (($56)>>>0); //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp27) { __label__ = 8; break; } else { __label__ = 9; break; } //@line 3853 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 8: // $if_then
      var $57=$nextp; //@line 3854 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $p=$57; //@line 3854 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 10; break; //@line 3854 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 9: // $if_else
      __label__ = 11; break; //@line 3856 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 10: // $if_end
      __label__ = 7; break; //@line 3857 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 11: // $for_end
      var $58=$csp; //@line 3861 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $59=$old_top; //@line 3861 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp28=(($58)|0)!=(($59)|0); //@line 3861 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp28) { __label__ = 12; break; } else { __label__ = 48; break; } //@line 3861 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 12: // $if_then29
      var $60=$old_top; //@line 3862 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $61=$60; //@line 3862 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $q=$61; //@line 3862 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $62=$csp; //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $63=$old_top; //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_lhs_cast=$62; //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_rhs_cast=$63; //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub_ptr_sub=(($sub_ptr_lhs_cast-$sub_ptr_rhs_cast)|0); //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $psize=$sub_ptr_sub; //@line 3863 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $64=$q; //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $65=$64; //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $66=$psize; //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr30=(($65+$66)|0); //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $67=$add_ptr30; //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $tn=$67; //@line 3864 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $68=$tn; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head31=(($68+4)|0); //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $69=HEAP32[(($head31)>>2)]; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and32=$69 & -2; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head31)>>2)]=$and32; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $70=$psize; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or33=$70 | 1; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $71=$q; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head34=(($71+4)|0); //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($head34)>>2)]=$or33; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $72=$psize; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $73=$q; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $74=$73; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $75=$psize; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add_ptr35=(($74+$75)|0); //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $76=$add_ptr35; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $prev_foot=(($76)|0); //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($prev_foot)>>2)]=$72; //@line 3865 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $77=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr=$77 >>> 3; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp36=(($shr)>>>0) < 32; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp36) { __label__ = 13; break; } else { __label__ = 20; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 13: // $if_then37
      var $78=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr38=$78 >>> 3; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I=$shr38; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $79=$I; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl=$79 << 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $80=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallbins=(($80+40)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx=(($smallbins+($shl<<2))|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $81=$arrayidx; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $82=$81; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $B=$82; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $83=$B; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$83; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $84=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap=(($84)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $85=HEAP32[(($smallmap)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $86=$I; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl39=1 << $86; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and40=$85 & $shl39; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool=(($and40)|0)!=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool) { __label__ = 15; break; } else { __label__ = 14; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 14: // $if_then41
      var $87=$I; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl42=1 << $87; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $88=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $smallmap43=(($88)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $89=HEAP32[(($smallmap43)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or44=$89 | $shl42; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($smallmap43)>>2)]=$or44; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 19; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 15: // $if_else45
      var $90=$B; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd=(($90+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $91=HEAP32[(($fd)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $92=$91; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $93=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr=(($93+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $94=HEAPU32[(($least_addr)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp46=(($92)>>>0) >= (($94)>>>0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv=(($cmp46)&1); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval=(($conv)==(1)); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool47=(($expval)|0)!=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool47) { __label__ = 16; break; } else { __label__ = 17; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 16: // $if_then48
      var $95=$B; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd49=(($95+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $96=HEAP32[(($fd49)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F=$96; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 18; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 17: // $if_else50
      _abort(); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 18: // $if_end51
      __label__ = 19; break;
    case 19: // $if_end52
      var $97=$q; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $98=$B; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd53=(($98+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd53)>>2)]=$97; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $99=$q; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $100=$F; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk=(($100+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk)>>2)]=$99; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $101=$F; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $102=$q; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd54=(($102+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd54)>>2)]=$101; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $103=$B; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $104=$q; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk55=(($104+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk55)>>2)]=$103; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 47; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 20: // $if_else56
      var $105=$q; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $106=$105; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $TP=$106; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $107=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr58=$107 >>> 8; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $X=$shr58; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $108=$X; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp59=(($108)|0)==0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp59) { __label__ = 21; break; } else { __label__ = 22; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 21: // $if_then61
      $I57=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 26; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 22: // $if_else62
      var $109=$X; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp63=(($109)>>>0) > 65535; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp63) { __label__ = 23; break; } else { __label__ = 24; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 23: // $if_then65
      $I57=31; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 24: // $if_else66
      var $110=$X; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$110; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $111=$Y; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub67=(($111-256)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr68=$sub67 >>> 16; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and69=$shr68 & 8; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$and69; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $112=$N; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $113=$Y; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl70=$113 << $112; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl70; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub71=(($shl70-4096)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr72=$sub71 >>> 16; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and73=$shr72 & 4; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and73; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $114=$K; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $115=$N; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add74=(($115+$114)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add74; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $116=$K; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $117=$Y; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl75=$117 << $116; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl75; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub76=(($shl75-16384)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr77=$sub76 >>> 16; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and78=$shr77 & 2; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$and78; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $118=$N; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add79=(($118+$and78)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $N=$add79; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $119=$N; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub80=((14-$119)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $120=$K; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $121=$Y; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl81=$121 << $120; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $Y=$shl81; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr82=$shl81 >>> 15; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add83=(($sub80+$shr82)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K=$add83; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $122=$K; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl84=$122 << 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $123=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $124=$K; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add85=(($124+7)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr86=$123 >>> (($add85)>>>0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and87=$shr86 & 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add88=(($shl84+$and87)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $I57=$add88; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 25; break;
    case 25: // $if_end89
      __label__ = 26; break;
    case 26: // $if_end90
      var $125=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $126=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treebins=(($126+304)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx91=(($treebins+($125<<2))|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $H=$arrayidx91; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $127=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $128=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $index=(($128+28)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($index)>>2)]=$127; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $129=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child=(($129+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx92=(($child+4)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx92)>>2)]=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $130=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child93=(($130+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx94=(($child93)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($arrayidx94)>>2)]=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $131=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap=(($131+4)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $132=HEAP32[(($treemap)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $133=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl95=1 << $133; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and96=$132 & $shl95; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool97=(($and96)|0)!=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool97) { __label__ = 28; break; } else { __label__ = 27; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 27: // $if_then98
      var $134=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl99=1 << $134; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $135=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $treemap100=(($135+4)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $136=HEAP32[(($treemap100)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $or101=$136 | $shl99; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($treemap100)>>2)]=$or101; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $137=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $138=$H; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($138)>>2)]=$137; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $139=$H; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $140=$139; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $141=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent=(($141+24)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent)>>2)]=$140; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $142=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $143=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk102=(($143+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk102)>>2)]=$142; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $144=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd103=(($144+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd103)>>2)]=$142; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 46; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 28: // $if_else104
      var $145=$H; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $146=HEAP32[(($145)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$146; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $147=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $148=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp106=(($148)|0)==31; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp106) { __label__ = 29; break; } else { __label__ = 30; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 29: // $cond_true108
      var $cond115 = 0;__label__ = 31; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 30: // $cond_false109
      var $149=$I57; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr110=$149 >>> 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $add111=(($shr110+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub112=(($add111-2)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $sub113=((31-$sub112)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cond115 = $sub113;__label__ = 31; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 31: // $cond_end114
      var $cond115; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl116=$147 << $cond115; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K105=$shl116; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 32; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 32: // $for_cond117
      var $150=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $head118=(($150+4)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $151=HEAP32[(($head118)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and119=$151 & -8; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $152=$psize; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp120=(($and119)|0)!=(($152)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp120) { __label__ = 33; break; } else { __label__ = 39; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 33: // $if_then122
      var $153=$K105; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shr123=$153 >>> 31; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $and124=$shr123 & 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $154=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $child125=(($154+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $arrayidx126=(($child125+($and124<<2))|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $C=$arrayidx126; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $155=$K105; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $shl127=$155 << 1; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $K105=$shl127; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $156=$C; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $157=HEAP32[(($156)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp128=(($157)|0)!=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp128) { __label__ = 34; break; } else { __label__ = 35; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 34: // $if_then130
      var $158=$C; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $159=HEAP32[(($158)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $T=$159; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 38; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 35: // $if_else131
      var $160=$C; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $161=$160; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $162=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr132=(($162+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $163=HEAPU32[(($least_addr132)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp133=(($161)>>>0) >= (($163)>>>0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $conv134=(($cmp133)&1); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $expval135=(($conv134)==(1)); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $tobool136=(($expval135)|0)!=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($tobool136) { __label__ = 36; break; } else { __label__ = 37; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 36: // $if_then137
      var $164=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $165=$C; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($165)>>2)]=$164; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $166=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $167=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent138=(($167+24)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent138)>>2)]=$166; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $168=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $169=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk139=(($169+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk139)>>2)]=$168; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $170=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd140=(($170+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd140)>>2)]=$168; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 37: // $if_else141
      _abort(); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 38: // $if_end142
      __label__ = 44; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 39: // $if_else143
      var $171=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd145=(($171+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $172=HEAP32[(($fd145)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      $F144=$172; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $173=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $174=$173; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $175=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr146=(($175+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $176=HEAPU32[(($least_addr146)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp147=(($174)>>>0) >= (($176)>>>0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      if ($cmp147) { __label__ = 40; break; } else { var $181 = 0;__label__ = 41; break; } //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 40: // $land_rhs
      var $177=$F144; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $178=$177; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $179=$m_addr; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $least_addr149=(($179+16)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $180=HEAPU32[(($least_addr149)>>2)]; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $cmp150=(($178)>>>0) >= (($180)>>>0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $181 = $cmp150;__label__ = 41; break;
    case 41: // $land_end
      var $181;
      var $land_ext=(($181)&1);
      var $expval152=(($land_ext)==(1));
      var $tobool153=(($expval152)|0)!=0;
      if ($tobool153) { __label__ = 42; break; } else { __label__ = 43; break; }
    case 42: // $if_then154
      var $182=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $183=$F144; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk155=(($183+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk155)>>2)]=$182; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $184=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd156=(($184+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd156)>>2)]=$182; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $185=$F144; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $186=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $fd157=(($186+8)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($fd157)>>2)]=$185; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $187=$T; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $188=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $bk158=(($188+12)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($bk158)>>2)]=$187; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $189=$TP; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      var $parent159=(($189+24)|0); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      HEAP32[(($parent159)>>2)]=0; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      __label__ = 45; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 43: // $if_else160
      _abort(); //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
      throw "Reached an unreachable!" //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 44: // $if_end161
      __label__ = 32; break; //@line 3866 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 45: // $for_end162
      __label__ = 46; break;
    case 46: // $if_end163
      __label__ = 47; break;
    case 47: // $if_end164
      __label__ = 48; break; //@line 3867 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    case 48: // $if_end165
      ;
      return; //@line 3870 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/dlmalloc.c"
    default: assert(0, "bad label: " + __label__);
  }
}
_add_segment["X"]=1;

function __Znwj($size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $size_addr;
      var $p;
      var $nh;
      var $exn_slot;
      var $ehselector_slot;
      $size_addr=$size;
      var $0=$size_addr; //@line 35 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $cmp=(($0)|0)==0; //@line 35 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($cmp) { __label__ = 1; break; } else { __label__ = 2; break; } //@line 35 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 1: // $if_then
      $size_addr=1; //@line 36 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 2; break; //@line 36 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 2: // $if_end
      __label__ = 3; break; //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 3: // $while_cond
      var $1=$size_addr; //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $call=_malloc($1); //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $p=$call; //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $cmp1=(($call)|0)==0; //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($cmp1) { __label__ = 4; break; } else { __label__ = 12; break; } //@line 38 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 4: // $while_body
      var $call2=__ZSt15get_new_handlerv(); //@line 42 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $nh=$call2; //@line 42 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $2=$nh; //@line 43 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $tobool=(($2)|0)!=0; //@line 43 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($tobool) { __label__ = 5; break; } else { __label__ = 10; break; } //@line 43 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 5: // $if_then3
      var $3=$nh; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return FUNCTION_TABLE[$3]() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 6; break; } else { __label__ = 7; break; }
    case 6: // $invoke_cont
      __label__ = 11; break; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 7: // $lpad
      var $4=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[]);
      var $5=$4.f0; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$5; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $6=$4.f1; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$6; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 8; break; //@line 44 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 8: // $filter_dispatch
      var $sel=$ehselector_slot; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $ehspec_fails=(($sel)|0) < 0; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($ehspec_fails) { __label__ = 9; break; } else { __label__ = 13; break; } //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 9: // $ehspec_unexpected
      var $exn=$exn_slot; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($exn); //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 10: // $if_else
      var $exception=___cxa_allocate_exception(4); //@line 47 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $7=$exception; //@line 47 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      FUNCTION_TABLE[__ZNSt9bad_allocC1Ev]($7); //@line 47 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_throw($exception, __ZTISt9bad_alloc, 6) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 14; break; } else { __label__ = 7; break; }
    case 11: // $if_end4
      __label__ = 3; break; //@line 51 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 12: // $while_end
      var $8=$p; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $8; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 13: // $eh_resume
      var $exn5=$exn_slot; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $exn6=$exn_slot; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $sel7=$ehselector_slot; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $lpad_val=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $exn6, tempValue); //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $lpad_val8=($lpad_val.f1 = $sel7, $lpad_val); //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)]; //@line 52 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 14: // $unreachable
      throw "Reached an unreachable!"
    default: assert(0, "bad label: " + __label__);
  }
}
__Znwj["X"]=1;

function __ZnwjRKSt9nothrow_t($size, $0) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $size_addr;
      var $_addr;
      var $p;
      var $exn_slot;
      var $ehselector_slot;
      $size_addr=$size;
      $_addr=$0;
      $p=0; //@line 59 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $1=$size_addr; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $call=(function() { try { __THREW__ = false; return __Znwj($1) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 1; break; } else { __label__ = 2; break; };
    case 1: // $invoke_cont
      $p=$call; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 5; break; //@line 66 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 2: // $lpad
      var $2=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[0]);
      var $3=$2.f0; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$3; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $4=$2.f1; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$4; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 3; break; //@line 64 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 3: // $catch
      var $exn=$exn_slot; //@line 66 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $5=___cxa_begin_catch($exn); //@line 66 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $invoke_cont2
      __label__ = 5; break; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 5: // $try_cont
      var $6=$p; //@line 71 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $6; //@line 71 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 6: // $lpad1
      var $7=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[]);
      var $8=$7.f0; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$8; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $9=$7.f1; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$9; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 7; break; //@line 69 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 7: // $filter_dispatch
      var $exn3=$exn_slot; //@line 71 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($exn3); //@line 71 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 71 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __Znaj($size) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $size_addr;
      var $exn_slot;
      var $ehselector_slot;
      $size_addr=$size;
      var $0=$size_addr; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $call=(function() { try { __THREW__ = false; return __Znwj($0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 1; break; } else { __label__ = 2; break; };
    case 1: // $invoke_cont
      ;
      return $call; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 2: // $lpad
      var $1=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[]);
      var $2=$1.f0; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$2; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $3=$1.f1; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$3; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 3; break; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 3: // $filter_dispatch
      var $sel=$ehselector_slot; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $ehspec_fails=(($sel)|0) < 0; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      if ($ehspec_fails) { __label__ = 4; break; } else { __label__ = 5; break; } //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 4: // $ehspec_unexpected
      var $exn=$exn_slot; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($exn); //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 5: // $eh_resume
      var $exn1=$exn_slot; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $exn2=$exn_slot; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $sel3=$ehselector_slot; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $lpad_val=(tempValue = [0,0,0,0,0,0,0,0], tempValue.f0 = $exn2, tempValue); //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $lpad_val4=($lpad_val.f1 = $sel3, $lpad_val); //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      print("Resuming exception");throw HEAP32[((_llvm_eh_exception.buf)>>2)]; //@line 81 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZnajRKSt9nothrow_t($size, $nothrow) {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $size_addr;
      var $nothrow_addr;
      var $p;
      var $exn_slot;
      var $ehselector_slot;
      $size_addr=$size;
      $nothrow_addr=$nothrow;
      $p=0; //@line 88 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $0=$size_addr; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $call=(function() { try { __THREW__ = false; return __Znaj($0) } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 1; break; } else { __label__ = 2; break; };
    case 1: // $invoke_cont
      $p=$call; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 5; break; //@line 95 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 2: // $lpad
      var $1=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[0]);
      var $2=$1.f0; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$2; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $3=$1.f1; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$3; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 3; break; //@line 93 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 3: // $catch
      var $exn=$exn_slot; //@line 95 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $4=___cxa_begin_catch($exn); //@line 95 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      (function() { try { __THREW__ = false; return ___cxa_end_catch() } catch(e) { if (typeof e != "number") throw e; if (ABORT) throw e; __THREW__ = true; print("Exception: " + e + ", currently at: " + (new Error().stack)); return null } })(); if (!__THREW__) { __label__ = 4; break; } else { __label__ = 6; break; }
    case 4: // $invoke_cont2
      __label__ = 5; break; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 5: // $try_cont
      var $5=$p; //@line 100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ;
      return $5; //@line 100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 6: // $lpad1
      var $6=___cxa_find_matching_catch(HEAP32[((_llvm_eh_exception.buf)>>2)],HEAP32[((_llvm_eh_exception.buf+4)>>2)],[]);
      var $7=$6.f0; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $exn_slot=$7; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $8=$6.f1; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      $ehselector_slot=$8; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      __label__ = 7; break; //@line 98 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 7: // $filter_dispatch
      var $exn3=$exn_slot; //@line 100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_call_unexpected($exn3); //@line 100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 100 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


function __ZNKSt9bad_alloc4whatEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  ;
  return ((STRING_TABLE.__str315)|0); //@line 160 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNKSt20bad_array_new_length4whatEv($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  ;
  return ((STRING_TABLE.__str14)|0); //@line 174 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt20bad_array_new_lengthC2Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  var $0=$this1; //@line 164 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  __ZNSt9bad_allocC2Ev($0); //@line 164 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  var $1=$this1; //@line 164 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  HEAP32[(($1)>>2)]=((__ZTVSt20bad_array_new_length+8)|0); //@line 164 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  ;
  return; //@line 165 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
}


function __ZNSt20bad_array_new_lengthD0Ev($this) {
  ;
  var __label__;

  var $this_addr;
  $this_addr=$this;
  var $this1=$this_addr;
  FUNCTION_TABLE[__ZNSt20bad_array_new_lengthD1Ev]($this1); //@line 168 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  var $0=$this1; //@line 168 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  __ZdlPv($0); //@line 168 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
  ;
  return; //@line 169 "/media/data/unix/tools/emscripten/master/emscripten/system/include/libcxx/new"
}


function __ZSt17__throw_bad_allocv() {
  ;
  var __label__;
  __label__ = 0; 
  while(1) switch(__label__) {
    case 0: // $entry
      var $exception=___cxa_allocate_exception(4); //@line 181 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      var $0=$exception; //@line 181 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      FUNCTION_TABLE[__ZNSt9bad_allocC1Ev]($0); //@line 181 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      ___cxa_throw($exception, __ZTISt9bad_alloc, 6); //@line 181 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
      throw "Reached an unreachable!" //@line 181 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    case 1: // $return
      ;
      return; //@line 183 "/media/data/unix/tools/emscripten/master/emscripten/system/lib/libcxx/new.cpp"
    default: assert(0, "bad label: " + __label__);
  }
}


  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(Runtime.stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  
  function _memcpy(dest, src, num, align) {
      assert(num % 1 === 0, 'memcpy given ' + num + ' bytes to copy. Problem with quantum=1 corrections perhaps?');
      if (num >= 20 && src % 2 == dest % 2) {
        // This is unaligned, but quite large, and potentially alignable, so work hard to get to aligned settings
        if (src % 4 == dest % 4) {
          var stop = src + num;
          while (src % 4) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src4 = src >> 2, dest4 = dest >> 2, stop4 = stop >> 2;
          while (src4 < stop4) {
            HEAP32[dest4++] = HEAP32[src4++];
          }
          src = src4 << 2;
          dest = dest4 << 2;
          while (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        } else {
          var stop = src + num;
          if (src % 2) { // no need to check for stop, since we have large num
            HEAP8[dest++] = HEAP8[src++];
          }
          var src2 = src >> 1, dest2 = dest >> 1, stop2 = stop >> 1;
          while (src2 < stop2) {
            HEAP16[dest2++] = HEAP16[src2++];
          }
          src = src2 << 1;
          dest = dest2 << 1;
          if (src < stop) {
            HEAP8[dest++] = HEAP8[src++];
          }
        }
      } else {
        while (num--) {
          HEAP8[dest++] = HEAP8[src++];
        }
      }
    }var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      Runtime.stackRestore(ret);
    }

  
  function _memset(ptr, value, num, align) {
      // TODO: make these settings, and in memcpy, {{'s
      if (num >= 20) {
        // This is unaligned, but quite large, so work hard to get to aligned settings
        var stop = ptr + num;
        while (ptr % 4) { // no need to check for stop, since we have large num
          HEAP8[ptr++] = value;
        }
        if (value < 0) value += 256; // make it unsigned
        var ptr4 = ptr >> 2, stop4 = stop >> 2, value4 = value | (value << 8) | (value << 16) | (value << 24);
        while (ptr4 < stop4) {
          HEAP32[ptr4++] = value4;
        }
        ptr = ptr4 << 2;
        while (ptr < stop) {
          HEAP8[ptr++] = value;
        }
      } else {
        while (num--) {
          HEAP8[ptr++] = value;
        }
      }
    }var _llvm_memset_p0i8_i32=_memset;

  var _sqrt=Math.sqrt;

  var _fabs=Math.abs;

  var _acos=Math.acos;

  var _floor=Math.floor;

  
  
  
  var ERRNO_CODES={E2BIG:7,EACCES:13,EADDRINUSE:98,EADDRNOTAVAIL:99,EAFNOSUPPORT:97,EAGAIN:11,EALREADY:114,EBADF:9,EBADMSG:74,EBUSY:16,ECANCELED:125,ECHILD:10,ECONNABORTED:103,ECONNREFUSED:111,ECONNRESET:104,EDEADLK:35,EDESTADDRREQ:89,EDOM:33,EDQUOT:122,EEXIST:17,EFAULT:14,EFBIG:27,EHOSTUNREACH:113,EIDRM:43,EILSEQ:84,EINPROGRESS:115,EINTR:4,EINVAL:22,EIO:5,EISCONN:106,EISDIR:21,ELOOP:40,EMFILE:24,EMLINK:31,EMSGSIZE:90,EMULTIHOP:72,ENAMETOOLONG:36,ENETDOWN:100,ENETRESET:102,ENETUNREACH:101,ENFILE:23,ENOBUFS:105,ENODATA:61,ENODEV:19,ENOENT:2,ENOEXEC:8,ENOLCK:37,ENOLINK:67,ENOMEM:12,ENOMSG:42,ENOPROTOOPT:92,ENOSPC:28,ENOSR:63,ENOSTR:60,ENOSYS:38,ENOTCONN:107,ENOTDIR:20,ENOTEMPTY:39,ENOTRECOVERABLE:131,ENOTSOCK:88,ENOTSUP:95,ENOTTY:25,ENXIO:6,EOVERFLOW:75,EOWNERDEAD:130,EPERM:1,EPIPE:32,EPROTO:71,EPROTONOSUPPORT:93,EPROTOTYPE:91,ERANGE:34,EROFS:30,ESPIPE:29,ESRCH:3,ESTALE:116,ETIME:62,ETIMEDOUT:110,ETXTBSY:26,EWOULDBLOCK:11,EXDEV:18};
  
  function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      if (!___setErrNo.ret) ___setErrNo.ret = allocate([0], 'i32', ALLOC_STATIC);
      HEAP32[((___setErrNo.ret)>>2)]=value
      return value;
    }
  
  var _stdin=0;
  
  var _stdout=0;
  
  var _stderr=0;
  
  var __impure_ptr=0;var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              return FS.analyzePath([link].concat(path).join('/'),
                                    dontResolveLastLink, linksVisited + 1);
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
          return ret;
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
  
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
  
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
  
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = [];
          for (var i = 0; i < data.length; i++) dataArray.push(data.charCodeAt(i));
          data = dataArray;
        }
        var properties = {isDevice: false, contents: data};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        var properties = {isDevice: false, url: url};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          // Browser.
          // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
          var xhr = new XMLHttpRequest();
          xhr.open('GET', obj.url, false);
  
          // Some hints to the browser that we want binary data.
          if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
          if (xhr.overrideMimeType) {
            xhr.overrideMimeType('text/plain; charset=x-user-defined');
          }
  
          xhr.send(null);
          if (xhr.status != 200 && xhr.status != 0) success = false;
          if (xhr.response !== undefined) {
            obj.contents = new Uint8Array(xhr.response || []);
          } else {
            obj.contents = intArrayFromString(xhr.responseText || '', true);
          }
        } else if (typeof read !== 'undefined') {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(read(obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureRoot();
  
        // Default handlers.
        if (!input) input = function() {
          if (!input.cache || !input.cache.length) {
            var result;
            if (typeof window != 'undefined' &&
                typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
            }
            if (!result) result = '';
            input.cache = intArrayFromString(result + '\n', true);
          }
          return input.cache.shift();
        };
        if (!output) output = function(val) {
          if (val === null || val === '\n'.charCodeAt(0)) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(String.fromCharCode(val));
          }
        };
        if (!output.printer) output.printer = print;
        if (!output.buffer) output.buffer = [];
        if (!error) error = output;
  
        // Create the temporary folder.
        FS.createFolder('/', 'tmp', true, true);
  
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        FS.createDevice(devFolder, 'tty', input, output);
  
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        _stdin = allocate([1], 'void*', ALLOC_STATIC);
        _stdout = allocate([2], 'void*', ALLOC_STATIC);
        _stderr = allocate([3], 'void*', ALLOC_STATIC);
  
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
  
        // Newlib initialization
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        __impure_ptr = allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_STATIC) ], 'void*', ALLOC_STATIC);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr
        if (FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output('\n'.charCodeAt(0));
        if (FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output('\n'.charCodeAt(0));
      }};
  
  
  
  
  
  
  
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(buf+i)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(buf+i)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  
  function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = (tempDoubleI32[0]=HEAP32[((varargs+argIndex)>>2)],tempDoubleI32[1]=HEAP32[((varargs+argIndex+4)>>2)],tempDoubleF64[0]);
        } else if (type == 'i64') {
          ret = [HEAP32[((varargs+argIndex)>>2)],
                 HEAP32[((varargs+argIndex+4)>>2)]];
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[((varargs+argIndex)>>2)];
        }
        argIndex += Runtime.getNativeFieldSize(type);
        return ret;
      }
  
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[(textIndex+1)];
        if (curr == '%'.charCodeAt(0)) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case '+'.charCodeAt(0):
                flagAlwaysSigned = true;
                break;
              case '-'.charCodeAt(0):
                flagLeftAlign = true;
                break;
              case '#'.charCodeAt(0):
                flagAlternative = true;
                break;
              case '0'.charCodeAt(0):
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[(textIndex+1)];
          }
  
          // Handle width.
          var width = 0;
          if (next == '*'.charCodeAt(0)) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[(textIndex+1)];
          } else {
            while (next >= '0'.charCodeAt(0) && next <= '9'.charCodeAt(0)) {
              width = width * 10 + (next - '0'.charCodeAt(0));
              textIndex++;
              next = HEAP8[(textIndex+1)];
            }
          }
  
          // Handle precision.
          var precisionSet = false;
          if (next == '.'.charCodeAt(0)) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[(textIndex+1)];
            if (next == '*'.charCodeAt(0)) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[(textIndex+1)];
                if (precisionChr < '0'.charCodeAt(0) ||
                    precisionChr > '9'.charCodeAt(0)) break;
                precision = precision * 10 + (precisionChr - '0'.charCodeAt(0));
                textIndex++;
              }
            }
            next = HEAP8[(textIndex+1)];
          } else {
            var precision = 6; // Standard default.
          }
  
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'h'.charCodeAt(0)) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[(textIndex+2)];
              if (nextNext == 'l'.charCodeAt(0)) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[(textIndex+1)];
  
          // Handle type specifier.
          if (['d', 'i', 'u', 'o', 'x', 'X', 'p'].indexOf(String.fromCharCode(next)) != -1) {
            // Integer.
            var signed = next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0);
            argSize = argSize || 4;
            var currArg = getNextArg('i' + (argSize * 8));
            // Flatten i64-1 [low, high] into a (slightly rounded) double
            if (argSize == 8) {
              currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 'u'.charCodeAt(0));
            }
            // Truncate to requested size.
            if (argSize <= 4) {
              var limit = Math.pow(256, argSize) - 1;
              currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
            }
            // Format the number.
            var currAbsArg = Math.abs(currArg);
            var argText;
            var prefix = '';
            if (next == 'd'.charCodeAt(0) || next == 'i'.charCodeAt(0)) {
              argText = reSign(currArg, 8 * argSize, 1).toString(10);
            } else if (next == 'u'.charCodeAt(0)) {
              argText = unSign(currArg, 8 * argSize, 1).toString(10);
              currArg = Math.abs(currArg);
            } else if (next == 'o'.charCodeAt(0)) {
              argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
            } else if (next == 'x'.charCodeAt(0) || next == 'X'.charCodeAt(0)) {
              prefix = flagAlternative ? '0x' : '';
              if (currArg < 0) {
                // Represent negative numbers in hex as 2's complement.
                currArg = -currArg;
                argText = (currAbsArg - 1).toString(16);
                var buffer = [];
                for (var i = 0; i < argText.length; i++) {
                  buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                }
                argText = buffer.join('');
                while (argText.length < argSize * 2) argText = 'f' + argText;
              } else {
                argText = currAbsArg.toString(16);
              }
              if (next == 'X'.charCodeAt(0)) {
                prefix = prefix.toUpperCase();
                argText = argText.toUpperCase();
              }
            } else if (next == 'p'.charCodeAt(0)) {
              if (currAbsArg === 0) {
                argText = '(nil)';
              } else {
                prefix = '0x';
                argText = currAbsArg.toString(16);
              }
            }
            if (precisionSet) {
              while (argText.length < precision) {
                argText = '0' + argText;
              }
            }
  
            // Add sign if needed
            if (flagAlwaysSigned) {
              if (currArg < 0) {
                prefix = '-' + prefix;
              } else {
                prefix = '+' + prefix;
              }
            }
  
            // Add padding.
            while (prefix.length + argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad) {
                  argText = '0' + argText;
                } else {
                  prefix = ' ' + prefix;
                }
              }
            }
  
            // Insert the result into the buffer.
            argText = prefix + argText;
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (['f', 'F', 'e', 'E', 'g', 'G'].indexOf(String.fromCharCode(next)) != -1) {
            // Float.
            var currArg = getNextArg('double');
            var argText;
  
            if (isNaN(currArg)) {
              argText = 'nan';
              flagZeroPad = false;
            } else if (!isFinite(currArg)) {
              argText = (currArg < 0 ? '-' : '') + 'inf';
              flagZeroPad = false;
            } else {
              var isGeneral = false;
              var effectivePrecision = Math.min(precision, 20);
  
              // Convert g/G to f/F or e/E, as per:
              // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
              if (next == 'g'.charCodeAt(0) || next == 'G'.charCodeAt(0)) {
                isGeneral = true;
                precision = precision || 1;
                var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                if (precision > exponent && exponent >= -4) {
                  next = ((next == 'g'.charCodeAt(0)) ? 'f' : 'F').charCodeAt(0);
                  precision -= exponent + 1;
                } else {
                  next = ((next == 'g'.charCodeAt(0)) ? 'e' : 'E').charCodeAt(0);
                  precision--;
                }
                effectivePrecision = Math.min(precision, 20);
              }
  
              if (next == 'e'.charCodeAt(0) || next == 'E'.charCodeAt(0)) {
                argText = currArg.toExponential(effectivePrecision);
                // Make sure the exponent has at least 2 digits.
                if (/[eE][-+]\d$/.test(argText)) {
                  argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                }
              } else if (next == 'f'.charCodeAt(0) || next == 'F'.charCodeAt(0)) {
                argText = currArg.toFixed(effectivePrecision);
              }
  
              var parts = argText.split('e');
              if (isGeneral && !flagAlternative) {
                // Discard trailing zeros and periods.
                while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                       (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                  parts[0] = parts[0].slice(0, -1);
                }
              } else {
                // Make sure we have a period in alternative mode.
                if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                // Zero pad until required precision.
                while (precision > effectivePrecision++) parts[0] += '0';
              }
              argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
  
              // Capitalize 'E' if needed.
              if (next == 'E'.charCodeAt(0)) argText = argText.toUpperCase();
  
              // Add sign.
              if (flagAlwaysSigned && currArg >= 0) {
                argText = '+' + argText;
              }
            }
  
            // Add padding.
            while (argText.length < width) {
              if (flagLeftAlign) {
                argText += ' ';
              } else {
                if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                  argText = argText[0] + '0' + argText.slice(1);
                } else {
                  argText = (flagZeroPad ? '0' : ' ') + argText;
                }
              }
            }
  
            // Adjust case.
            if (next < 'a'.charCodeAt(0)) argText = argText.toUpperCase();
  
            // Insert the result into the buffer.
            argText.split('').forEach(function(chr) {
              ret.push(chr.charCodeAt(0));
            });
          } else if (next == 's'.charCodeAt(0)) {
            // String.
            var arg = getNextArg('i8*');
            var copiedString;
            if (arg) {
              copiedString = String_copy(arg);
              if (precisionSet && copiedString.length > precision) {
                copiedString = copiedString.slice(0, precision);
              }
            } else {
              copiedString = intArrayFromString('(null)', true);
            }
            if (!flagLeftAlign) {
              while (copiedString.length < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
            ret = ret.concat(copiedString);
            if (flagLeftAlign) {
              while (copiedString.length < width--) {
                ret.push(' '.charCodeAt(0));
              }
            }
          } else if (next == 'c'.charCodeAt(0)) {
            // Character.
            if (flagLeftAlign) ret.push(getNextArg('i8'));
            while (--width > 0) {
              ret.push(' '.charCodeAt(0));
            }
            if (!flagLeftAlign) ret.push(getNextArg('i8'));
          } else if (next == 'n'.charCodeAt(0)) {
            // Write the length written so far to the next parameter.
            var ptr = getNextArg('i32*');
            HEAP32[((ptr)>>2)]=ret.length
          } else if (next == '%'.charCodeAt(0)) {
            // Literal percent sign.
            ret.push(curr);
          } else {
            // Unknown specifiers remain untouched.
            for (var i = startTextIndex; i < textIndex + 2; i++) {
              ret.push(HEAP8[(i)]);
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }

  var _log=Math.log;

  var _exp=Math.exp;

  var _llvm_pow_f64=Math.pow;

  
  function _memmove(dest, src, num, align) {
      if (src < dest && dest < src + num) {
        // Copy backwards in a safe manner
        src += num;
        dest += num;
        while (num--) {
          dest--;
          src--;
          HEAP8[(dest)]=HEAP8[(src)];
        }
      } else {
        _memcpy(dest, src, num, align);
      }
    }
  var _llvm_memmove_p0i8_p0i8_i32=_memmove;

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
  
  
      exitRuntime();
      ABORT = true;
  
      throw 'exit(' + status + ') called, at ' + new Error().stack;
    }function _exit(status) {
      __exit(status);
    }
var _llvm_dbg_declare; // stub for _llvm_dbg_declare
var _llvm_expect_i32; // stub for _llvm_expect_i32

  function _abort(code) {
      ABORT = true;
      throw 'ABORT: ' + code + ', at ' + (new Error().stack);
    }

  
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }

  
  function ___errno_location() {
      return ___setErrNo.ret;
    }
  var ___errno=___errno_location;

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
  
      // We need to make sure no one else allocates unfreeable memory!
      // We must control this entirely. So we don't even need to do
      // unfreeable allocations - the HEAP is ours, from STATICTOP up.
      // TODO: We could in theory slice off the top of the HEAP when
      //       sbrk gets a negative increment in |bytes|...
      var self = _sbrk;
      if (!self.called) {
        STATICTOP = alignMemoryPage(STATICTOP); // make sure we start out aligned
        self.called = true;
      }
      var ret = STATICTOP;
      if (bytes != 0) Runtime.staticAlloc(bytes);
      return ret;  // Previous break location.
    }

  function ___gxx_personality_v0() {
    }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___cxa_find_matching_catch(thrown, throwntype, typeArray) {
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return { 'f0':thrown, 'f1':typeArray[i]};
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return {'f0':thrown,'f1':throwntype};
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      print('Compiled code throwing an exception, ' + [ptr,type,destructor] + ', at ' + new Error().stack);
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[((_llvm_eh_exception.buf+4)>>2)]=type
      HEAP32[((_llvm_eh_exception.buf+8)>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr;
    }

  function ___cxa_call_unexpected(exception) {
      ABORT = true;
      throw exception;
    }

  function ___cxa_begin_catch(ptr) {
      __ZSt18uncaught_exceptionv.uncaught_exception--;
      return ptr;
    }

  
  
  function ___cxa_free_exception(ptr) {
      return _free(ptr);
    }function ___cxa_end_catch() {
      if (___cxa_end_catch.rethrown) {
        ___cxa_end_catch.rethrown = false;
        return;
      }
      // Clear state flag.
      __THREW__ = false;
      // Clear type.
      HEAP32[((_llvm_eh_exception.buf+4)>>2)]=0
      // Call destructor if one is registered then clear it.
      var ptr = HEAP32[((_llvm_eh_exception.buf)>>2)];
      var destructor = HEAP32[((_llvm_eh_exception.buf+8)>>2)];
      if (destructor) {
        FUNCTION_TABLE[destructor](ptr);
        HEAP32[((_llvm_eh_exception.buf+8)>>2)]=0
      }
      // Free ptr if it isn't null.
      if (ptr) {
        ___cxa_free_exception(ptr);
        HEAP32[((_llvm_eh_exception.buf)>>2)]=0
      }
    }
var __ZNSt9exceptionD2Ev; // stub for __ZNSt9exceptionD2Ev

  function _llvm_lifetime_start() {}

  function _llvm_lifetime_end() {}




__ATINIT__.unshift({ func: function() { FS.ignorePermissions = false; if (!FS.init.initialized) FS.init() } });__ATEXIT__.push({ func: function() { FS.quit() } });
___setErrNo(0);
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);

// === Auto-generated postamble setup entry stuff ===

Module.callMain = function callMain(args) {
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_STATIC) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_STATIC));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_STATIC);

  return _main(argc, argv, 0);
}




var _highpass_Pcoef;
var _highpass_Zcoef;
var _shift_filt;





var __str1;


var __impure_ptr;

var _e_ratio_quant_bounds;
var _e_ratio_quant;
var _vbr_nb_thresh;
var _vbr_hb_thresh;
var _vbr_uhb_thresh;




















var _nb_mode;

var _speex_nb_mode;
var _nb_submode1;
var _nb_submode2;
var _nb_submode3;
var _nb_submode4;
var _nb_submode5;
var _nb_submode6;
var _nb_submode7;
var _nb_submode8;
var _split_cb_nb_ulbr;
var _ltp_params_nb;
var _split_cb_nb;
var _split_cb_sb;
var _ltp_params_med;
var _split_cb_nb_med;
var _ltp_params_lbr;
var _split_cb_nb_lbr;
var _ltp_params_vlbr;
var _split_cb_nb_vlbr;
var _speex_wb_mode;
var _speex_uwb_mode;
var _speex_mode_list;
var _sb_wb_mode;


var _sb_uwb_mode;

var _wb_submode1;

var _wb_submode2;
var _wb_submode3;
var _wb_submode4;
var _split_cb_high;
var _split_cb_high_lbr;
var _exc_gain_quant_scal3_bound;
var _exc_gain_quant_scal3;
var _exc_gain_quant_scal1_bound;
var _exc_gain_quant_scal1;




var _attenuation;
var _wb_skip_table;








var _h0;
var _fold_quant_bound;
var _gc_quant_bound;













var _lag_window;
var _lpc_window;
var __gm_;
var _mparams;



var __ZSt7nothrow;
var __ZL13__new_handler;
var __ZTVSt9bad_alloc;

var __ZTVSt20bad_array_new_length;

var __ZTVN10__cxxabiv120__si_class_type_infoE;

var __ZTISt9exception;
var __ZTISt9bad_alloc;

var __ZTISt20bad_array_new_length;
var __ZTVSt9exception;
var __ZNSt9bad_allocC1Ev;
var __ZNSt9bad_allocD1Ev;
var __ZNSt20bad_array_new_lengthC1Ev;
var __ZNSt20bad_array_new_lengthD1Ev;
var __ZNSt20bad_array_new_lengthD2Ev;
STRING_TABLE._exc_10_32_table=allocate([7,17,17,27,25,22,12,4,253,0,28,220,39,232,241,3,247,15,251,10,31,228,11,31,235,9,245,245,254,249,231,14,234,31,4,242,19,244,14,251,4,249,4,251,9,0,254,42,209,240,1,8,0,9,23,199,0,28,245,6,225,55,211,3,251,4,2,254,4,249,253,6,254,7,253,12,5,8,54,246,8,249,248,232,231,229,242,251,8,5,44,23,5,247,245,245,243,247,244,248,227,248,234,6,241,3,244,255,251,253,34,255,29,240,17,252,12,2,1,4,254,252,2,255,11,253,204,28,30,247,224,25,44,236,232,4,6,255,0,0,0,0,0,0,0,0,0,0,0,0,231,246,22,29,13,243,234,243,252,0,252,240,10,15,220,232,28,25,255,253,66,223,245,241,6,0,3,4,254,5,24,236,209,29,19,254,252,255,0,255,254,3,1,8,245,5,5,199,28,28,0,240,4,252,12,250,255,2,236,61,247,24,234,214,29,6,17,8,4,2,191,15,8,10,5,6,5,3,2,254,253,5,247,4,251,23,13,23,253,193,3,251,252,250,0,253,23,220,210,9,5,5,8,4,9,251,1,253,10,1,250,10,245,24,209,31,22,244,14,246,6,11,249,249,7,225,51,244,250,7,6,239,9,245,236,52,237,3,250,250,248,251,23,215,37,1,235,10,242,8,7,5,241,241,23,39,230,223,7,2,224,226,235,248,4,12,17,15,14,11] /* \07\11\11\1B\19\16\0 */, "i8", ALLOC_STATIC);
STRING_TABLE._exc_8_128_table=allocate([242,9,13,224,2,246,31,246,248,248,6,252,255,10,192,23,6,20,13,6,8,234,16,34,7,42,207,228,5,26,4,241,41,34,41,32,33,24,23,14,8,40,34,4,232,215,237,241,13,243,33,202,24,27,212,33,27,241,241,24,237,14,220,14,247,24,244,252,37,251,16,222,5,10,33,241,202,240,12,25,12,1,2,0,3,255,252,252,11,2,200,54,27,236,13,250,210,215,223,245,251,7,12,14,242,251,8,20,6,3,4,248,251,214,11,8,242,25,254,2,13,11,234,39,247,9,5,211,247,7,247,12,249,34,239,154,7,2,214,18,35,247,222,11,251,254,3,22,46,204,231,247,162,8,11,251,251,251,4,249,221,249,54,5,224,3,24,247,234,8,65,37,255,244,233,250,247,228,55,223,14,253,2,18,196,41,239,8,240,17,245,0,245,29,228,37,9,203,33,242,247,7,231,249,245,26,224,248,24,235,22,237,19,246,29,242,0,0,0,0,0,0,0,0,251,204,10,41,6,226,252,16,32,22,229,234,32,253,228,253,3,221,6,17,23,21,8,2,4,211,239,14,23,252,225,245,253,14,1,19,245,2,61,248,9,244,7,246,12,253,232,99,208,23,50,219,251,233,0,8,242,35,192,251,46,231,13,255,207,237,241,9,34,50,25,11,250,247,240,236,224,223,224,229,10,248,12,241,56,242,224,33,3,247,1,65,247,247,246,254,250,233,9,17,3,228,13,224,4,254,246,4,240,76,12,204,6,13,33,250,4,242,247,253,1,241,240,28,1,241,11,16,9,4,235,219,216,250,22,12,241,233,242,239,240,247,246,247,13,217,41,5,247,16,218,25,46,209,4,49,242,17,254,6,18,5,250,223,234,44,50,254,1,3,250,7,7,253,235,38,238,34,242,215,60,243,6,16,232,35,19,243,220,24,3,239,242,246,36,44,212,227,253,3,202,248,12,55,26,4,254,251,2,245,22,233,2,22,1,231,217,66,207,21,248,254,10,242,196,25,6,10,27,231,16,5,254,247,26,243,236,58,254,7,52,247,2,5,252,241,23,255,218,23,8,27,250,0,229,249,39,246,242,26,11,211,244,9,251,34,4,221,10,43,234,245,56,249,20,1,10,1,230,9,94,11,229,242,243,1,245,0,14,251,250,246,252,241,248,215,21,251,1,228,248,22,247,33,233,252,252,244,39,4,249,3,196,80,8,239,2,250,12,251,1,9,15,27,31,30,27,23,61,47,26,10,251,248,244,243,5,238,25,241,252,241,245,12,254,254,240,254,250,24,12,11,252,9,1,247,14,211,57,12,20,221,26,11,192,32,246,246,42,252,247,240,32,24,7,10,52,245,199,29,0,8,0,250,17,239,200,216,7,20,18,12,250,16,5,7,255,9,1,10,29,12,16,13,254,23,7,9,253,252,251,18,192,13,55,231,9,247,24,14,231,15,245,216,226,37,1,237,22,251,225,13,254,0,7,252,16,189,12,66,220,24,248,18,241,233,19,0,211,249,4,3,243,13,35,5,13,33,10,27,23,0,249,245,43,182,36,244,2,5,248,6,223,11,240,242,251,249,253,17,222,27,240,11,247,15,33,225,8,240,7,250,249,63,201,239,11,255,20,210,34,226,6,9,19,28,247,5,232,248,233,254,31,237,240,251,241,238,0,26,18,37,251,241,254,17,5,229,21,223,44,12,229,247,17,11,25,235,225,249,13,33,248,231,249,7,246,4,250,247,48,174,233,248,6,11,233,3,253,49,227,25,31,4,14,16,9,252,238,10,230,3,5,212,247,9,209,201,15,9,28,1,4,253,46,6,250,218,227,225,241,250,3,0,14,250,8,202,206,33,251,1,242,33,208,26,252,251,253,251,253,251,228,234,77,55,255,2,10,10,247,242,190,207,11,220,250,236,10,246,16,12,4,255,240,45,212,206,31,254,25,42,23,224,234,0,11,20,216,221,216,220,224,230,235,243,52,234,6,232,236,17,251,248,36,231,245,21,230,6,34,248,7,20,253,5,231,248,18,251,247,252,1,247,20,20,39,48,232,9,5,191,22,29,4,3,213,245,32,250,9,19,229,246,209,242,24,10,249,220,249,255,252,251,251,16,53,25,230,227,252,244,45,198,222,33,251,2,255,27,208,31,241,22,251,4,7,7,231,253,11,234,16,244,8,253,7,245,45,14,183,237,56,210,24,236,28,244,254,255,220,253,223,19,250,7,2,241,5,225,211,8,35,13,20,0,247,48,243,213,253,243,2,251,72,188,229,2,1,254,249,5,36,33,216,244,252,251,23,19] /* \F2\09\0D\E0\02\F6\1 */, "i8", ALLOC_STATIC);
_highpass_Pcoef=allocate([1, 0, 0, 0, -1.9112000465393066, 0, 0, 0, 0.9149799942970276, 0, 0, 0, 1, 0, 0, 0, -1.9268300533294678, 0, 0, 0, 0.9307100176811218, 0, 0, 0, 1, 0, 0, 0, -1.9333800077438354, 0, 0, 0, 0.9355300068855286, 0, 0, 0, 1, 0, 0, 0, -1.9722599983215332, 0, 0, 0, 0.9733200073242188, 0, 0, 0, 1, 0, 0, 0, -1.3700000047683716, 0, 0, 0, 0.39899998903274536, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_highpass_Zcoef=allocate([0.9565399885177612, 0, 0, 0, -1.9130899906158447, 0, 0, 0, 0.9565399885177612, 0, 0, 0, 0.964460015296936, 0, 0, 0, -1.9287899732589722, 0, 0, 0, 0.964460015296936, 0, 0, 0, 0.9672300219535828, 0, 0, 0, -1.9344500303268433, 0, 0, 0, 0.9672300219535828, 0, 0, 0, 0.9864500164985657, 0, 0, 0, -1.9727699756622314, 0, 0, 0, 0.9864500164985657, 0, 0, 0, 0.8799999952316284, 0, 0, 0, -1.7599999904632568, 0, 0, 0, 0.8799999952316284, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_shift_filt=allocate([-0.011915000155568123, 0, 0, 0, 0.046994999051094055, 0, 0, 0, -0.15237300097942352, 0, 0, 0, 0.6141080260276794, 0, 0, 0, 0.6141080260276794, 0, 0, 0, -0.15237300097942352, 0, 0, 0, 0.046994999051094055, 0, 0, 0, -0.03248549997806549, 0, 0, 0, 0.08597680181264877, 0, 0, 0, -0.20429860055446625, 0, 0, 0, 0.9640297293663025, 0, 0, 0, 0.20864200592041016, 0, 0, 0, -0.03020540066063404, 0, 0, 0, -0.006364599801599979, 0, 0, 0, -0.006364599801599979, 0, 0, 0, -0.03020540066063404, 0, 0, 0, 0.20864200592041016, 0, 0, 0, 0.9640297293663025, 0, 0, 0, -0.20429860055446625, 0, 0, 0, 0.08597680181264877, 0, 0, 0, -0.03248549997806549, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
STRING_TABLE._gain_cdbk_nb=allocate([224,224,224,0,228,189,251,33,214,250,224,18,199,246,202,35,240,27,215,42,19,237,216,36,211,24,235,40,248,242,238,28,1,14,198,53,238,168,217,39,218,21,238,37,237,20,213,38,10,17,208,54,204,198,243,33,212,255,245,32,244,245,222,22,14,0,210,46,219,221,222,5,231,44,226,43,6,252,193,49,225,43,215,43,233,30,213,41,213,26,242,44,223,1,243,27,243,18,219,37,210,183,211,34,220,24,231,34,220,245,236,19,231,12,238,33,220,187,197,34,211,6,8,46,234,242,232,18,255,13,212,44,217,208,230,15,224,31,219,34,223,15,210,31,232,30,220,37,215,31,233,41,206,22,252,50,234,2,235,28,239,30,222,40,249,196,228,29,218,42,228,42,212,245,21,43,240,8,212,34,217,201,213,21,245,221,26,41,247,0,222,29,248,121,175,113,7,240,234,33,219,33,225,36,229,249,220,17,222,70,199,65,219,245,208,21,216,17,255,44,223,6,250,33,247,0,236,34,235,69,223,57,227,33,225,35,201,12,255,49,223,27,234,35,206,223,209,17,206,54,51,94,255,251,212,35,252,22,216,45,217,190,231,24,223,1,230,20,232,233,231,12,245,21,211,44,231,211,237,17,213,105,240,82,5,235,1,41,240,11,223,30,243,157,252,57,219,33,241,44,231,37,193,54,220,24,225,31,203,200,218,26,215,252,4,37,223,13,226,24,49,52,162,114,251,226,241,23,1,38,216,56,233,12,220,29,239,40,209,51,219,215,217,11,207,34,0,58,238,249,252,34,240,17,229,35,30,5,194,65,4,48,188,76,213,11,245,38,238,19,241,41,233,194,217,23,214,10,254,41,235,243,243,25,247,13,209,42,233,194,232,24,212,60,235,58,238,253,204,32,234,22,220,34,181,57,16,90,237,3,10,45,227,23,218,32,251,194,205,38,205,40,238,53,214,13,232,32,222,14,236,30,200,181,230,37,230,32,15,59,230,17,227,29,249,28,204,53,244,226,5,30,251,208,251,35,2,2,213,40,21,16,16,75,231,211,224,10,213,18,246,42,9,0,255,52,255,7,226,36,19,208,252,48,228,25,227,32,234,0,225,22,224,17,246,36,192,215,194,36,204,15,16,58,226,234,224,6,249,9,218,36] /* \E0\E0\E0\00\E4\BD\F */, "i8", ALLOC_STATIC);
STRING_TABLE._hexc_table=allocate([232,21,236,5,251,249,14,246,2,229,16,236,0,224,26,19,8,245,215,31,28,229,224,34,42,34,239,22,246,13,227,18,244,230,232,11,22,5,251,251,54,188,213,57,231,24,4,4,26,248,244,239,54,30,211,1,10,241,18,215,11,68,189,37,240,232,240,38,234,6,227,30,66,229,5,7,240,13,2,244,249,253,236,36,4,228,9,3,32,48,26,39,3,0,7,235,243,5,174,249,73,236,34,247,251,1,255,10,251,246,255,9,1,247,10,0,242,11,255,254,255,11,20,96,175,234,244,247,198,9,24,226,26,221,27,244,13,238,56,197,15,249,23,241,255,6,231,14,234,236,47,245,16,2,38,233,237,226,247,40,245,5,4,250,8,26,235,245,127,4,1,6,247,2,249,254,253,7,251,10,237,7,150,91,253,9,252,21,248,26,176,8,1,254,246,239,239,229,32,71,6,227,11,233,54,218,29,234,39,87,225,244,236,3,254,254,2,20,0,255,221,27,9,250,244,3,244,250,13,1,14,234,197,241,239,231,13,249,7,3,0,1,249,6,253,61,219,233,233,227,38,225,27,1,248,2,229,23,230,36,222,5,24,232,250,7,3,197,78,194,44,240,1,6,0,17,8,45,0,146,6,14,254,32,179,200,62,253,3,243,4,240,102,241,220,255,9,143,6,23,0,9,9,5,248,255,242,5,244,121,203,229,248,247,22,243,3,2,253,1,254,185,95,38,237,15,240,251,71,10,2,224,243,251,15,255,254,242,171,30,29,6,3,2,0,0,0,0,0,0,0,0,2,191,200,247,18,18,23,242,254,0,12,227,26,244,1,2,244,192,90,250,4,1,5,251,146,253,225,22,227,9,0,8,216,251,21,251,251,13,10,238,40,1,35,236,30,228,11,250,19,7,14,18,192,9,250,16,51,68,8,16,12,248,0,247,20,234,25,7,252,243,41,221,93,238,202,11,255,1,247,4,190,66,225,20,234,25,233,11,10,9,19,15,11,251,225,246,233,228,250,250,253,252,5,3,228,22,245,214,25,231,240,41,34,47,250,2,42,237,234,5,217,32,6,221,22,17,226,8,230,245,245,3,244,33,33,219,21,255,6,252,3,0,251,5,12,244,57,27,195,253,20,239,2,0,4,0,254,223,198,81,233,39,246,251,2,6,249,5,4,253,254,243,233,184,107,15,251,0,249,253,250,5,252,15,47,12,225,25,240,8,22,231,194,200,238,14,28,12,2,245,74,190,41,236,249,16,236,16,248,0,240,4,237,92,12,197,242,217,49,231,240,23,229,19,253,223,19,85,227,6,249,246,16,249,244,1,250,2,4,254,64,10,231,41,254,225,15,0,110,50,69,35,28,19,246,2,213,207,200,241,240,10,3,12,255,248,1,26,244,255,7,245,229,41,25,1,245,238,22,249,255,209,248,23,253,239,249,18,131,59,251,3,18,1,2,3,27,221,65,203,50,210,37,235,228,7,14,219,251,251,12,5,248,78,237,21,250,240,8,249,5,2,7,2,10,250,12,196,44,11,220,224,31,0,2,254,2,1,253,7,246,17,235,10,6,254,19,254,59,218,170,38,8,215,226,211,223,7,15,28,29,249,24,216,7,7,5,254,9,24,233,238,6,227,30,2,28,49,245,210,10,43,243,247,255,253,249,249,239,250,97,223,235,3,5,1,12,213,248,28,7,213,249,17,236,19,255,2,243,9,54,34,9,228,245,247,239,110,197,44,230,0,3,244,209,73,222,213,38,223,16,251,210,252,250,254,231,19,227,28,243,5,14,27,216,213,4,32,243,254,221,252,112,214,9,244,37,228,17,14,237,35,217,23,3,242,255,199,251,94,247,3,217,5,30,246,224,42,243,242,159,193,30,247,1,249,12,5,20,17,247,220,226,25,47,247,241,12,234,98,248,206,15,229,21,240,245,2,12,246,10,253,33,36,160,0,239,31,247,9,3,236,13,245,8,252,10,246,9,1,112,186,229,5,235,2,199,253,227,10,19,235,21,246,190,253,91,221,30,244,0,249,59,228,26,2,14,238,1,1,11,17,20,202,197,27,4,29,32,5,19,12,252,1,7,246,5,254,10,0,23,251,28,152,46,11,16,3,29,1,248,242,1,7,206,88,194,26,8,239,242,50,0,32,244,253,229,18,248,251,8,3,236,245,37,244,9,33,46,155,255,252,1,6,255,28,214,241,16,5,255,254,201,85,38,247,252,11,254,247,250,3,236,246,179,89,24,253,152,199,230,225,236,250,247,14,20,233,46,241,225,28,1,241,254,6,254,31,45,180,23,231] /* \E8\15\EC\05\FB\F9\0 */, "i8", ALLOC_STATIC);
STRING_TABLE._high_lsp_cdbk=allocate([39,12,242,236,227,195,189,180,224,185,189,68,77,46,34,5,243,208,210,184,175,172,196,198,216,228,82,93,68,45,29,3,237,209,228,213,221,226,248,243,217,165,165,133,160,10,10,250,238,201,196,165,200,220,229,240,208,181,40,28,246,228,35,9,37,19,1,236,225,215,238,231,221,188,176,45,27,255,47,13,0,227,221,199,206,177,183,218,237,5,35,14,246,233,16,248,5,232,216,194,233,229,234,240,238,210,184,179,43,21,33,1,176,186,186,192,200,204,217,223,225,218,237,237,241,32,33,254,7,241,241,232,233,223,215,200,232,199,5,89,64,41,27,5,247,209,196,159,159,132,236,247,212,183,31,29,252,64,48,7,221,199,0,253,230,209,253,250,216,180,177,208,12,81,55,10,9,232,213,183,199,187,16,5,228,203,18,29,20,0,252,245,6,243,23,7,239,221,219,219,226,188,193,6,24,247,242,3,21,243,229,199,207,176,232,215,251,240,251,1,45,25,12,249,3,241,250,240,241,248,6,243,214,175,176,169,14,1,246,253,213,187,210,232,228,227,36,6,213,200,244,12,54,79,43,9,54,22,2,8,244,213,210,204,218,187,167,251,75,38,33,5,243,203,194,169,167,143,157,201,222,219,62,55,33,16,21,254,239,210,227,218,218,208,217,214,220,181,184,168,208,226,21,2,241,199,192,158,172,180,25,1,210,176,244,18,249,3,34,6,38,31,23,4,255,20,14,241,213,178,165,232,14,253,54,16,0,229,228,212,200,173,164,167,253,34,56,41,36,22,20,248,249,221,214,194,207,3,12,246,206,169,160,190,92,70,38,9,186,185,194,214,217,213,245,249,206,177,198,206,225,32,31,250,252,231,7,239,218,186,198,229,213,173,228,59,36,20,31,2,229,185,176,147,158,181,223,224,225,254,33,15,250,43,33,251,0,234,246,229,222,207,245,236,215,165,156,135,217,57,41,10,237,206,218,197,196,186,238,236,248,225,248,241,1,242,230,231,33,21,32,17,1,237,237,230,198,175,221,234,45,30,11,245,3,230,208,169,189,173,198,3,255,230,236,44,10,25,39,5,247,221,229,218,7,10,4,247,214,171,154,129,52,44,28,10,209,195,216,217,239,255,246,223,214,182,208,21,252,70,52,10] /* '\0C\F2\EC\E3\C3\BD\ */, "i8", ALLOC_STATIC);
STRING_TABLE._high_lsp_cdbk2=allocate([220,194,6,247,246,242,200,23,1,230,23,208,239,12,8,249,23,29,220,228,250,227,239,251,40,23,10,10,210,243,36,6,4,226,227,62,32,224,255,22,242,1,252,234,211,2,54,4,226,199,197,244,27,253,225,8,247,5,10,242,32,66,19,9,2,231,219,23,241,18,218,225,5,247,235,15,0,22,62,30,15,244,242,210,77,21,33,3,34,29,237,50,2,11,9,218,244,219,62,1,241,54,32,6,2,232,20,35,235,2,19,24,243,55,4,9,39,237,30,255,235,73,54,33,8,18,3,15,6,237,209,6,253,208,206,1,26,20,8,233,206,65,242,201,239,225,219,228,53,255,239,203,1,57,11,248,231,226,219,64,5,204,211,15,23,31,15,14,231,24,33,254,212,200,238,6,235,213,4,244,17,219,20,246,34,15,2,15,55,21,245,225,250,46,25,16,247,231,248,194,28,17,20,224,227,26,30,25,237,2,240,239,26,205,2,50,42,19,190,23,29,254,3,19,237,219,32,15,6,30,222,13,11,251,40,31,10,214,4,247,26,247,186,17,254,233,20,234,201,51,232,225,22,234,15,243,3,246,228,240,56,4,193,11,238,241,238,218,221,16,249,34,255,235,207,209,9,219,7,8,69,55,20,6,223,211,246,247,6,247,12,71,15,253,214,249,232,32,221,254,214,239,251,0,254,223,202,13,244,222,47,23,19,55,7,248,74,31,14,16,233,230,19,12,238,207,228,225,236,2,242,236,209,78,40,13,233,245,21,250,18,1,47,5,38,35,32,46,22,8,13,16,242,18,51,19,40,39,11,230,255,239,47,2,203,241,31,234,38,21,241,240,5,223,53,15,218,86,11,253,232,49,13,252,245,238,28,20,244,229,230,35,231,221,253,236,195,30,10,201,244,234,204,202,242,19,224,244,45,15,248,208,247,11,224,8,240,222,243,51,18,38,254,224,239,22,254,238,228,186,59,27,228,237,246,236,247,247,248,235,21,248,35,254,45,253,247,12,0,30,7,217,43,27,218,165,30,26,19,201,252,63,14,239,13,9,13,2,7,4,6,61,72,255,239,29,255,234,239,8,228,219,63,44,41,3,2,14,9,250,75,248,249,244,241,244,13,9,252,30,234,191,15,0,211,4,252,1,5,22,11,23] /* \DC\C2\06\F7\F6\F2\C */, "i8", ALLOC_STATIC);
STRING_TABLE.__str=allocate([85,110,107,110,111,119,110,32,110,98,95,109,111,100,101,95,113,117,101,114,121,32,114,101,113,117,101,115,116,58,32,0] /* Unknown nb_mode_quer */, "i8", ALLOC_STATIC);
__str1=allocate(1, "i8", ALLOC_STATIC);
STRING_TABLE.__str2=allocate([49,46,50,114,99,49,0] /* 1.2rc1\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3=allocate([85,110,107,110,111,119,110,32,119,98,95,109,111,100,101,95,113,117,101,114,121,32,114,101,113,117,101,115,116,58,32,0] /* Unknown wb_mode_quer */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4=allocate([119,97,114,110,105,110,103,58,32,37,115,32,37,100,10,0] /* warning: %s %d\0A\00 */, "i8", ALLOC_STATIC);
_e_ratio_quant_bounds=allocate([0.2824999988079071, 0, 0, 0, 0.35600000619888306, 0, 0, 0, 0.44850000739097595, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_e_ratio_quant=allocate([0.25, 0, 0, 0, 0.3149999976158142, 0, 0, 0, 0.3970000147819519, 0, 0, 0, 0.5, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_vbr_nb_thresh=allocate([-1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 4, 0, 0, 0, 2.5, 0, 0, 0, 2, 0, 0, 0, 1.2000000476837158, 0, 0, 0, 0.5, 0, 0, 0, 0, 0, 0, 0, -0.5, 0, 0, 0, -0.699999988079071, 0, 0, 0, -0.800000011920929, 0, 0, 0, -0.8999999761581421, 0, 0, 0, -1, 0, 0, 0, 10, 0, 0, 0, 6.5, 0, 0, 0, 5.199999809265137, 0, 0, 0, 4.5, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 3.5, 0, 0, 0, 3, 0, 0, 0, 2.5, 0, 0, 0, 2.299999952316284, 0, 0, 0, 1.7999999523162842, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 8.800000190734863, 0, 0, 0, 7.5, 0, 0, 0, 6.5, 0, 0, 0, 5, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 3.5, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.899999618530273, 0, 0, 0, 8.5, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 4.5, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.5, 0, 0, 0, 8.5, 0, 0, 0, 8, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.5, 0, 0, 0, 8.5, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.800000190734863, 0, 0, 0, 9.5, 0, 0, 0, 7.5, 0, 0, 0, 7, 0, 0, 0, 4.5, 0, 0, 0, 3.700000047683716, 0, 0, 0, 3, 0, 0, 0, 2.5, 0, 0, 0, 2, 0, 0, 0, 1.7999999523162842, 0, 0, 0, 1.5, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_vbr_hb_thresh=allocate([-1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.5, 0, 0, 0, 8.5, 0, 0, 0, 7.5, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.5, 0, 0, 0, 8.699999809265137, 0, 0, 0, 7.800000190734863, 0, 0, 0, 7, 0, 0, 0, 6.5, 0, 0, 0, 4, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 11, 0, 0, 0, 9.800000190734863, 0, 0, 0, 7.5, 0, 0, 0, 5.5, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_vbr_uhb_thresh=allocate([-1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 3.9000000953674316, 0, 0, 0, 2.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str13=allocate([80,97,99,107,101,116,32,105,115,32,108,97,114,103,101,114,32,116,104,97,110,32,97,108,108,111,99,97,116,101,100,32,98,117,102,102,101,114,0] /* Packet is larger tha */, "i8", ALLOC_STATIC);
STRING_TABLE.__str114=allocate([67,111,117,108,100,32,110,111,116,32,114,101,115,105,122,101,32,105,110,112,117,116,32,98,117,102,102,101,114,58,32,116,114,117,110,99,97,116,105,110,103,32,105,110,112,117,116,0] /* Could not resize inp */, "i8", ALLOC_STATIC);
STRING_TABLE.__str215=allocate([68,111,32,110,111,116,32,111,119,110,32,105,110,112,117,116,32,98,117,102,102,101,114,58,32,116,114,117,110,99,97,116,105,110,103,32,111,118,101,114,115,105,122,101,32,105,110,112,117,116,0] /* Do not own input buf */, "i8", ALLOC_STATIC);
STRING_TABLE.__str316=allocate([67,111,117,108,100,32,110,111,116,32,114,101,115,105,122,101,32,105,110,112,117,116,32,98,117,102,102,101,114,58,32,116,114,117,110,99,97,116,105,110,103,32,111,118,101,114,115,105,122,101,32,105,110,112,117,116,0] /* Could not resize inp */, "i8", ALLOC_STATIC);
STRING_TABLE.__str417=allocate([66,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,116,111,32,112,97,99,107,32,98,105,116,115,0] /* Buffer too small to  */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5=allocate([67,111,117,108,100,32,110,111,116,32,114,101,115,105,122,101,32,105,110,112,117,116,32,98,117,102,102,101,114,58,32,110,111,116,32,112,97,99,107,105,110,103,0] /* Could not resize inp */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6=allocate([68,111,32,110,111,116,32,111,119,110,32,105,110,112,117,116,32,98,117,102,102,101,114,58,32,110,111,116,32,112,97,99,107,105,110,103,0] /* Do not own input buf */, "i8", ALLOC_STATIC);
STRING_TABLE.__str7=allocate([119,97,114,110,105,110,103,58,32,37,115,10,0] /* warning: %s\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str8=allocate([110,111,116,105,102,105,99,97,116,105,111,110,58,32,37,115,10,0] /* notification: %s\0A\ */, "i8", ALLOC_STATIC);
STRING_TABLE._exc_10_16_table=allocate([22,39,14,44,11,35,254,23,252,6,46,228,13,229,233,12,4,20,251,9,37,238,233,23,0,9,250,236,4,255,239,251,252,17,0,1,9,254,1,2,2,244,8,231,39,15,9,16,201,245,9,11,5,10,254,196,8,13,250,11,240,27,209,244,11,1,16,249,9,253,227,9,242,25,237,34,36,12,40,246,253,232,242,219,235,221,254,220,3,250,67,28,6,239,253,244,240,241,239,249,197,220,243,1,7,1,2,10,2,11,13,10,8,254,7,3,5,4,2,2,253,248,4,251,6,7,214,15,35,254,210,38,28,236,247,1,7,253,0,254,0,0,0,0,0,0,0,0,0,0,241,228,52,32,5,251,239,236,246,255] /* \16'\0E,\0B#\FE\17\F */, "i8", ALLOC_STATIC);
STRING_TABLE._exc_20_32_table=allocate([12,32,25,46,36,33,9,14,253,6,1,248,0,246,251,249,249,249,251,251,31,229,24,224,252,10,245,21,253,19,23,247,22,24,246,255,246,243,249,245,42,223,31,19,248,0,246,240,1,235,239,10,248,14,8,4,11,254,5,254,223,11,240,33,11,252,9,252,11,2,6,251,8,251,11,252,250,26,220,240,0,4,254,248,12,6,255,34,210,234,9,9,21,9,5,190,251,26,2,10,13,2,19,9,12,175,3,13,13,0,242,22,221,6,249,252,6,250,10,250,225,38,223,0,246,245,5,244,12,239,5,0,250,13,247,10,8,25,33,2,244,8,250,10,254,21,7,17,43,5,11,249,247,236,220,236,233,252,252,253,27,247,247,207,217,218,245,247,6,5,23,25,5,3,3,4,1,2,253,255,87,39,17,235,247,237,247,241,243,242,239,245,246,245,248,250,255,253,253,255,202,222,229,248,245,252,251,0,0,4,8,6,9,7,9,7,6,5,5,5,48,10,19,246,12,255,9,253,2,5,253,2,254,254,0,254,230,6,9,249,240,247,2,7,7,251,213,11,22,245,247,34,37,241,243,250,1,255,1,1,192,56,52,245,229,5,4,3,1,2,1,3,255,252,252,246,249,252,252,2,255,249,249,244,246,241,247,251,251,245,240,243,6,16,4,243,240,246,252,2,209,243,25,47,19,242,236,248,239,0,253,243,1,6,239,242,15,1,10,6,232,0,246,19,187,248,14,49,17,251,33,227,3,252,0,2,248,5,250,2,120,200,244,209,23,247,6,251,1,2,251,1,246,4,255,255,4,255,0,253,30,204,189,30,22,11,255,252,3,0,7,2,0,1,246,252,248,243,5,1,1,255,5,13,247,253,246,194,22,48,252,250,2,3,5,1,1,4,1,13,3,236,10,247,13,254,252,9,236,44,255,20,224,189,19,0,28,11,8,2,245,15,237,203,31,2,34,10,6,252,198,8,10,13,14,1,12,2,0,0,128,37,248,44,247,26,253,18,2,6,11,255,9,1,5,3,0,1,1,2,12,3,254,253,7,25,9,18,250,219,3,248,240,3,246,249,17,222,212,11,17,241,253,240,255,243,11,210,191,254,8,13,2,4,4,5,15,5,9,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,247,19,244,12,228,38,29,255,12,2,5,23,246,3,4,241,21,252,3,3,6,17,247,252,248,236,26,5,246,6,1,237,18,241,244,47,250,254,249,247,255,239,254,254,242,30,242,2,249,252,255,244,11,231,16,253,244,11,249,7,239,1,19,228,31,249,246,7,246,3,12,5,240,6,24,41,227,202,0,1,7,255,5,250,13,10,252,248,8,247,229,203,218,255,10,19,17,16,12,12,0,3,249,252,13,12,225,242,6,251,3,5,17,43,50,25,10,1,250,254] /* \0C \19.$!\09\0E\FD\ */, "i8", ALLOC_STATIC);
STRING_TABLE._exc_5_256_table=allocate([248,219,5,213,5,73,61,39,12,253,195,224,2,42,30,253,17,229,9,34,20,255,251,2,23,249,210,26,53,209,20,254,223,167,205,192,27,11,15,222,251,200,25,247,255,227,1,40,67,233,240,16,33,19,7,14,85,22,246,246,244,249,255,52,89,29,11,236,219,210,241,17,232,228,24,2,1,0,23,155,23,14,255,233,238,9,5,243,38,1,228,228,4,27,51,230,34,216,35,47,54,38,202,230,250,42,231,13,226,220,18,41,252,223,23,224,249,252,51,253,17,204,56,209,36,254,235,36,10,8,223,31,19,9,251,216,10,247,235,19,18,178,238,251,0,230,220,209,205,212,18,40,27,254,29,49,230,2,32,202,30,183,54,3,251,36,22,53,10,255,172,203,227,251,3,212,53,205,4,22,71,221,255,33,251,229,249,36,17,233,217,16,247,201,241,236,39,221,6,217,242,18,48,192,239,241,9,39,81,37,188,37,47,235,250,152,13,6,9,254,35,8,233,18,42,45,21,33,251,207,9,250,213,200,39,2,240,231,87,1,253,247,17,231,245,247,255,10,2,242,242,4,255,246,28,233,40,224,26,247,26,4,229,233,3,42,196,1,49,253,27,10,204,216,254,18,45,233,17,212,3,253,17,210,52,216,209,25,75,31,207,53,30,226,224,220,38,250,241,240,54,229,208,3,38,227,224,234,242,252,233,243,32,217,9,8,211,243,34,240,49,40,32,31,28,23,23,32,47,59,188,8,62,44,25,242,232,191,240,36,67,231,218,235,4,223,254,42,5,193,40,11,26,214,233,195,79,225,23,236,10,224,53,231,220,10,230,251,3,0,185,5,246,219,1,232,21,202,239,1,227,231,241,229,32,68,45,240,219,238,251,1,0,179,71,250,3,236,71,189,29,221,10,226,19,4,16,17,5,0,242,19,2,28,26,59,3,2,24,39,55,206,211,238,239,33,221,14,255,1,8,87,221,227,0,229,13,249,23,243,37,216,50,221,14,19,249,242,49,54,251,22,254,227,248,229,38,13,27,48,12,215,235,241,28,7,240,232,237,236,11,236,9,2,13,23,236,11,27,229,71,187,8,2,250,22,12,16,16,9,240,248,239,1,25,1,40,219,223,66,94,53,4,234,231,215,214,25,35,240,241,57,31,227,224,21,16,196,45,15,255,7,57,230,209,227,11,8,15,19,151,248,54,27,10,239,6,244,255,246,4,0,23,246,31,13,11,10,12,192,23,253,248,237,16,52,24,216,16,10,40,5,9,0,243,249,235,248,250,249,235,59,16,203,18,196,11,209,14,238,25,243,232,4,217,16,228,54,26,189,30,27,236,204,20,244,55,12,18,240,39,242,250,230,56,168,201,12,25,26,219,6,75,0,222,175,54,226,1,249,49,233,242,21,10,194,198,199,209,222,15,252,34,178,31,25,245,7,50,246,42,193,14,220,252,57,55,57,53,42,214,255,15,40,37,15,25,245,6,1,31,254,250,255,249,192,34,28,30,255,3,21,0,168,244,200,25,228,40,8,228,242,9,12,2,250,239,22,49,250,230,14,28,236,4,244,50,35,40,13,218,198,227,17,30,22,60,26,202,217,244,58,228,193,10,235,248,244,26,194,6,246,245,234,250,249,4,1,18,2,186,11,14,4,13,19,232,222,24,67,17,51,235,13,23,54,226,48,1,243,80,26,240,254,13,252,6,226,29,232,73,198,30,229,20,254,235,41,45,30,229,253,251,238,236,207,253,221,10,42,237,189,203,245,9,13,241,223,205,226,15,7,25,226,4,28,234,222,54,227,39,210,20,16,34,252,47,75,1,212,201,232,7,255,9,214,50,248,220,41,68,0,252,246,233,241,206,64,36,247,229,12,25,218,209,219,32,207,51,220,2,252,69,230,19,7,45,67,46,13,193,46,15,209,4,215,13,250,5,235,37,26,201,249,33,255,228,10,239,192,242,0,220,239,93,253,247,190,44,235,3,244,38,250,243,244,19,13,43,213,246,244,6,251,9,207,32,251,2,4,5,15,240,10,235,8,194,248,64,8,79,255,190,207,238,5,40,251,226,211,1,250,21,224,93,238,226,235,32,21,238,22,8,5,215,202,80,22,246,249,248,233,192,66,56,242,226,215,210,242,227,219,27,242,42,254,247,227,34,14,33,242,22,4,10,26,26,28,32,23,184,224,3,0,242,35,214,178,224,6,29,238,211,251,7,223,211,253,234,222,8,248,4,205,231,247,59,178,21,251,231,208,66,241,239,232,207,243,25,233,192,250,40,232,237,245,57,223,248,1,10,204,202,28,39,49,34,245,195,215,213,10,15,241,51,30,15,205,32,222,254,222,14,18,16,1,1,253,253,1,1,238,6,16,48,12,251,214,7,36,48,7,236,246,7,12,2,54,39,218,37,54,4,245,248,210,246,5,246,222,46,244,29,219,39,36,245,24,56,17,14,20,25,0,231,228,55,249,251,27,3,9,230,248,6,232,246,226,225,222,18,4,22,21,40,255,227,219,248,235,92,227,11,253,11,73,23,22,7,4,212,247,245,21,243,11,9,178,255,47,114,244,219,237,251,245,234,19,12,226,7,38,45,235,248,247,55,211,56,235,7,17,46,199,169,250,27,31,31,7,200,244,46,21,251,244,36,3,3,235,43,19,12,249,9,242,0,247,223,165,7,26,3,245,64,83,225,210,25,2,9,5,2,2,255,20,239,10,251,229,248,20,8,237,16,235,243,225,5,5,42,24,9,34,236,28,195,22,11,217,64,236,255,226,247,236,24,231,232,227,22,196,6,251,41,247,169,14,34,15,199,52,69,15,253,154,58,16,3,6,60,181,224,26,7,199,229,224,232,235,227,240,62,210,31,30,229,241,7,15] /* \F8\DB\05\D5\05I='\0 */, "i8", ALLOC_STATIC);
STRING_TABLE._exc_5_64_table=allocate([1,5,241,49,190,208,252,50,212,7,37,16,238,25,230,230,241,19,19,229,209,28,57,5,239,224,215,68,21,254,64,56,8,240,243,230,247,240,11,6,217,25,237,22,225,20,211,55,213,10,240,47,216,40,236,205,3,239,242,241,232,53,236,210,46,27,188,32,3,238,251,9,225,16,247,246,255,233,48,95,47,25,215,224,253,15,231,201,36,41,229,20,5,13,14,234,5,2,233,18,46,241,17,238,222,251,248,27,201,73,16,2,255,239,40,178,33,0,2,19,4,53,240,241,240,228,253,243,49,8,249,227,27,243,32,20,32,195,16,14,41,44,40,24,20,7,4,48,196,179,17,250,208,65,241,32,226,185,246,253,250,10,254,249,227,200,67,226,7,251,86,250,246,0,5,225,60,34,218,253,24,10,254,30,23,24,215,12,70,213,15,239,6,13,16,243,8,30,241,248,5,23,222,158,252,243,13,208,225,70,12,31,25,24,232,26,249,33,240,8,5,245,242,248,191,13,10,254,247,0,253,188,5,35,7,0,225,255,239,247,247,16,219,238,255,69,208,228,22,235,245,5,49,55,23,170,220,16,2,13,63,205,30,245,13,24,238,250,14,237,1,41,9,251,27,220,212,222,219,235,230,31,217,15,43,5,248,29,20,248,236,204,228,255,13,26,222,246,247,27,248,8,27,190,4,12,234,49,10,179,32,238,3,218,12,253,255,2,2,0] /* \01\05\F11\BE\D0\FC2 */, "i8", ALLOC_STATIC);
STRING_TABLE._gain_cdbk_lbr=allocate([224,224,224,0,225,198,240,22,215,232,213,14,200,234,201,29,243,33,215,47,252,217,247,29,215,15,244,38,248,241,244,31,1,2,212,40,234,190,214,27,218,28,233,38,235,14,219,31,0,21,206,52,203,185,229,33,219,255,237,25,237,251,228,22,6,65,212,74,223,208,223,9,216,57,242,58,239,4,211,32,225,38,223,36,233,28,216,39,213,29,244,46,222,13,233,28,240,15,229,34,242,174,241,43,225,25,224,29,235,5,251,38,209,193,205,33,210,12,3,47,228,239,227,11,246,14,216,38] /* \E0\E0\E0\00\E1\C6\F */, "i8", ALLOC_STATIC);
STRING_TABLE._hexc_10_32_table=allocate([253,254,255,0,252,5,35,216,247,13,212,5,229,255,249,6,245,7,248,7,19,242,15,252,9,246,10,248,10,247,255,1,0,0,2,5,238,22,203,50,1,233,50,220,15,3,243,14,246,6,1,5,253,4,254,5,224,25,5,254,255,252,1,11,227,26,250,241,30,238,0,15,239,40,215,3,9,254,254,3,253,255,251,2,21,250,240,235,23,2,60,15,16,240,247,14,9,255,7,247,0,1,1,0,255,250,17,228,54,211,255,1,255,250,250,2,11,26,227,254,46,235,34,12,233,32,233,16,246,3,66,19,236,24,7,11,253,0,253,255,206,210,2,238,253,4,255,254,3,253,237,41,220,9,11,232,21,240,9,253,231,253,10,18,247,254,251,255,251,6,252,253,2,230,21,237,35,241,7,243,17,237,39,213,48,225,16,247,7,254,251,3,252,9,237,27,201,63,221,10,26,212,254,9,4,1,250,8,247,5,248,255,253,240,45,214,5,15,240,10,0,0,0,0,0,0,0,0,0,0,240,24,201,47,218,27,237,7,253,1,16,27,20,237,18,5,249,1,251,2,250,8,234,0,253,253,8,255,7,248,1,253,5,0,17,208,58,204,29,249,254,3,246,6,230,58,225,1,250,3,93,227,39,3,17,5,6,255,255,255,27,13,10,19,249,222,12,10,252,9,180,9,8,228,254,245,2,255,3,1,173,38,217,4,240,250,254,251,5,254] /* \FD\FE\FF\00\FC\05#\ */, "i8", ALLOC_STATIC);
STRING_TABLE._cdbk_nb=allocate([30,19,38,34,40,32,46,43,58,43,5,238,231,216,223,201,204,20,34,28,236,193,159,164,61,53,47,49,53,75,242,203,179,177,0,253,251,19,22,26,247,203,201,66,90,72,85,68,74,52,252,215,198,225,238,225,27,32,30,18,24,3,8,5,244,253,26,28,74,63,254,217,189,179,150,182,59,59,73,65,44,40,71,72,82,83,98,88,89,60,250,225,209,208,243,217,247,7,2,79,255,217,196,239,87,81,65,50,45,19,235,189,165,169,215,206,7,18,39,74,10,225,228,39,24,13,23,5,56,45,29,10,251,243,245,221,238,248,246,248,231,185,179,235,2,16,50,63,87,87,5,224,216,205,188,0,12,6,54,34,5,244,32,52,68,64,69,59,65,45,14,240,225,216,191,189,41,49,47,37,245,204,181,172,252,57,48,42,42,33,245,205,188,250,13,0,8,248,26,32,233,203,0,36,56,76,97,105,111,97,255,228,217,216,213,202,212,216,238,35,16,236,237,228,214,29,47,38,74,45,3,227,208,194,176,152,223,56,59,59,10,17,46,72,84,101,117,123,123,106,249,223,207,205,186,189,229,225,70,67,240,194,171,236,82,71,86,80,85,74,237,198,181,211,227,223,238,231,45,57,244,214,251,12,28,36,52,64,81,82,13,247,229,228,22,3,2,22,26,6,250,212,205,2,15,10,48,43,49,34,237,194,172,167,154,232,8,17,61,68,39,24,23,19,16,251,12,15,27,15,248,212,207,196,238,224,228,52,54,62,248,208,179,186,66,101,83,63,61,37,244,206,181,192,33,17,13,25,15,77,1,214,227,72,64,46,49,31,61,44,248,209,202,210,226,19,20,255,240,0,16,244,238,247,230,229,246,234,53,45,246,209,181,174,151,147,8,25,49,77,50,65,114,117,124,118,115,96,90,61,247,211,193,196,181,199,8,11,20,29,0,221,207,213,40,47,35,40,55,38,232,180,153,144,229,3,23,34,52,75,8,227,213,12,63,38,35,29,24,8,25,11,1,241,238,213,249,37,40,21,236,200,237,237,252,254,11,29,51,63,254,212,194,181,167,30,57,51,74,51,50,46,68,64,65,52,63,55,65,43,18,247,230,221,201,187,3,6,8,17,241,195,170,159,1,86,93,74,78,67,255,218,190,208,48,39,29,25,17,255,13,13,29,39,50,51,69,82,97,98,254,220,210,229,240,226,243,252,249,252,25,251,245,250,231,235,33,12,31,29,248,218,204,193,188,167,223,255,10,74,254,241,59,91,105,105,101,87,84,62,249,223,206,221,202,209,25,17,82,81,243,200,173,21,58,31,42,25,72,65,232,190,165,200,9,254,21,10,69,75,2,232,11,22,25,28,38,34,48,33,7,227,230,17,15,255,14,0,254,0,250,215,189,6,254,247,19,2,85,74,234,189,172,185,206,3,11,247,2,62] /* \1E\13&\22( .+:+\05\ */, "i8", ALLOC_STATIC);
STRING_TABLE._cdbk_nb_low1=allocate([222,204,241,45,2,23,21,52,24,223,247,255,9,212,215,243,239,44,22,239,250,252,255,22,38,26,16,2,50,27,221,222,247,215,6,0,240,222,51,8,242,225,207,15,223,45,49,33,245,219,194,202,45,11,251,184,11,255,244,245,24,27,245,213,46,43,33,244,247,255,1,252,233,199,185,11,8,16,17,248,236,225,215,53,48,240,3,65,232,248,233,224,219,224,207,246,239,6,38,5,247,239,210,8,52,3,6,45,40,39,249,250,222,182,31,8,1,240,43,68,245,237,225,4,6,0,250,239,240,218,240,226,2,9,217,240,255,43,246,48,3,3,240,225,253,62,68,43,13,3,246,8,20,200,12,12,254,238,22,241,216,220,1,7,41,0,1,46,250,194,252,244,254,245,173,243,254,91,33,246,0,4,245,240,79,32,37,14,9,51,235,228,200,222,0,21,9,230,11,28,214,202,233,254,241,31,30,8,217,190,217,220,31,228,216,210,35,40,22,24,33,48,23,222,14,40,32,17,27,253,25,26,243,195,239,11,4,31,60,250,230,215,192,13,16,230,54,31,245,233,247,245,222,185,235,222,221,55,50,29,234,229,206,218,57,33,42,57,48,26,11,0,207,225,26,252,242,5,78,37,17,0,207,244,233,26,14,2,2,213,239,244,10,248,252,8,18,12,250,20,244,250,243,231,34,15,40,49,7,8,13,20,20,237,234,254,248,2,51,205] /* \DE\CC\F1-\02\17\154 */, "i8", ALLOC_STATIC);
STRING_TABLE._cdbk_nb_low2=allocate([250,53,235,232,4,26,17,252,219,25,17,220,243,31,3,250,27,15,246,31,28,26,246,246,216,16,249,15,13,41,247,0,252,50,250,249,14,38,22,0,208,2,1,243,237,32,253,196,11,239,255,232,222,255,35,251,229,28,44,13,25,15,42,245,15,51,35,220,20,8,252,244,227,19,209,49,241,252,16,227,217,14,226,4,25,247,251,205,242,253,216,224,38,5,247,248,252,255,234,71,253,14,26,238,234,24,215,231,232,6,23,19,246,39,230,229,65,45,2,249,230,248,22,244,16,15,16,221,251,33,235,248,0,23,33,34,6,21,36,6,249,234,8,219,242,31,38,11,252,253,217,224,248,32,233,250,244,16,20,228,252,23,13,204,255,22,6,223,216,250,4,194,13,5,230,35,39,11,2,57,245,9,236,228,223,52,251,250,254,22,242,240,208,35,1,198,20,13,33,255,182,56,238,234,225,12,6,242,4,254,247,209,10,253,29,239,251,61,14,47,244,2,72,217,239,92,64,203,205,241,226,218,215,227,228,27,9,36,9,221,214,81,235,20,25,240,251,239,221,21,15,228,48,2,254,9,237,29,216,30,238,238,18,240,199,15,236,244,241,219,241,33,217,21,234,243,35,11,13,218,193,29,23,229,32,18,3,230,42,33,192,190,239,16,56,2,36,3,31,21,215,217,8,199,14,37,254,19,220,237,233,227,240,1,253,248,246,31,64,191] /* \FA5\EB\E8\04\1A\11\ */, "i8", ALLOC_STATIC);
STRING_TABLE._cdbk_nb_high1=allocate([230,248,29,21,4,19,217,33,249,220,56,54,48,40,29,252,232,214,190,213,196,19,254,37,41,246,219,196,192,18,234,77,73,40,25,4,19,237,190,254,11,5,21,14,26,231,170,252,18,1,26,219,10,37,255,24,244,197,245,20,250,34,240,240,42,19,228,205,53,32,4,10,62,21,244,222,27,4,208,208,206,207,31,249,235,214,231,252,213,234,59,2,27,12,247,250,240,248,224,198,240,227,251,41,23,226,223,210,243,246,218,52,52,1,239,247,10,26,231,250,33,236,53,55,25,224,251,214,23,21,66,5,228,20,9,75,29,249,214,217,15,3,233,21,6,11,1,227,14,63,10,54,26,232,205,207,7,233,205,15,190,1,60,25,10,0,226,252,241,17,19,59,40,4,251,33,6,234,198,186,251,23,250,60,44,227,240,209,227,52,237,50,28,16,35,31,36,0,235,6,21,27,22,42,7,190,216,248,7,19,46,0,252,60,36,45,249,227,250,224,217,2,6,247,33,20,205,222,18,250,19,6,11,5,237,227,254,42,245,211,235,201,57,37,2,242,189,240,229,218,69,48,19,2,239,20,236,240,222,239,231,195,10,73,45,16,216,192,239,227,234,56,17,217,8,245,8,231,238,243,237,8,54,57,36,239,230,252,6,235,40,42,252,20,31,53,10,222,203,31,239,35,0,15,250,236,193,183,22,25,29,17,8,227,217,187,18,15,241,251] /* \E6\F8\1D\15\04\13\D */, "i8", ALLOC_STATIC);
STRING_TABLE._cdbk_nb_high2=allocate([11,47,16,247,210,224,26,192,34,251,38,249,47,20,2,183,157,253,211,20,70,204,15,250,249,174,31,21,47,51,39,253,9,0,215,249,241,202,2,0,27,225,9,211,234,218,232,232,8,223,23,5,50,220,239,238,205,254,13,19,43,12,241,244,61,38,38,7,13,0,6,255,3,62,9,27,22,223,38,221,247,30,213,247,224,255,4,252,1,251,245,248,38,31,11,246,214,235,219,1,43,15,243,221,237,238,15,23,230,59,1,235,53,8,215,206,242,228,4,21,25,228,216,5,216,215,4,51,223,248,248,1,17,196,12,25,215,17,34,43,19,45,7,219,24,241,56,254,35,246,48,4,209,254,5,251,202,5,253,223,246,30,254,212,232,218,9,247,42,4,6,200,44,240,9,216,230,18,236,10,28,215,235,252,13,238,32,226,253,37,15,22,28,50,216,3,227,192,7,51,237,245,17,229,216,192,24,244,249,229,3,37,48,255,2,247,218,222,46,1,27,250,19,243,26,10,34,20,25,40,50,250,249,30,9,232,0,233,71,195,22,58,222,252,2,207,223,25,30,248,250,240,77,2,38,248,221,250,226,56,78,31,33,236,13,217,20,22,4,21,248,4,250,10,173,215,9,231,213,15,249,244,222,217,219,223,19,30,16,223,42,231,25,188,44,241,245,252,23,50,14,4,217,213,20,226,60,9,236,7,16,19,223,37,29,16,221,7,38,229] /* \0B/\10\F7\D2\E0\1A\ */, "i8", ALLOC_STATIC);
_nb_mode=allocate([160, 0, 0, 0, 40, 0, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 144, 0, 0, 0, 0.8999999761581421, 0, 0, 0, 0.6000000238418579, 0, 0, 0, 0.00019999999494757503, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str24=allocate([110,97,114,114,111,119,98,97,110,100,0] /* narrowband\00 */, "i8", ALLOC_STATIC);
_speex_nb_mode=allocate([0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 10, 0, 0, 0, 12, 0, 0, 0, 14, 0, 0, 0, 16, 0, 0, 0, 18, 0, 0, 0, 20, 0, 0, 0, 22, 0, 0, 0, 24, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
_nb_submode1=allocate([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 30, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 43, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode2=allocate([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.6000000238418579, 0, 0, 0, 119, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode3=allocate([-1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.550000011920929, 0, 0, 0, 160, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode4=allocate([-1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.44999998807907104, 0, 0, 0, 220, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode5=allocate([-1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 46, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.30000001192092896, 0, 0, 0, 300, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode6=allocate([-1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 46, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.20000000298023224, 0, 0, 0, 364, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode7=allocate([-1, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 44, 0, 0, 0, 46, 0, 0, 0, 36, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.10000000149011612, 0, 0, 0, 492, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_nb_submode8=allocate([0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0, 28, 0, 0, 0, 30, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0.5, 0, 0, 0, 79, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_nb_ulbr=allocate([20, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_ltp_params_nb=allocate([0, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_nb=allocate([5, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_sb=allocate([5, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_ltp_params_med=allocate([0, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_nb_med=allocate([8, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_ltp_params_lbr=allocate([0, 0, 0, 0, 5, 0, 0, 0, 7, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_nb_lbr=allocate([10, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_ltp_params_vlbr=allocate([0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_nb_vlbr=allocate([10, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_speex_wb_mode=allocate([0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 50, 0, 0, 0, 52, 0, 0, 0, 54, 0, 0, 0, 56, 0, 0, 0, 58, 0, 0, 0, 60, 0, 0, 0, 62, 0, 0, 0, 64, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
_speex_uwb_mode=allocate([0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 50, 0, 0, 0, 52, 0, 0, 0, 54, 0, 0, 0, 56, 0, 0, 0, 58, 0, 0, 0, 60, 0, 0, 0, 62, 0, 0, 0, 64, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
_speex_mode_list=allocate(12, "*", ALLOC_STATIC);
_sb_wb_mode=allocate([0, 0, 0, 0, 160, 0, 0, 0, 40, 0, 0, 0, 8, 0, 0, 0, 0.8999999761581421, 0, 0, 0, 0.6000000238418579, 0, 0, 0, 0.00019999999494757503, 0, 0, 0, 0.8999999761581421, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str25=allocate([119,105,100,101,98,97,110,100,32,40,115,117,98,45,98,97,110,100,32,67,69,76,80,41,0] /* wideband (sub-band C */, "i8", ALLOC_STATIC);
STRING_TABLE.__str126=allocate([85,110,107,110,111,119,110,32,119,98,95,109,111,100,101,95,113,117,101,114,121,32,114,101,113,117,101,115,116,58,32,0] /* Unknown wb_mode_quer */, "i8", ALLOC_STATIC);
_sb_uwb_mode=allocate([0, 0, 0, 0, 320, 0, 0, 0, 80, 0, 0, 0, 8, 0, 0, 0, 0.8999999761581421, 0, 0, 0, 0.6000000238418579, 0, 0, 0, 0.00019999999494757503, 0, 0, 0, 0.699999988079071, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0], ["*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str227=allocate([117,108,116,114,97,45,119,105,100,101,98,97,110,100,32,40,115,117,98,45,98,97,110,100,32,67,69,76,80,41,0] /* ultra-wideband (sub- */, "i8", ALLOC_STATIC);
_wb_submode1=allocate([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 36, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str328=allocate([119,97,114,110,105,110,103,58,32,37,115,32,37,100,10,0] /* warning: %s %d\0A\00 */, "i8", ALLOC_STATIC);
_wb_submode2=allocate([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 112, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_wb_submode3=allocate([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 66, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 192, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_wb_submode4=allocate([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 66, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 352, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"float",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_high=allocate([8, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 1, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_split_cb_high_lbr=allocate([10, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_exc_gain_quant_scal3_bound=allocate([0.11233799904584885, 0, 0, 0, 0.23698000609874725, 0, 0, 0, 0.3693160116672516, 0, 0, 0, 0.4920539855957031, 0, 0, 0, 0.6374710202217102, 0, 0, 0, 0.8288739919662476, 0, 0, 0, 1.1327840089797974, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_exc_gain_quant_scal3=allocate([0.06112999841570854, 0, 0, 0, 0.16354599595069885, 0, 0, 0, 0.3104130029678345, 0, 0, 0, 0.4282200038433075, 0, 0, 0, 0.55588698387146, 0, 0, 0, 0.7190549969673157, 0, 0, 0, 0.9386940002441406, 0, 0, 0, 1.326874017715454, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_exc_gain_quant_scal1_bound=allocate([0.8779799938201904, 0, 0, 0], ["float",0,0,0], ALLOC_STATIC);
_exc_gain_quant_scal1=allocate([0.7046899795532227, 0, 0, 0, 1.0512700080871582, 0, 0, 0], ["float",0,0,0,"float",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str30=allocate([97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,115,116,45,62,119,105,110,100,111,119,83,105,122,101,45,115,116,45,62,102,114,97,109,101,83,105,122,101,32,61,61,32,115,116,45,62,115,117,98,102,114,97,109,101,83,105,122,101,0] /* assertion failed: st */, "i8", ALLOC_STATIC);
STRING_TABLE.__str131=allocate([110,98,95,99,101,108,112,46,99,0] /* nb_celp.c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str232=allocate([97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,83,85,66,77,79,68,69,40,108,116,112,95,113,117,97,110,116,41,0] /* assertion failed: SU */, "i8", ALLOC_STATIC);
STRING_TABLE.__str333=allocate([97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,83,85,66,77,79,68,69,40,105,110,110,111,118,97,116,105,111,110,95,113,117,97,110,116,41,0] /* assertion failed: SU */, "i8", ALLOC_STATIC);
_attenuation=allocate([1, 0, 0, 0, 0.9610000252723694, 0, 0, 0, 0.8519999980926514, 0, 0, 0, 0.6980000138282776, 0, 0, 0, 0.5270000100135803, 0, 0, 0, 0.36800000071525574, 0, 0, 0, 0.2370000034570694, 0, 0, 0, 0.14100000262260437, 0, 0, 0, 0.07699999958276749, 0, 0, 0, 0.039000000804662704, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_wb_skip_table=allocate([0, 0, 0, 0, 36, 0, 0, 0, 112, 0, 0, 0, 192, 0, 0, 0, 352, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str434=allocate([73,110,118,97,108,105,100,32,109,111,100,101,32,101,110,99,111,117,110,116,101,114,101,100,46,32,84,104,101,32,115,116,114,101,97,109,32,105,115,32,99,111,114,114,117,112,116,101,100,46,0] /* Invalid mode encount */, "i8", ALLOC_STATIC);
STRING_TABLE.__str535=allocate([77,111,114,101,32,116,104,97,110,32,116,119,111,32,119,105,100,101,98,97,110,100,32,108,97,121,101,114,115,32,102,111,117,110,100,46,32,84,104,101,32,115,116,114,101,97,109,32,105,115,32,99,111,114,114,117,112,116,101,100,46,0] /* More than two wideba */, "i8", ALLOC_STATIC);
STRING_TABLE.__str636=allocate([97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,83,85,66,77,79,68,69,40,108,116,112,95,117,110,113,117,97,110,116,41,0] /* assertion failed: SU */, "i8", ALLOC_STATIC);
STRING_TABLE.__str737=allocate([97,115,115,101,114,116,105,111,110,32,102,97,105,108,101,100,58,32,83,85,66,77,79,68,69,40,105,110,110,111,118,97,116,105,111,110,95,117,110,113,117,97,110,116,41,0] /* assertion failed: SU */, "i8", ALLOC_STATIC);
STRING_TABLE.__str838=allocate([85,110,107,110,111,119,110,32,110,98,95,99,116,108,32,114,101,113,117,101,115,116,58,32,0] /* Unknown nb_ctl reque */, "i8", ALLOC_STATIC);
STRING_TABLE.__str9=allocate([119,97,114,110,105,110,103,58,32,37,115,32,37,100,10,0] /* warning: %s %d\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str10=allocate([110,111,116,105,102,105,99,97,116,105,111,110,58,32,37,115,10,0] /* notification: %s\0A\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str11=allocate([70,97,116,97,108,32,40,105,110,116,101,114,110,97,108,41,32,101,114,114,111,114,32,105,110,32,37,115,44,32,108,105,110,101,32,37,100,58,32,37,115,10,0] /* Fatal (internal) err */, "i8", ALLOC_STATIC);
_h0=allocate([0.0000359618898073677, 0, 0, 0, -0.00011235150304855779, 0, 0, 0, -0.00011045869905501604, 0, 0, 0, 0.0002790277067106217, 0, 0, 0, 0.00022984380484558642, 0, 0, 0, -0.0005953562795184553, 0, 0, 0, -0.0003823630977421999, 0, 0, 0, 0.0011382600059732795, 0, 0, 0, 0.0005308539257384837, 0, 0, 0, -0.0019861769396811724, 0, 0, 0, -0.0006243723910301924, 0, 0, 0, 0.003235877025872469, 0, 0, 0, 0.0005743158981204033, 0, 0, 0, -0.004989147186279297, 0, 0, 0, -0.0002584767062216997, 0, 0, 0, 0.0073671708814799786, 0, 0, 0, -0.0004857935127802193, 0, 0, 0, -0.010506889782845974, 0, 0, 0, 0.001894713961519301, 0, 0, 0, 0.014593959785997868, 0, 0, 0, -0.004313673824071884, 0, 0, 0, -0.01994365081191063, 0, 0, 0, 0.008287560194730759, 0, 0, 0, 0.02716054953634739, 0, 0, 0, -0.014853970147669315, 0, 0, 0, -0.0376497283577919, 0, 0, 0, 0.026446999981999397, 0, 0, 0, 0.05543245002627373, 0, 0, 0, -0.050954870879650116, 0, 0, 0, -0.09779095649719238, 0, 0, 0, 0.13823629915714264, 0, 0, 0, 0.4600980877876282, 0, 0, 0, 0.4600980877876282, 0, 0, 0, 0.13823629915714264, 0, 0, 0, -0.09779095649719238, 0, 0, 0, -0.050954870879650116, 0, 0, 0, 0.05543245002627373, 0, 0, 0, 0.026446999981999397, 0, 0, 0, -0.0376497283577919, 0, 0, 0, -0.014853970147669315, 0, 0, 0, 0.02716054953634739, 0, 0, 0, 0.008287560194730759, 0, 0, 0, -0.01994365081191063, 0, 0, 0, -0.004313673824071884, 0, 0, 0, 0.014593959785997868, 0, 0, 0, 0.001894713961519301, 0, 0, 0, -0.010506889782845974, 0, 0, 0, -0.0004857935127802193, 0, 0, 0, 0.0073671708814799786, 0, 0, 0, -0.0002584767062216997, 0, 0, 0, -0.004989147186279297, 0, 0, 0, 0.0005743158981204033, 0, 0, 0, 0.003235877025872469, 0, 0, 0, -0.0006243723910301924, 0, 0, 0, -0.0019861769396811724, 0, 0, 0, 0.0005308539257384837, 0, 0, 0, 0.0011382600059732795, 0, 0, 0, -0.0003823630977421999, 0, 0, 0, -0.0005953562795184553, 0, 0, 0, 0.00022984380484558642, 0, 0, 0, 0.0002790277067106217, 0, 0, 0, -0.00011045869905501604, 0, 0, 0, -0.00011235150304855779, 0, 0, 0, 0.0000359618898073677, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_fold_quant_bound=allocate([0.30498000979423523, 0, 0, 0, 0.3455899953842163, 0, 0, 0, 0.3916099965572357, 0, 0, 0, 0.4437499940395355, 0, 0, 0, 0.5028300285339355, 0, 0, 0, 0.5697900056838989, 0, 0, 0, 0.6456500291824341, 0, 0, 0, 0.7316200137138367, 0, 0, 0, 0.8290299773216248, 0, 0, 0, 0.9394199848175049, 0, 0, 0, 1.0644999742507935, 0, 0, 0, 1.2062400579452515, 0, 0, 0, 1.3668500185012817, 0, 0, 0, 1.548840045928955, 0, 0, 0, 1.7550599575042725, 0, 0, 0, 1.9887499809265137, 0, 0, 0, 2.2535500526428223, 0, 0, 0, 2.5536000728607178, 0, 0, 0, 2.8936100006103516, 0, 0, 0, 3.2788898944854736, 0, 0, 0, 3.7154700756073, 0, 0, 0, 4.210179805755615, 0, 0, 0, 4.7707600593566895, 0, 0, 0, 5.405980110168457, 0, 0, 0, 6.125770092010498, 0, 0, 0, 6.941410064697266, 0, 0, 0, 7.865650177001953, 0, 0, 0, 8.912949562072754, 0, 0, 0, 10.099690437316895, 0, 0, 0, 11.444450378417969, 0, 0, 0, 12.968259811401367, 0, 0, 0, 14.69497013092041, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_gc_quant_bound=allocate([0.9797899723052979, 0, 0, 0, 1.2838399410247803, 0, 0, 0, 1.682229995727539, 0, 0, 0, 2.2042601108551025, 0, 0, 0, 2.8882899284362793, 0, 0, 0, 3.7845799922943115, 0, 0, 0, 4.959000110626221, 0, 0, 0, 6.497869968414307, 0, 0, 0, 8.514280319213867, 0, 0, 0, 11.15641975402832, 0, 0, 0, 14.618459701538086, 0, 0, 0, 19.15484046936035, 0, 0, 0, 25.098949432373047, 0, 0, 0, 32.887611389160156, 0, 0, 0, 43.0932502746582, 0, 0, 0, 56.46588134765625, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
STRING_TABLE.__str72=allocate([73,110,118,97,108,105,100,32,109,111,100,101,32,101,110,99,111,117,110,116,101,114,101,100,46,32,84,104,101,32,115,116,114,101,97,109,32,105,115,32,99,111,114,114,117,112,116,101,100,46,0] /* Invalid mode encount */, "i8", ALLOC_STATIC);
STRING_TABLE.__str173=allocate([85,110,107,110,111,119,110,32,110,98,95,99,116,108,32,114,101,113,117,101,115,116,58,32,0] /* Unknown nb_ctl reque */, "i8", ALLOC_STATIC);
STRING_TABLE.__str274=allocate([119,97,114,110,105,110,103,58,32,37,115,32,37,100,10,0] /* warning: %s %d\0A\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str375=allocate([110,111,116,105,102,105,99,97,116,105,111,110,58,32,37,115,10,0] /* notification: %s\0A\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str97=allocate([37,99,0] /* %c\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str102=allocate([83,112,101,101,120,32,32,32,0] /* Speex   \00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str1103=allocate([49,46,50,114,99,49,0] /* 1.2rc1\00 */, "i8", ALLOC_STATIC);
STRING_TABLE.__str2104=allocate([84,104,105,115,32,109,111,100,101,32,105,115,32,109,101,97,110,116,32,116,111,32,98,101,32,117,115,101,100,32,97,108,111,110,101,0] /* This mode is meant t */, "i8", ALLOC_STATIC);
STRING_TABLE.__str3105=allocate([84,104,105,115,32,100,111,101,115,110,39,116,32,108,111,111,107,32,108,105,107,101,32,97,32,83,112,101,101,120,32,102,105,108,101,0] /* This doesn't look li */, "i8", ALLOC_STATIC);
STRING_TABLE.__str4106=allocate([83,112,101,101,120,32,104,101,97,100,101,114,32,116,111,111,32,115,109,97,108,108,0] /* Speex header too sma */, "i8", ALLOC_STATIC);
STRING_TABLE.__str5107=allocate([73,110,118,97,108,105,100,32,109,111,100,101,32,115,112,101,99,105,102,105,101,100,32,105,110,32,83,112,101,101,120,32,104,101,97,100,101,114,0] /* Invalid mode specifi */, "i8", ALLOC_STATIC);
STRING_TABLE.__str6108=allocate([110,111,116,105,102,105,99,97,116,105,111,110,58,32,37,115,10,0] /* notification: %s\0A\ */, "i8", ALLOC_STATIC);
STRING_TABLE.__str7109=allocate([119,97,114,110,105,110,103,58,32,37,115,10,0] /* warning: %s\0A\00 */, "i8", ALLOC_STATIC);
_lag_window=allocate([1, 0, 0, 0, 0.997160017490387, 0, 0, 0, 0.9886900186538696, 0, 0, 0, 0.9747400283813477, 0, 0, 0, 0.9555400013923645, 0, 0, 0, 0.9314000010490417, 0, 0, 0, 0.9027299880981445, 0, 0, 0, 0.869979977607727, 0, 0, 0, 0.8336700201034546, 0, 0, 0, 0.7943400144577026, 0, 0, 0, 0.7525799870491028, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
_lpc_window=allocate([0.07999999821186066, 0, 0, 0, 0.08015800267457962, 0, 0, 0, 0.08062999695539474, 0, 0, 0, 0.0814180001616478, 0, 0, 0, 0.0825200006365776, 0, 0, 0, 0.08393500000238419, 0, 0, 0, 0.08566299825906754, 0, 0, 0, 0.08770299702882767, 0, 0, 0, 0.09005200117826462, 0, 0, 0, 0.09271000325679779, 0, 0, 0, 0.09567400068044662, 0, 0, 0, 0.09894300252199173, 0, 0, 0, 0.10251399874687195, 0, 0, 0, 0.1063850000500679, 0, 0, 0, 0.11055299639701843, 0, 0, 0, 0.11501500010490417, 0, 0, 0, 0.11976899951696396, 0, 0, 0, 0.12481100112199783, 0, 0, 0, 0.13013699650764465, 0, 0, 0, 0.13574400544166565, 0, 0, 0, 0.14162799715995789, 0, 0, 0, 0.1477860063314438, 0, 0, 0, 0.15421199798583984, 0, 0, 0, 0.1609019935131073, 0, 0, 0, 0.1678519994020462, 0, 0, 0, 0.17505699396133423, 0, 0, 0, 0.18251299858093262, 0, 0, 0, 0.19021299481391907, 0, 0, 0, 0.19815300405025482, 0, 0, 0, 0.20632800459861755, 0, 0, 0, 0.21473099291324615, 0, 0, 0, 0.22335700690746307, 0, 0, 0, 0.2321999967098236, 0, 0, 0, 0.24125400185585022, 0, 0, 0, 0.2505129873752594, 0, 0, 0, 0.2599700093269348, 0, 0, 0, 0.2696189880371094, 0, 0, 0, 0.27945300936698914, 0, 0, 0, 0.289465993642807, 0, 0, 0, 0.29965099692344666, 0, 0, 0, 0.3100000023841858, 0, 0, 0, 0.3205069899559021, 0, 0, 0, 0.33116400241851807, 0, 0, 0, 0.341964989900589, 0, 0, 0, 0.35290101170539856, 0, 0, 0, 0.3639659881591797, 0, 0, 0, 0.37515100836753845, 0, 0, 0, 0.38644900918006897, 0, 0, 0, 0.39785200357437134, 0, 0, 0, 0.40935298800468445, 0, 0, 0, 0.4209429919719696, 0, 0, 0, 0.4326150119304657, 0, 0, 0, 0.44436100125312805, 0, 0, 0, 0.45617198944091797, 0, 0, 0, 0.46803998947143555, 0, 0, 0, 0.4799579977989197, 0, 0, 0, 0.4919170141220093, 0, 0, 0, 0.5039089918136597, 0, 0, 0, 0.5159249901771545, 0, 0, 0, 0.5279589891433716, 0, 0, 0, 0.5400000214576721, 0, 0, 0, 0.5520409941673279, 0, 0, 0, 0.5640749931335449, 0, 0, 0, 0.5760909914970398, 0, 0, 0, 0.588083028793335, 0, 0, 0, 0.6000419855117798, 0, 0, 0, 0.6119599938392639, 0, 0, 0, 0.6238279938697815, 0, 0, 0, 0.6356390118598938, 0, 0, 0, 0.6473850011825562, 0, 0, 0, 0.6590570211410522, 0, 0, 0, 0.6706470251083374, 0, 0, 0, 0.6821479797363281, 0, 0, 0, 0.6935510039329529, 0, 0, 0, 0.7048490047454834, 0, 0, 0, 0.7160339951515198, 0, 0, 0, 0.7270990014076233, 0, 0, 0, 0.7380350232124329, 0, 0, 0, 0.7488359808921814, 0, 0, 0, 0.7594929933547974, 0, 0, 0, 0.7699999809265137, 0, 0, 0, 0.7803490161895752, 0, 0, 0, 0.7905340194702148, 0, 0, 0, 0.8005470037460327, 0, 0, 0, 0.8103809952735901, 0, 0, 0, 0.8200299739837646, 0, 0, 0, 0.8294870257377625, 0, 0, 0, 0.8387460112571716, 0, 0, 0, 0.8478000164031982, 0, 0, 0, 0.85664302110672, 0, 0, 0, 0.8652690052986145, 0, 0, 0, 0.8736720085144043, 0, 0, 0, 0.8818470239639282, 0, 0, 0, 0.8897870182991028, 0, 0, 0, 0.8974869847297668, 0, 0, 0, 0.9049429893493652, 0, 0, 0, 0.9121479988098145, 0, 0, 0, 0.9190980195999146, 0, 0, 0, 0.9257879853248596, 0, 0, 0, 0.9322140216827393, 0, 0, 0, 0.938372015953064, 0, 0, 0, 0.9442560076713562, 0, 0, 0, 0.9498630166053772, 0, 0, 0, 0.9551889896392822, 0, 0, 0, 0.9602310061454773, 0, 0, 0, 0.9649850130081177, 0, 0, 0, 0.9694470167160034, 0, 0, 0, 0.9736149907112122, 0, 0, 0, 0.9774860143661499, 0, 0, 0, 0.9810569882392883, 0, 0, 0, 0.9843260049819946, 0, 0, 0, 0.9872900247573853, 0, 0, 0, 0.9899479746818542, 0, 0, 0, 0.9922969937324524, 0, 0, 0, 0.9943370223045349, 0, 0, 0, 0.9960650205612183, 0, 0, 0, 0.9974799752235413, 0, 0, 0, 0.9985820055007935, 0, 0, 0, 0.9993699789047241, 0, 0, 0, 0.9998419880867004, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0.9986400008201599, 0, 0, 0, 0.994566023349762, 0, 0, 0, 0.9877870082855225, 0, 0, 0, 0.9783239960670471, 0, 0, 0, 0.966202974319458, 0, 0, 0, 0.9514579772949219, 0, 0, 0, 0.9341310262680054, 0, 0, 0, 0.9142699837684631, 0, 0, 0, 0.8919309973716736, 0, 0, 0, 0.8671789765357971, 0, 0, 0, 0.8400840163230896, 0, 0, 0, 0.8107230067253113, 0, 0, 0, 0.7791820168495178, 0, 0, 0, 0.7455509901046753, 0, 0, 0, 0.7099300026893616, 0, 0, 0, 0.6724240183830261, 0, 0, 0, 0.6331480145454407, 0, 0, 0, 0.5922229886054993, 0, 0, 0, 0.5497810244560242, 0, 0, 0, 0.5059639811515808, 0, 0, 0, 0.4609319865703583, 0, 0, 0, 0.4148629903793335, 0, 0, 0, 0.36796799302101135, 0, 0, 0, 0.32051101326942444, 0, 0, 0, 0.27285799384117126, 0, 0, 0, 0.2255689948797226, 0, 0, 0, 0.17965500056743622, 0, 0, 0, 0.137253999710083, 0, 0, 0, 0.10352399945259094, 0, 0, 0], ["float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0,"float",0,0,0], ALLOC_STATIC);
__gm_=allocate(468, ["i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"i32",0,0,0,"i32",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0,"*",0,0,0,"i32",0,0,0], ALLOC_STATIC);
_mparams=allocate(24, "i32", ALLOC_STATIC);
STRING_TABLE.__str12=allocate([109,97,120,32,115,121,115,116,101,109,32,98,121,116,101,115,32,61,32,37,49,48,108,117,10,0] /* max system bytes = % */, "i8", ALLOC_STATIC);
STRING_TABLE.__str113=allocate([115,121,115,116,101,109,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0] /* system bytes     = % */, "i8", ALLOC_STATIC);
STRING_TABLE.__str214=allocate([105,110,32,117,115,101,32,98,121,116,101,115,32,32,32,32,32,61,32,37,49,48,108,117,10,0] /* in use bytes     = % */, "i8", ALLOC_STATIC);
__ZSt7nothrow=allocate([undef], "i8", ALLOC_STATIC);
__ZL13__new_handler=allocate(1, "void ()*", ALLOC_STATIC);
__ZTVSt9bad_alloc=allocate([0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 70, 0, 0, 0, 72, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
STRING_TABLE.__str315=allocate([115,116,100,58,58,98,97,100,95,97,108,108,111,99,0] /* std::bad_alloc\00 */, "i8", ALLOC_STATIC);
__ZTVSt20bad_array_new_length=allocate([0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 76, 0, 0, 0, 78, 0, 0, 0], ["*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0,"*",0,0,0], ALLOC_STATIC);
allocate(1, "void*", ALLOC_STATIC);
STRING_TABLE.__str14=allocate([98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0] /* bad_array_new_length */, "i8", ALLOC_STATIC);
STRING_TABLE.__ZTSSt9bad_alloc=allocate([83,116,57,98,97,100,95,97,108,108,111,99,0] /* St9bad_alloc\00 */, "i8", ALLOC_STATIC);
__ZTISt9bad_alloc=allocate(12, "*", ALLOC_STATIC);
STRING_TABLE.__ZTSSt20bad_array_new_length=allocate([83,116,50,48,98,97,100,95,97,114,114,97,121,95,110,101,119,95,108,101,110,103,116,104,0] /* St20bad_array_new_le */, "i8", ALLOC_STATIC);
__ZTISt20bad_array_new_length=allocate(12, "*", ALLOC_STATIC);
HEAP32[((_nb_mode+36)>>2)]=_nb_submode1;
HEAP32[((_nb_mode+40)>>2)]=_nb_submode2;
HEAP32[((_nb_mode+44)>>2)]=_nb_submode3;
HEAP32[((_nb_mode+48)>>2)]=_nb_submode4;
HEAP32[((_nb_mode+52)>>2)]=_nb_submode5;
HEAP32[((_nb_mode+56)>>2)]=_nb_submode6;
HEAP32[((_nb_mode+60)>>2)]=_nb_submode7;
HEAP32[((_nb_mode+64)>>2)]=_nb_submode8;
HEAP32[((_speex_nb_mode)>>2)]=_nb_mode;
HEAP32[((_speex_nb_mode+8)>>2)]=((STRING_TABLE.__str24)|0);
HEAP32[((_nb_submode2+32)>>2)]=_ltp_params_vlbr;
HEAP32[((_nb_submode2+44)>>2)]=_split_cb_nb_vlbr;
HEAP32[((_nb_submode3+32)>>2)]=_ltp_params_lbr;
HEAP32[((_nb_submode3+44)>>2)]=_split_cb_nb_lbr;
HEAP32[((_nb_submode4+32)>>2)]=_ltp_params_med;
HEAP32[((_nb_submode4+44)>>2)]=_split_cb_nb_med;
HEAP32[((_nb_submode5+32)>>2)]=_ltp_params_nb;
HEAP32[((_nb_submode5+44)>>2)]=_split_cb_nb;
HEAP32[((_nb_submode6+32)>>2)]=_ltp_params_nb;
HEAP32[((_nb_submode6+44)>>2)]=_split_cb_sb;
HEAP32[((_nb_submode7+32)>>2)]=_ltp_params_nb;
HEAP32[((_nb_submode7+44)>>2)]=_split_cb_nb;
HEAP32[((_nb_submode8+44)>>2)]=_split_cb_nb_ulbr;
HEAP32[((_split_cb_nb_ulbr+8)>>2)]=((STRING_TABLE._exc_20_32_table)|0);
HEAP32[((_ltp_params_nb)>>2)]=((STRING_TABLE._gain_cdbk_nb)|0);
HEAP32[((_split_cb_nb+8)>>2)]=((STRING_TABLE._exc_5_64_table)|0);
HEAP32[((_split_cb_sb+8)>>2)]=((STRING_TABLE._exc_5_256_table)|0);
HEAP32[((_ltp_params_med)>>2)]=((STRING_TABLE._gain_cdbk_lbr)|0);
HEAP32[((_split_cb_nb_med+8)>>2)]=((STRING_TABLE._exc_8_128_table)|0);
HEAP32[((_ltp_params_lbr)>>2)]=((STRING_TABLE._gain_cdbk_lbr)|0);
HEAP32[((_split_cb_nb_lbr+8)>>2)]=((STRING_TABLE._exc_10_32_table)|0);
HEAP32[((_ltp_params_vlbr)>>2)]=((STRING_TABLE._gain_cdbk_lbr)|0);
HEAP32[((_split_cb_nb_vlbr+8)>>2)]=((STRING_TABLE._exc_10_16_table)|0);
HEAP32[((_speex_wb_mode)>>2)]=_sb_wb_mode;
HEAP32[((_speex_wb_mode+8)>>2)]=((STRING_TABLE.__str25)|0);
HEAP32[((_speex_uwb_mode)>>2)]=_sb_uwb_mode;
HEAP32[((_speex_uwb_mode+8)>>2)]=((STRING_TABLE.__str227)|0);
HEAP32[((_speex_mode_list)>>2)]=_speex_nb_mode;
HEAP32[((_speex_mode_list+4)>>2)]=_speex_wb_mode;
HEAP32[((_speex_mode_list+8)>>2)]=_speex_uwb_mode;
HEAP32[((_sb_wb_mode)>>2)]=_speex_nb_mode;
HEAP32[((_sb_wb_mode+36)>>2)]=_wb_submode1;
HEAP32[((_sb_wb_mode+40)>>2)]=_wb_submode2;
HEAP32[((_sb_wb_mode+44)>>2)]=_wb_submode3;
HEAP32[((_sb_wb_mode+48)>>2)]=_wb_submode4;
HEAP32[((_sb_wb_mode+156)>>2)]=((_vbr_hb_thresh)|0);
HEAP32[((_sb_uwb_mode)>>2)]=_speex_wb_mode;
HEAP32[((_sb_uwb_mode+36)>>2)]=_wb_submode1;
HEAP32[((_sb_uwb_mode+156)>>2)]=((_vbr_uhb_thresh)|0);
HEAP32[((_wb_submode2+44)>>2)]=_split_cb_high_lbr;
HEAP32[((_wb_submode3+44)>>2)]=_split_cb_high;
HEAP32[((_wb_submode4+44)>>2)]=_split_cb_high;
HEAP32[((_split_cb_high+8)>>2)]=((STRING_TABLE._hexc_table)|0);
HEAP32[((_split_cb_high_lbr+8)>>2)]=((STRING_TABLE._hexc_10_32_table)|0);
HEAP32[((__ZTVSt9bad_alloc+4)>>2)]=__ZTISt9bad_alloc;
HEAP32[((__ZTVSt20bad_array_new_length+4)>>2)]=__ZTISt20bad_array_new_length;
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([2,0,0,0,0], ["i8*",0,0,0,0], ALLOC_STATIC);
HEAP32[((__ZTISt9bad_alloc)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((__ZTISt9bad_alloc+4)>>2)]=((STRING_TABLE.__ZTSSt9bad_alloc)|0);
HEAP32[((__ZTISt9bad_alloc+8)>>2)]=__ZTISt9exception;
HEAP32[((__ZTISt20bad_array_new_length)>>2)]=(((__ZTVN10__cxxabiv120__si_class_type_infoE+8)|0));
HEAP32[((__ZTISt20bad_array_new_length+4)>>2)]=((STRING_TABLE.__ZTSSt20bad_array_new_length)|0);
HEAP32[((__ZTISt20bad_array_new_length+8)>>2)]=__ZTISt9bad_alloc;
__ZNSt9bad_allocC1Ev = 80;
__ZNSt9bad_allocD1Ev = 82;
__ZNSt20bad_array_new_lengthC1Ev = 84;
__ZNSt20bad_array_new_lengthD1Ev = 86;
__ZNSt20bad_array_new_lengthD2Ev = 82;
FUNCTION_TABLE = [0,0,_noise_codebook_quant,0,_speex_default_user_handler,0,__ZNSt9bad_allocD2Ev,0,_nb_mode_query,0,_nb_encoder_init,0,_nb_encoder_destroy,0,_nb_encode,0,_nb_decoder_init,0,_nb_decoder_destroy,0,_nb_decode,0,_nb_encoder_ctl,0,_nb_decoder_ctl,0,_lsp_quant_lbr,0,_lsp_unquant_lbr,0,_forced_pitch_quant,0,_forced_pitch_unquant,0,_noise_codebook_unquant,0,_pitch_search_3tap,0,_pitch_unquant_3tap,0,_split_cb_search_shape_sign,0,_split_cb_shape_sign_unquant,0,_lsp_quant_nb,0,_lsp_unquant_nb,0,_wb_mode_query,0,_sb_encoder_init,0,_sb_encoder_destroy,0,_sb_encode,0,_sb_decoder_init,0,_sb_decoder_destroy,0,_sb_decode,0,_sb_encoder_ctl,0,_sb_decoder_ctl,0,_lsp_quant_high,0,_lsp_unquant_high,0,__ZNSt9bad_allocD0Ev,0,__ZNKSt9bad_alloc4whatEv,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthD0Ev,0,__ZNKSt20bad_array_new_length4whatEv,0,__ZNSt9bad_allocC2Ev,0,__ZNSt9bad_allocD2Ev,0,__ZNSt20bad_array_new_lengthC2Ev,0,__ZNSt9bad_allocD2Ev,0]; Module["FUNCTION_TABLE"] = FUNCTION_TABLE;


function run(args) {
  args = args || Module['arguments'];

  initRuntime();

  var ret = null;
  if (Module['_main']) {
    ret = Module.callMain(args);
    exitRuntime();
  }
  return ret;
}
Module['run'] = run;

// {{PRE_RUN_ADDITIONS}}

if (Module['preRun']) {
  Module['preRun']();
}


if (!Module['noInitialRun']) {
  var ret = run();
}

// {{POST_RUN_ADDITIONS}}

if (Module['postRun']) {
  Module['postRun']();
}





  // {{MODULE_ADDITIONS}}
Module['generateStructInfo'] = Runtime.generateStructInfo;

Module['speex_lib_get_mode'] = _speex_lib_get_mode;
Module['speex_packet_to_header'] = _speex_packet_to_header;

Module['speex_bits_init'] = _speex_bits_init;
Module['speex_bits_read_from'] = _speex_bits_read_from;
Module['speex_bits_destroy'] = _speex_bits_destroy;
Module['speex_bits_write'] = _speex_bits_write;
Module['speex_bits_reset'] = _speex_bits_reset;

Module['speex_decoder_init'] = _speex_decoder_init;
Module['speex_decoder_ctl'] = _speex_decoder_ctl;
Module['speex_decode'] = _speex_decode;
Module['speex_decode_int'] = _speex_decode_int;
Module['speex_decoder_destroy'] = _speex_decoder_destroy;

Module['speex_encoder_init'] = _speex_encoder_init;
Module['speex_encoder_ctl'] = _speex_encoder_ctl;
Module['speex_encode'] = _speex_encode;
Module['speex_encode_int'] = _speex_encode_int;
Module['speex_encoder_destroy'] = _speex_encoder_destroy;


// EMSCRIPTEN_GENERATED_FUNCTIONS: ["_split_cb_search_shape_sign","_target_update","_split_cb_search_shape_sign_N1","_compute_weighted_codebook","_split_cb_shape_sign_unquant","_noise_codebook_quant","_speex_rand","_bw_lpc","_sanitize_values32","_highpass","_signal_mul","_signal_div","_filter_mem16","_iir_mem16","_fir_mem16","_noise_codebook_unquant","_compute_rms","_compute_rms16","_syn_percep_zero16","_residue_percep_zero16","_compute_impulse_response","_qmf_decomp","_qmf_synth","_interp_pitch","_cheb_poly_eva","_multicomb","_lpc_to_lsp","_spx_cos","_lsp_enforce_margin","_lsp_interpolate","_inner_prod","_lsp_to_lpc","_pitch_xcorr","_open_loop_nbest_pitch","_pitch_search_3tap","_pitch_gain_search_3tap","_forced_pitch_unquant","_compute_pitch_error","_pitch_unquant_3tap","_forced_pitch_quant","_pitch_gain_search_3tap_vq","_speex_encoder_init","_speex_decoder_init","_speex_stereo_state_reset","_speex_encoder_destroy","_speex_decoder_destroy","_speex_encode_native","_speex_decode_native","_speex_encode","_speex_encode_int","_speex_encoder_ctl","_speex_decode","_speex_decode_int","_speex_decoder_ctl","_nb_mode_query","_speex_warning_int","_speex_lib_ctl","_speex_stereo_state_init","_speex_alloc","_speex_stereo_state_destroy","_speex_free","_speex_encode_stereo","_speex_encode_stereo_int","_speex_decode_stereo","_speex_decode_stereo_int","_speex_std_stereo_request_handler","_vbr_init","_vbr_destroy","_scal_quant","_scal_quant32","_vbr_analysis","_vq_nbest","_vq_nbest_sign","_speex_bits_reset","_speex_bits_set_bit_buffer","_speex_bits_rewind","_speex_bits_init","_speex_alloc18","_speex_bits_init_buffer","_speex_bits_destroy","_speex_free19","_speex_bits_read_from","_speex_notify","_speex_realloc","_speex_warning","_speex_bits_read_whole_bytes","_speex_bits_flush","_speex_bits_write_whole_bytes","_speex_bits_unpack_unsigned","_speex_bits_peek_unsigned","_speex_bits_peek","_speex_bits_advance","_speex_bits_remaining","_speex_bits_nbytes","_speex_bits_write","_speex_bits_insert_terminator","_speex_bits_pack","_speex_bits_unpack_signed","__spx_lpc","__spx_autocorr","_speex_lib_get_mode","_speex_mode_query","_wb_mode_query","_speex_warning_int29","_nb_encoder_init","_speex_alloc41","_nb_encoder_destroy","_speex_free44","_nb_encode","_nb_decoder_init","_nb_decoder_destroy","__speex_fatal","_nb_decode","_speex_rand54","_nb_decode_lost","_speex_notify53","_nb_encoder_ctl","_speex_warning_int57","_compute_quant_weights","_nb_decoder_ctl","_lsp_quant_nb","_lsp_quant","_lsp_weight_quant","_lsp_unquant_nb","_lsp_quant_lbr","_lsp_unquant_lbr","_lsp_quant_high","_lsp_unquant_high","_sb_encoder_init","_speex_alloc78","_sb_encoder_destroy","_speex_free81","_sb_encode","_sb_decoder_init","_sb_decoder_destroy","_sb_decode","_sb_decode_lost","_speex_notify90","_sb_encoder_ctl","_speex_warning_int93","_speex_rand96","_sb_decoder_ctl","_speex_inband_handler","_speex_std_mode_request_handler","_speex_std_low_mode_request_handler","_speex_std_high_mode_request_handler","_speex_std_vbr_request_handler","_speex_std_enh_request_handler","_speex_std_vbr_quality_request_handler","_speex_std_char_handler","__speex_putc","_speex_default_user_handler","_speex_init_header","_speex_warning110","_le_int","_speex_header_to_packet","_speex_alloc111","_speex_packet_to_header","_speex_notify112","_speex_free113","_speex_header_free","_malloc","_tmalloc_small","_tmalloc_large","_sys_alloc","_free","_sys_trim","_calloc","_realloc","_release_unused_segments","_memalign","_internal_memalign","_independent_calloc","_internal_realloc","_malloc_footprint","_malloc_max_footprint","_ialloc","_independent_comalloc","_valloc","_pvalloc","_malloc_trim","_mallinfo","_internal_mallinfo","_malloc_stats","_internal_malloc_stats","_mallopt","_init_mparams","_malloc_usable_size","_mmap_resize","_segment_holding","_init_top","_mmap_alloc","_init_bins","_change_mparam","_prepend_alloc","__ZSt15get_new_handlerv","__ZSt15set_new_handlerPFvvE","__ZNSt9bad_allocC2Ev","__ZdlPv","__ZdlPvRKSt9nothrow_t","__ZdaPv","__ZdaPvRKSt9nothrow_t","__ZNSt9bad_allocD0Ev","__ZNSt9bad_allocD2Ev","_add_segment","__Znwj","__ZnwjRKSt9nothrow_t","__Znaj","__ZnajRKSt9nothrow_t","__ZNKSt9bad_alloc4whatEv","__ZNKSt20bad_array_new_length4whatEv","__ZNSt20bad_array_new_lengthC2Ev","__ZNSt20bad_array_new_lengthD0Ev","__ZSt17__throw_bad_allocv"]
return Module;
}());(function (global) {
	global.util = {
		toString: function (data, fn) {
			var BlobBuilder = global["WebKitBlobBuilder"] || global["MozBlobBuilder"] || global["BlobBuilder"];

			var bb = new BlobBuilder();
			bb.append(data.buffer);
			buffer = null;
			var reader = new FileReader();
			reader.onload = function (e) {
				fn(e.target.result);
			};
			reader.readAsBinaryString(bb.getBlob());	
		}

	  , parseInt: function (chr) {
	  		return Binary.toUint8(chr);
	  	}

	  , mozPlay: function (floats) {
		  	var audio, pos = 0, size;
		  	if ((audio = new Audio())["mozSetup"]) {
		  		audio.mozSetup(1, 8000);

		  		while (pos < floats.length) {
		  			size = (floats.length - pos > 800) ? 800 : floats.length - pos;
		  			audio.mozWriteAudio(floats.subarray(pos, pos+size));
		  			pos += size;
		  		}  		
		  	}
		}

	  , play: function (floats) {
		  	var waveData = PCMData.encode({
				sampleRate: 8000,
				channelCount:   1,
				bytesPerSample: 2,
				data: floats
			});
			
			var element = new Audio();
			element.src = "data:audio/wav;base64,"+btoa(waveData);
			element.play();	
		}

		/**
		  * @author LearnBoost
		  */
	  , merge: function (target, additional, deep, lastseen) {
			var seen = lastseen || []
			  , depth = typeof deep == 'undefined' ? 2 : deep
			  , prop;

			for (prop in additional) {
			  if (additional.hasOwnProperty(prop) && seen.indexOf(prop) < 0) {
			    if (typeof target[prop] !== 'object' || !depth) {
			      target[prop] = additional[prop];
			      seen.push(additional[prop]);
			    } else {
			      merge(target[prop], additional[prop], depth - 1, seen);
			    }
			  }
			}

			return target;
		}

		/**
		  * @author LearnBoost
		  */
	  , inherit: function (ctor, ctor2) {
	    	function f() {};
	    	f.prototype = ctor2.prototype;
	    	ctor.prototype = new f;
	  	}
  	}
}(this));(function (global) {

global.types = {
	
	SPEEX_NB_MODES: 3,
	
	SPEEX_SET_ENH: 0,
	SPEEX_GET_ENH: 1,
	
	SPEEX_GET_FRAME_SIZE: 3,
	
	SPEEX_SET_QUALITY: 4,
	SPEEX_GET_QUALITY: 5, // Not used
	
	SPEEX_SET_VBR: 12,
	SPEEX_GET_VBR: 13,
	
	SPEEX_SET_VBR_QUALITY: 14,
	SPEEX_GET_VBR_QUALITY: 15,

	SPEEX_SET_COMPLEXITY: 16,
	SPEEX_GET_COMPLEXITY: 17,	
	
	SPEEX_SET_SAMPLING_RATE: 24,
	SPEEX_GET_SAMPLING_RATE: 25,
	
	SPEEX_SET_VAD: 30,
	SPEEX_GET_VAD: 31,
	
	SPEEX_SET_ABR: 32,
	SPEEX_GET_ABR: 33,
	
	SPEEX_SET_DTX: 34,
	SPEEX_GET_DTX: 35,
	
	types: {

		/**

		Bit-packing data structure representing (part of) a bit-stream.
		
		typedef struct SpeexBits {
		   char *chars;   	//< "raw" data
		   int   nbBits;  	//< Total number of bits stored in the stream
		   int   charPtr; 	//< Position of the byte "cursor" 
		   int   bitPtr;  	//< Position of the bit "cursor" within the current char 
		   int   owner;   	//< Does the struct "own" the "raw" buffer (member "chars") 
		   int   overflow;	//< Set to one if we try to read past the valid data 
		   int   buf_size;	//< Allocated size for buffer 
		   int   reserved1; //< Reserved for future use 
		   void *reserved2; //< Reserved for future use 
		} SpeexBits;
		*/
		SpeexBits: libspeex.generateStructInfo([
			["i1*", 'chars'],
			["i32", 'nbBits'],
			["i32", 'charPtr'],
			["i32", 'bitPtr'],
			["i32", 'owner'],
			["i32", 'overflow'],
			["i32", 'buf_size'],
			["i32", 'reserved1'],
			["i8*", 'reserved2']
		]),

		/**
		  * Speex header info for file-based formats
		  		
		typedef struct SpeexHeader {
		   char speex_string[SPEEX_HEADER_STRING_LENGTH];
		   char speex_version[SPEEX_HEADER_VERSION_LENGTH];
		   spx_int32_t speex_version_id;
		   spx_int32_t header_size;
		   spx_int32_t rate;
		   spx_int32_t mode;
		   spx_int32_t mode_bitstream_version;
		   spx_int32_t nb_channels;
		   spx_int32_t bitrate;
		   spx_int32_t frame_size;
		   spx_int32_t vbr;
		   spx_int32_t frames_per_packet;
		   spx_int32_t extra_headers;
		   spx_int32_t reserved1;
		   spx_int32_t reserved2;
		} SpeexHeader;
		*/		
		SpeexHeader: libspeex.generateStructInfo([
			["i32", 'speex_version_id'],
			["i32", 'header_size'],
			["i32", 'rate'],
			["i32", 'mode'],
			["i32", 'mode_bitstream_version'],
			["i32", 'nb_channels'],
			["i32", 'bitrate'],
			["i32", 'frame_size'],
			["i32", 'vbr'],
			["i32", 'frames_per_packet'],
			["i32", 'extra_headers'],
			["i32", 'reserved1'],
			["i32", 'reserved2']
		]),

		/**

		Preprocessor internal state
		
		typedef struct SpeexPreprocessState {
		} SpeexPreprocessState;
		*/
		SpeexPreprocessState: libspeex.generateStructInfo([
		]),

		/**

		Echo canceller state
		
		typedef struct SpeexEchoState {
		} SpeexEchoState;
		*/
		SpeexEchoState: libspeex.generateStructInfo([
		])
	}
}

}(this));function CodecProcessor (params) {
  // read the speex profile (narrow, wideband, ultra wideband)
  this.mode = libspeex.speex_lib_get_mode(params.mode || 0);

  this.params = params;

  this.opt_basename = "SPEEX_SET_";

  this.ctl_func = libspeex["speex_encoder_ctl"];
  
  this.options = {};
}

CodecProcessor.prototype.set = function (name, value) {    
  if (typeof(value) === "undefined" || value === null) {
    return;
  }

  this.options[name] = value;
  
  var ptr = libspeex.allocate(1, 'i32', ALLOC_STACK), conv;  
  
  if (value.constructor == Number.prototype.constructor) {
    conv = parseInt(value);
  }

  if (value.constructor == Boolean.prototype.constructor) {
    conv = (!!value ? 1 : 0);
  }

  setValue(ptr, conv || 0, 'i32');
  flag = this.opt_basename + name.toUpperCase().replace(" ", "_");

  console.log("%s: %d", flag, conv);  
  this[flag] && this.ctl_func(this.state, this[flag], ptr);

  if (name == "quality") {
    this.bits_size = SpeexEncoder.quality_bits[conv];
  }
}

/**
  * Temporary buffers
  */
CodecProcessor.prototype.buffer = null;

/**
  * Input buffers
  */
CodecProcessor.prototype.input = null;

/**
  * Encoded/Decoded audio frames
  */
CodecProcessor.prototype.output = null;

/**
  * libspeex internal state
  */
CodecProcessor.prototype.state = null;

/**
  * SpeexBits for use in the libspeex routines
  */
CodecProcessor.prototype.bits = null;
(function (global) {

var util = global.util;

function SpeexDecoder (params) {
	CodecProcessor.apply(this, arguments);

	this.floating_point = !params.lpcm && true;
	
	this.ctl_func = libspeex["speex_decoder_ctl"];

	this.params = params;

	this.enh = params.enh || 1;

	// samples buffer size in shorts
	this.frame_size = params.frame_size || 160;

	// encoded speex packet in bytes (38 [quality=8] by default)
	this.bits_size = params.bits_size !== undefined ? params.bits_size :
		SpeexEncoder.quality_bits[params.quality || 8];
}

util.inherit(SpeexDecoder, CodecProcessor);

SpeexDecoder.prototype.init = function () {
	var bits_addr = libspeex.allocate(SpeexDecoder.types.SpeexBits.__size__, 'i8', libspeex.ALLOC_STACK);
	libspeex.speex_bits_init(bits_addr);

	var i32ptr = libspeex.allocate(1, 'i32', libspeex.ALLOC_STACK)
	  , state = libspeex.speex_decoder_init(this.mode);
	
	libspeex.setValue(i32ptr, this.enh, "i32");
	libspeex.speex_decoder_ctl(state, SpeexDecoder.SPEEX_SET_ENH, i32ptr);	
    libspeex.speex_decoder_ctl(state, SpeexDecoder.SPEEX_GET_SAMPLING_RATE, i32ptr);

	this.state = state;
	this.bits = bits_addr;
	this.buffer = libspeex.allocate(this.frame_size, 
	 	'i16', libspeex.ALLOC_STATIC);
	 
	this.output = new Float32Array(1);
}

/**
  * Copy the samples to the input buffer
  */
SpeexDecoder.prototype.read = function (offset, nb, data) {
	var input_addr = this.input
	  , len = offset + nb > data.length ? data.length - offset : nb
	  , isStrIn = data.constructor == String.prototype.constructor;

	!input_addr && (input_addr = libspeex.allocate(this.bits_size, 'i8', libspeex.ALLOC_STATIC));

	for (var m=offset-1, k=0; ++m < offset+len; k+=1){
		libspeex.setValue(input_addr+k, !isStrIn ? data[m] : util.parseInt(data[m]), 'i8');
	}

	/* Read the buffer */
	libspeex.speex_bits_read_from(this.bits, input_addr, len);

	this.input = input_addr;

	return len;
}

SpeexDecoder.prototype.process = function (spxdata) {
		//console.time('decode');
	var output_offset = 0, offset = 0, len;

	// Varies from quality
	var total_packets = Math.ceil(spxdata.length / this.bits_size)
	  , estimated_size = this.frame_size * total_packets

	  // fixed-point or floating-point is decided at compile time 
	  , decoder_func = libspeex.speex_decode_int 
	  , benchmark = !!this.params.benchmark;
	
	// Buffer to store the audio samples
	if (!this.buffer) {
		this.buffer =  libspeex.allocate(this.frame_size, 'i16', libspeex.ALLOC_STACK)
	}
		
	var bits_addr = this.bits
	  , input_addr = this.input
	  , buffer_addr = this.buffer
	  , state_addr = this.state;
		
	if (this.output.length < estimated_size) {
		this.output = this.floating_point ? 
			new Float32Array(estimated_size) : new Int16Array(estimated_size);
	}

	while (offset < spxdata.length) {
		/* Benchmarking */		
		benchmark && console.time('decode_packet_offset_' + offset);

		/* Read bits */
		len = this.read(offset, this.bits_size, spxdata);

  		/* Decode the data */
  		ret = decoder_func(state_addr, bits_addr, buffer_addr);      	      	
  	
  		if (ret < 0) {
  			return ret;
  		}

  		/* Write the samples to the output buffer */
  		this.write(output_offset, this.frame_size, buffer_addr);

  		benchmark && console.timeEnd('decode_packet_offset_' + offset);

  		offset += len;
  		output_offset += this.frame_size;  		
  	}

  	return this.output.subarray(0, output_offset);
}

SpeexDecoder.prototype.close = function () {
	if (!!this.state) {
		libspeex.speex_bits_destroy(this.bits); 
		libspeex.speex_decoder_destroy(this.state);		
	}
}


/**
  * Copy to the output buffer 
  */
SpeexDecoder.prototype.write = function (offset, nframes, addr) {	
	var sample;

  	for (var m=0, k=offset-1; ++k<offset+nframes; m+=2) {
  		sample = libspeex.getValue(addr+m, "i16");
  		this.output[k] =  this.floating_point ? sample / 32768 : sample;
  	}
}

util.merge(SpeexDecoder, global.types);

global["SpeexDecoder"] = SpeexDecoder;

}(this));OggDemuxer = Demuxer.extend(function () {
  Demuxer.register(this);

  this.probe = function(stream) {
    return stream.peekString(0, 4) === 'OggS';
  }

  this.prototype.pi = 0;

  this.prototype.currentPage = {};

  this.prototype.readPage = function (stream) {
  	this.pi += 1;

  	var page = {
		capturePattern: stream.readString(4)
	  , version: stream.readUInt8(4)
	  , type: stream.readUInt8()
	  , granulePos: stream.readString(8) // UInt64
	  , serial: stream.readUInt32()
	  , sequece: stream.readUInt32()
	  , checksum: stream.readUInt32()
	  , pageSegments: stream.readUInt8()
	  , segments: stream.readUInt8()

	  , segmentsRead: 0
	  , pageData : null
	  , data: function (data) {
	  	return data ? this.pageData = data : this.pageData;
	  }
	  , nextSegment: function () {
	  	if (this.segmentsRead == this.pageSegments) {
	  		return null;
	  	}

	  	var buf = stream.readSingleBuffer(page.segments);
	  	this.segmentsRead += 1;
	  	return buf;
	  }
	};

	return page;
  }

  this.speex = function (stream) {
  	return {
		speex_string: stream.readString(8)
	  , speex_version: stream.readString(20)
	  , speex_version_id: stream.readInt32(true)
	  , header_size: stream.readInt32(true)
	  , rate: stream.readInt32(true)
	  , mode: stream.readInt32(true)
	  , mode_bitstream_version: stream.readInt32(true)
	  , nb_channels: stream.readInt32(true)
	  , bitrate: stream.readInt32(true)
	  , vbr: stream.readInt32(true)
	  , frames_per_packet: stream.readInt32(true)
	  , extra_headers: stream.readInt32(true)
	  , reserved1: stream.readInt32(true)
	  , reserved2: stream.readInt32(true)
	};
  }

  this.flac = function (stream) {
  	throw new Error("To be implemented");
  }

  this.celt = function (stream) {  	
  	throw new Error("To be implemented");
  }

  this.vorbis = function (stream) {  	
  	throw new Error("To be implemented");
  }

  this.prototype.decoderInit = false;

  this.prototype.readHeaderSegment = function (stream) {
  	var identifier = stream.peekString(0, 5), h;

  	if (identifier === "Speex") {
  		h = OggDemuxer["speex"](stream);
  	} else if (identifier === "\x01vorbis") {
  		h = OggDemuxer["vorbis"](stream);
  	} else if (identifier === "CELT ") {  	
  		h = OggDemuxer["celt"](stream);
  	} else if (identifier === "\177FLAC") {
  		h = OggDemuxer["flac"](stream);
  	}

  	return h;
  }

  this.prototype.readHeader = function () {
	this.header = this.readHeaderSegment(this.stream); 

	this.emit('format', {
		formatID: "speex"
	  , sampleRate: (this.header.mode + 1) * 8000
	  , channelsPerFrame: this.header.nb_channels
	  , bitsPerChannel: 16
	});
  }

  this.prototype.readExtraHeaders = function () {
  	// Ignore extra headers
  	this.stream.advance(this.currentPage.segments);
  }  	

  this.prototype.read = function (buffer) {
  	if (!this.decoderInit) {
  		
  		var h = this.header
  		  , cookie = {
			mode: h.mode
		  ,	block_size: this.currentPage.segments
		  , init: true
		};

		this.emit('cookie', cookie);
		this.decoderInit = true;
	}

	while (this.stream.peekUInt8() === 38) {
		this.stream.advance(1);
	}

	while (buffer = this.currentPage.nextSegment()) {			
		this.duration += 20;
		this.emit('data', buffer, this.isLast());
	}  			
  }  	

  this.prototype.isLast = function () {
  	return this.stream.remainingBytes() === 0; 
  }

  this.prototype.readChunk = function () {
  	var buffer;

  	while(!this.isLast()) {
  		while (this.stream.peekUInt8() !== 79) {
  			this.stream.advance(1);
  		}

	  	this.currentPage = this.readPage(this.stream);

		if (this.pi == 1) { // First Page - Headers
			
			this.readHeader();
			this.duration = 0;

		} else if (this.pi == 2) {  // Extra Headers Page
			
			this.readExtraHeaders();
		
		} else if (this.pi > 2) {  // Data			
		
			this.read(buffer);		
		}
	}

	this.emit('duration', this.duration);
	console.log("Duration: %s", this.duration / 1000);
  }
});
Decoder.extend(function () {
	Decoder.register("speex", this);	

	this.prototype.__decoder__ = null;

	this.prototype.nb = null;
	this.prototype.bufferIn = null;
	this.prototype.bufferOut = null;
	

	this.prototype.setCookie = function (cookie) {
		if (cookie.init) {
			this.__decoder__ = new SpeexDecoder({
				mode: cookie.mode
			  , bits_size: cookie.block_size
			  , lpcm: true
			});

			this.nb = cookie.block_size;

			this.__decoder__.init();
		}
	}

	this.prototype.readChunk = function () {
		if (this.stream.remainingBytes() == 0) {
			return this.once('available', this.readChunk);
		}

		this.bufferIn = this.stream.readBuffer(this.nb);
		this.bufferOut = this.__decoder__.process(this.bufferIn.data);

 		this.emit('data', this.bufferOut);

 		return 0;
	}
});